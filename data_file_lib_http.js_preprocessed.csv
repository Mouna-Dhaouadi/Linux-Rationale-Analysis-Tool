,commit ID,author name,committer name,message,URL,commit date,message_preprocessed
0,C_kwDOAZ7xs9oAKGExODY5ZmE4N2U4NzRlODFlN2YxNDcwNjg3Yzg0OThlZjM1ZTFlOTU,Natalia Venditto,GitHub,"http: expose websockets

PR-URL: https://github.com/nodejs/node/pull/53721
Reviewed-By: Matteo Collina <matteo.collina@gmail.com>
Reviewed-By: Paolo Insogna <paolo@cowtech.it>
Reviewed-By: James M Snell <jasnell@gmail.com>",https://api.github.com/repos/nodejs/node/git/commits/a1869fa87e874e81e7f1470687c8498ef35e1e95,2024-07-08,expose websockets
0,C_kwDOAZ7xs9oAKGExODY5ZmE4N2U4NzRlODFlN2YxNDcwNjg3Yzg0OThlZjM1ZTFlOTU,Natalia Venditto,GitHub,"http: expose websockets

PR-URL: https://github.com/nodejs/node/pull/53721
Reviewed-By: Matteo Collina <matteo.collina@gmail.com>
Reviewed-By: Paolo Insogna <paolo@cowtech.it>
Reviewed-By: James M Snell <jasnell@gmail.com>",https://api.github.com/repos/nodejs/node/git/commits/a1869fa87e874e81e7f1470687c8498ef35e1e95,2024-07-08,"PR-URL: Reviewed-By: Matteo Collina <matteo.collina@gmail.com>
Reviewed-By: Paolo Insogna <paolo@cowtech.it>
Reviewed-By: James M Snell <jasnell@gmail.com>"
1,C_kwDOAZ7xs9oAKGNiZDJjMzg3Y2UyOTE3NWI5YzI3MzU0MWVhMmVhY2MzMTZkYTBhMWY,Antoine du Hamel,GitHub,"http: remove prototype primordials

Co-authored-by: Yagiz Nizipli <yagiz@nizipli.com>
PR-URL: https://github.com/nodejs/node/pull/53698
Reviewed-By: Yagiz Nizipli <yagiz.nizipli@sentry.io>
Reviewed-By: Robert Nagy <ronagy@icloud.com>
Reviewed-By: Moshe Atlow <moshe@atlow.co.il>
Reviewed-By: Marco Ippolito <marcoippolito54@gmail.com>
Reviewed-By: Luigi Pinca <luigipinca@gmail.com>
Reviewed-By: Matteo Collina <matteo.collina@gmail.com>
Reviewed-By: Benjamin Gruenbaum <benjamingr@gmail.com>
Reviewed-By: James M Snell <jasnell@gmail.com>
Reviewed-By: Rafael Gonzaga <rafael.nunu@hotmail.com>",https://api.github.com/repos/nodejs/node/git/commits/cbd2c387ce29175b9c273541ea2eacc316da0a1f,2024-07-06,remove prototype primordials
1,C_kwDOAZ7xs9oAKGNiZDJjMzg3Y2UyOTE3NWI5YzI3MzU0MWVhMmVhY2MzMTZkYTBhMWY,Antoine du Hamel,GitHub,"http: remove prototype primordials

Co-authored-by: Yagiz Nizipli <yagiz@nizipli.com>
PR-URL: https://github.com/nodejs/node/pull/53698
Reviewed-By: Yagiz Nizipli <yagiz.nizipli@sentry.io>
Reviewed-By: Robert Nagy <ronagy@icloud.com>
Reviewed-By: Moshe Atlow <moshe@atlow.co.il>
Reviewed-By: Marco Ippolito <marcoippolito54@gmail.com>
Reviewed-By: Luigi Pinca <luigipinca@gmail.com>
Reviewed-By: Matteo Collina <matteo.collina@gmail.com>
Reviewed-By: Benjamin Gruenbaum <benjamingr@gmail.com>
Reviewed-By: James M Snell <jasnell@gmail.com>
Reviewed-By: Rafael Gonzaga <rafael.nunu@hotmail.com>",https://api.github.com/repos/nodejs/node/git/commits/cbd2c387ce29175b9c273541ea2eacc316da0a1f,2024-07-06,"Co-authored-by: Yagiz Nizipli <yagiz@nizipli.com>
PR-URL: Reviewed-By: Yagiz Nizipli <yagiz.nizipli@sentry.io>
Reviewed-By: Robert Nagy <ronagy@icloud.com>
Reviewed-By: Moshe Atlow <moshe@atlow.co.il>
Reviewed-By: Marco Ippolito <marcoippolito54@gmail.com>
Reviewed-By: Luigi Pinca <luigipinca@gmail.com>
Reviewed-By: Matteo Collina <matteo.collina@gmail.com>
Reviewed-By: Benjamin Gruenbaum <benjamingr@gmail.com>
Reviewed-By: James M Snell <jasnell@gmail.com>
Reviewed-By: Rafael Gonzaga <rafael.nunu@hotmail.com>"
2,C_kwDOAZ7xs9oAKDZhYTcxMDE5NjBiN2ZkNmFmMzJkMmNmOWJkN2I3ZGJkOGI5MWYzMGM,Jungku Lee,GitHub,"lib: update params in jsdoc for `HTTPRequestOptions`

PR-URL: https://github.com/nodejs/node/pull/49872
Reviewed-By: Marco Ippolito <marcoippolito54@gmail.com>
Reviewed-By: Matteo Collina <matteo.collina@gmail.com>",https://api.github.com/repos/nodejs/node/git/commits/6aa7101960b7fd6af32d2cf9bd7b7dbd8b91f30c,2023-09-29,lib: update params in jsdoc for `HTTPRequestOptions`
2,C_kwDOAZ7xs9oAKDZhYTcxMDE5NjBiN2ZkNmFmMzJkMmNmOWJkN2I3ZGJkOGI5MWYzMGM,Jungku Lee,GitHub,"lib: update params in jsdoc for `HTTPRequestOptions`

PR-URL: https://github.com/nodejs/node/pull/49872
Reviewed-By: Marco Ippolito <marcoippolito54@gmail.com>
Reviewed-By: Matteo Collina <matteo.collina@gmail.com>",https://api.github.com/repos/nodejs/node/git/commits/6aa7101960b7fd6af32d2cf9bd7b7dbd8b91f30c,2023-09-29,"PR-URL: Reviewed-By: Marco Ippolito <marcoippolito54@gmail.com>
Reviewed-By: Matteo Collina <matteo.collina@gmail.com>"
3,C_kwDOAZ7xs9oAKDVlYzBmMzlhN2E1NjViNWE4MmZlOTBiYTlmMDk1NzMxYTdiOGIwMDU,Gerrard Lindsay,GitHub,"http: prevent writing to the body when not allowed by HTTP spec

PR-URL: https://github.com/nodejs/node/pull/47732
Reviewed-By: Robert Nagy <ronagy@icloud.com>
Reviewed-By: Paolo Insogna <paolo@cowtech.it>
Reviewed-By: Marco Ippolito <marcoippolito54@gmail.com>
Reviewed-By: Matteo Collina <matteo.collina@gmail.com>",https://api.github.com/repos/nodejs/node/git/commits/5ec0f39a7a565b5a82fe90ba9f095731a7b8b005,2023-05-13,prevent writing to the body when not allowed by HTTP spec
3,C_kwDOAZ7xs9oAKDVlYzBmMzlhN2E1NjViNWE4MmZlOTBiYTlmMDk1NzMxYTdiOGIwMDU,Gerrard Lindsay,GitHub,"http: prevent writing to the body when not allowed by HTTP spec

PR-URL: https://github.com/nodejs/node/pull/47732
Reviewed-By: Robert Nagy <ronagy@icloud.com>
Reviewed-By: Paolo Insogna <paolo@cowtech.it>
Reviewed-By: Marco Ippolito <marcoippolito54@gmail.com>
Reviewed-By: Matteo Collina <matteo.collina@gmail.com>",https://api.github.com/repos/nodejs/node/git/commits/5ec0f39a7a565b5a82fe90ba9f095731a7b8b005,2023-05-13,"PR-URL: Reviewed-By: Robert Nagy <ronagy@icloud.com>
Reviewed-By: Paolo Insogna <paolo@cowtech.it>
Reviewed-By: Marco Ippolito <marcoippolito54@gmail.com>
Reviewed-By: Matteo Collina <matteo.collina@gmail.com>"
4,C_kwDOAZ7xs9oAKDJmYmUxMjRlNjhjMDQwOTA0ZTk5MGMyMzA4M2E2M2UxNjNhMzA4NWQ,HinataKah0,GitHub,"http: add highWaterMark opt in http.createServer

Add highWaterMark option when creating a new HTTP server.
This option will override the default (readable|writable)
highWaterMark values on sockets created.

Fixes: https://github.com/nodejs/node/issues/46606
PR-URL: https://github.com/nodejs/node/pull/47405
Reviewed-By: Robert Nagy <ronagy@icloud.com>
Reviewed-By: Paolo Insogna <paolo@cowtech.it>
Reviewed-By: Debadree Chatterjee <debadree333@gmail.com>",https://api.github.com/repos/nodejs/node/git/commits/2fbe124e68c040904e990c23083a63e163a3085d,2023-04-24,add highWaterMark opt in 
4,C_kwDOAZ7xs9oAKDJmYmUxMjRlNjhjMDQwOTA0ZTk5MGMyMzA4M2E2M2UxNjNhMzA4NWQ,HinataKah0,GitHub,"http: add highWaterMark opt in http.createServer

Add highWaterMark option when creating a new HTTP server.
This option will override the default (readable|writable)
highWaterMark values on sockets created.

Fixes: https://github.com/nodejs/node/issues/46606
PR-URL: https://github.com/nodejs/node/pull/47405
Reviewed-By: Robert Nagy <ronagy@icloud.com>
Reviewed-By: Paolo Insogna <paolo@cowtech.it>
Reviewed-By: Debadree Chatterjee <debadree333@gmail.com>",https://api.github.com/repos/nodejs/node/git/commits/2fbe124e68c040904e990c23083a63e163a3085d,2023-04-24,Add highWaterMark option when creating a new HTTP server
4,C_kwDOAZ7xs9oAKDJmYmUxMjRlNjhjMDQwOTA0ZTk5MGMyMzA4M2E2M2UxNjNhMzA4NWQ,HinataKah0,GitHub,"http: add highWaterMark opt in http.createServer

Add highWaterMark option when creating a new HTTP server.
This option will override the default (readable|writable)
highWaterMark values on sockets created.

Fixes: https://github.com/nodejs/node/issues/46606
PR-URL: https://github.com/nodejs/node/pull/47405
Reviewed-By: Robert Nagy <ronagy@icloud.com>
Reviewed-By: Paolo Insogna <paolo@cowtech.it>
Reviewed-By: Debadree Chatterjee <debadree333@gmail.com>",https://api.github.com/repos/nodejs/node/git/commits/2fbe124e68c040904e990c23083a63e163a3085d,2023-04-24,"This option will override the default (readable|writable)
highWaterMark values on sockets created"
4,C_kwDOAZ7xs9oAKDJmYmUxMjRlNjhjMDQwOTA0ZTk5MGMyMzA4M2E2M2UxNjNhMzA4NWQ,HinataKah0,GitHub,"http: add highWaterMark opt in http.createServer

Add highWaterMark option when creating a new HTTP server.
This option will override the default (readable|writable)
highWaterMark values on sockets created.

Fixes: https://github.com/nodejs/node/issues/46606
PR-URL: https://github.com/nodejs/node/pull/47405
Reviewed-By: Robert Nagy <ronagy@icloud.com>
Reviewed-By: Paolo Insogna <paolo@cowtech.it>
Reviewed-By: Debadree Chatterjee <debadree333@gmail.com>",https://api.github.com/repos/nodejs/node/git/commits/2fbe124e68c040904e990c23083a63e163a3085d,2023-04-24,"Fixes: PR-URL: Reviewed-By: Robert Nagy <ronagy@icloud.com>
Reviewed-By: Paolo Insogna <paolo@cowtech.it>
Reviewed-By: Debadree Chatterjee <debadree333@gmail.com>"
5,C_kwDOAZ7xs9oAKDlkYmIxNjIzZmZkNmUwNmI1ZGYwYzc0YmVhZjNmNGVlMGExN2M4ZTU,Antoine du Hamel,Antoine du Hamel,"lib: add trailing commas to all public core modules

PR-URL: https://github.com/nodejs/node/pull/46848
Reviewed-By: Debadree Chatterjee <debadree333@gmail.com>
Reviewed-By: Moshe Atlow <moshe@atlow.co.il>
Reviewed-By: Anatoli Papirovski <apapirovski@mac.com>
Reviewed-By: Benjamin Gruenbaum <benjamingr@gmail.com>
Reviewed-By: Rafael Gonzaga <rafael.nunu@hotmail.com>
Reviewed-By: Jiawen Geng <technicalcute@gmail.com>
Reviewed-By: Trivikram Kamat <trivikr.dev@gmail.com>
Reviewed-By: Yongsheng Zhang <zyszys98@gmail.com>",https://api.github.com/repos/nodejs/node/git/commits/9dbb1623ffd6e06b5df0c74beaf3f4ee0a17c8e5,2023-02-12,lib: add trailing commas to all public core modules
5,C_kwDOAZ7xs9oAKDlkYmIxNjIzZmZkNmUwNmI1ZGYwYzc0YmVhZjNmNGVlMGExN2M4ZTU,Antoine du Hamel,Antoine du Hamel,"lib: add trailing commas to all public core modules

PR-URL: https://github.com/nodejs/node/pull/46848
Reviewed-By: Debadree Chatterjee <debadree333@gmail.com>
Reviewed-By: Moshe Atlow <moshe@atlow.co.il>
Reviewed-By: Anatoli Papirovski <apapirovski@mac.com>
Reviewed-By: Benjamin Gruenbaum <benjamingr@gmail.com>
Reviewed-By: Rafael Gonzaga <rafael.nunu@hotmail.com>
Reviewed-By: Jiawen Geng <technicalcute@gmail.com>
Reviewed-By: Trivikram Kamat <trivikr.dev@gmail.com>
Reviewed-By: Yongsheng Zhang <zyszys98@gmail.com>",https://api.github.com/repos/nodejs/node/git/commits/9dbb1623ffd6e06b5df0c74beaf3f4ee0a17c8e5,2023-02-12,"PR-URL: Reviewed-By: Debadree Chatterjee <debadree333@gmail.com>
Reviewed-By: Moshe Atlow <moshe@atlow.co.il>
Reviewed-By: Anatoli Papirovski <apapirovski@mac.com>
Reviewed-By: Benjamin Gruenbaum <benjamingr@gmail.com>
Reviewed-By: Rafael Gonzaga <rafael.nunu@hotmail.com>
Reviewed-By: Jiawen Geng <technicalcute@gmail.com>
Reviewed-By: Trivikram Kamat <trivikr.dev@gmail.com>
Reviewed-By: Yongsheng Zhang <zyszys98@gmail.com>"
6,C_kwDOAZ7xs9oAKDQwODBiYWRhMWEwOTRiNTdlYTA5M2FjNGQwNjNjNWI3ZjlmMDA1M2U,Marco Ippolito,GitHub,"http: join authorization headers

PR-URL: https://github.com/nodejs/node/pull/45982
Fixes: https://github.com/nodejs/node/issues/45699
Reviewed-By: Matteo Collina <matteo.collina@gmail.com>
Reviewed-By: Yagiz Nizipli <yagiz@nizipli.com>
Reviewed-By: Paolo Insogna <paolo@cowtech.it>",https://api.github.com/repos/nodejs/node/git/commits/4080bada1a094b57ea093ac4d063c5b7f9f0053e,2023-01-03,join authorization headers
6,C_kwDOAZ7xs9oAKDQwODBiYWRhMWEwOTRiNTdlYTA5M2FjNGQwNjNjNWI3ZjlmMDA1M2U,Marco Ippolito,GitHub,"http: join authorization headers

PR-URL: https://github.com/nodejs/node/pull/45982
Fixes: https://github.com/nodejs/node/issues/45699
Reviewed-By: Matteo Collina <matteo.collina@gmail.com>
Reviewed-By: Yagiz Nizipli <yagiz@nizipli.com>
Reviewed-By: Paolo Insogna <paolo@cowtech.it>",https://api.github.com/repos/nodejs/node/git/commits/4080bada1a094b57ea093ac4d063c5b7f9f0053e,2023-01-03,"PR-URL: Fixes: Reviewed-By: Matteo Collina <matteo.collina@gmail.com>
Reviewed-By: Yagiz Nizipli <yagiz@nizipli.com>
Reviewed-By: Paolo Insogna <paolo@cowtech.it>"
7,C_kwDOAZ7xs9oAKGVkMzYwNGNkNjQ3NjVjYjZkZmIwYjcxNjBjZTFiODI5NjY2ZDMxOTQ,wwwzbwcom,Paolo Insogna,"http: server check Host header, to meet RFC 7230 5.4 requirement

PR-URL: https://github.com/nodejs/node/pull/45597
Fixes: https://github.com/nodejs/node/issues/39033
Co-authored-by: Luigi Pinca <luigipinca@gmail.com>
Co-authored-by: mscdex <mscdex@users.noreply.github.com>
Reviewed-By: Robert Nagy <ronagy@icloud.com>
Reviewed-By: Paolo Insogna <paolo@cowtech.it>
Reviewed-By: Yagiz Nizipli <yagiz@nizipli.com>
Reviewed-By: Matteo Collina <matteo.collina@gmail.com>",https://api.github.com/repos/nodejs/node/git/commits/ed3604cd64765cb6dfb0b7160ce1b829666d3194,2021-07-09,"server check Host header, to meet RFC 7230 5.4 requirement"
7,C_kwDOAZ7xs9oAKGVkMzYwNGNkNjQ3NjVjYjZkZmIwYjcxNjBjZTFiODI5NjY2ZDMxOTQ,wwwzbwcom,Paolo Insogna,"http: server check Host header, to meet RFC 7230 5.4 requirement

PR-URL: https://github.com/nodejs/node/pull/45597
Fixes: https://github.com/nodejs/node/issues/39033
Co-authored-by: Luigi Pinca <luigipinca@gmail.com>
Co-authored-by: mscdex <mscdex@users.noreply.github.com>
Reviewed-By: Robert Nagy <ronagy@icloud.com>
Reviewed-By: Paolo Insogna <paolo@cowtech.it>
Reviewed-By: Yagiz Nizipli <yagiz@nizipli.com>
Reviewed-By: Matteo Collina <matteo.collina@gmail.com>",https://api.github.com/repos/nodejs/node/git/commits/ed3604cd64765cb6dfb0b7160ce1b829666d3194,2021-07-09,"PR-URL: Fixes: Co-authored-by: Luigi Pinca <luigipinca@gmail.com>
Co-authored-by: mscdex <mscdex@users.noreply.github.com>
Reviewed-By: Robert Nagy <ronagy@icloud.com>
Reviewed-By: Paolo Insogna <paolo@cowtech.it>
Reviewed-By: Yagiz Nizipli <yagiz@nizipli.com>
Reviewed-By: Matteo Collina <matteo.collina@gmail.com>"
8,C_kwDOAZ7xs9oAKDQyYzhmMDk5ZmYyZGM2YWY2OWNkOTUwM2Y3YWIwM2VhMmRhNzJiMjA,Rich Trott,Node.js GitHub Bot,"http: add JSDoc property descriptions

PR-URL: https://github.com/nodejs/node/pull/45370
Reviewed-By: Akhil Marsonya <akhil.marsonya27@gmail.com>
Reviewed-By: Yagiz Nizipli <yagiz@nizipli.com>
Reviewed-By: Jacob Smith <jacob@frende.me>",https://api.github.com/repos/nodejs/node/git/commits/42c8f099ff2dc6af69cd9503f7ab03ea2da72b20,2022-11-08,add JSDoc property descriptions
8,C_kwDOAZ7xs9oAKDQyYzhmMDk5ZmYyZGM2YWY2OWNkOTUwM2Y3YWIwM2VhMmRhNzJiMjA,Rich Trott,Node.js GitHub Bot,"http: add JSDoc property descriptions

PR-URL: https://github.com/nodejs/node/pull/45370
Reviewed-By: Akhil Marsonya <akhil.marsonya27@gmail.com>
Reviewed-By: Yagiz Nizipli <yagiz@nizipli.com>
Reviewed-By: Jacob Smith <jacob@frende.me>",https://api.github.com/repos/nodejs/node/git/commits/42c8f099ff2dc6af69cd9503f7ab03ea2da72b20,2022-11-08,"PR-URL: Reviewed-By: Akhil Marsonya <akhil.marsonya27@gmail.com>
Reviewed-By: Yagiz Nizipli <yagiz@nizipli.com>
Reviewed-By: Jacob Smith <jacob@frende.me>"
9,C_kwDOAZ7xs9oAKDIwZTM3MmMyNDJkMTUwZDY3OTViOGY0NzA5YTczNTYyNWFiOGQ5NmY,theanarkh,GitHub,"http: make idle http parser count configurable

PR-URL: https://github.com/nodejs/node/pull/43974
Reviewed-By: Paolo Insogna <paolo@cowtech.it>
Reviewed-By: Matteo Collina <matteo.collina@gmail.com>
Reviewed-By: Feng Yu <F3n67u@outlook.com>",https://api.github.com/repos/nodejs/node/git/commits/20e372c242d150d6795b8f4709a735625ab8d96f,2022-07-29,make idle parser count configurable
9,C_kwDOAZ7xs9oAKDIwZTM3MmMyNDJkMTUwZDY3OTViOGY0NzA5YTczNTYyNWFiOGQ5NmY,theanarkh,GitHub,"http: make idle http parser count configurable

PR-URL: https://github.com/nodejs/node/pull/43974
Reviewed-By: Paolo Insogna <paolo@cowtech.it>
Reviewed-By: Matteo Collina <matteo.collina@gmail.com>
Reviewed-By: Feng Yu <F3n67u@outlook.com>",https://api.github.com/repos/nodejs/node/git/commits/20e372c242d150d6795b8f4709a735625ab8d96f,2022-07-29,"PR-URL: Reviewed-By: Paolo Insogna <paolo@cowtech.it>
Reviewed-By: Matteo Collina <matteo.collina@gmail.com>
Reviewed-By: Feng Yu <F3n67u@outlook.com>"
10,C_kwDOAZ7xs9oAKDA2ZDg2MDY5NjAzM2I2N2E4ZjRhYTk3YjA4MzAwOWFkM2Q4MmVmMjY,Antoine du Hamel,GitHub,"lib: use null-prototype objects for property descriptors

Refs: https://github.com/nodejs/node/pull/42921

PR-URL: https://github.com/nodejs/node/pull/43270
Reviewed-By: Paolo Insogna <paolo@cowtech.it>
Reviewed-By: Matteo Collina <matteo.collina@gmail.com>
Reviewed-By: Chengzhong Wu <legendecas@gmail.com>
Reviewed-By: Minwoo Jung <nodecorelab@gmail.com>",https://api.github.com/repos/nodejs/node/git/commits/06d860696033b67a8f4aa97b083009ad3d82ef26,2022-06-03,lib: use null-prototype objects for property descriptors
10,C_kwDOAZ7xs9oAKDA2ZDg2MDY5NjAzM2I2N2E4ZjRhYTk3YjA4MzAwOWFkM2Q4MmVmMjY,Antoine du Hamel,GitHub,"lib: use null-prototype objects for property descriptors

Refs: https://github.com/nodejs/node/pull/42921

PR-URL: https://github.com/nodejs/node/pull/43270
Reviewed-By: Paolo Insogna <paolo@cowtech.it>
Reviewed-By: Matteo Collina <matteo.collina@gmail.com>
Reviewed-By: Chengzhong Wu <legendecas@gmail.com>
Reviewed-By: Minwoo Jung <nodecorelab@gmail.com>",https://api.github.com/repos/nodejs/node/git/commits/06d860696033b67a8f4aa97b083009ad3d82ef26,2022-06-03,"Refs: 
PR-URL: Reviewed-By: Paolo Insogna <paolo@cowtech.it>
Reviewed-By: Matteo Collina <matteo.collina@gmail.com>
Reviewed-By: Chengzhong Wu <legendecas@gmail.com>
Reviewed-By: Minwoo Jung <nodecorelab@gmail.com>"
11,C_kwDOAZ7xs9oAKDFlOGIyOTZjNThiNzdkM2I3YjQ2ZDQ1YzdlZjNlNDQ5ODFjNWMzZTc,Rich Trott,GitHub,"lib,test,tools: use consistent JSDoc types

This could be in preparation of implementing the jsdoc/check-types
ESLint rule.

PR-URL: https://github.com/nodejs/node/pull/40989
Reviewed-By: Michaël Zasso <targos@protonmail.com>
Reviewed-By: Luigi Pinca <luigipinca@gmail.com>
Reviewed-By: Antoine du Hamel <duhamelantoine1995@gmail.com>
Reviewed-By: Tobias Nießen <tniessen@tnie.de>
Reviewed-By: Mohammed Keyvanzadeh <mohammadkeyvanzade94@gmail.com>
Reviewed-By: Ruben Bridgewater <ruben@bridgewater.de>",https://api.github.com/repos/nodejs/node/git/commits/1e8b296c58b77d3b7b46d45c7ef3e44981c5c3e7,2021-11-29,"lib,test,tools: use consistent JSDoc types"
11,C_kwDOAZ7xs9oAKDFlOGIyOTZjNThiNzdkM2I3YjQ2ZDQ1YzdlZjNlNDQ5ODFjNWMzZTc,Rich Trott,GitHub,"lib,test,tools: use consistent JSDoc types

This could be in preparation of implementing the jsdoc/check-types
ESLint rule.

PR-URL: https://github.com/nodejs/node/pull/40989
Reviewed-By: Michaël Zasso <targos@protonmail.com>
Reviewed-By: Luigi Pinca <luigipinca@gmail.com>
Reviewed-By: Antoine du Hamel <duhamelantoine1995@gmail.com>
Reviewed-By: Tobias Nießen <tniessen@tnie.de>
Reviewed-By: Mohammed Keyvanzadeh <mohammadkeyvanzade94@gmail.com>
Reviewed-By: Ruben Bridgewater <ruben@bridgewater.de>",https://api.github.com/repos/nodejs/node/git/commits/1e8b296c58b77d3b7b46d45c7ef3e44981c5c3e7,2021-11-29,"This could be in preparation of implementing the jsdoc/check-types
ESLint rule"
11,C_kwDOAZ7xs9oAKDFlOGIyOTZjNThiNzdkM2I3YjQ2ZDQ1YzdlZjNlNDQ5ODFjNWMzZTc,Rich Trott,GitHub,"lib,test,tools: use consistent JSDoc types

This could be in preparation of implementing the jsdoc/check-types
ESLint rule.

PR-URL: https://github.com/nodejs/node/pull/40989
Reviewed-By: Michaël Zasso <targos@protonmail.com>
Reviewed-By: Luigi Pinca <luigipinca@gmail.com>
Reviewed-By: Antoine du Hamel <duhamelantoine1995@gmail.com>
Reviewed-By: Tobias Nießen <tniessen@tnie.de>
Reviewed-By: Mohammed Keyvanzadeh <mohammadkeyvanzade94@gmail.com>
Reviewed-By: Ruben Bridgewater <ruben@bridgewater.de>",https://api.github.com/repos/nodejs/node/git/commits/1e8b296c58b77d3b7b46d45c7ef3e44981c5c3e7,2021-11-29,"PR-URL: Reviewed-By: Michaël Zasso <targos@protonmail.com>
Reviewed-By: Luigi Pinca <luigipinca@gmail.com>
Reviewed-By: Antoine du Hamel <duhamelantoine1995@gmail.com>
Reviewed-By: Tobias Nießen <tniessen@tnie.de>
Reviewed-By: Mohammed Keyvanzadeh <mohammadkeyvanzade94@gmail.com>
Reviewed-By: Ruben Bridgewater <ruben@bridgewater.de>"
12,MDY6Q29tbWl0MjcxOTM3Nzk6ZDMxNjJkYThkZGM0N2I3ZTJhYzA4ZDdlMjAwNmVhNTJhMjI0NmYxOQ==,Voltrex,Michaël Zasso,"typings: add JSDoc typings for http

PR-URL: https://github.com/nodejs/node/pull/38191
Reviewed-By: Bradley Farias <bradley.meck@gmail.com>
Reviewed-By: Michaël Zasso <targos@protonmail.com>",https://api.github.com/repos/nodejs/node/git/commits/d3162da8ddc47b7e2ac08d7e2006ea52a2246f19,2021-04-10,typings: add JSDoc typings for 
12,MDY6Q29tbWl0MjcxOTM3Nzk6ZDMxNjJkYThkZGM0N2I3ZTJhYzA4ZDdlMjAwNmVhNTJhMjI0NmYxOQ==,Voltrex,Michaël Zasso,"typings: add JSDoc typings for http

PR-URL: https://github.com/nodejs/node/pull/38191
Reviewed-By: Bradley Farias <bradley.meck@gmail.com>
Reviewed-By: Michaël Zasso <targos@protonmail.com>",https://api.github.com/repos/nodejs/node/git/commits/d3162da8ddc47b7e2ac08d7e2006ea52a2246f19,2021-04-10,"PR-URL: Reviewed-By: Bradley Farias <bradley.meck@gmail.com>
Reviewed-By: Michaël Zasso <targos@protonmail.com>"
13,MDY6Q29tbWl0MjcxOTM3Nzk6OGNmNWFlMDdlOWU4MDc0N2MxOWUwZmMwNGZhZDQ4NDIzNzA3ZjYyYw==,Antoine du Hamel,Antoine du Hamel,"http: refactor to use more primordials

PR-URL: https://github.com/nodejs/node/pull/36194
Reviewed-By: James M Snell <jasnell@gmail.com>
Reviewed-By: Rich Trott <rtrott@gmail.com>",https://api.github.com/repos/nodejs/node/git/commits/8cf5ae07e9e80747c19e0fc04fad48423707f62c,2020-11-17,refactor to use more primordials
13,MDY6Q29tbWl0MjcxOTM3Nzk6OGNmNWFlMDdlOWU4MDc0N2MxOWUwZmMwNGZhZDQ4NDIzNzA3ZjYyYw==,Antoine du Hamel,Antoine du Hamel,"http: refactor to use more primordials

PR-URL: https://github.com/nodejs/node/pull/36194
Reviewed-By: James M Snell <jasnell@gmail.com>
Reviewed-By: Rich Trott <rtrott@gmail.com>",https://api.github.com/repos/nodejs/node/git/commits/8cf5ae07e9e80747c19e0fc04fad48423707f62c,2020-11-17,"PR-URL: Reviewed-By: James M Snell <jasnell@gmail.com>
Reviewed-By: Rich Trott <rtrott@gmail.com>"
14,MDY6Q29tbWl0MjcxOTM3Nzk6ZTMwYTY1MTkzNzkyZDc2ZTIwNGU0NTU4YTQwNGI3ZTlkNWExMmY0MQ==,Osher,Ruben Bridgewater,"http: tidy up exposure of header validation

PR-URL: https://github.com/nodejs/node/pull/33371
Reviewed-By: Anna Henningsen <anna@addaleax.net>
Reviewed-By: Benjamin Gruenbaum <benjamingr@gmail.com>
Reviewed-By: Luigi Pinca <luigipinca@gmail.com>
Reviewed-By: Ruben Bridgewater <ruben@bridgewater.de>",https://api.github.com/repos/nodejs/node/git/commits/e30a65193792d76e204e4558a404b7e9d5a12f41,2020-05-12,tidy up exposure of header validation
14,MDY6Q29tbWl0MjcxOTM3Nzk6ZTMwYTY1MTkzNzkyZDc2ZTIwNGU0NTU4YTQwNGI3ZTlkNWExMmY0MQ==,Osher,Ruben Bridgewater,"http: tidy up exposure of header validation

PR-URL: https://github.com/nodejs/node/pull/33371
Reviewed-By: Anna Henningsen <anna@addaleax.net>
Reviewed-By: Benjamin Gruenbaum <benjamingr@gmail.com>
Reviewed-By: Luigi Pinca <luigipinca@gmail.com>
Reviewed-By: Ruben Bridgewater <ruben@bridgewater.de>",https://api.github.com/repos/nodejs/node/git/commits/e30a65193792d76e204e4558a404b7e9d5a12f41,2020-05-12,"PR-URL: Reviewed-By: Anna Henningsen <anna@addaleax.net>
Reviewed-By: Benjamin Gruenbaum <benjamingr@gmail.com>
Reviewed-By: Luigi Pinca <luigipinca@gmail.com>
Reviewed-By: Ruben Bridgewater <ruben@bridgewater.de>"
15,MDY6Q29tbWl0MjcxOTM3Nzk6OTZmYWVhMTM3ZTdkNTkxY2FiNWZhMTVmNGM1ZmQ3Y2IyOGRhMzVlZQ==,osher,Anna Henningsen,"http: expose http.validate-header-name/value

The use-case is for any framework that provides user mw a response
replacement, that collects the desired response state, and applies them
only on conclusion. As such a framework, I'd want to validate the
header names and values as soon as the user-code provides them.
This - to eliminate errors on response-send time, and provide developer
stack trace that contains the line that submits the offending values.

PR-URL: https://github.com/nodejs/node/pull/33119
Reviewed-By: Anna Henningsen <anna@addaleax.net>",https://api.github.com/repos/nodejs/node/git/commits/96faea137e7d591cab5fa15f4c5fd7cb28da35ee,2020-04-28,expose 
15,MDY6Q29tbWl0MjcxOTM3Nzk6OTZmYWVhMTM3ZTdkNTkxY2FiNWZhMTVmNGM1ZmQ3Y2IyOGRhMzVlZQ==,osher,Anna Henningsen,"http: expose http.validate-header-name/value

The use-case is for any framework that provides user mw a response
replacement, that collects the desired response state, and applies them
only on conclusion. As such a framework, I'd want to validate the
header names and values as soon as the user-code provides them.
This - to eliminate errors on response-send time, and provide developer
stack trace that contains the line that submits the offending values.

PR-URL: https://github.com/nodejs/node/pull/33119
Reviewed-By: Anna Henningsen <anna@addaleax.net>",https://api.github.com/repos/nodejs/node/git/commits/96faea137e7d591cab5fa15f4c5fd7cb28da35ee,2020-04-28,"The use-case is for any framework that provides user mw a response
replacement, that collects the desired response state, and applies them
only on conclusion"
15,MDY6Q29tbWl0MjcxOTM3Nzk6OTZmYWVhMTM3ZTdkNTkxY2FiNWZhMTVmNGM1ZmQ3Y2IyOGRhMzVlZQ==,osher,Anna Henningsen,"http: expose http.validate-header-name/value

The use-case is for any framework that provides user mw a response
replacement, that collects the desired response state, and applies them
only on conclusion. As such a framework, I'd want to validate the
header names and values as soon as the user-code provides them.
This - to eliminate errors on response-send time, and provide developer
stack trace that contains the line that submits the offending values.

PR-URL: https://github.com/nodejs/node/pull/33119
Reviewed-By: Anna Henningsen <anna@addaleax.net>",https://api.github.com/repos/nodejs/node/git/commits/96faea137e7d591cab5fa15f4c5fd7cb28da35ee,2020-04-28,"As such a framework, I'd want to validate the
header names and values as soon as the user-code provides them"
15,MDY6Q29tbWl0MjcxOTM3Nzk6OTZmYWVhMTM3ZTdkNTkxY2FiNWZhMTVmNGM1ZmQ3Y2IyOGRhMzVlZQ==,osher,Anna Henningsen,"http: expose http.validate-header-name/value

The use-case is for any framework that provides user mw a response
replacement, that collects the desired response state, and applies them
only on conclusion. As such a framework, I'd want to validate the
header names and values as soon as the user-code provides them.
This - to eliminate errors on response-send time, and provide developer
stack trace that contains the line that submits the offending values.

PR-URL: https://github.com/nodejs/node/pull/33119
Reviewed-By: Anna Henningsen <anna@addaleax.net>",https://api.github.com/repos/nodejs/node/git/commits/96faea137e7d591cab5fa15f4c5fd7cb28da35ee,2020-04-28,"This - to eliminate errors on response-send time, and provide developer
stack trace that contains the line that submits the offending values"
15,MDY6Q29tbWl0MjcxOTM3Nzk6OTZmYWVhMTM3ZTdkNTkxY2FiNWZhMTVmNGM1ZmQ3Y2IyOGRhMzVlZQ==,osher,Anna Henningsen,"http: expose http.validate-header-name/value

The use-case is for any framework that provides user mw a response
replacement, that collects the desired response state, and applies them
only on conclusion. As such a framework, I'd want to validate the
header names and values as soon as the user-code provides them.
This - to eliminate errors on response-send time, and provide developer
stack trace that contains the line that submits the offending values.

PR-URL: https://github.com/nodejs/node/pull/33119
Reviewed-By: Anna Henningsen <anna@addaleax.net>",https://api.github.com/repos/nodejs/node/git/commits/96faea137e7d591cab5fa15f4c5fd7cb28da35ee,2020-04-28,PR-URL: Reviewed-By: Anna Henningsen <anna@addaleax.net>
16,MDY6Q29tbWl0MjcxOTM3Nzk6MDY0NmVkYTRmYzBhZmZiOThlMTNjMzBhY2I1MjJlNjNiN2ZkNmRkZQ==,Michaël Zasso,Michaël Zasso,"lib: flatten access to primordials

Store all primordials as properties of the primordials object.
Static functions are prefixed by the constructor's name and prototype
methods are prefixed by the constructor's name followed by ""Prototype"".
For example: primordials.Object.keys becomes primordials.ObjectKeys.

PR-URL: https://github.com/nodejs/node/pull/30610
Refs: https://github.com/nodejs/node/issues/29766
Reviewed-By: Anna Henningsen <anna@addaleax.net>
Reviewed-By: Matteo Collina <matteo.collina@gmail.com>
Reviewed-By: Colin Ihrig <cjihrig@gmail.com>
Reviewed-By: Trivikram Kamat <trivikr.dev@gmail.com>",https://api.github.com/repos/nodejs/node/git/commits/0646eda4fc0affb98e13c30acb522e63b7fd6dde,2019-11-22,lib: flatten access to primordials
16,MDY6Q29tbWl0MjcxOTM3Nzk6MDY0NmVkYTRmYzBhZmZiOThlMTNjMzBhY2I1MjJlNjNiN2ZkNmRkZQ==,Michaël Zasso,Michaël Zasso,"lib: flatten access to primordials

Store all primordials as properties of the primordials object.
Static functions are prefixed by the constructor's name and prototype
methods are prefixed by the constructor's name followed by ""Prototype"".
For example: primordials.Object.keys becomes primordials.ObjectKeys.

PR-URL: https://github.com/nodejs/node/pull/30610
Refs: https://github.com/nodejs/node/issues/29766
Reviewed-By: Anna Henningsen <anna@addaleax.net>
Reviewed-By: Matteo Collina <matteo.collina@gmail.com>
Reviewed-By: Colin Ihrig <cjihrig@gmail.com>
Reviewed-By: Trivikram Kamat <trivikr.dev@gmail.com>",https://api.github.com/repos/nodejs/node/git/commits/0646eda4fc0affb98e13c30acb522e63b7fd6dde,2019-11-22,Store all primordials as properties of the primordials object
16,MDY6Q29tbWl0MjcxOTM3Nzk6MDY0NmVkYTRmYzBhZmZiOThlMTNjMzBhY2I1MjJlNjNiN2ZkNmRkZQ==,Michaël Zasso,Michaël Zasso,"lib: flatten access to primordials

Store all primordials as properties of the primordials object.
Static functions are prefixed by the constructor's name and prototype
methods are prefixed by the constructor's name followed by ""Prototype"".
For example: primordials.Object.keys becomes primordials.ObjectKeys.

PR-URL: https://github.com/nodejs/node/pull/30610
Refs: https://github.com/nodejs/node/issues/29766
Reviewed-By: Anna Henningsen <anna@addaleax.net>
Reviewed-By: Matteo Collina <matteo.collina@gmail.com>
Reviewed-By: Colin Ihrig <cjihrig@gmail.com>
Reviewed-By: Trivikram Kamat <trivikr.dev@gmail.com>",https://api.github.com/repos/nodejs/node/git/commits/0646eda4fc0affb98e13c30acb522e63b7fd6dde,2019-11-22,"Static functions are prefixed by the constructor's name and prototype
methods are prefixed by the constructor's name followed by ""Prototype"""
16,MDY6Q29tbWl0MjcxOTM3Nzk6MDY0NmVkYTRmYzBhZmZiOThlMTNjMzBhY2I1MjJlNjNiN2ZkNmRkZQ==,Michaël Zasso,Michaël Zasso,"lib: flatten access to primordials

Store all primordials as properties of the primordials object.
Static functions are prefixed by the constructor's name and prototype
methods are prefixed by the constructor's name followed by ""Prototype"".
For example: primordials.Object.keys becomes primordials.ObjectKeys.

PR-URL: https://github.com/nodejs/node/pull/30610
Refs: https://github.com/nodejs/node/issues/29766
Reviewed-By: Anna Henningsen <anna@addaleax.net>
Reviewed-By: Matteo Collina <matteo.collina@gmail.com>
Reviewed-By: Colin Ihrig <cjihrig@gmail.com>
Reviewed-By: Trivikram Kamat <trivikr.dev@gmail.com>",https://api.github.com/repos/nodejs/node/git/commits/0646eda4fc0affb98e13c30acb522e63b7fd6dde,2019-11-22,For example: primordials.Object.keys becomes primordials.ObjectKeys
16,MDY6Q29tbWl0MjcxOTM3Nzk6MDY0NmVkYTRmYzBhZmZiOThlMTNjMzBhY2I1MjJlNjNiN2ZkNmRkZQ==,Michaël Zasso,Michaël Zasso,"lib: flatten access to primordials

Store all primordials as properties of the primordials object.
Static functions are prefixed by the constructor's name and prototype
methods are prefixed by the constructor's name followed by ""Prototype"".
For example: primordials.Object.keys becomes primordials.ObjectKeys.

PR-URL: https://github.com/nodejs/node/pull/30610
Refs: https://github.com/nodejs/node/issues/29766
Reviewed-By: Anna Henningsen <anna@addaleax.net>
Reviewed-By: Matteo Collina <matteo.collina@gmail.com>
Reviewed-By: Colin Ihrig <cjihrig@gmail.com>
Reviewed-By: Trivikram Kamat <trivikr.dev@gmail.com>",https://api.github.com/repos/nodejs/node/git/commits/0646eda4fc0affb98e13c30acb522e63b7fd6dde,2019-11-22,"PR-URL: Refs: Reviewed-By: Anna Henningsen <anna@addaleax.net>
Reviewed-By: Matteo Collina <matteo.collina@gmail.com>
Reviewed-By: Colin Ihrig <cjihrig@gmail.com>
Reviewed-By: Trivikram Kamat <trivikr.dev@gmail.com>"
17,MDY6Q29tbWl0MjcxOTM3Nzk6OTA4MjkyY2YxZjU1MWM2MTRhNzMzZDg1ODUyOGZmYjEzZmIzYTUyNA==,Michaël Zasso,Daniel Bevenius,"lib: enforce the use of Object from primordials

PR-URL: https://github.com/nodejs/node/pull/27146
Reviewed-By: Colin Ihrig <cjihrig@gmail.com>
Reviewed-By: Ruben Bridgewater <ruben@bridgewater.de>
Reviewed-By: Joyee Cheung <joyeec9h3@gmail.com>
Reviewed-By: Ben Noordhuis <info@bnoordhuis.nl>
Reviewed-By: Anna Henningsen <anna@addaleax.net>
Reviewed-By: James M Snell <jasnell@gmail.com>
Reviewed-By: Gus Caplan <me@gus.host>",https://api.github.com/repos/nodejs/node/git/commits/908292cf1f551c614a733d858528ffb13fb3a524,2019-04-09,lib: enforce the use of Object from primordials
17,MDY6Q29tbWl0MjcxOTM3Nzk6OTA4MjkyY2YxZjU1MWM2MTRhNzMzZDg1ODUyOGZmYjEzZmIzYTUyNA==,Michaël Zasso,Daniel Bevenius,"lib: enforce the use of Object from primordials

PR-URL: https://github.com/nodejs/node/pull/27146
Reviewed-By: Colin Ihrig <cjihrig@gmail.com>
Reviewed-By: Ruben Bridgewater <ruben@bridgewater.de>
Reviewed-By: Joyee Cheung <joyeec9h3@gmail.com>
Reviewed-By: Ben Noordhuis <info@bnoordhuis.nl>
Reviewed-By: Anna Henningsen <anna@addaleax.net>
Reviewed-By: James M Snell <jasnell@gmail.com>
Reviewed-By: Gus Caplan <me@gus.host>",https://api.github.com/repos/nodejs/node/git/commits/908292cf1f551c614a733d858528ffb13fb3a524,2019-04-09,"PR-URL: Reviewed-By: Colin Ihrig <cjihrig@gmail.com>
Reviewed-By: Ruben Bridgewater <ruben@bridgewater.de>
Reviewed-By: Joyee Cheung <joyeec9h3@gmail.com>
Reviewed-By: Ben Noordhuis <info@bnoordhuis.nl>
Reviewed-By: Anna Henningsen <anna@addaleax.net>
Reviewed-By: James M Snell <jasnell@gmail.com>
Reviewed-By: Gus Caplan <me@gus.host>"
18,MDY6Q29tbWl0MjcxOTM3Nzk6Zjg2ZjU3MzZkYTcyYWQ0ZjNmYjUwNjkyNDYxMjIyNTkwZTJmMDI1OA==,Ruben Bridgewater,Michaël Zasso,"benchmark,lib: change var to const

Refs: https://github.com/nodejs/node/pull/26679

PR-URL: https://github.com/nodejs/node/pull/26915
Reviewed-By: Michaël Zasso <targos@protonmail.com>
Reviewed-By: Tobias Nießen <tniessen@tnie.de>
Reviewed-By: Refael Ackermann <refack@gmail.com>",https://api.github.com/repos/nodejs/node/git/commits/f86f5736da72ad4f3fb50692461222590e2f0258,2019-03-26,"benchmark,lib: change var to const"
18,MDY6Q29tbWl0MjcxOTM3Nzk6Zjg2ZjU3MzZkYTcyYWQ0ZjNmYjUwNjkyNDYxMjIyNTkwZTJmMDI1OA==,Ruben Bridgewater,Michaël Zasso,"benchmark,lib: change var to const

Refs: https://github.com/nodejs/node/pull/26679

PR-URL: https://github.com/nodejs/node/pull/26915
Reviewed-By: Michaël Zasso <targos@protonmail.com>
Reviewed-By: Tobias Nießen <tniessen@tnie.de>
Reviewed-By: Refael Ackermann <refack@gmail.com>",https://api.github.com/repos/nodejs/node/git/commits/f86f5736da72ad4f3fb50692461222590e2f0258,2019-03-26,"Refs: 
PR-URL: Reviewed-By: Michaël Zasso <targos@protonmail.com>
Reviewed-By: Tobias Nießen <tniessen@tnie.de>
Reviewed-By: Refael Ackermann <refack@gmail.com>"
19,MDY6Q29tbWl0MjcxOTM3Nzk6NTc3NDY4OGUyNjE0Y2NiODk3NDllYTJmNTIzMDE0YzY0Nzk2MTZhYQ==,Roy Sommer,Anna Henningsen,"lib: support overriding http\s.globalAgent

Overriding `require('http[s]').globalAgent` is now respected by
consequent requests.

In order to achieve that, the following changes were made:

1. Implmentation in `http`: `module.exports.globalAgent` is now defined
through `Object.defineProperty`. Its getter and setter return \ set
`require('_http_agent').globalAgent`.

2. Implementation in `https`: the https `globalAgent` is not the same
as `_http_agent`, and is defined in `https` module itself. Therefore,
the fix here was to simply use `module.exports.globalAgent` to support
mutation.

3. According tests were added for both `http` and `https`, where in
both we create a server, set the default agent to a newly created
instance and make a request to that server. We then assert that the
given instance was actually used by inspecting its sockets property.

Fixes: https://github.com/nodejs/node/issues/23281

PR-URL: https://github.com/nodejs/node/pull/25170
Reviewed-By: James M Snell <jasnell@gmail.com>",https://api.github.com/repos/nodejs/node/git/commits/5774688e2614ccb89749ea2f523014c6479616aa,2018-12-21,lib: support overriding 
19,MDY6Q29tbWl0MjcxOTM3Nzk6NTc3NDY4OGUyNjE0Y2NiODk3NDllYTJmNTIzMDE0YzY0Nzk2MTZhYQ==,Roy Sommer,Anna Henningsen,"lib: support overriding http\s.globalAgent

Overriding `require('http[s]').globalAgent` is now respected by
consequent requests.

In order to achieve that, the following changes were made:

1. Implmentation in `http`: `module.exports.globalAgent` is now defined
through `Object.defineProperty`. Its getter and setter return \ set
`require('_http_agent').globalAgent`.

2. Implementation in `https`: the https `globalAgent` is not the same
as `_http_agent`, and is defined in `https` module itself. Therefore,
the fix here was to simply use `module.exports.globalAgent` to support
mutation.

3. According tests were added for both `http` and `https`, where in
both we create a server, set the default agent to a newly created
instance and make a request to that server. We then assert that the
given instance was actually used by inspecting its sockets property.

Fixes: https://github.com/nodejs/node/issues/23281

PR-URL: https://github.com/nodejs/node/pull/25170
Reviewed-By: James M Snell <jasnell@gmail.com>",https://api.github.com/repos/nodejs/node/git/commits/5774688e2614ccb89749ea2f523014c6479616aa,2018-12-21,"Overriding `require('is now respected by
consequent requests"
19,MDY6Q29tbWl0MjcxOTM3Nzk6NTc3NDY4OGUyNjE0Y2NiODk3NDllYTJmNTIzMDE0YzY0Nzk2MTZhYQ==,Roy Sommer,Anna Henningsen,"lib: support overriding http\s.globalAgent

Overriding `require('http[s]').globalAgent` is now respected by
consequent requests.

In order to achieve that, the following changes were made:

1. Implmentation in `http`: `module.exports.globalAgent` is now defined
through `Object.defineProperty`. Its getter and setter return \ set
`require('_http_agent').globalAgent`.

2. Implementation in `https`: the https `globalAgent` is not the same
as `_http_agent`, and is defined in `https` module itself. Therefore,
the fix here was to simply use `module.exports.globalAgent` to support
mutation.

3. According tests were added for both `http` and `https`, where in
both we create a server, set the default agent to a newly created
instance and make a request to that server. We then assert that the
given instance was actually used by inspecting its sockets property.

Fixes: https://github.com/nodejs/node/issues/23281

PR-URL: https://github.com/nodejs/node/pull/25170
Reviewed-By: James M Snell <jasnell@gmail.com>",https://api.github.com/repos/nodejs/node/git/commits/5774688e2614ccb89749ea2f523014c6479616aa,2018-12-21,"In order to achieve that, the following changes were made"
19,MDY6Q29tbWl0MjcxOTM3Nzk6NTc3NDY4OGUyNjE0Y2NiODk3NDllYTJmNTIzMDE0YzY0Nzk2MTZhYQ==,Roy Sommer,Anna Henningsen,"lib: support overriding http\s.globalAgent

Overriding `require('http[s]').globalAgent` is now respected by
consequent requests.

In order to achieve that, the following changes were made:

1. Implmentation in `http`: `module.exports.globalAgent` is now defined
through `Object.defineProperty`. Its getter and setter return \ set
`require('_http_agent').globalAgent`.

2. Implementation in `https`: the https `globalAgent` is not the same
as `_http_agent`, and is defined in `https` module itself. Therefore,
the fix here was to simply use `module.exports.globalAgent` to support
mutation.

3. According tests were added for both `http` and `https`, where in
both we create a server, set the default agent to a newly created
instance and make a request to that server. We then assert that the
given instance was actually used by inspecting its sockets property.

Fixes: https://github.com/nodejs/node/issues/23281

PR-URL: https://github.com/nodejs/node/pull/25170
Reviewed-By: James M Snell <jasnell@gmail.com>",https://api.github.com/repos/nodejs/node/git/commits/5774688e2614ccb89749ea2f523014c6479616aa,2018-12-21,1
19,MDY6Q29tbWl0MjcxOTM3Nzk6NTc3NDY4OGUyNjE0Y2NiODk3NDllYTJmNTIzMDE0YzY0Nzk2MTZhYQ==,Roy Sommer,Anna Henningsen,"lib: support overriding http\s.globalAgent

Overriding `require('http[s]').globalAgent` is now respected by
consequent requests.

In order to achieve that, the following changes were made:

1. Implmentation in `http`: `module.exports.globalAgent` is now defined
through `Object.defineProperty`. Its getter and setter return \ set
`require('_http_agent').globalAgent`.

2. Implementation in `https`: the https `globalAgent` is not the same
as `_http_agent`, and is defined in `https` module itself. Therefore,
the fix here was to simply use `module.exports.globalAgent` to support
mutation.

3. According tests were added for both `http` and `https`, where in
both we create a server, set the default agent to a newly created
instance and make a request to that server. We then assert that the
given instance was actually used by inspecting its sockets property.

Fixes: https://github.com/nodejs/node/issues/23281

PR-URL: https://github.com/nodejs/node/pull/25170
Reviewed-By: James M Snell <jasnell@gmail.com>",https://api.github.com/repos/nodejs/node/git/commits/5774688e2614ccb89749ea2f523014c6479616aa,2018-12-21,"Implmentation in ``module.exports.globalAgent` is now defined
through `Object.defineProperty`"
19,MDY6Q29tbWl0MjcxOTM3Nzk6NTc3NDY4OGUyNjE0Y2NiODk3NDllYTJmNTIzMDE0YzY0Nzk2MTZhYQ==,Roy Sommer,Anna Henningsen,"lib: support overriding http\s.globalAgent

Overriding `require('http[s]').globalAgent` is now respected by
consequent requests.

In order to achieve that, the following changes were made:

1. Implmentation in `http`: `module.exports.globalAgent` is now defined
through `Object.defineProperty`. Its getter and setter return \ set
`require('_http_agent').globalAgent`.

2. Implementation in `https`: the https `globalAgent` is not the same
as `_http_agent`, and is defined in `https` module itself. Therefore,
the fix here was to simply use `module.exports.globalAgent` to support
mutation.

3. According tests were added for both `http` and `https`, where in
both we create a server, set the default agent to a newly created
instance and make a request to that server. We then assert that the
given instance was actually used by inspecting its sockets property.

Fixes: https://github.com/nodejs/node/issues/23281

PR-URL: https://github.com/nodejs/node/pull/25170
Reviewed-By: James M Snell <jasnell@gmail.com>",https://api.github.com/repos/nodejs/node/git/commits/5774688e2614ccb89749ea2f523014c6479616aa,2018-12-21,"Its getter and setter return \ set
`require('_
2"
19,MDY6Q29tbWl0MjcxOTM3Nzk6NTc3NDY4OGUyNjE0Y2NiODk3NDllYTJmNTIzMDE0YzY0Nzk2MTZhYQ==,Roy Sommer,Anna Henningsen,"lib: support overriding http\s.globalAgent

Overriding `require('http[s]').globalAgent` is now respected by
consequent requests.

In order to achieve that, the following changes were made:

1. Implmentation in `http`: `module.exports.globalAgent` is now defined
through `Object.defineProperty`. Its getter and setter return \ set
`require('_http_agent').globalAgent`.

2. Implementation in `https`: the https `globalAgent` is not the same
as `_http_agent`, and is defined in `https` module itself. Therefore,
the fix here was to simply use `module.exports.globalAgent` to support
mutation.

3. According tests were added for both `http` and `https`, where in
both we create a server, set the default agent to a newly created
instance and make a request to that server. We then assert that the
given instance was actually used by inspecting its sockets property.

Fixes: https://github.com/nodejs/node/issues/23281

PR-URL: https://github.com/nodejs/node/pull/25170
Reviewed-By: James M Snell <jasnell@gmail.com>",https://api.github.com/repos/nodejs/node/git/commits/5774688e2614ccb89749ea2f523014c6479616aa,2018-12-21,"Implementation in `the `globalAgent` is not the same
as `_and is defined in `module itself"
19,MDY6Q29tbWl0MjcxOTM3Nzk6NTc3NDY4OGUyNjE0Y2NiODk3NDllYTJmNTIzMDE0YzY0Nzk2MTZhYQ==,Roy Sommer,Anna Henningsen,"lib: support overriding http\s.globalAgent

Overriding `require('http[s]').globalAgent` is now respected by
consequent requests.

In order to achieve that, the following changes were made:

1. Implmentation in `http`: `module.exports.globalAgent` is now defined
through `Object.defineProperty`. Its getter and setter return \ set
`require('_http_agent').globalAgent`.

2. Implementation in `https`: the https `globalAgent` is not the same
as `_http_agent`, and is defined in `https` module itself. Therefore,
the fix here was to simply use `module.exports.globalAgent` to support
mutation.

3. According tests were added for both `http` and `https`, where in
both we create a server, set the default agent to a newly created
instance and make a request to that server. We then assert that the
given instance was actually used by inspecting its sockets property.

Fixes: https://github.com/nodejs/node/issues/23281

PR-URL: https://github.com/nodejs/node/pull/25170
Reviewed-By: James M Snell <jasnell@gmail.com>",https://api.github.com/repos/nodejs/node/git/commits/5774688e2614ccb89749ea2f523014c6479616aa,2018-12-21,"Therefore,
the fix here was to simply use `module.exports.globalAgent` to support
mutation"
19,MDY6Q29tbWl0MjcxOTM3Nzk6NTc3NDY4OGUyNjE0Y2NiODk3NDllYTJmNTIzMDE0YzY0Nzk2MTZhYQ==,Roy Sommer,Anna Henningsen,"lib: support overriding http\s.globalAgent

Overriding `require('http[s]').globalAgent` is now respected by
consequent requests.

In order to achieve that, the following changes were made:

1. Implmentation in `http`: `module.exports.globalAgent` is now defined
through `Object.defineProperty`. Its getter and setter return \ set
`require('_http_agent').globalAgent`.

2. Implementation in `https`: the https `globalAgent` is not the same
as `_http_agent`, and is defined in `https` module itself. Therefore,
the fix here was to simply use `module.exports.globalAgent` to support
mutation.

3. According tests were added for both `http` and `https`, where in
both we create a server, set the default agent to a newly created
instance and make a request to that server. We then assert that the
given instance was actually used by inspecting its sockets property.

Fixes: https://github.com/nodejs/node/issues/23281

PR-URL: https://github.com/nodejs/node/pull/25170
Reviewed-By: James M Snell <jasnell@gmail.com>",https://api.github.com/repos/nodejs/node/git/commits/5774688e2614ccb89749ea2f523014c6479616aa,2018-12-21,3
19,MDY6Q29tbWl0MjcxOTM3Nzk6NTc3NDY4OGUyNjE0Y2NiODk3NDllYTJmNTIzMDE0YzY0Nzk2MTZhYQ==,Roy Sommer,Anna Henningsen,"lib: support overriding http\s.globalAgent

Overriding `require('http[s]').globalAgent` is now respected by
consequent requests.

In order to achieve that, the following changes were made:

1. Implmentation in `http`: `module.exports.globalAgent` is now defined
through `Object.defineProperty`. Its getter and setter return \ set
`require('_http_agent').globalAgent`.

2. Implementation in `https`: the https `globalAgent` is not the same
as `_http_agent`, and is defined in `https` module itself. Therefore,
the fix here was to simply use `module.exports.globalAgent` to support
mutation.

3. According tests were added for both `http` and `https`, where in
both we create a server, set the default agent to a newly created
instance and make a request to that server. We then assert that the
given instance was actually used by inspecting its sockets property.

Fixes: https://github.com/nodejs/node/issues/23281

PR-URL: https://github.com/nodejs/node/pull/25170
Reviewed-By: James M Snell <jasnell@gmail.com>",https://api.github.com/repos/nodejs/node/git/commits/5774688e2614ccb89749ea2f523014c6479616aa,2018-12-21,"According tests were added for both `and `where in
both we create a server, set the default agent to a newly created
instance and make a request to that server"
19,MDY6Q29tbWl0MjcxOTM3Nzk6NTc3NDY4OGUyNjE0Y2NiODk3NDllYTJmNTIzMDE0YzY0Nzk2MTZhYQ==,Roy Sommer,Anna Henningsen,"lib: support overriding http\s.globalAgent

Overriding `require('http[s]').globalAgent` is now respected by
consequent requests.

In order to achieve that, the following changes were made:

1. Implmentation in `http`: `module.exports.globalAgent` is now defined
through `Object.defineProperty`. Its getter and setter return \ set
`require('_http_agent').globalAgent`.

2. Implementation in `https`: the https `globalAgent` is not the same
as `_http_agent`, and is defined in `https` module itself. Therefore,
the fix here was to simply use `module.exports.globalAgent` to support
mutation.

3. According tests were added for both `http` and `https`, where in
both we create a server, set the default agent to a newly created
instance and make a request to that server. We then assert that the
given instance was actually used by inspecting its sockets property.

Fixes: https://github.com/nodejs/node/issues/23281

PR-URL: https://github.com/nodejs/node/pull/25170
Reviewed-By: James M Snell <jasnell@gmail.com>",https://api.github.com/repos/nodejs/node/git/commits/5774688e2614ccb89749ea2f523014c6479616aa,2018-12-21,"We then assert that the
given instance was actually used by inspecting its sockets property"
19,MDY6Q29tbWl0MjcxOTM3Nzk6NTc3NDY4OGUyNjE0Y2NiODk3NDllYTJmNTIzMDE0YzY0Nzk2MTZhYQ==,Roy Sommer,Anna Henningsen,"lib: support overriding http\s.globalAgent

Overriding `require('http[s]').globalAgent` is now respected by
consequent requests.

In order to achieve that, the following changes were made:

1. Implmentation in `http`: `module.exports.globalAgent` is now defined
through `Object.defineProperty`. Its getter and setter return \ set
`require('_http_agent').globalAgent`.

2. Implementation in `https`: the https `globalAgent` is not the same
as `_http_agent`, and is defined in `https` module itself. Therefore,
the fix here was to simply use `module.exports.globalAgent` to support
mutation.

3. According tests were added for both `http` and `https`, where in
both we create a server, set the default agent to a newly created
instance and make a request to that server. We then assert that the
given instance was actually used by inspecting its sockets property.

Fixes: https://github.com/nodejs/node/issues/23281

PR-URL: https://github.com/nodejs/node/pull/25170
Reviewed-By: James M Snell <jasnell@gmail.com>",https://api.github.com/repos/nodejs/node/git/commits/5774688e2614ccb89749ea2f523014c6479616aa,2018-12-21,"Fixes: 
PR-URL: Reviewed-By: James M Snell <jasnell@gmail.com>"
20,MDY6Q29tbWl0MjcxOTM3Nzk6OWFjMTA4ZDgzNDUzOTEyMjYyNWM4NWJiMGE4OGY1MWE2MmIyMmQzNg==,cjihrig,cjihrig,"http: add maxHeaderSize property

This commit exposes the value of --max-http-header-size
as a property of the http module.

PR-URL: https://github.com/nodejs/node/pull/24860
Reviewed-By: Richard Lau <riclau@uk.ibm.com>
Reviewed-By: Matteo Collina <matteo.collina@gmail.com>
Reviewed-By: Michael Dawson <michael_dawson@ca.ibm.com>
Reviewed-By: Shelley Vohr <codebytere@gmail.com>
Reviewed-By: James M Snell <jasnell@gmail.com>",https://api.github.com/repos/nodejs/node/git/commits/9ac108d834539122625c85bb0a88f51a62b22d36,2018-12-06,add maxHeaderSize property
20,MDY6Q29tbWl0MjcxOTM3Nzk6OWFjMTA4ZDgzNDUzOTEyMjYyNWM4NWJiMGE4OGY1MWE2MmIyMmQzNg==,cjihrig,cjihrig,"http: add maxHeaderSize property

This commit exposes the value of --max-http-header-size
as a property of the http module.

PR-URL: https://github.com/nodejs/node/pull/24860
Reviewed-By: Richard Lau <riclau@uk.ibm.com>
Reviewed-By: Matteo Collina <matteo.collina@gmail.com>
Reviewed-By: Michael Dawson <michael_dawson@ca.ibm.com>
Reviewed-By: Shelley Vohr <codebytere@gmail.com>
Reviewed-By: James M Snell <jasnell@gmail.com>",https://api.github.com/repos/nodejs/node/git/commits/9ac108d834539122625c85bb0a88f51a62b22d36,2018-12-06,This commit exposes the value of --max-as a property of the module
20,MDY6Q29tbWl0MjcxOTM3Nzk6OWFjMTA4ZDgzNDUzOTEyMjYyNWM4NWJiMGE4OGY1MWE2MmIyMmQzNg==,cjihrig,cjihrig,"http: add maxHeaderSize property

This commit exposes the value of --max-http-header-size
as a property of the http module.

PR-URL: https://github.com/nodejs/node/pull/24860
Reviewed-By: Richard Lau <riclau@uk.ibm.com>
Reviewed-By: Matteo Collina <matteo.collina@gmail.com>
Reviewed-By: Michael Dawson <michael_dawson@ca.ibm.com>
Reviewed-By: Shelley Vohr <codebytere@gmail.com>
Reviewed-By: James M Snell <jasnell@gmail.com>",https://api.github.com/repos/nodejs/node/git/commits/9ac108d834539122625c85bb0a88f51a62b22d36,2018-12-06,"PR-URL: Reviewed-By: Richard Lau <riclau@uk.ibm.com>
Reviewed-By: Matteo Collina <matteo.collina@gmail.com>
Reviewed-By: Michael Dawson <michael_dawson@ca.ibm.com>
Reviewed-By: Shelley Vohr <codebytere@gmail.com>
Reviewed-By: James M Snell <jasnell@gmail.com>"
21,MDY6Q29tbWl0MjcxOTM3Nzk6ZjliNzM5ZWJiY2I3N2JjNWEwZmM4ZTNkMjBhZDJlYWUzMjg1YjAzOQ==,Sam Ruby,Matteo Collina,"http: allow url and options to be passed to http*.request and http*.get

Fixes: https://github.com/nodejs/node/issues/20795
PR-URL: https://github.com/nodejs/node/pull/21616
Reviewed-By: Tiancheng ""Timothy"" Gu <timothygu99@gmail.com>
Reviewed-By: Ron Korving <ron@ronkorving.nl>
Reviewed-By: James M Snell <jasnell@gmail.com>
Reviewed-By: Matteo Collina <matteo.collina@gmail.com>",https://api.github.com/repos/nodejs/node/git/commits/f9b739ebbcb77bc5a0fc8e3d20ad2eae3285b039,2018-07-01,allow url and options to be passed to and 
21,MDY6Q29tbWl0MjcxOTM3Nzk6ZjliNzM5ZWJiY2I3N2JjNWEwZmM4ZTNkMjBhZDJlYWUzMjg1YjAzOQ==,Sam Ruby,Matteo Collina,"http: allow url and options to be passed to http*.request and http*.get

Fixes: https://github.com/nodejs/node/issues/20795
PR-URL: https://github.com/nodejs/node/pull/21616
Reviewed-By: Tiancheng ""Timothy"" Gu <timothygu99@gmail.com>
Reviewed-By: Ron Korving <ron@ronkorving.nl>
Reviewed-By: James M Snell <jasnell@gmail.com>
Reviewed-By: Matteo Collina <matteo.collina@gmail.com>",https://api.github.com/repos/nodejs/node/git/commits/f9b739ebbcb77bc5a0fc8e3d20ad2eae3285b039,2018-07-01,"Fixes: PR-URL: Reviewed-By: Tiancheng ""Timothy"" Gu <timothygu99@gmail.com>
Reviewed-By: Ron Korving <ron@ronkorving.nl>
Reviewed-By: James M Snell <jasnell@gmail.com>
Reviewed-By: Matteo Collina <matteo.collina@gmail.com>"
22,MDY6Q29tbWl0MjcxOTM3Nzk6NDJkOGVhMDIyMDFmOTc0NTBjNzEyOGYxMDJiYWFkNjdjNmU1NGQ5ZQ==,Wes Todd,Tobias Nießen,"http: support server options on createServer

PR-URL: https://github.com/nodejs/node/pull/19461
Reviewed-By: Anna Henningsen <anna@addaleax.net>
Reviewed-By: Evan Lucas <evanlucas@me.com>
Reviewed-By: Luigi Pinca <luigipinca@gmail.com>
Reviewed-By: James M Snell <jasnell@gmail.com>",https://api.github.com/repos/nodejs/node/git/commits/42d8ea02201f97450c7128f102baad67c6e54d9e,2018-03-19,support server options on createServer
22,MDY6Q29tbWl0MjcxOTM3Nzk6NDJkOGVhMDIyMDFmOTc0NTBjNzEyOGYxMDJiYWFkNjdjNmU1NGQ5ZQ==,Wes Todd,Tobias Nießen,"http: support server options on createServer

PR-URL: https://github.com/nodejs/node/pull/19461
Reviewed-By: Anna Henningsen <anna@addaleax.net>
Reviewed-By: Evan Lucas <evanlucas@me.com>
Reviewed-By: Luigi Pinca <luigipinca@gmail.com>
Reviewed-By: James M Snell <jasnell@gmail.com>",https://api.github.com/repos/nodejs/node/git/commits/42d8ea02201f97450c7128f102baad67c6e54d9e,2018-03-19,"PR-URL: Reviewed-By: Anna Henningsen <anna@addaleax.net>
Reviewed-By: Evan Lucas <evanlucas@me.com>
Reviewed-By: Luigi Pinca <luigipinca@gmail.com>
Reviewed-By: James M Snell <jasnell@gmail.com>"
23,MDY6Q29tbWl0MjcxOTM3Nzk6ZTcxNGRhNmYwYWJkZjBiN2MxZDc4YmUzNjRjYTczNDIyNDZkYTc0Zg==,Tobias Nießen,Tobias Nießen,"http: use more destructuring

PR-URL: https://github.com/nodejs/node/pull/19481
Reviewed-By: James M Snell <jasnell@gmail.com>
Reviewed-By: Colin Ihrig <cjihrig@gmail.com>
Reviewed-By: Jackson Tian <shyvo1987@gmail.com>
Reviewed-By: Luigi Pinca <luigipinca@gmail.com>",https://api.github.com/repos/nodejs/node/git/commits/e714da6f0abdf0b7c1d78be364ca7342246da74f,2018-03-20,use more destructuring
23,MDY6Q29tbWl0MjcxOTM3Nzk6ZTcxNGRhNmYwYWJkZjBiN2MxZDc4YmUzNjRjYTczNDIyNDZkYTc0Zg==,Tobias Nießen,Tobias Nießen,"http: use more destructuring

PR-URL: https://github.com/nodejs/node/pull/19481
Reviewed-By: James M Snell <jasnell@gmail.com>
Reviewed-By: Colin Ihrig <cjihrig@gmail.com>
Reviewed-By: Jackson Tian <shyvo1987@gmail.com>
Reviewed-By: Luigi Pinca <luigipinca@gmail.com>",https://api.github.com/repos/nodejs/node/git/commits/e714da6f0abdf0b7c1d78be364ca7342246da74f,2018-03-20,"PR-URL: Reviewed-By: James M Snell <jasnell@gmail.com>
Reviewed-By: Colin Ihrig <cjihrig@gmail.com>
Reviewed-By: Jackson Tian <shyvo1987@gmail.com>
Reviewed-By: Luigi Pinca <luigipinca@gmail.com>"
24,MDY6Q29tbWl0MjcxOTM3Nzk6MjEyZGUzYzVlYzQyOWE1ODBkMmU3OWNlM2MyNTE2YjkzYjUyYjhmNQ==,Weijia Wang,Tobias Nießen,"lib: use destructuring for some constants

This change is to unify the declaration for constants into using
destructuring on the top-level-module scope, reducing some redundant
code.

PR-URL: https://github.com/nodejs/node/pull/16063
Reviewed-By: James M Snell <jasnell@gmail.com>
Reviewed-By: Anna Henningsen <anna@addaleax.net>
Reviewed-By: Tobias Nießen <tniessen@tnie.de>
Reviewed-By: Ruben Bridgewater <ruben@bridgewater.de>
Reviewed-By: Gibson Fahnestock <gibfahn@gmail.com>",https://api.github.com/repos/nodejs/node/git/commits/212de3c5ec429a580d2e79ce3c2516b93b52b8f5,2017-10-07,lib: use destructuring for some constants
24,MDY6Q29tbWl0MjcxOTM3Nzk6MjEyZGUzYzVlYzQyOWE1ODBkMmU3OWNlM2MyNTE2YjkzYjUyYjhmNQ==,Weijia Wang,Tobias Nießen,"lib: use destructuring for some constants

This change is to unify the declaration for constants into using
destructuring on the top-level-module scope, reducing some redundant
code.

PR-URL: https://github.com/nodejs/node/pull/16063
Reviewed-By: James M Snell <jasnell@gmail.com>
Reviewed-By: Anna Henningsen <anna@addaleax.net>
Reviewed-By: Tobias Nießen <tniessen@tnie.de>
Reviewed-By: Ruben Bridgewater <ruben@bridgewater.de>
Reviewed-By: Gibson Fahnestock <gibfahn@gmail.com>",https://api.github.com/repos/nodejs/node/git/commits/212de3c5ec429a580d2e79ce3c2516b93b52b8f5,2017-10-07,"This change is to unify the declaration for constants into using
destructuring on the top-level-module scope, reducing some redundant
code"
24,MDY6Q29tbWl0MjcxOTM3Nzk6MjEyZGUzYzVlYzQyOWE1ODBkMmU3OWNlM2MyNTE2YjkzYjUyYjhmNQ==,Weijia Wang,Tobias Nießen,"lib: use destructuring for some constants

This change is to unify the declaration for constants into using
destructuring on the top-level-module scope, reducing some redundant
code.

PR-URL: https://github.com/nodejs/node/pull/16063
Reviewed-By: James M Snell <jasnell@gmail.com>
Reviewed-By: Anna Henningsen <anna@addaleax.net>
Reviewed-By: Tobias Nießen <tniessen@tnie.de>
Reviewed-By: Ruben Bridgewater <ruben@bridgewater.de>
Reviewed-By: Gibson Fahnestock <gibfahn@gmail.com>",https://api.github.com/repos/nodejs/node/git/commits/212de3c5ec429a580d2e79ce3c2516b93b52b8f5,2017-10-07,"PR-URL: Reviewed-By: James M Snell <jasnell@gmail.com>
Reviewed-By: Anna Henningsen <anna@addaleax.net>
Reviewed-By: Tobias Nießen <tniessen@tnie.de>
Reviewed-By: Ruben Bridgewater <ruben@bridgewater.de>
Reviewed-By: Gibson Fahnestock <gibfahn@gmail.com>"
25,MDY6Q29tbWl0MjcxOTM3Nzk6NTQyNWUwZGNiZWUxZWQ4ZjY2ODcyMDNlYWZiN2MzY2YyMTRmMzM5Mw==,James M Snell,James M Snell,"http: use more efficient module.exports pattern

PR-URL: https://github.com/nodejs/node/pull/11594
Reviewed-By: Colin Ihrig <cjihrig@gmail.com>
Reviewed-By: Sakthipriyan Vairamani <thechargingvolcano@gmail.com>
Reviewed-By: Matteo Collina <matteo.collina@gmail.com>",https://api.github.com/repos/nodejs/node/git/commits/5425e0dcbee1ed8f6687203eafb7c3cf214f3393,2017-02-28,use more efficient module.exports pattern
25,MDY6Q29tbWl0MjcxOTM3Nzk6NTQyNWUwZGNiZWUxZWQ4ZjY2ODcyMDNlYWZiN2MzY2YyMTRmMzM5Mw==,James M Snell,James M Snell,"http: use more efficient module.exports pattern

PR-URL: https://github.com/nodejs/node/pull/11594
Reviewed-By: Colin Ihrig <cjihrig@gmail.com>
Reviewed-By: Sakthipriyan Vairamani <thechargingvolcano@gmail.com>
Reviewed-By: Matteo Collina <matteo.collina@gmail.com>",https://api.github.com/repos/nodejs/node/git/commits/5425e0dcbee1ed8f6687203eafb7c3cf214f3393,2017-02-28,"PR-URL: Reviewed-By: Colin Ihrig <cjihrig@gmail.com>
Reviewed-By: Sakthipriyan Vairamani <thechargingvolcano@gmail.com>
Reviewed-By: Matteo Collina <matteo.collina@gmail.com>"
26,MDY6Q29tbWl0MjcxOTM3Nzk6OThlNTRiMGJkNDg1NGJkYjNlMjk0OWQxYjZiMjBkNjc3N2ZiN2NkZQ==,James M Snell,James M Snell,"meta: restore original copyright header

A prior io.js era commit inappropriately removed the
original copyright statements from the source. This
restores those in any files still remaining from that
edit.

Ref: https://github.com/nodejs/TSC/issues/174
Ref: https://github.com/nodejs/node/pull/10599
PR-URL: https://github.com/nodejs/node/pull/10155

Note: This PR was required, reviewed-by and approved
by the Node.js Foundation Legal Committee and the TSC.
There is no `Approved-By:` meta data.",https://api.github.com/repos/nodejs/node/git/commits/98e54b0bd4854bdb3e2949d1b6b20d6777fb7cde,2017-01-03,meta: restore original copyright header
26,MDY6Q29tbWl0MjcxOTM3Nzk6OThlNTRiMGJkNDg1NGJkYjNlMjk0OWQxYjZiMjBkNjc3N2ZiN2NkZQ==,James M Snell,James M Snell,"meta: restore original copyright header

A prior io.js era commit inappropriately removed the
original copyright statements from the source. This
restores those in any files still remaining from that
edit.

Ref: https://github.com/nodejs/TSC/issues/174
Ref: https://github.com/nodejs/node/pull/10599
PR-URL: https://github.com/nodejs/node/pull/10155

Note: This PR was required, reviewed-by and approved
by the Node.js Foundation Legal Committee and the TSC.
There is no `Approved-By:` meta data.",https://api.github.com/repos/nodejs/node/git/commits/98e54b0bd4854bdb3e2949d1b6b20d6777fb7cde,2017-01-03,"A prior io.js era commit inappropriately removed the
original copyright statements from the source"
26,MDY6Q29tbWl0MjcxOTM3Nzk6OThlNTRiMGJkNDg1NGJkYjNlMjk0OWQxYjZiMjBkNjc3N2ZiN2NkZQ==,James M Snell,James M Snell,"meta: restore original copyright header

A prior io.js era commit inappropriately removed the
original copyright statements from the source. This
restores those in any files still remaining from that
edit.

Ref: https://github.com/nodejs/TSC/issues/174
Ref: https://github.com/nodejs/node/pull/10599
PR-URL: https://github.com/nodejs/node/pull/10155

Note: This PR was required, reviewed-by and approved
by the Node.js Foundation Legal Committee and the TSC.
There is no `Approved-By:` meta data.",https://api.github.com/repos/nodejs/node/git/commits/98e54b0bd4854bdb3e2949d1b6b20d6777fb7cde,2017-01-03,"This
restores those in any files still remaining from that
edit"
26,MDY6Q29tbWl0MjcxOTM3Nzk6OThlNTRiMGJkNDg1NGJkYjNlMjk0OWQxYjZiMjBkNjc3N2ZiN2NkZQ==,James M Snell,James M Snell,"meta: restore original copyright header

A prior io.js era commit inappropriately removed the
original copyright statements from the source. This
restores those in any files still remaining from that
edit.

Ref: https://github.com/nodejs/TSC/issues/174
Ref: https://github.com/nodejs/node/pull/10599
PR-URL: https://github.com/nodejs/node/pull/10155

Note: This PR was required, reviewed-by and approved
by the Node.js Foundation Legal Committee and the TSC.
There is no `Approved-By:` meta data.",https://api.github.com/repos/nodejs/node/git/commits/98e54b0bd4854bdb3e2949d1b6b20d6777fb7cde,2017-01-03,"Ref: Ref: PR-URL: 
Note: This PR was required, reviewed-by and approved
by the Node.js Foundation Legal Committee and the TSC"
26,MDY6Q29tbWl0MjcxOTM3Nzk6OThlNTRiMGJkNDg1NGJkYjNlMjk0OWQxYjZiMjBkNjc3N2ZiN2NkZQ==,James M Snell,James M Snell,"meta: restore original copyright header

A prior io.js era commit inappropriately removed the
original copyright statements from the source. This
restores those in any files still remaining from that
edit.

Ref: https://github.com/nodejs/TSC/issues/174
Ref: https://github.com/nodejs/node/pull/10599
PR-URL: https://github.com/nodejs/node/pull/10155

Note: This PR was required, reviewed-by and approved
by the Node.js Foundation Legal Committee and the TSC.
There is no `Approved-By:` meta data.",https://api.github.com/repos/nodejs/node/git/commits/98e54b0bd4854bdb3e2949d1b6b20d6777fb7cde,2017-01-03,There is no `Approved-By:` meta data.
27,MDY6Q29tbWl0MjcxOTM3Nzk6YWNjZjQxMGViMDk5MjYyOGI0YWFiM2MxMzkyNDJhNDA5ODc0YTRmYg==,maasencioh,James M Snell,"http: name anonymous functions in http

Refs: https://github.com/nodejs/node/issues/8913
PR-URL: https://github.com/nodejs/node/pull/9055
Reviewed-By: James M Snell <jasnell@gmail.com>
Reviewed-By: Luigi Pinca <luigipinca@gmail.com>
Reviewed-By: Franziska Hinkelmann <franziska.hinkelmann@gmail.com>
Reviewed-By: Michaël Zasso <targos@protonmail.com>",https://api.github.com/repos/nodejs/node/git/commits/accf410eb0992628b4aab3c139242a409874a4fb,2016-10-13,name anonymous functions in 
27,MDY6Q29tbWl0MjcxOTM3Nzk6YWNjZjQxMGViMDk5MjYyOGI0YWFiM2MxMzkyNDJhNDA5ODc0YTRmYg==,maasencioh,James M Snell,"http: name anonymous functions in http

Refs: https://github.com/nodejs/node/issues/8913
PR-URL: https://github.com/nodejs/node/pull/9055
Reviewed-By: James M Snell <jasnell@gmail.com>
Reviewed-By: Luigi Pinca <luigipinca@gmail.com>
Reviewed-By: Franziska Hinkelmann <franziska.hinkelmann@gmail.com>
Reviewed-By: Michaël Zasso <targos@protonmail.com>",https://api.github.com/repos/nodejs/node/git/commits/accf410eb0992628b4aab3c139242a409874a4fb,2016-10-13,"Refs: PR-URL: Reviewed-By: James M Snell <jasnell@gmail.com>
Reviewed-By: Luigi Pinca <luigipinca@gmail.com>
Reviewed-By: Franziska Hinkelmann <franziska.hinkelmann@gmail.com>
Reviewed-By: Michaël Zasso <targos@protonmail.com>"
28,MDY6Q29tbWl0MjcxOTM3Nzk6MmNjN2ZhNWU3ZGFiZGYxMGJmMjZlZmM0YWI4ZGJmZmQzNmRiYTIzZQ==,Brian White,Brian White,"http: remove deprecated Client interface

PR-URL: https://github.com/nodejs/node/pull/8104
Reviewed-By: James M Snell <jasnell@gmail.com>
Reviewed-By: Ben Noordhuis <info@bnoordhuis.nl>
Reviewed-By: Colin Ihrig <cjihrig@gmail.com>",https://api.github.com/repos/nodejs/node/git/commits/2cc7fa5e7dabdf10bf26efc4ab8dbffd36dba23e,2016-08-14,remove deprecated Client interface
28,MDY6Q29tbWl0MjcxOTM3Nzk6MmNjN2ZhNWU3ZGFiZGYxMGJmMjZlZmM0YWI4ZGJmZmQzNmRiYTIzZQ==,Brian White,Brian White,"http: remove deprecated Client interface

PR-URL: https://github.com/nodejs/node/pull/8104
Reviewed-By: James M Snell <jasnell@gmail.com>
Reviewed-By: Ben Noordhuis <info@bnoordhuis.nl>
Reviewed-By: Colin Ihrig <cjihrig@gmail.com>",https://api.github.com/repos/nodejs/node/git/commits/2cc7fa5e7dabdf10bf26efc4ab8dbffd36dba23e,2016-08-14,"PR-URL: Reviewed-By: James M Snell <jasnell@gmail.com>
Reviewed-By: Ben Noordhuis <info@bnoordhuis.nl>
Reviewed-By: Colin Ihrig <cjihrig@gmail.com>"
29,MDY6Q29tbWl0MjcxOTM3Nzk6ZjMyYTYwNmUzNzNhZDU3ZjY4NGIwZTUxMWQ2ZDZlNGNiZDQ4YTgxMg==,Sakthipriyan Vairamani,Sakthipriyan Vairamani,"lib,src: remove usage of events.EventEmitter

The `events` module already exports `EventEmitter` constructor function
So, we don't have to use `events.EventEmitter` to access it.

Refer: https://github.com/nodejs/node/pull/2896

PR-URL: https://github.com/nodejs/node/pull/2921
Reviewed-By: Roman Reiss <me@silverwind.io>
Reviewed-By: Michaël Zasso <mic.besace@gmail.com>",https://api.github.com/repos/nodejs/node/git/commits/f32a606e373ad57f684b0e511d6d6e4cbd48a812,2015-09-16,"lib,src: remove usage of events.EventEmitter"
29,MDY6Q29tbWl0MjcxOTM3Nzk6ZjMyYTYwNmUzNzNhZDU3ZjY4NGIwZTUxMWQ2ZDZlNGNiZDQ4YTgxMg==,Sakthipriyan Vairamani,Sakthipriyan Vairamani,"lib,src: remove usage of events.EventEmitter

The `events` module already exports `EventEmitter` constructor function
So, we don't have to use `events.EventEmitter` to access it.

Refer: https://github.com/nodejs/node/pull/2896

PR-URL: https://github.com/nodejs/node/pull/2921
Reviewed-By: Roman Reiss <me@silverwind.io>
Reviewed-By: Michaël Zasso <mic.besace@gmail.com>",https://api.github.com/repos/nodejs/node/git/commits/f32a606e373ad57f684b0e511d6d6e4cbd48a812,2015-09-16,"The `events` module already exports `EventEmitter` constructor function
So, we don't have to use `events.EventEmitter` to access it"
29,MDY6Q29tbWl0MjcxOTM3Nzk6ZjMyYTYwNmUzNzNhZDU3ZjY4NGIwZTUxMWQ2ZDZlNGNiZDQ4YTgxMg==,Sakthipriyan Vairamani,Sakthipriyan Vairamani,"lib,src: remove usage of events.EventEmitter

The `events` module already exports `EventEmitter` constructor function
So, we don't have to use `events.EventEmitter` to access it.

Refer: https://github.com/nodejs/node/pull/2896

PR-URL: https://github.com/nodejs/node/pull/2921
Reviewed-By: Roman Reiss <me@silverwind.io>
Reviewed-By: Michaël Zasso <mic.besace@gmail.com>",https://api.github.com/repos/nodejs/node/git/commits/f32a606e373ad57f684b0e511d6d6e4cbd48a812,2015-09-16,"Refer: 
PR-URL: Reviewed-By: Roman Reiss <me@silverwind.io>
Reviewed-By: Michaël Zasso <mic.besace@gmail.com>"
30,MDY6Q29tbWl0MjcxOTM3Nzk6OWNkNDRiYjJiNjgzNDQ2NTMxMzA2YmJjZmY4NzM5ZmMzNTI2ZDAyYw==,Sakthipriyan Vairamani,Roman Reiss,"util: prepend '(node) ' to deprecation messages

Changes included in this commit are

   1. Making the deprecation messages consistent. The messages will be in
      the following format

           x is deprecated. Use y instead.

      If there is no alternative for `x`, then the ` Use y instead.` part
      will not be there in the message.

   2. All the internal deprecation messages are printed with the prefix
      `(node) `, except when the `--trace-deprecation` flag is set.

Fixes: https://github.com/nodejs/io.js/issues/1883
PR-URL: https://github.com/nodejs/io.js/pull/1892
Reviewed-By: Roman Reiss <me@silverwind.io>",https://api.github.com/repos/nodejs/node/git/commits/9cd44bb2b683446531306bbcff8739fc3526d02c,2015-06-13,util: prepend '(node) ' to deprecation messages
30,MDY6Q29tbWl0MjcxOTM3Nzk6OWNkNDRiYjJiNjgzNDQ2NTMxMzA2YmJjZmY4NzM5ZmMzNTI2ZDAyYw==,Sakthipriyan Vairamani,Roman Reiss,"util: prepend '(node) ' to deprecation messages

Changes included in this commit are

   1. Making the deprecation messages consistent. The messages will be in
      the following format

           x is deprecated. Use y instead.

      If there is no alternative for `x`, then the ` Use y instead.` part
      will not be there in the message.

   2. All the internal deprecation messages are printed with the prefix
      `(node) `, except when the `--trace-deprecation` flag is set.

Fixes: https://github.com/nodejs/io.js/issues/1883
PR-URL: https://github.com/nodejs/io.js/pull/1892
Reviewed-By: Roman Reiss <me@silverwind.io>",https://api.github.com/repos/nodejs/node/git/commits/9cd44bb2b683446531306bbcff8739fc3526d02c,2015-06-13,"Changes included in this commit are
   1"
30,MDY6Q29tbWl0MjcxOTM3Nzk6OWNkNDRiYjJiNjgzNDQ2NTMxMzA2YmJjZmY4NzM5ZmMzNTI2ZDAyYw==,Sakthipriyan Vairamani,Roman Reiss,"util: prepend '(node) ' to deprecation messages

Changes included in this commit are

   1. Making the deprecation messages consistent. The messages will be in
      the following format

           x is deprecated. Use y instead.

      If there is no alternative for `x`, then the ` Use y instead.` part
      will not be there in the message.

   2. All the internal deprecation messages are printed with the prefix
      `(node) `, except when the `--trace-deprecation` flag is set.

Fixes: https://github.com/nodejs/io.js/issues/1883
PR-URL: https://github.com/nodejs/io.js/pull/1892
Reviewed-By: Roman Reiss <me@silverwind.io>",https://api.github.com/repos/nodejs/node/git/commits/9cd44bb2b683446531306bbcff8739fc3526d02c,2015-06-13,Making the deprecation messages consistent
30,MDY6Q29tbWl0MjcxOTM3Nzk6OWNkNDRiYjJiNjgzNDQ2NTMxMzA2YmJjZmY4NzM5ZmMzNTI2ZDAyYw==,Sakthipriyan Vairamani,Roman Reiss,"util: prepend '(node) ' to deprecation messages

Changes included in this commit are

   1. Making the deprecation messages consistent. The messages will be in
      the following format

           x is deprecated. Use y instead.

      If there is no alternative for `x`, then the ` Use y instead.` part
      will not be there in the message.

   2. All the internal deprecation messages are printed with the prefix
      `(node) `, except when the `--trace-deprecation` flag is set.

Fixes: https://github.com/nodejs/io.js/issues/1883
PR-URL: https://github.com/nodejs/io.js/pull/1892
Reviewed-By: Roman Reiss <me@silverwind.io>",https://api.github.com/repos/nodejs/node/git/commits/9cd44bb2b683446531306bbcff8739fc3526d02c,2015-06-13,"The messages will be in
      the following format
           x is deprecated"
30,MDY6Q29tbWl0MjcxOTM3Nzk6OWNkNDRiYjJiNjgzNDQ2NTMxMzA2YmJjZmY4NzM5ZmMzNTI2ZDAyYw==,Sakthipriyan Vairamani,Roman Reiss,"util: prepend '(node) ' to deprecation messages

Changes included in this commit are

   1. Making the deprecation messages consistent. The messages will be in
      the following format

           x is deprecated. Use y instead.

      If there is no alternative for `x`, then the ` Use y instead.` part
      will not be there in the message.

   2. All the internal deprecation messages are printed with the prefix
      `(node) `, except when the `--trace-deprecation` flag is set.

Fixes: https://github.com/nodejs/io.js/issues/1883
PR-URL: https://github.com/nodejs/io.js/pull/1892
Reviewed-By: Roman Reiss <me@silverwind.io>",https://api.github.com/repos/nodejs/node/git/commits/9cd44bb2b683446531306bbcff8739fc3526d02c,2015-06-13,Use y instead
30,MDY6Q29tbWl0MjcxOTM3Nzk6OWNkNDRiYjJiNjgzNDQ2NTMxMzA2YmJjZmY4NzM5ZmMzNTI2ZDAyYw==,Sakthipriyan Vairamani,Roman Reiss,"util: prepend '(node) ' to deprecation messages

Changes included in this commit are

   1. Making the deprecation messages consistent. The messages will be in
      the following format

           x is deprecated. Use y instead.

      If there is no alternative for `x`, then the ` Use y instead.` part
      will not be there in the message.

   2. All the internal deprecation messages are printed with the prefix
      `(node) `, except when the `--trace-deprecation` flag is set.

Fixes: https://github.com/nodejs/io.js/issues/1883
PR-URL: https://github.com/nodejs/io.js/pull/1892
Reviewed-By: Roman Reiss <me@silverwind.io>",https://api.github.com/repos/nodejs/node/git/commits/9cd44bb2b683446531306bbcff8739fc3526d02c,2015-06-13,"      If there is no alternative for `x`, then the ` Use y instead.` part
      will not be there in the message"
30,MDY6Q29tbWl0MjcxOTM3Nzk6OWNkNDRiYjJiNjgzNDQ2NTMxMzA2YmJjZmY4NzM5ZmMzNTI2ZDAyYw==,Sakthipriyan Vairamani,Roman Reiss,"util: prepend '(node) ' to deprecation messages

Changes included in this commit are

   1. Making the deprecation messages consistent. The messages will be in
      the following format

           x is deprecated. Use y instead.

      If there is no alternative for `x`, then the ` Use y instead.` part
      will not be there in the message.

   2. All the internal deprecation messages are printed with the prefix
      `(node) `, except when the `--trace-deprecation` flag is set.

Fixes: https://github.com/nodejs/io.js/issues/1883
PR-URL: https://github.com/nodejs/io.js/pull/1892
Reviewed-By: Roman Reiss <me@silverwind.io>",https://api.github.com/repos/nodejs/node/git/commits/9cd44bb2b683446531306bbcff8739fc3526d02c,2015-06-13,   2
30,MDY6Q29tbWl0MjcxOTM3Nzk6OWNkNDRiYjJiNjgzNDQ2NTMxMzA2YmJjZmY4NzM5ZmMzNTI2ZDAyYw==,Sakthipriyan Vairamani,Roman Reiss,"util: prepend '(node) ' to deprecation messages

Changes included in this commit are

   1. Making the deprecation messages consistent. The messages will be in
      the following format

           x is deprecated. Use y instead.

      If there is no alternative for `x`, then the ` Use y instead.` part
      will not be there in the message.

   2. All the internal deprecation messages are printed with the prefix
      `(node) `, except when the `--trace-deprecation` flag is set.

Fixes: https://github.com/nodejs/io.js/issues/1883
PR-URL: https://github.com/nodejs/io.js/pull/1892
Reviewed-By: Roman Reiss <me@silverwind.io>",https://api.github.com/repos/nodejs/node/git/commits/9cd44bb2b683446531306bbcff8739fc3526d02c,2015-06-13,"All the internal deprecation messages are printed with the prefix
      `(node) `, except when the `--trace-deprecation` flag is set"
30,MDY6Q29tbWl0MjcxOTM3Nzk6OWNkNDRiYjJiNjgzNDQ2NTMxMzA2YmJjZmY4NzM5ZmMzNTI2ZDAyYw==,Sakthipriyan Vairamani,Roman Reiss,"util: prepend '(node) ' to deprecation messages

Changes included in this commit are

   1. Making the deprecation messages consistent. The messages will be in
      the following format

           x is deprecated. Use y instead.

      If there is no alternative for `x`, then the ` Use y instead.` part
      will not be there in the message.

   2. All the internal deprecation messages are printed with the prefix
      `(node) `, except when the `--trace-deprecation` flag is set.

Fixes: https://github.com/nodejs/io.js/issues/1883
PR-URL: https://github.com/nodejs/io.js/pull/1892
Reviewed-By: Roman Reiss <me@silverwind.io>",https://api.github.com/repos/nodejs/node/git/commits/9cd44bb2b683446531306bbcff8739fc3526d02c,2015-06-13,Fixes: PR-URL: Reviewed-By: Roman Reiss <me@silverwind.io>
31,MDY6Q29tbWl0MjcxOTM3Nzk6M2U2N2Q3ZTQ2YjgwYzkwZmFhMzYwZDFkMGU0NGRhY2M0NDRlOGU0Zg==,Jonathan Ong,Stephen Belanger,"http: replace util._extend() with [].slice()

PR-URL: https://github.com/iojs/io.js/pull/634
Reviewed-BY: Nicu Micleușanu <micnic90@gmail.com>
Reviewed-By: Ben Noordhuis <info@bnoordhuis.nl>
Reviewed-By: Stephen Belanger <admin@stephenbelanger.com>",https://api.github.com/repos/nodejs/node/git/commits/3e67d7e46b80c90faa360d1d0e44dacc444e8e4f,2015-01-28,replace util._extend() with [].slice()
31,MDY6Q29tbWl0MjcxOTM3Nzk6M2U2N2Q3ZTQ2YjgwYzkwZmFhMzYwZDFkMGU0NGRhY2M0NDRlOGU0Zg==,Jonathan Ong,Stephen Belanger,"http: replace util._extend() with [].slice()

PR-URL: https://github.com/iojs/io.js/pull/634
Reviewed-BY: Nicu Micleușanu <micnic90@gmail.com>
Reviewed-By: Ben Noordhuis <info@bnoordhuis.nl>
Reviewed-By: Stephen Belanger <admin@stephenbelanger.com>",https://api.github.com/repos/nodejs/node/git/commits/3e67d7e46b80c90faa360d1d0e44dacc444e8e4f,2015-01-28,"PR-URL: Reviewed-BY: Nicu Micleușanu <micnic90@gmail.com>
Reviewed-By: Ben Noordhuis <info@bnoordhuis.nl>
Reviewed-By: Stephen Belanger <admin@stephenbelanger.com>"
32,MDY6Q29tbWl0MjcxOTM3Nzk6ODA0ZTdhYTlhYjBiMzRmYTg4NzA5ZWYwOTgwYjk2MGFiY2E1ZTA1OQ==,cjihrig,cjihrig,"lib: use const to define constants

This commit replaces a number of var statements throughout
the lib code with const statements.

PR-URL: https://github.com/iojs/io.js/pull/541
Reviewed-By: Ben Noordhuis <info@bnoordhuis.nl>",https://api.github.com/repos/nodejs/node/git/commits/804e7aa9ab0b34fa88709ef0980b960abca5e059,2015-01-21,lib: use const to define constants
32,MDY6Q29tbWl0MjcxOTM3Nzk6ODA0ZTdhYTlhYjBiMzRmYTg4NzA5ZWYwOTgwYjk2MGFiY2E1ZTA1OQ==,cjihrig,cjihrig,"lib: use const to define constants

This commit replaces a number of var statements throughout
the lib code with const statements.

PR-URL: https://github.com/iojs/io.js/pull/541
Reviewed-By: Ben Noordhuis <info@bnoordhuis.nl>",https://api.github.com/repos/nodejs/node/git/commits/804e7aa9ab0b34fa88709ef0980b960abca5e059,2015-01-21,"This commit replaces a number of var statements throughout
the lib code with const statements"
32,MDY6Q29tbWl0MjcxOTM3Nzk6ODA0ZTdhYTlhYjBiMzRmYTg4NzA5ZWYwOTgwYjk2MGFiY2E1ZTA1OQ==,cjihrig,cjihrig,"lib: use const to define constants

This commit replaces a number of var statements throughout
the lib code with const statements.

PR-URL: https://github.com/iojs/io.js/pull/541
Reviewed-By: Ben Noordhuis <info@bnoordhuis.nl>",https://api.github.com/repos/nodejs/node/git/commits/804e7aa9ab0b34fa88709ef0980b960abca5e059,2015-01-21,PR-URL: Reviewed-By: Ben Noordhuis <info@bnoordhuis.nl>
33,MDY6Q29tbWl0MjcxOTM3Nzk6M2UxYjFkZDRhOWFjMDQ4MTA1YTRkYzRjZDgxNTc4ZTI2ZDM5YTFmYw==,isaacs,isaacs,"Remove excessive copyright/license boilerplate

The copyright and license notice is already in the LICENSE file.  There
is no justifiable reason to also require that it be included in every
file, since the individual files are not individually distributed except
as part of the entire package.",https://api.github.com/repos/nodejs/node/git/commits/3e1b1dd4a9ac048105a4dc4cd81578e26d39a1fc,2015-01-12,Remove excessive copyright/license boilerplate
33,MDY6Q29tbWl0MjcxOTM3Nzk6M2UxYjFkZDRhOWFjMDQ4MTA1YTRkYzRjZDgxNTc4ZTI2ZDM5YTFmYw==,isaacs,isaacs,"Remove excessive copyright/license boilerplate

The copyright and license notice is already in the LICENSE file.  There
is no justifiable reason to also require that it be included in every
file, since the individual files are not individually distributed except
as part of the entire package.",https://api.github.com/repos/nodejs/node/git/commits/3e1b1dd4a9ac048105a4dc4cd81578e26d39a1fc,2015-01-12,The copyright and license notice is already in the LICENSE file
33,MDY6Q29tbWl0MjcxOTM3Nzk6M2UxYjFkZDRhOWFjMDQ4MTA1YTRkYzRjZDgxNTc4ZTI2ZDM5YTFmYw==,isaacs,isaacs,"Remove excessive copyright/license boilerplate

The copyright and license notice is already in the LICENSE file.  There
is no justifiable reason to also require that it be included in every
file, since the individual files are not individually distributed except
as part of the entire package.",https://api.github.com/repos/nodejs/node/git/commits/3e1b1dd4a9ac048105a4dc4cd81578e26d39a1fc,2015-01-12," There
is no justifiable reason to also require that it be included in every
file, since the individual files are not individually distributed except
as part of the entire package."
34,MDY6Q29tbWl0MjcxOTM3Nzk6MjExMzBjN2Q2ZmNhZWU2NjZmMzM3MzU3NjhjMDYwYmUyZTA2NjE0YQ==,Ben Noordhuis,Ben Noordhuis,"lib: turn on strict mode

Turn on strict mode for the files in the lib/ directory.  It helps
catch bugs and can have a positive effect on performance.

PR-URL: https://github.com/node-forward/node/pull/64
Reviewed-By: Colin Ihrig <cjihrig@gmail.com>
Reviewed-By: Fedor Indutny <fedor@indutny.com>",https://api.github.com/repos/nodejs/node/git/commits/21130c7d6fcaee666f33735768c060be2e06614a,2014-11-22,lib: turn on strict mode
34,MDY6Q29tbWl0MjcxOTM3Nzk6MjExMzBjN2Q2ZmNhZWU2NjZmMzM3MzU3NjhjMDYwYmUyZTA2NjE0YQ==,Ben Noordhuis,Ben Noordhuis,"lib: turn on strict mode

Turn on strict mode for the files in the lib/ directory.  It helps
catch bugs and can have a positive effect on performance.

PR-URL: https://github.com/node-forward/node/pull/64
Reviewed-By: Colin Ihrig <cjihrig@gmail.com>
Reviewed-By: Fedor Indutny <fedor@indutny.com>",https://api.github.com/repos/nodejs/node/git/commits/21130c7d6fcaee666f33735768c060be2e06614a,2014-11-22,Turn on strict mode for the files in the lib/ directory
34,MDY6Q29tbWl0MjcxOTM3Nzk6MjExMzBjN2Q2ZmNhZWU2NjZmMzM3MzU3NjhjMDYwYmUyZTA2NjE0YQ==,Ben Noordhuis,Ben Noordhuis,"lib: turn on strict mode

Turn on strict mode for the files in the lib/ directory.  It helps
catch bugs and can have a positive effect on performance.

PR-URL: https://github.com/node-forward/node/pull/64
Reviewed-By: Colin Ihrig <cjihrig@gmail.com>
Reviewed-By: Fedor Indutny <fedor@indutny.com>",https://api.github.com/repos/nodejs/node/git/commits/21130c7d6fcaee666f33735768c060be2e06614a,2014-11-22," It helps
catch bugs and can have a positive effect on performance"
34,MDY6Q29tbWl0MjcxOTM3Nzk6MjExMzBjN2Q2ZmNhZWU2NjZmMzM3MzU3NjhjMDYwYmUyZTA2NjE0YQ==,Ben Noordhuis,Ben Noordhuis,"lib: turn on strict mode

Turn on strict mode for the files in the lib/ directory.  It helps
catch bugs and can have a positive effect on performance.

PR-URL: https://github.com/node-forward/node/pull/64
Reviewed-By: Colin Ihrig <cjihrig@gmail.com>
Reviewed-By: Fedor Indutny <fedor@indutny.com>",https://api.github.com/repos/nodejs/node/git/commits/21130c7d6fcaee666f33735768c060be2e06614a,2014-11-22,"PR-URL: Reviewed-By: Colin Ihrig <cjihrig@gmail.com>
Reviewed-By: Fedor Indutny <fedor@indutny.com>"
35,MDY6Q29tbWl0MjcxOTM3Nzk6Mjk5Y2Y4NDQ5MGEyZjI4ZmZkYzRjODJlNGZiNzA3OGFjNTkxYjZkMw==,Ben Noordhuis,Trevor Norris,"lib: unexport http.parsers

Unexport the http.parsers freelist.  It was originally exported by Ryan
in commit 0003c701 but the commit log doesn't mention why and it's never
been documented.  It's unclear if there are any users.

The lifecycle of parser objects changed recently and it seems better to
not let people shoot themselves in the foot so easily.

If it turns out there are actually users, we can always re-export it
again - probably under a slightly different name, to force people to
update their code to the new way of things.

Reviewed-by: Trevor Norris <trev.norris@gmail.com>",https://api.github.com/repos/nodejs/node/git/commits/299cf84490a2f28ffdc4c82e4fb7078ac591b6d3,2014-08-22,lib: unexport 
35,MDY6Q29tbWl0MjcxOTM3Nzk6Mjk5Y2Y4NDQ5MGEyZjI4ZmZkYzRjODJlNGZiNzA3OGFjNTkxYjZkMw==,Ben Noordhuis,Trevor Norris,"lib: unexport http.parsers

Unexport the http.parsers freelist.  It was originally exported by Ryan
in commit 0003c701 but the commit log doesn't mention why and it's never
been documented.  It's unclear if there are any users.

The lifecycle of parser objects changed recently and it seems better to
not let people shoot themselves in the foot so easily.

If it turns out there are actually users, we can always re-export it
again - probably under a slightly different name, to force people to
update their code to the new way of things.

Reviewed-by: Trevor Norris <trev.norris@gmail.com>",https://api.github.com/repos/nodejs/node/git/commits/299cf84490a2f28ffdc4c82e4fb7078ac591b6d3,2014-08-22,Unexport the freelist
35,MDY6Q29tbWl0MjcxOTM3Nzk6Mjk5Y2Y4NDQ5MGEyZjI4ZmZkYzRjODJlNGZiNzA3OGFjNTkxYjZkMw==,Ben Noordhuis,Trevor Norris,"lib: unexport http.parsers

Unexport the http.parsers freelist.  It was originally exported by Ryan
in commit 0003c701 but the commit log doesn't mention why and it's never
been documented.  It's unclear if there are any users.

The lifecycle of parser objects changed recently and it seems better to
not let people shoot themselves in the foot so easily.

If it turns out there are actually users, we can always re-export it
again - probably under a slightly different name, to force people to
update their code to the new way of things.

Reviewed-by: Trevor Norris <trev.norris@gmail.com>",https://api.github.com/repos/nodejs/node/git/commits/299cf84490a2f28ffdc4c82e4fb7078ac591b6d3,2014-08-22," It was originally exported by Ryan
in commit 0003c701 but the commit log doesn't mention why and it's never
been documented"
35,MDY6Q29tbWl0MjcxOTM3Nzk6Mjk5Y2Y4NDQ5MGEyZjI4ZmZkYzRjODJlNGZiNzA3OGFjNTkxYjZkMw==,Ben Noordhuis,Trevor Norris,"lib: unexport http.parsers

Unexport the http.parsers freelist.  It was originally exported by Ryan
in commit 0003c701 but the commit log doesn't mention why and it's never
been documented.  It's unclear if there are any users.

The lifecycle of parser objects changed recently and it seems better to
not let people shoot themselves in the foot so easily.

If it turns out there are actually users, we can always re-export it
again - probably under a slightly different name, to force people to
update their code to the new way of things.

Reviewed-by: Trevor Norris <trev.norris@gmail.com>",https://api.github.com/repos/nodejs/node/git/commits/299cf84490a2f28ffdc4c82e4fb7078ac591b6d3,2014-08-22, It's unclear if there are any users
35,MDY6Q29tbWl0MjcxOTM3Nzk6Mjk5Y2Y4NDQ5MGEyZjI4ZmZkYzRjODJlNGZiNzA3OGFjNTkxYjZkMw==,Ben Noordhuis,Trevor Norris,"lib: unexport http.parsers

Unexport the http.parsers freelist.  It was originally exported by Ryan
in commit 0003c701 but the commit log doesn't mention why and it's never
been documented.  It's unclear if there are any users.

The lifecycle of parser objects changed recently and it seems better to
not let people shoot themselves in the foot so easily.

If it turns out there are actually users, we can always re-export it
again - probably under a slightly different name, to force people to
update their code to the new way of things.

Reviewed-by: Trevor Norris <trev.norris@gmail.com>",https://api.github.com/repos/nodejs/node/git/commits/299cf84490a2f28ffdc4c82e4fb7078ac591b6d3,2014-08-22,"The lifecycle of parser objects changed recently and it seems better to
not let people shoot themselves in the foot so easily"
35,MDY6Q29tbWl0MjcxOTM3Nzk6Mjk5Y2Y4NDQ5MGEyZjI4ZmZkYzRjODJlNGZiNzA3OGFjNTkxYjZkMw==,Ben Noordhuis,Trevor Norris,"lib: unexport http.parsers

Unexport the http.parsers freelist.  It was originally exported by Ryan
in commit 0003c701 but the commit log doesn't mention why and it's never
been documented.  It's unclear if there are any users.

The lifecycle of parser objects changed recently and it seems better to
not let people shoot themselves in the foot so easily.

If it turns out there are actually users, we can always re-export it
again - probably under a slightly different name, to force people to
update their code to the new way of things.

Reviewed-by: Trevor Norris <trev.norris@gmail.com>",https://api.github.com/repos/nodejs/node/git/commits/299cf84490a2f28ffdc4c82e4fb7078ac591b6d3,2014-08-22,"If it turns out there are actually users, we can always re-export it
again - probably under a slightly different name, to force people to
update their code to the new way of things."
36,MDY6Q29tbWl0MjcxOTM3Nzk6MDNlOWY4NDkzM2ZlNjEwYjA0YjEwN2NmMWY4M2QxNzQ4NWU4OTA2ZQ==,Brian White,Fedor Indutny,"lib: remove unused variables

Signed-off-by: Fedor Indutny <fedor@indutny.com>",https://api.github.com/repos/nodejs/node/git/commits/03e9f84933fe610b04b107cf1f83d17485e8906e,2014-06-11,lib: remove unused variables
36,MDY6Q29tbWl0MjcxOTM3Nzk6MDNlOWY4NDkzM2ZlNjEwYjA0YjEwN2NmMWY4M2QxNzQ4NWU4OTA2ZQ==,Brian White,Fedor Indutny,"lib: remove unused variables

Signed-off-by: Fedor Indutny <fedor@indutny.com>",https://api.github.com/repos/nodejs/node/git/commits/03e9f84933fe610b04b107cf1f83d17485e8906e,2014-06-11,
37,MDY6Q29tbWl0MjcxOTM3Nzk6ZDZiYmIxOWYxZDFkNjM5N2Q4NjJkMDkzMDRiYzYzYzQ3NmY2NzVjMQ==,Nathan Rajlich,Nathan Rajlich,"http, https: don't depend on `globalAgent`

For the `request()` and `get()` functions. I could never
really understand why these two functions go through agent
first... Especially since the user could be passing `agent: false`
or a different Agent instance completely, in which `globalAgent`
will be completely bypassed.

Moved the relevant logic from `Agent#request()` into the
`ClientRequest` constructor.

Incidentally, this commit fixes #7012 (which was the original
intent of this commit).",https://api.github.com/repos/nodejs/node/git/commits/d6bbb19f1d1d6397d862d09304bc63c476f675c1,2014-02-25,don't depend on `globalAgent`
37,MDY6Q29tbWl0MjcxOTM3Nzk6ZDZiYmIxOWYxZDFkNjM5N2Q4NjJkMDkzMDRiYzYzYzQ3NmY2NzVjMQ==,Nathan Rajlich,Nathan Rajlich,"http, https: don't depend on `globalAgent`

For the `request()` and `get()` functions. I could never
really understand why these two functions go through agent
first... Especially since the user could be passing `agent: false`
or a different Agent instance completely, in which `globalAgent`
will be completely bypassed.

Moved the relevant logic from `Agent#request()` into the
`ClientRequest` constructor.

Incidentally, this commit fixes #7012 (which was the original
intent of this commit).",https://api.github.com/repos/nodejs/node/git/commits/d6bbb19f1d1d6397d862d09304bc63c476f675c1,2014-02-25,For the `request()` and `get()` functions
37,MDY6Q29tbWl0MjcxOTM3Nzk6ZDZiYmIxOWYxZDFkNjM5N2Q4NjJkMDkzMDRiYzYzYzQ3NmY2NzVjMQ==,Nathan Rajlich,Nathan Rajlich,"http, https: don't depend on `globalAgent`

For the `request()` and `get()` functions. I could never
really understand why these two functions go through agent
first... Especially since the user could be passing `agent: false`
or a different Agent instance completely, in which `globalAgent`
will be completely bypassed.

Moved the relevant logic from `Agent#request()` into the
`ClientRequest` constructor.

Incidentally, this commit fixes #7012 (which was the original
intent of this commit).",https://api.github.com/repos/nodejs/node/git/commits/d6bbb19f1d1d6397d862d09304bc63c476f675c1,2014-02-25,"I could never
really understand why these two functions go through agent
first.."
37,MDY6Q29tbWl0MjcxOTM3Nzk6ZDZiYmIxOWYxZDFkNjM5N2Q4NjJkMDkzMDRiYzYzYzQ3NmY2NzVjMQ==,Nathan Rajlich,Nathan Rajlich,"http, https: don't depend on `globalAgent`

For the `request()` and `get()` functions. I could never
really understand why these two functions go through agent
first... Especially since the user could be passing `agent: false`
or a different Agent instance completely, in which `globalAgent`
will be completely bypassed.

Moved the relevant logic from `Agent#request()` into the
`ClientRequest` constructor.

Incidentally, this commit fixes #7012 (which was the original
intent of this commit).",https://api.github.com/repos/nodejs/node/git/commits/d6bbb19f1d1d6397d862d09304bc63c476f675c1,2014-02-25,"Especially since the user could be passing `agent: false`
or a different Agent instance completely, in which `globalAgent`
will be completely bypassed"
37,MDY6Q29tbWl0MjcxOTM3Nzk6ZDZiYmIxOWYxZDFkNjM5N2Q4NjJkMDkzMDRiYzYzYzQ3NmY2NzVjMQ==,Nathan Rajlich,Nathan Rajlich,"http, https: don't depend on `globalAgent`

For the `request()` and `get()` functions. I could never
really understand why these two functions go through agent
first... Especially since the user could be passing `agent: false`
or a different Agent instance completely, in which `globalAgent`
will be completely bypassed.

Moved the relevant logic from `Agent#request()` into the
`ClientRequest` constructor.

Incidentally, this commit fixes #7012 (which was the original
intent of this commit).",https://api.github.com/repos/nodejs/node/git/commits/d6bbb19f1d1d6397d862d09304bc63c476f675c1,2014-02-25,"Moved the relevant logic from `Agent#request()` into the
`ClientRequest` constructor"
37,MDY6Q29tbWl0MjcxOTM3Nzk6ZDZiYmIxOWYxZDFkNjM5N2Q4NjJkMDkzMDRiYzYzYzQ3NmY2NzVjMQ==,Nathan Rajlich,Nathan Rajlich,"http, https: don't depend on `globalAgent`

For the `request()` and `get()` functions. I could never
really understand why these two functions go through agent
first... Especially since the user could be passing `agent: false`
or a different Agent instance completely, in which `globalAgent`
will be completely bypassed.

Moved the relevant logic from `Agent#request()` into the
`ClientRequest` constructor.

Incidentally, this commit fixes #7012 (which was the original
intent of this commit).",https://api.github.com/repos/nodejs/node/git/commits/d6bbb19f1d1d6397d862d09304bc63c476f675c1,2014-02-25,"Incidentally, this commit fixes #7012 (which was the original
intent of this commit)."
38,MDY6Q29tbWl0MjcxOTM3Nzk6NjEwMDIyODUxYWFlZmY3YTk2NTE4YThlZTA0ODI2NTQ3ZGMzMzk2OQ==,Ben Noordhuis,Ben Noordhuis,"http: expose supported methods

Expose the list of supported HTTP methods as a property on the 'http'
module object.

Fixes #6422.",https://api.github.com/repos/nodejs/node/git/commits/610022851aaeff7a96518a8ee04826547dc33969,2013-10-28,expose supported methods
38,MDY6Q29tbWl0MjcxOTM3Nzk6NjEwMDIyODUxYWFlZmY3YTk2NTE4YThlZTA0ODI2NTQ3ZGMzMzk2OQ==,Ben Noordhuis,Ben Noordhuis,"http: expose supported methods

Expose the list of supported HTTP methods as a property on the 'http'
module object.

Fixes #6422.",https://api.github.com/repos/nodejs/node/git/commits/610022851aaeff7a96518a8ee04826547dc33969,2013-10-28,Expose the list of supported HTTP methods as a property on the 'module object
38,MDY6Q29tbWl0MjcxOTM3Nzk6NjEwMDIyODUxYWFlZmY3YTk2NTE4YThlZTA0ODI2NTQ3ZGMzMzk2OQ==,Ben Noordhuis,Ben Noordhuis,"http: expose supported methods

Expose the list of supported HTTP methods as a property on the 'http'
module object.

Fixes #6422.",https://api.github.com/repos/nodejs/node/git/commits/610022851aaeff7a96518a8ee04826547dc33969,2013-10-28,Fixes #6422.
39,MDY6Q29tbWl0MjcxOTM3Nzk6NmQ4NDI4OTdjNTk2NmNlZTE5MjRiNTA3M2UyNzM1Njg5MjNjODY5Mw==,Brian White,Trevor Norris,lib: remove unused variables and functions,https://api.github.com/repos/nodejs/node/git/commits/6d842897c5966cee1924b5073e273568923c8693,2013-08-15,lib: remove unused variables and functions
39,MDY6Q29tbWl0MjcxOTM3Nzk6NmQ4NDI4OTdjNTk2NmNlZTE5MjRiNTA3M2UyNzM1Njg5MjNjODY5Mw==,Brian White,Trevor Norris,lib: remove unused variables and functions,https://api.github.com/repos/nodejs/node/git/commits/6d842897c5966cee1924b5073e273568923c8693,2013-08-15,
40,MDY6Q29tbWl0MjcxOTM3Nzk6MzJmZGFlMmNhM2JkNGRmMDU3YWUwMWI3Y2Q3ODk2MTk2OGZhMGZkMA==,isaacs,isaacs,"http: Fix overlooked agent.globalAgent export

Noticed by @bnoordhuis in https://github.com/joyent/node/pull/5991#discussion_r5575946",https://api.github.com/repos/nodejs/node/git/commits/32fdae2ca3bd4df057ae01b7cd78961968fa0fd0,2013-08-05,Fix overlooked agent.globalAgent export
40,MDY6Q29tbWl0MjcxOTM3Nzk6MzJmZGFlMmNhM2JkNGRmMDU3YWUwMWI3Y2Q3ODk2MTk2OGZhMGZkMA==,isaacs,isaacs,"http: Fix overlooked agent.globalAgent export

Noticed by @bnoordhuis in https://github.com/joyent/node/pull/5991#discussion_r5575946",https://api.github.com/repos/nodejs/node/git/commits/32fdae2ca3bd4df057ae01b7cd78961968fa0fd0,2013-08-05,Noticed by @bnoordhuis in https://github.com/joyent/node/pull/5991#discussion_r5575946
41,MDY6Q29tbWl0MjcxOTM3Nzk6NDBlOTI2NTBiYjk3YjczNmI4ZTI5YzVkZTM1YzFjMjllYmQ2MjVlZg==,isaacs,isaacs,http: Add agent.get/request methods,https://api.github.com/repos/nodejs/node/git/commits/40e92650bb97b736b8e29c5de35c1c29ebd625ef,2013-05-21,Add agent.get/request methods
41,MDY6Q29tbWl0MjcxOTM3Nzk6NDBlOTI2NTBiYjk3YjczNmI4ZTI5YzVkZTM1YzFjMjllYmQ2MjVlZg==,isaacs,isaacs,http: Add agent.get/request methods,https://api.github.com/repos/nodejs/node/git/commits/40e92650bb97b736b8e29c5de35c1c29ebd625ef,2013-05-21,
42,MDY6Q29tbWl0MjcxOTM3Nzk6NzEyNDM4N2IzNDE0YzQxNTMzMDc4ZjE0YTg0NDQ2ZTJlMGE2ZmY5NQ==,Ben Noordhuis,Ben Noordhuis,"http: don't escape request path, reject bad chars

Commit 38149bb changes http.get() and http.request() to escape unsafe
characters. However, that creates an incompatibility with v0.10 that
is difficult to work around: if you escape the path manually, then in
v0.11 it gets escaped twice. Change lib/http.js so it no longer tries
to fix up bad request paths, simply reject them with an exception.

The actual check is rather basic right now. The full check for illegal
characters is difficult to implement efficiently because it requires a
few characters of lookahead. That's why it currently only checks for
spaces because those are guaranteed to create an invalid request.

Fixes #5474.",https://api.github.com/repos/nodejs/node/git/commits/7124387b3414c41533078f14a84446e2e0a6ff95,2013-05-15,"don't escape request path, reject bad chars"
42,MDY6Q29tbWl0MjcxOTM3Nzk6NzEyNDM4N2IzNDE0YzQxNTMzMDc4ZjE0YTg0NDQ2ZTJlMGE2ZmY5NQ==,Ben Noordhuis,Ben Noordhuis,"http: don't escape request path, reject bad chars

Commit 38149bb changes http.get() and http.request() to escape unsafe
characters. However, that creates an incompatibility with v0.10 that
is difficult to work around: if you escape the path manually, then in
v0.11 it gets escaped twice. Change lib/http.js so it no longer tries
to fix up bad request paths, simply reject them with an exception.

The actual check is rather basic right now. The full check for illegal
characters is difficult to implement efficiently because it requires a
few characters of lookahead. That's why it currently only checks for
spaces because those are guaranteed to create an invalid request.

Fixes #5474.",https://api.github.com/repos/nodejs/node/git/commits/7124387b3414c41533078f14a84446e2e0a6ff95,2013-05-15,"Commit 38149bb changes and to escape unsafe
characters"
42,MDY6Q29tbWl0MjcxOTM3Nzk6NzEyNDM4N2IzNDE0YzQxNTMzMDc4ZjE0YTg0NDQ2ZTJlMGE2ZmY5NQ==,Ben Noordhuis,Ben Noordhuis,"http: don't escape request path, reject bad chars

Commit 38149bb changes http.get() and http.request() to escape unsafe
characters. However, that creates an incompatibility with v0.10 that
is difficult to work around: if you escape the path manually, then in
v0.11 it gets escaped twice. Change lib/http.js so it no longer tries
to fix up bad request paths, simply reject them with an exception.

The actual check is rather basic right now. The full check for illegal
characters is difficult to implement efficiently because it requires a
few characters of lookahead. That's why it currently only checks for
spaces because those are guaranteed to create an invalid request.

Fixes #5474.",https://api.github.com/repos/nodejs/node/git/commits/7124387b3414c41533078f14a84446e2e0a6ff95,2013-05-15,"However, that creates an incompatibility with v0.10 that
is difficult to work around: if you escape the path manually, then in
v0.11 it gets escaped twice"
42,MDY6Q29tbWl0MjcxOTM3Nzk6NzEyNDM4N2IzNDE0YzQxNTMzMDc4ZjE0YTg0NDQ2ZTJlMGE2ZmY5NQ==,Ben Noordhuis,Ben Noordhuis,"http: don't escape request path, reject bad chars

Commit 38149bb changes http.get() and http.request() to escape unsafe
characters. However, that creates an incompatibility with v0.10 that
is difficult to work around: if you escape the path manually, then in
v0.11 it gets escaped twice. Change lib/http.js so it no longer tries
to fix up bad request paths, simply reject them with an exception.

The actual check is rather basic right now. The full check for illegal
characters is difficult to implement efficiently because it requires a
few characters of lookahead. That's why it currently only checks for
spaces because those are guaranteed to create an invalid request.

Fixes #5474.",https://api.github.com/repos/nodejs/node/git/commits/7124387b3414c41533078f14a84446e2e0a6ff95,2013-05-15,"Change lib/so it no longer tries
to fix up bad request paths, simply reject them with an exception"
42,MDY6Q29tbWl0MjcxOTM3Nzk6NzEyNDM4N2IzNDE0YzQxNTMzMDc4ZjE0YTg0NDQ2ZTJlMGE2ZmY5NQ==,Ben Noordhuis,Ben Noordhuis,"http: don't escape request path, reject bad chars

Commit 38149bb changes http.get() and http.request() to escape unsafe
characters. However, that creates an incompatibility with v0.10 that
is difficult to work around: if you escape the path manually, then in
v0.11 it gets escaped twice. Change lib/http.js so it no longer tries
to fix up bad request paths, simply reject them with an exception.

The actual check is rather basic right now. The full check for illegal
characters is difficult to implement efficiently because it requires a
few characters of lookahead. That's why it currently only checks for
spaces because those are guaranteed to create an invalid request.

Fixes #5474.",https://api.github.com/repos/nodejs/node/git/commits/7124387b3414c41533078f14a84446e2e0a6ff95,2013-05-15,The actual check is rather basic right now
42,MDY6Q29tbWl0MjcxOTM3Nzk6NzEyNDM4N2IzNDE0YzQxNTMzMDc4ZjE0YTg0NDQ2ZTJlMGE2ZmY5NQ==,Ben Noordhuis,Ben Noordhuis,"http: don't escape request path, reject bad chars

Commit 38149bb changes http.get() and http.request() to escape unsafe
characters. However, that creates an incompatibility with v0.10 that
is difficult to work around: if you escape the path manually, then in
v0.11 it gets escaped twice. Change lib/http.js so it no longer tries
to fix up bad request paths, simply reject them with an exception.

The actual check is rather basic right now. The full check for illegal
characters is difficult to implement efficiently because it requires a
few characters of lookahead. That's why it currently only checks for
spaces because those are guaranteed to create an invalid request.

Fixes #5474.",https://api.github.com/repos/nodejs/node/git/commits/7124387b3414c41533078f14a84446e2e0a6ff95,2013-05-15,"The full check for illegal
characters is difficult to implement efficiently because it requires a
few characters of lookahead"
42,MDY6Q29tbWl0MjcxOTM3Nzk6NzEyNDM4N2IzNDE0YzQxNTMzMDc4ZjE0YTg0NDQ2ZTJlMGE2ZmY5NQ==,Ben Noordhuis,Ben Noordhuis,"http: don't escape request path, reject bad chars

Commit 38149bb changes http.get() and http.request() to escape unsafe
characters. However, that creates an incompatibility with v0.10 that
is difficult to work around: if you escape the path manually, then in
v0.11 it gets escaped twice. Change lib/http.js so it no longer tries
to fix up bad request paths, simply reject them with an exception.

The actual check is rather basic right now. The full check for illegal
characters is difficult to implement efficiently because it requires a
few characters of lookahead. That's why it currently only checks for
spaces because those are guaranteed to create an invalid request.

Fixes #5474.",https://api.github.com/repos/nodejs/node/git/commits/7124387b3414c41533078f14a84446e2e0a6ff95,2013-05-15,"That's why it currently only checks for
spaces because those are guaranteed to create an invalid request"
42,MDY6Q29tbWl0MjcxOTM3Nzk6NzEyNDM4N2IzNDE0YzQxNTMzMDc4ZjE0YTg0NDQ2ZTJlMGE2ZmY5NQ==,Ben Noordhuis,Ben Noordhuis,"http: don't escape request path, reject bad chars

Commit 38149bb changes http.get() and http.request() to escape unsafe
characters. However, that creates an incompatibility with v0.10 that
is difficult to work around: if you escape the path manually, then in
v0.11 it gets escaped twice. Change lib/http.js so it no longer tries
to fix up bad request paths, simply reject them with an exception.

The actual check is rather basic right now. The full check for illegal
characters is difficult to implement efficiently because it requires a
few characters of lookahead. That's why it currently only checks for
spaces because those are guaranteed to create an invalid request.

Fixes #5474.",https://api.github.com/repos/nodejs/node/git/commits/7124387b3414c41533078f14a84446e2e0a6ff95,2013-05-15,Fixes #5474.
43,MDY6Q29tbWl0MjcxOTM3Nzk6OTUxZTBiNjlmYTNjOGIxYTVkNzA4ZTI5ZGU5ZDZmN2QxZGI3OTgyNw==,Timothy J Fontaine,Ben Noordhuis,http: split Client into _http_client.js,https://api.github.com/repos/nodejs/node/git/commits/951e0b69fa3c8b1a5d708e29de9d6f7d1db79827,2013-04-11,split Client into _http_client.js
43,MDY6Q29tbWl0MjcxOTM3Nzk6OTUxZTBiNjlmYTNjOGIxYTVkNzA4ZTI5ZGU5ZDZmN2QxZGI3OTgyNw==,Timothy J Fontaine,Ben Noordhuis,http: split Client into _http_client.js,https://api.github.com/repos/nodejs/node/git/commits/951e0b69fa3c8b1a5d708e29de9d6f7d1db79827,2013-04-11,
44,MDY6Q29tbWl0MjcxOTM3Nzk6NjcxN2ZkY2NiNGEzZWJmNTVkODdhZTVkZjFlMjRlYmViZDQwODFmMQ==,Timothy J Fontaine,Ben Noordhuis,http: move Server and ServerResponse out,https://api.github.com/repos/nodejs/node/git/commits/6717fdccb4a3ebf55d87ae5df1e24ebebd4081f1,2013-04-11,move Server and ServerResponse out
44,MDY6Q29tbWl0MjcxOTM3Nzk6NjcxN2ZkY2NiNGEzZWJmNTVkODdhZTVkZjFlMjRlYmViZDQwODFmMQ==,Timothy J Fontaine,Ben Noordhuis,http: move Server and ServerResponse out,https://api.github.com/repos/nodejs/node/git/commits/6717fdccb4a3ebf55d87ae5df1e24ebebd4081f1,2013-04-11,
45,MDY6Q29tbWl0MjcxOTM3Nzk6ZGM5Zjk3YjdiOTlmMjdlYWYyMWZhZjI5YzdkZjhjOWQ4MjNlZjg2Mw==,Timothy J Fontaine,Ben Noordhuis,http: move OutgoingMessage into it's own file,https://api.github.com/repos/nodejs/node/git/commits/dc9f97b7b99f27eaf21faf29c7df8c9d823ef863,2013-04-11,move OutgoingMessage into it's own file
45,MDY6Q29tbWl0MjcxOTM3Nzk6ZGM5Zjk3YjdiOTlmMjdlYWYyMWZhZjI5YzdkZjhjOWQ4MjNlZjg2Mw==,Timothy J Fontaine,Ben Noordhuis,http: move OutgoingMessage into it's own file,https://api.github.com/repos/nodejs/node/git/commits/dc9f97b7b99f27eaf21faf29c7df8c9d823ef863,2013-04-11,
46,MDY6Q29tbWl0MjcxOTM3Nzk6YmI1NjQ4OWYyMWRhOWQ2NjhjMjc5ZWRiNDVkNmE5MGQwMzUxN2EzMA==,Timothy J Fontaine,Ben Noordhuis,http: move parsers into _http_common.js,https://api.github.com/repos/nodejs/node/git/commits/bb56489f21da9d668c279edb45d6a90d03517a30,2013-04-11,move parsers into _http_common.js
46,MDY6Q29tbWl0MjcxOTM3Nzk6YmI1NjQ4OWYyMWRhOWQ2NjhjMjc5ZWRiNDVkNmE5MGQwMzUxN2EzMA==,Timothy J Fontaine,Ben Noordhuis,http: move parsers into _http_common.js,https://api.github.com/repos/nodejs/node/git/commits/bb56489f21da9d668c279edb45d6a90d03517a30,2013-04-11,
47,MDY6Q29tbWl0MjcxOTM3Nzk6NTkwOWE5YzliZGRkZGFhYjkxNjkzZDE4YTg4NDBkOGIzMDBiYmMyOA==,Timothy J Fontaine,Ben Noordhuis,http: move IncomingMessage into its own file,https://api.github.com/repos/nodejs/node/git/commits/5909a9c9bddddaab91693d18a8840d8b300bbc28,2013-04-11,move IncomingMessage into its own file
47,MDY6Q29tbWl0MjcxOTM3Nzk6NTkwOWE5YzliZGRkZGFhYjkxNjkzZDE4YTg4NDBkOGIzMDBiYmMyOA==,Timothy J Fontaine,Ben Noordhuis,http: move IncomingMessage into its own file,https://api.github.com/repos/nodejs/node/git/commits/5909a9c9bddddaab91693d18a8840d8b300bbc28,2013-04-11,
48,MDY6Q29tbWl0MjcxOTM3Nzk6NjJlNGY4OTc2NTVhZWRmMjJiNTYyYTgwYzllNTcyYzc1OTJmZTBhYw==,Timothy J Fontaine,Ben Noordhuis,http: split Agent into its own file,https://api.github.com/repos/nodejs/node/git/commits/62e4f897655aedf22b562a80c9e572c7592fe0ac,2013-04-11,split Agent into its own file
48,MDY6Q29tbWl0MjcxOTM3Nzk6NjJlNGY4OTc2NTVhZWRmMjJiNTYyYTgwYzllNTcyYzc1OTJmZTBhYw==,Timothy J Fontaine,Ben Noordhuis,http: split Agent into its own file,https://api.github.com/repos/nodejs/node/git/commits/62e4f897655aedf22b562a80c9e572c7592fe0ac,2013-04-11,
49,MDY6Q29tbWl0MjcxOTM3Nzk6MzgxNDliYjA0OGQ5ODMzY2MzY2Y5YTEzY2JmZjUzMDBmYmVkMzZlZg==,Ben Noordhuis,isaacs,"http: escape unsafe characters in request path

Make http.request() and friends escape unsafe characters in the request
path. That is, a request for '/foo bar' is now escaped as '/foo%20bar'.

Before this commit, the path was used as-is in the request status line,
creating an invalid HTTP request (""GET /foo bar HTTP/1.1"").

Fixes #4381.",https://api.github.com/repos/nodejs/node/git/commits/38149bb048d9833cc3cf9a13cbff5300fbed36ef,2013-04-12,escape unsafe characters in request path
49,MDY6Q29tbWl0MjcxOTM3Nzk6MzgxNDliYjA0OGQ5ODMzY2MzY2Y5YTEzY2JmZjUzMDBmYmVkMzZlZg==,Ben Noordhuis,isaacs,"http: escape unsafe characters in request path

Make http.request() and friends escape unsafe characters in the request
path. That is, a request for '/foo bar' is now escaped as '/foo%20bar'.

Before this commit, the path was used as-is in the request status line,
creating an invalid HTTP request (""GET /foo bar HTTP/1.1"").

Fixes #4381.",https://api.github.com/repos/nodejs/node/git/commits/38149bb048d9833cc3cf9a13cbff5300fbed36ef,2013-04-12,"Make and friends escape unsafe characters in the request
path"
49,MDY6Q29tbWl0MjcxOTM3Nzk6MzgxNDliYjA0OGQ5ODMzY2MzY2Y5YTEzY2JmZjUzMDBmYmVkMzZlZg==,Ben Noordhuis,isaacs,"http: escape unsafe characters in request path

Make http.request() and friends escape unsafe characters in the request
path. That is, a request for '/foo bar' is now escaped as '/foo%20bar'.

Before this commit, the path was used as-is in the request status line,
creating an invalid HTTP request (""GET /foo bar HTTP/1.1"").

Fixes #4381.",https://api.github.com/repos/nodejs/node/git/commits/38149bb048d9833cc3cf9a13cbff5300fbed36ef,2013-04-12,"That is, a request for '/foo bar' is now escaped as '/foo%20bar'"
49,MDY6Q29tbWl0MjcxOTM3Nzk6MzgxNDliYjA0OGQ5ODMzY2MzY2Y5YTEzY2JmZjUzMDBmYmVkMzZlZg==,Ben Noordhuis,isaacs,"http: escape unsafe characters in request path

Make http.request() and friends escape unsafe characters in the request
path. That is, a request for '/foo bar' is now escaped as '/foo%20bar'.

Before this commit, the path was used as-is in the request status line,
creating an invalid HTTP request (""GET /foo bar HTTP/1.1"").

Fixes #4381.",https://api.github.com/repos/nodejs/node/git/commits/38149bb048d9833cc3cf9a13cbff5300fbed36ef,2013-04-12,"Before this commit, the path was used as-is in the request status line,
creating an invalid HTTP request (""GET /foo bar HTTP/1.1"")"
49,MDY6Q29tbWl0MjcxOTM3Nzk6MzgxNDliYjA0OGQ5ODMzY2MzY2Y5YTEzY2JmZjUzMDBmYmVkMzZlZg==,Ben Noordhuis,isaacs,"http: escape unsafe characters in request path

Make http.request() and friends escape unsafe characters in the request
path. That is, a request for '/foo bar' is now escaped as '/foo%20bar'.

Before this commit, the path was used as-is in the request status line,
creating an invalid HTTP request (""GET /foo bar HTTP/1.1"").

Fixes #4381.",https://api.github.com/repos/nodejs/node/git/commits/38149bb048d9833cc3cf9a13cbff5300fbed36ef,2013-04-12,Fixes #4381.
50,MDY6Q29tbWl0MjcxOTM3Nzk6ZTRiNzE2ZWZhYTAwZjM0ZmU0ZDlmMWMxNDFjOTNlMmFhOTk0MzI4Yw==,isaacs,isaacs,"http: Support write(data, 'hex')

We were assuming that any string can be concatenated safely to
CRLF.  However, for hex, base64, or binary encoded writes, this
is not the case, and results in sending the incorrect response.

An unusual edge case, but certainly a bug.",https://api.github.com/repos/nodejs/node/git/commits/e4b716efaa00f34fe4d9f1c141c93e2aa994328c,2013-04-08,"Support write(data, 'hex')"
50,MDY6Q29tbWl0MjcxOTM3Nzk6ZTRiNzE2ZWZhYTAwZjM0ZmU0ZDlmMWMxNDFjOTNlMmFhOTk0MzI4Yw==,isaacs,isaacs,"http: Support write(data, 'hex')

We were assuming that any string can be concatenated safely to
CRLF.  However, for hex, base64, or binary encoded writes, this
is not the case, and results in sending the incorrect response.

An unusual edge case, but certainly a bug.",https://api.github.com/repos/nodejs/node/git/commits/e4b716efaa00f34fe4d9f1c141c93e2aa994328c,2013-04-08,"We were assuming that any string can be concatenated safely to
CRLF"
50,MDY6Q29tbWl0MjcxOTM3Nzk6ZTRiNzE2ZWZhYTAwZjM0ZmU0ZDlmMWMxNDFjOTNlMmFhOTk0MzI4Yw==,isaacs,isaacs,"http: Support write(data, 'hex')

We were assuming that any string can be concatenated safely to
CRLF.  However, for hex, base64, or binary encoded writes, this
is not the case, and results in sending the incorrect response.

An unusual edge case, but certainly a bug.",https://api.github.com/repos/nodejs/node/git/commits/e4b716efaa00f34fe4d9f1c141c93e2aa994328c,2013-04-08," However, for hex, base64, or binary encoded writes, this
is not the case, and results in sending the incorrect response"
50,MDY6Q29tbWl0MjcxOTM3Nzk6ZTRiNzE2ZWZhYTAwZjM0ZmU0ZDlmMWMxNDFjOTNlMmFhOTk0MzI4Yw==,isaacs,isaacs,"http: Support write(data, 'hex')

We were assuming that any string can be concatenated safely to
CRLF.  However, for hex, base64, or binary encoded writes, this
is not the case, and results in sending the incorrect response.

An unusual edge case, but certainly a bug.",https://api.github.com/repos/nodejs/node/git/commits/e4b716efaa00f34fe4d9f1c141c93e2aa994328c,2013-04-08,"An unusual edge case, but certainly a bug."
51,MDY6Q29tbWl0MjcxOTM3Nzk6ODg2ODZhYTQxMDY0OTlhNjAzMzY1Yjg4N2UyMzgxYjU1YzYxYzAyNw==,isaacs,isaacs,"http: Remove legacy ECONNRESET workaround code

Fix #5179",https://api.github.com/repos/nodejs/node/git/commits/88686aa4106499a603365b887e2381b55c61c027,2013-04-01,Remove legacy ECONNRESET workaround code
51,MDY6Q29tbWl0MjcxOTM3Nzk6ODg2ODZhYTQxMDY0OTlhNjAzMzY1Yjg4N2UyMzgxYjU1YzYxYzAyNw==,isaacs,isaacs,"http: Remove legacy ECONNRESET workaround code

Fix #5179",https://api.github.com/repos/nodejs/node/git/commits/88686aa4106499a603365b887e2381b55c61c027,2013-04-01,Fix #5179
52,MDY6Q29tbWl0MjcxOTM3Nzk6MjM0ZmIxMjJiYmRmODdiYjMzZDhmYmE0MTE2NWVjZmE5MjAzMWI3MQ==,isaacs,Fedor Indutny,"http client: Ensure socket cleanup on response end

If an http response has an 'end' handler that throws, then the socket
will never be released back into the pool.

Granted, we do NOT guarantee that throwing will never have adverse
effects on Node internal state.  Such a guarantee cannot be reasonably
made in a shared-global mutable-state side-effecty language like
JavaScript.  However, in this case, it's a rather trivial patch to
increase our resilience a little bit, so it seems like a win.

There is no semantic change in this case, except that some event
listeners are removed, and the `'free'` event is emitted on nextTick, so
that you can schedule another request which will re-use the same socket.
From the user's point of view, there should be no detectable difference.

Closes #5107",https://api.github.com/repos/nodejs/node/git/commits/234fb122bbdf87bb33d8fba41165ecfa92031b71,2013-04-02,client: Ensure socket cleanup on response end
52,MDY6Q29tbWl0MjcxOTM3Nzk6MjM0ZmIxMjJiYmRmODdiYjMzZDhmYmE0MTE2NWVjZmE5MjAzMWI3MQ==,isaacs,Fedor Indutny,"http client: Ensure socket cleanup on response end

If an http response has an 'end' handler that throws, then the socket
will never be released back into the pool.

Granted, we do NOT guarantee that throwing will never have adverse
effects on Node internal state.  Such a guarantee cannot be reasonably
made in a shared-global mutable-state side-effecty language like
JavaScript.  However, in this case, it's a rather trivial patch to
increase our resilience a little bit, so it seems like a win.

There is no semantic change in this case, except that some event
listeners are removed, and the `'free'` event is emitted on nextTick, so
that you can schedule another request which will re-use the same socket.
From the user's point of view, there should be no detectable difference.

Closes #5107",https://api.github.com/repos/nodejs/node/git/commits/234fb122bbdf87bb33d8fba41165ecfa92031b71,2013-04-02,"If an response has an 'end' handler that throws, then the socket
will never be released back into the pool"
52,MDY6Q29tbWl0MjcxOTM3Nzk6MjM0ZmIxMjJiYmRmODdiYjMzZDhmYmE0MTE2NWVjZmE5MjAzMWI3MQ==,isaacs,Fedor Indutny,"http client: Ensure socket cleanup on response end

If an http response has an 'end' handler that throws, then the socket
will never be released back into the pool.

Granted, we do NOT guarantee that throwing will never have adverse
effects on Node internal state.  Such a guarantee cannot be reasonably
made in a shared-global mutable-state side-effecty language like
JavaScript.  However, in this case, it's a rather trivial patch to
increase our resilience a little bit, so it seems like a win.

There is no semantic change in this case, except that some event
listeners are removed, and the `'free'` event is emitted on nextTick, so
that you can schedule another request which will re-use the same socket.
From the user's point of view, there should be no detectable difference.

Closes #5107",https://api.github.com/repos/nodejs/node/git/commits/234fb122bbdf87bb33d8fba41165ecfa92031b71,2013-04-02,"Granted, we do NOT guarantee that throwing will never have adverse
effects on Node internal state"
52,MDY6Q29tbWl0MjcxOTM3Nzk6MjM0ZmIxMjJiYmRmODdiYjMzZDhmYmE0MTE2NWVjZmE5MjAzMWI3MQ==,isaacs,Fedor Indutny,"http client: Ensure socket cleanup on response end

If an http response has an 'end' handler that throws, then the socket
will never be released back into the pool.

Granted, we do NOT guarantee that throwing will never have adverse
effects on Node internal state.  Such a guarantee cannot be reasonably
made in a shared-global mutable-state side-effecty language like
JavaScript.  However, in this case, it's a rather trivial patch to
increase our resilience a little bit, so it seems like a win.

There is no semantic change in this case, except that some event
listeners are removed, and the `'free'` event is emitted on nextTick, so
that you can schedule another request which will re-use the same socket.
From the user's point of view, there should be no detectable difference.

Closes #5107",https://api.github.com/repos/nodejs/node/git/commits/234fb122bbdf87bb33d8fba41165ecfa92031b71,2013-04-02," Such a guarantee cannot be reasonably
made in a shared-global mutable-state side-effecty language like
JavaScript"
52,MDY6Q29tbWl0MjcxOTM3Nzk6MjM0ZmIxMjJiYmRmODdiYjMzZDhmYmE0MTE2NWVjZmE5MjAzMWI3MQ==,isaacs,Fedor Indutny,"http client: Ensure socket cleanup on response end

If an http response has an 'end' handler that throws, then the socket
will never be released back into the pool.

Granted, we do NOT guarantee that throwing will never have adverse
effects on Node internal state.  Such a guarantee cannot be reasonably
made in a shared-global mutable-state side-effecty language like
JavaScript.  However, in this case, it's a rather trivial patch to
increase our resilience a little bit, so it seems like a win.

There is no semantic change in this case, except that some event
listeners are removed, and the `'free'` event is emitted on nextTick, so
that you can schedule another request which will re-use the same socket.
From the user's point of view, there should be no detectable difference.

Closes #5107",https://api.github.com/repos/nodejs/node/git/commits/234fb122bbdf87bb33d8fba41165ecfa92031b71,2013-04-02," However, in this case, it's a rather trivial patch to
increase our resilience a little bit, so it seems like a win"
52,MDY6Q29tbWl0MjcxOTM3Nzk6MjM0ZmIxMjJiYmRmODdiYjMzZDhmYmE0MTE2NWVjZmE5MjAzMWI3MQ==,isaacs,Fedor Indutny,"http client: Ensure socket cleanup on response end

If an http response has an 'end' handler that throws, then the socket
will never be released back into the pool.

Granted, we do NOT guarantee that throwing will never have adverse
effects on Node internal state.  Such a guarantee cannot be reasonably
made in a shared-global mutable-state side-effecty language like
JavaScript.  However, in this case, it's a rather trivial patch to
increase our resilience a little bit, so it seems like a win.

There is no semantic change in this case, except that some event
listeners are removed, and the `'free'` event is emitted on nextTick, so
that you can schedule another request which will re-use the same socket.
From the user's point of view, there should be no detectable difference.

Closes #5107",https://api.github.com/repos/nodejs/node/git/commits/234fb122bbdf87bb33d8fba41165ecfa92031b71,2013-04-02,"There is no semantic change in this case, except that some event
listeners are removed, and the `'free'` event is emitted on nextTick, so
that you can schedule another request which will re-use the same socket"
52,MDY6Q29tbWl0MjcxOTM3Nzk6MjM0ZmIxMjJiYmRmODdiYjMzZDhmYmE0MTE2NWVjZmE5MjAzMWI3MQ==,isaacs,Fedor Indutny,"http client: Ensure socket cleanup on response end

If an http response has an 'end' handler that throws, then the socket
will never be released back into the pool.

Granted, we do NOT guarantee that throwing will never have adverse
effects on Node internal state.  Such a guarantee cannot be reasonably
made in a shared-global mutable-state side-effecty language like
JavaScript.  However, in this case, it's a rather trivial patch to
increase our resilience a little bit, so it seems like a win.

There is no semantic change in this case, except that some event
listeners are removed, and the `'free'` event is emitted on nextTick, so
that you can schedule another request which will re-use the same socket.
From the user's point of view, there should be no detectable difference.

Closes #5107",https://api.github.com/repos/nodejs/node/git/commits/234fb122bbdf87bb33d8fba41165ecfa92031b71,2013-04-02,"From the user's point of view, there should be no detectable difference"
52,MDY6Q29tbWl0MjcxOTM3Nzk6MjM0ZmIxMjJiYmRmODdiYjMzZDhmYmE0MTE2NWVjZmE5MjAzMWI3MQ==,isaacs,Fedor Indutny,"http client: Ensure socket cleanup on response end

If an http response has an 'end' handler that throws, then the socket
will never be released back into the pool.

Granted, we do NOT guarantee that throwing will never have adverse
effects on Node internal state.  Such a guarantee cannot be reasonably
made in a shared-global mutable-state side-effecty language like
JavaScript.  However, in this case, it's a rather trivial patch to
increase our resilience a little bit, so it seems like a win.

There is no semantic change in this case, except that some event
listeners are removed, and the `'free'` event is emitted on nextTick, so
that you can schedule another request which will re-use the same socket.
From the user's point of view, there should be no detectable difference.

Closes #5107",https://api.github.com/repos/nodejs/node/git/commits/234fb122bbdf87bb33d8fba41165ecfa92031b71,2013-04-02,Closes #5107
53,MDY6Q29tbWl0MjcxOTM3Nzk6ZDYyY2Y1OWRjMTUyZjhkZjY5NTRlZTdmZmU5MzgxZmM5YjUyNGUzMg==,isaacs,isaacs,"http: Don't hot-path end() for large buffers

The benefits of the hot-path optimization below start to fall off when
the buffer size gets up near 128KB, because the cost of the copy is more
than the cost of the extra write() call.  Switch to the write/end method
at that point.

Heuristics and magic numbers are awful, but slow http responses are
worse.

Fix #4975",https://api.github.com/repos/nodejs/node/git/commits/d62cf59dc152f8df6954ee7ffe9381fc9b524e32,2013-03-14,Don't hot-path end() for large buffers
53,MDY6Q29tbWl0MjcxOTM3Nzk6ZDYyY2Y1OWRjMTUyZjhkZjY5NTRlZTdmZmU5MzgxZmM5YjUyNGUzMg==,isaacs,isaacs,"http: Don't hot-path end() for large buffers

The benefits of the hot-path optimization below start to fall off when
the buffer size gets up near 128KB, because the cost of the copy is more
than the cost of the extra write() call.  Switch to the write/end method
at that point.

Heuristics and magic numbers are awful, but slow http responses are
worse.

Fix #4975",https://api.github.com/repos/nodejs/node/git/commits/d62cf59dc152f8df6954ee7ffe9381fc9b524e32,2013-03-14,"The benefits of the hot-path optimization below start to fall off when
the buffer size gets up near 128KB, because the cost of the copy is more
than the cost of the extra write() call"
53,MDY6Q29tbWl0MjcxOTM3Nzk6ZDYyY2Y1OWRjMTUyZjhkZjY5NTRlZTdmZmU5MzgxZmM5YjUyNGUzMg==,isaacs,isaacs,"http: Don't hot-path end() for large buffers

The benefits of the hot-path optimization below start to fall off when
the buffer size gets up near 128KB, because the cost of the copy is more
than the cost of the extra write() call.  Switch to the write/end method
at that point.

Heuristics and magic numbers are awful, but slow http responses are
worse.

Fix #4975",https://api.github.com/repos/nodejs/node/git/commits/d62cf59dc152f8df6954ee7ffe9381fc9b524e32,2013-03-14," Switch to the write/end method
at that point"
53,MDY6Q29tbWl0MjcxOTM3Nzk6ZDYyY2Y1OWRjMTUyZjhkZjY5NTRlZTdmZmU5MzgxZmM5YjUyNGUzMg==,isaacs,isaacs,"http: Don't hot-path end() for large buffers

The benefits of the hot-path optimization below start to fall off when
the buffer size gets up near 128KB, because the cost of the copy is more
than the cost of the extra write() call.  Switch to the write/end method
at that point.

Heuristics and magic numbers are awful, but slow http responses are
worse.

Fix #4975",https://api.github.com/repos/nodejs/node/git/commits/d62cf59dc152f8df6954ee7ffe9381fc9b524e32,2013-03-14,"Heuristics and magic numbers are awful, but slow responses are
worse"
53,MDY6Q29tbWl0MjcxOTM3Nzk6ZDYyY2Y1OWRjMTUyZjhkZjY5NTRlZTdmZmU5MzgxZmM5YjUyNGUzMg==,isaacs,isaacs,"http: Don't hot-path end() for large buffers

The benefits of the hot-path optimization below start to fall off when
the buffer size gets up near 128KB, because the cost of the copy is more
than the cost of the extra write() call.  Switch to the write/end method
at that point.

Heuristics and magic numbers are awful, but slow http responses are
worse.

Fix #4975",https://api.github.com/repos/nodejs/node/git/commits/d62cf59dc152f8df6954ee7ffe9381fc9b524e32,2013-03-14,Fix #4975
54,MDY6Q29tbWl0MjcxOTM3Nzk6MzI3YjZlM2UxZGU4OGJhMWRiODMxNDJkNTNiM2E1N2YwZDA2ZDUxOQ==,isaacs,isaacs,"stream: Don't emit 'end' unless read() called

This solves the problem of calling `readable.pipe(writable)` after the
readable stream has already emitted 'end', as often is the case when
writing simple HTTP proxies.

The spirit of streams2 is that things will work properly, even if you
don't set them up right away on the first tick.

This approach breaks down, however, because pipe()ing from an ended
readable will just do nothing.  No more data will ever arrive, and the
writable will hang open forever never being ended.

However, that does not solve the case of adding a `on('end')` listener
after the stream has received the EOF chunk, if it was the first chunk
received (and thus, length was 0, and 'end' got emitted).  So, with
this, we defer the 'end' event emission until the read() function is
called.

Also, in pipe(), if the source has emitted 'end' already, we call the
cleanup/onend function on nextTick.  Piping from an already-ended stream
is thus the same as piping from a stream that is in the process of
ending.

Updates many tests that were relying on 'end' coming immediately, even
though they never read() from the req.

Fix #4942",https://api.github.com/repos/nodejs/node/git/commits/327b6e3e1de88ba1db83142d53b3a57f0d06d519,2013-03-10,stream: Don't emit 'end' unless read() called
54,MDY6Q29tbWl0MjcxOTM3Nzk6MzI3YjZlM2UxZGU4OGJhMWRiODMxNDJkNTNiM2E1N2YwZDA2ZDUxOQ==,isaacs,isaacs,"stream: Don't emit 'end' unless read() called

This solves the problem of calling `readable.pipe(writable)` after the
readable stream has already emitted 'end', as often is the case when
writing simple HTTP proxies.

The spirit of streams2 is that things will work properly, even if you
don't set them up right away on the first tick.

This approach breaks down, however, because pipe()ing from an ended
readable will just do nothing.  No more data will ever arrive, and the
writable will hang open forever never being ended.

However, that does not solve the case of adding a `on('end')` listener
after the stream has received the EOF chunk, if it was the first chunk
received (and thus, length was 0, and 'end' got emitted).  So, with
this, we defer the 'end' event emission until the read() function is
called.

Also, in pipe(), if the source has emitted 'end' already, we call the
cleanup/onend function on nextTick.  Piping from an already-ended stream
is thus the same as piping from a stream that is in the process of
ending.

Updates many tests that were relying on 'end' coming immediately, even
though they never read() from the req.

Fix #4942",https://api.github.com/repos/nodejs/node/git/commits/327b6e3e1de88ba1db83142d53b3a57f0d06d519,2013-03-10,"This solves the problem of calling `readable.pipe(writable)` after the
readable stream has already emitted 'end', as often is the case when
writing simple HTTP proxies"
54,MDY6Q29tbWl0MjcxOTM3Nzk6MzI3YjZlM2UxZGU4OGJhMWRiODMxNDJkNTNiM2E1N2YwZDA2ZDUxOQ==,isaacs,isaacs,"stream: Don't emit 'end' unless read() called

This solves the problem of calling `readable.pipe(writable)` after the
readable stream has already emitted 'end', as often is the case when
writing simple HTTP proxies.

The spirit of streams2 is that things will work properly, even if you
don't set them up right away on the first tick.

This approach breaks down, however, because pipe()ing from an ended
readable will just do nothing.  No more data will ever arrive, and the
writable will hang open forever never being ended.

However, that does not solve the case of adding a `on('end')` listener
after the stream has received the EOF chunk, if it was the first chunk
received (and thus, length was 0, and 'end' got emitted).  So, with
this, we defer the 'end' event emission until the read() function is
called.

Also, in pipe(), if the source has emitted 'end' already, we call the
cleanup/onend function on nextTick.  Piping from an already-ended stream
is thus the same as piping from a stream that is in the process of
ending.

Updates many tests that were relying on 'end' coming immediately, even
though they never read() from the req.

Fix #4942",https://api.github.com/repos/nodejs/node/git/commits/327b6e3e1de88ba1db83142d53b3a57f0d06d519,2013-03-10,"The spirit of streams2 is that things will work properly, even if you
don't set them up right away on the first tick"
54,MDY6Q29tbWl0MjcxOTM3Nzk6MzI3YjZlM2UxZGU4OGJhMWRiODMxNDJkNTNiM2E1N2YwZDA2ZDUxOQ==,isaacs,isaacs,"stream: Don't emit 'end' unless read() called

This solves the problem of calling `readable.pipe(writable)` after the
readable stream has already emitted 'end', as often is the case when
writing simple HTTP proxies.

The spirit of streams2 is that things will work properly, even if you
don't set them up right away on the first tick.

This approach breaks down, however, because pipe()ing from an ended
readable will just do nothing.  No more data will ever arrive, and the
writable will hang open forever never being ended.

However, that does not solve the case of adding a `on('end')` listener
after the stream has received the EOF chunk, if it was the first chunk
received (and thus, length was 0, and 'end' got emitted).  So, with
this, we defer the 'end' event emission until the read() function is
called.

Also, in pipe(), if the source has emitted 'end' already, we call the
cleanup/onend function on nextTick.  Piping from an already-ended stream
is thus the same as piping from a stream that is in the process of
ending.

Updates many tests that were relying on 'end' coming immediately, even
though they never read() from the req.

Fix #4942",https://api.github.com/repos/nodejs/node/git/commits/327b6e3e1de88ba1db83142d53b3a57f0d06d519,2013-03-10,"This approach breaks down, however, because pipe()ing from an ended
readable will just do nothing"
54,MDY6Q29tbWl0MjcxOTM3Nzk6MzI3YjZlM2UxZGU4OGJhMWRiODMxNDJkNTNiM2E1N2YwZDA2ZDUxOQ==,isaacs,isaacs,"stream: Don't emit 'end' unless read() called

This solves the problem of calling `readable.pipe(writable)` after the
readable stream has already emitted 'end', as often is the case when
writing simple HTTP proxies.

The spirit of streams2 is that things will work properly, even if you
don't set them up right away on the first tick.

This approach breaks down, however, because pipe()ing from an ended
readable will just do nothing.  No more data will ever arrive, and the
writable will hang open forever never being ended.

However, that does not solve the case of adding a `on('end')` listener
after the stream has received the EOF chunk, if it was the first chunk
received (and thus, length was 0, and 'end' got emitted).  So, with
this, we defer the 'end' event emission until the read() function is
called.

Also, in pipe(), if the source has emitted 'end' already, we call the
cleanup/onend function on nextTick.  Piping from an already-ended stream
is thus the same as piping from a stream that is in the process of
ending.

Updates many tests that were relying on 'end' coming immediately, even
though they never read() from the req.

Fix #4942",https://api.github.com/repos/nodejs/node/git/commits/327b6e3e1de88ba1db83142d53b3a57f0d06d519,2013-03-10," No more data will ever arrive, and the
writable will hang open forever never being ended"
54,MDY6Q29tbWl0MjcxOTM3Nzk6MzI3YjZlM2UxZGU4OGJhMWRiODMxNDJkNTNiM2E1N2YwZDA2ZDUxOQ==,isaacs,isaacs,"stream: Don't emit 'end' unless read() called

This solves the problem of calling `readable.pipe(writable)` after the
readable stream has already emitted 'end', as often is the case when
writing simple HTTP proxies.

The spirit of streams2 is that things will work properly, even if you
don't set them up right away on the first tick.

This approach breaks down, however, because pipe()ing from an ended
readable will just do nothing.  No more data will ever arrive, and the
writable will hang open forever never being ended.

However, that does not solve the case of adding a `on('end')` listener
after the stream has received the EOF chunk, if it was the first chunk
received (and thus, length was 0, and 'end' got emitted).  So, with
this, we defer the 'end' event emission until the read() function is
called.

Also, in pipe(), if the source has emitted 'end' already, we call the
cleanup/onend function on nextTick.  Piping from an already-ended stream
is thus the same as piping from a stream that is in the process of
ending.

Updates many tests that were relying on 'end' coming immediately, even
though they never read() from the req.

Fix #4942",https://api.github.com/repos/nodejs/node/git/commits/327b6e3e1de88ba1db83142d53b3a57f0d06d519,2013-03-10,"However, that does not solve the case of adding a `on('end')` listener
after the stream has received the EOF chunk, if it was the first chunk
received (and thus, length was 0, and 'end' got emitted)"
54,MDY6Q29tbWl0MjcxOTM3Nzk6MzI3YjZlM2UxZGU4OGJhMWRiODMxNDJkNTNiM2E1N2YwZDA2ZDUxOQ==,isaacs,isaacs,"stream: Don't emit 'end' unless read() called

This solves the problem of calling `readable.pipe(writable)` after the
readable stream has already emitted 'end', as often is the case when
writing simple HTTP proxies.

The spirit of streams2 is that things will work properly, even if you
don't set them up right away on the first tick.

This approach breaks down, however, because pipe()ing from an ended
readable will just do nothing.  No more data will ever arrive, and the
writable will hang open forever never being ended.

However, that does not solve the case of adding a `on('end')` listener
after the stream has received the EOF chunk, if it was the first chunk
received (and thus, length was 0, and 'end' got emitted).  So, with
this, we defer the 'end' event emission until the read() function is
called.

Also, in pipe(), if the source has emitted 'end' already, we call the
cleanup/onend function on nextTick.  Piping from an already-ended stream
is thus the same as piping from a stream that is in the process of
ending.

Updates many tests that were relying on 'end' coming immediately, even
though they never read() from the req.

Fix #4942",https://api.github.com/repos/nodejs/node/git/commits/327b6e3e1de88ba1db83142d53b3a57f0d06d519,2013-03-10," So, with
this, we defer the 'end' event emission until the read() function is
called"
54,MDY6Q29tbWl0MjcxOTM3Nzk6MzI3YjZlM2UxZGU4OGJhMWRiODMxNDJkNTNiM2E1N2YwZDA2ZDUxOQ==,isaacs,isaacs,"stream: Don't emit 'end' unless read() called

This solves the problem of calling `readable.pipe(writable)` after the
readable stream has already emitted 'end', as often is the case when
writing simple HTTP proxies.

The spirit of streams2 is that things will work properly, even if you
don't set them up right away on the first tick.

This approach breaks down, however, because pipe()ing from an ended
readable will just do nothing.  No more data will ever arrive, and the
writable will hang open forever never being ended.

However, that does not solve the case of adding a `on('end')` listener
after the stream has received the EOF chunk, if it was the first chunk
received (and thus, length was 0, and 'end' got emitted).  So, with
this, we defer the 'end' event emission until the read() function is
called.

Also, in pipe(), if the source has emitted 'end' already, we call the
cleanup/onend function on nextTick.  Piping from an already-ended stream
is thus the same as piping from a stream that is in the process of
ending.

Updates many tests that were relying on 'end' coming immediately, even
though they never read() from the req.

Fix #4942",https://api.github.com/repos/nodejs/node/git/commits/327b6e3e1de88ba1db83142d53b3a57f0d06d519,2013-03-10,"Also, in pipe(), if the source has emitted 'end' already, we call the
cleanup/onend function on nextTick"
54,MDY6Q29tbWl0MjcxOTM3Nzk6MzI3YjZlM2UxZGU4OGJhMWRiODMxNDJkNTNiM2E1N2YwZDA2ZDUxOQ==,isaacs,isaacs,"stream: Don't emit 'end' unless read() called

This solves the problem of calling `readable.pipe(writable)` after the
readable stream has already emitted 'end', as often is the case when
writing simple HTTP proxies.

The spirit of streams2 is that things will work properly, even if you
don't set them up right away on the first tick.

This approach breaks down, however, because pipe()ing from an ended
readable will just do nothing.  No more data will ever arrive, and the
writable will hang open forever never being ended.

However, that does not solve the case of adding a `on('end')` listener
after the stream has received the EOF chunk, if it was the first chunk
received (and thus, length was 0, and 'end' got emitted).  So, with
this, we defer the 'end' event emission until the read() function is
called.

Also, in pipe(), if the source has emitted 'end' already, we call the
cleanup/onend function on nextTick.  Piping from an already-ended stream
is thus the same as piping from a stream that is in the process of
ending.

Updates many tests that were relying on 'end' coming immediately, even
though they never read() from the req.

Fix #4942",https://api.github.com/repos/nodejs/node/git/commits/327b6e3e1de88ba1db83142d53b3a57f0d06d519,2013-03-10," Piping from an already-ended stream
is thus the same as piping from a stream that is in the process of
ending"
54,MDY6Q29tbWl0MjcxOTM3Nzk6MzI3YjZlM2UxZGU4OGJhMWRiODMxNDJkNTNiM2E1N2YwZDA2ZDUxOQ==,isaacs,isaacs,"stream: Don't emit 'end' unless read() called

This solves the problem of calling `readable.pipe(writable)` after the
readable stream has already emitted 'end', as often is the case when
writing simple HTTP proxies.

The spirit of streams2 is that things will work properly, even if you
don't set them up right away on the first tick.

This approach breaks down, however, because pipe()ing from an ended
readable will just do nothing.  No more data will ever arrive, and the
writable will hang open forever never being ended.

However, that does not solve the case of adding a `on('end')` listener
after the stream has received the EOF chunk, if it was the first chunk
received (and thus, length was 0, and 'end' got emitted).  So, with
this, we defer the 'end' event emission until the read() function is
called.

Also, in pipe(), if the source has emitted 'end' already, we call the
cleanup/onend function on nextTick.  Piping from an already-ended stream
is thus the same as piping from a stream that is in the process of
ending.

Updates many tests that were relying on 'end' coming immediately, even
though they never read() from the req.

Fix #4942",https://api.github.com/repos/nodejs/node/git/commits/327b6e3e1de88ba1db83142d53b3a57f0d06d519,2013-03-10,"Updates many tests that were relying on 'end' coming immediately, even
though they never read() from the req"
54,MDY6Q29tbWl0MjcxOTM3Nzk6MzI3YjZlM2UxZGU4OGJhMWRiODMxNDJkNTNiM2E1N2YwZDA2ZDUxOQ==,isaacs,isaacs,"stream: Don't emit 'end' unless read() called

This solves the problem of calling `readable.pipe(writable)` after the
readable stream has already emitted 'end', as often is the case when
writing simple HTTP proxies.

The spirit of streams2 is that things will work properly, even if you
don't set them up right away on the first tick.

This approach breaks down, however, because pipe()ing from an ended
readable will just do nothing.  No more data will ever arrive, and the
writable will hang open forever never being ended.

However, that does not solve the case of adding a `on('end')` listener
after the stream has received the EOF chunk, if it was the first chunk
received (and thus, length was 0, and 'end' got emitted).  So, with
this, we defer the 'end' event emission until the read() function is
called.

Also, in pipe(), if the source has emitted 'end' already, we call the
cleanup/onend function on nextTick.  Piping from an already-ended stream
is thus the same as piping from a stream that is in the process of
ending.

Updates many tests that were relying on 'end' coming immediately, even
though they never read() from the req.

Fix #4942",https://api.github.com/repos/nodejs/node/git/commits/327b6e3e1de88ba1db83142d53b3a57f0d06d519,2013-03-10,Fix #4942
55,MDY6Q29tbWl0MjcxOTM3Nzk6YzlhNGVjOWM2MzkyZmVmYTdjZTZjNjYxNjhmNGM1MzVlYTA3MDJlMQ==,koichik,koichik,"http: ServerRequest does not timeout after 'end'

Fixes #4967",https://api.github.com/repos/nodejs/node/git/commits/c9a4ec9c6392fefa7ce6c66168f4c535ea0702e1,2013-03-10,ServerRequest does not timeout after 'end'
55,MDY6Q29tbWl0MjcxOTM3Nzk6YzlhNGVjOWM2MzkyZmVmYTdjZTZjNjYxNjhmNGM1MzVlYTA3MDJlMQ==,koichik,koichik,"http: ServerRequest does not timeout after 'end'

Fixes #4967",https://api.github.com/repos/nodejs/node/git/commits/c9a4ec9c6392fefa7ce6c66168f4c535ea0702e1,2013-03-10,Fixes #4967
56,MDY6Q29tbWl0MjcxOTM3Nzk6ZTI0MDBmODhkODVmNjdmYjI0MWEzMGY4ZjUyN2Y2MGY0NjRiYzA0Yw==,isaacs,koichik,"http: Do not setTimeout a not-yet-existent socket

Fixes #4967",https://api.github.com/repos/nodejs/node/git/commits/e2400f88d85f67fb241a30f8f527f60f464bc04c,2013-03-10,Do not setTimeout a not-yet-existent socket
56,MDY6Q29tbWl0MjcxOTM3Nzk6ZTI0MDBmODhkODVmNjdmYjI0MWEzMGY4ZjUyN2Y2MGY0NjRiYzA0Yw==,isaacs,koichik,"http: Do not setTimeout a not-yet-existent socket

Fixes #4967",https://api.github.com/repos/nodejs/node/git/commits/e2400f88d85f67fb241a30f8f527f60f464bc04c,2013-03-10,Fixes #4967
57,MDY6Q29tbWl0MjcxOTM3Nzk6NTc1N2NlNDhiNDFlYWEwYmZmZjg5YjNiOWJjNmY4ZjRlYmJmZWI1Mw==,hc,isaacs,"http: check if incoming parser has already been freed

Fix #4948

This adds a check before setting the incoming parser
to null. Under certain circumstances it'll already be set to
null by freeParser().

Otherwise this will cause node to crash as it tries to set
null on something that is already null.",https://api.github.com/repos/nodejs/node/git/commits/5757ce48b41eaa0bfff89b3b9bc6f8f4ebbfeb53,2013-03-08,check if incoming parser has already been freed
57,MDY6Q29tbWl0MjcxOTM3Nzk6NTc1N2NlNDhiNDFlYWEwYmZmZjg5YjNiOWJjNmY4ZjRlYmJmZWI1Mw==,hc,isaacs,"http: check if incoming parser has already been freed

Fix #4948

This adds a check before setting the incoming parser
to null. Under certain circumstances it'll already be set to
null by freeParser().

Otherwise this will cause node to crash as it tries to set
null on something that is already null.",https://api.github.com/repos/nodejs/node/git/commits/5757ce48b41eaa0bfff89b3b9bc6f8f4ebbfeb53,2013-03-08,"Fix #4948
This adds a check before setting the incoming parser
to null"
57,MDY6Q29tbWl0MjcxOTM3Nzk6NTc1N2NlNDhiNDFlYWEwYmZmZjg5YjNiOWJjNmY4ZjRlYmJmZWI1Mw==,hc,isaacs,"http: check if incoming parser has already been freed

Fix #4948

This adds a check before setting the incoming parser
to null. Under certain circumstances it'll already be set to
null by freeParser().

Otherwise this will cause node to crash as it tries to set
null on something that is already null.",https://api.github.com/repos/nodejs/node/git/commits/5757ce48b41eaa0bfff89b3b9bc6f8f4ebbfeb53,2013-03-08,"Under certain circumstances it'll already be set to
null by freeParser()"
57,MDY6Q29tbWl0MjcxOTM3Nzk6NTc1N2NlNDhiNDFlYWEwYmZmZjg5YjNiOWJjNmY4ZjRlYmJmZWI1Mw==,hc,isaacs,"http: check if incoming parser has already been freed

Fix #4948

This adds a check before setting the incoming parser
to null. Under certain circumstances it'll already be set to
null by freeParser().

Otherwise this will cause node to crash as it tries to set
null on something that is already null.",https://api.github.com/repos/nodejs/node/git/commits/5757ce48b41eaa0bfff89b3b9bc6f8f4ebbfeb53,2013-03-08,"Otherwise this will cause node to crash as it tries to set
null on something that is already null."
58,MDY6Q29tbWl0MjcxOTM3Nzk6NjMyYjdkODc1MGE5M2ZiZmVhMmM4MTBhZTEyM2JlNDE4MzFkZDYwMg==,isaacs,isaacs,"Revert ""http: check if incoming parser has already been freed""

This reverts commit 9f4c3b0d45f858d3d3021ef4b8edebf6005008ff.",https://api.github.com/repos/nodejs/node/git/commits/632b7d8750a93fbfea2c810ae123be41831dd602,2013-03-08,"Revert ""check if incoming parser has already been freed"""
58,MDY6Q29tbWl0MjcxOTM3Nzk6NjMyYjdkODc1MGE5M2ZiZmVhMmM4MTBhZTEyM2JlNDE4MzFkZDYwMg==,isaacs,isaacs,"Revert ""http: check if incoming parser has already been freed""

This reverts commit 9f4c3b0d45f858d3d3021ef4b8edebf6005008ff.",https://api.github.com/repos/nodejs/node/git/commits/632b7d8750a93fbfea2c810ae123be41831dd602,2013-03-08,This reverts commit 9f4c3b0d45f858d3d3021ef4b8edebf6005008ff.
59,MDY6Q29tbWl0MjcxOTM3Nzk6OWY0YzNiMGQ0NWY4NThkM2QzMDIxZWY0YjhlZGViZjYwMDUwMDhmZg==,hheennrryy@gmail.com,isaacs,"http: check if incoming parser has already been freed

Fix #4948

This adds a check before setting the incoming parser
to null. Under certain circumstances it'll already be set to
null by freeParser().

Otherwise this will cause node to crash as it tries to set
null on something that is already null.",https://api.github.com/repos/nodejs/node/git/commits/9f4c3b0d45f858d3d3021ef4b8edebf6005008ff,2013-03-08,check if incoming parser has already been freed
59,MDY6Q29tbWl0MjcxOTM3Nzk6OWY0YzNiMGQ0NWY4NThkM2QzMDIxZWY0YjhlZGViZjYwMDUwMDhmZg==,hheennrryy@gmail.com,isaacs,"http: check if incoming parser has already been freed

Fix #4948

This adds a check before setting the incoming parser
to null. Under certain circumstances it'll already be set to
null by freeParser().

Otherwise this will cause node to crash as it tries to set
null on something that is already null.",https://api.github.com/repos/nodejs/node/git/commits/9f4c3b0d45f858d3d3021ef4b8edebf6005008ff,2013-03-08,"Fix #4948
This adds a check before setting the incoming parser
to null"
59,MDY6Q29tbWl0MjcxOTM3Nzk6OWY0YzNiMGQ0NWY4NThkM2QzMDIxZWY0YjhlZGViZjYwMDUwMDhmZg==,hheennrryy@gmail.com,isaacs,"http: check if incoming parser has already been freed

Fix #4948

This adds a check before setting the incoming parser
to null. Under certain circumstances it'll already be set to
null by freeParser().

Otherwise this will cause node to crash as it tries to set
null on something that is already null.",https://api.github.com/repos/nodejs/node/git/commits/9f4c3b0d45f858d3d3021ef4b8edebf6005008ff,2013-03-08,"Under certain circumstances it'll already be set to
null by freeParser()"
59,MDY6Q29tbWl0MjcxOTM3Nzk6OWY0YzNiMGQ0NWY4NThkM2QzMDIxZWY0YjhlZGViZjYwMDUwMDhmZg==,hheennrryy@gmail.com,isaacs,"http: check if incoming parser has already been freed

Fix #4948

This adds a check before setting the incoming parser
to null. Under certain circumstances it'll already be set to
null by freeParser().

Otherwise this will cause node to crash as it tries to set
null on something that is already null.",https://api.github.com/repos/nodejs/node/git/commits/9f4c3b0d45f858d3d3021ef4b8edebf6005008ff,2013-03-08,"Otherwise this will cause node to crash as it tries to set
null on something that is already null."
60,MDY6Q29tbWl0MjcxOTM3Nzk6ZDI1OGZiMDIxMjUzMDMyOWI5OTQxYmUxOGJjNmU5MGQ3YWZlYzViNQ==,isaacs,isaacs,"http: More useful setTimeout API on server

This adds the following to HTTP:

* server.setTimeout(msecs, callback)
  Sets all new connections to time out after the specified time, at
  which point it emits 'timeout' on the server, passing the socket as an
  argument.
  In this way, timeouts can be handled in one place consistently.
* req.setTimeout(), res.setTimeout()
  Essentially an alias to req/res.socket.setTimeout(), but without
  having to delve into a ""buried"" object.  Adds a listener on the
  req/res object, but not on the socket.
* server.timeout
  Number of milliseconds before incoming connections time out.
  (Default=1000*60*2, as before.)

Furthermore, if the user sets up their own timeout listener on either
the server, the request, or the response, then the default behavior
(destroying the socket) is suppressed.

Fix #3460",https://api.github.com/repos/nodejs/node/git/commits/d258fb0212530329b9941be18bc6e90d7afec5b5,2013-03-04,More useful setTimeout API on server
60,MDY6Q29tbWl0MjcxOTM3Nzk6ZDI1OGZiMDIxMjUzMDMyOWI5OTQxYmUxOGJjNmU5MGQ3YWZlYzViNQ==,isaacs,isaacs,"http: More useful setTimeout API on server

This adds the following to HTTP:

* server.setTimeout(msecs, callback)
  Sets all new connections to time out after the specified time, at
  which point it emits 'timeout' on the server, passing the socket as an
  argument.
  In this way, timeouts can be handled in one place consistently.
* req.setTimeout(), res.setTimeout()
  Essentially an alias to req/res.socket.setTimeout(), but without
  having to delve into a ""buried"" object.  Adds a listener on the
  req/res object, but not on the socket.
* server.timeout
  Number of milliseconds before incoming connections time out.
  (Default=1000*60*2, as before.)

Furthermore, if the user sets up their own timeout listener on either
the server, the request, or the response, then the default behavior
(destroying the socket) is suppressed.

Fix #3460",https://api.github.com/repos/nodejs/node/git/commits/d258fb0212530329b9941be18bc6e90d7afec5b5,2013-03-04,This adds the following to HTTP
60,MDY6Q29tbWl0MjcxOTM3Nzk6ZDI1OGZiMDIxMjUzMDMyOWI5OTQxYmUxOGJjNmU5MGQ3YWZlYzViNQ==,isaacs,isaacs,"http: More useful setTimeout API on server

This adds the following to HTTP:

* server.setTimeout(msecs, callback)
  Sets all new connections to time out after the specified time, at
  which point it emits 'timeout' on the server, passing the socket as an
  argument.
  In this way, timeouts can be handled in one place consistently.
* req.setTimeout(), res.setTimeout()
  Essentially an alias to req/res.socket.setTimeout(), but without
  having to delve into a ""buried"" object.  Adds a listener on the
  req/res object, but not on the socket.
* server.timeout
  Number of milliseconds before incoming connections time out.
  (Default=1000*60*2, as before.)

Furthermore, if the user sets up their own timeout listener on either
the server, the request, or the response, then the default behavior
(destroying the socket) is suppressed.

Fix #3460",https://api.github.com/repos/nodejs/node/git/commits/d258fb0212530329b9941be18bc6e90d7afec5b5,2013-03-04,"  Sets all new connections to time out after the specified time, at
  which point it emits 'timeout' on the server, passing the socket as an
  argument"
60,MDY6Q29tbWl0MjcxOTM3Nzk6ZDI1OGZiMDIxMjUzMDMyOWI5OTQxYmUxOGJjNmU5MGQ3YWZlYzViNQ==,isaacs,isaacs,"http: More useful setTimeout API on server

This adds the following to HTTP:

* server.setTimeout(msecs, callback)
  Sets all new connections to time out after the specified time, at
  which point it emits 'timeout' on the server, passing the socket as an
  argument.
  In this way, timeouts can be handled in one place consistently.
* req.setTimeout(), res.setTimeout()
  Essentially an alias to req/res.socket.setTimeout(), but without
  having to delve into a ""buried"" object.  Adds a listener on the
  req/res object, but not on the socket.
* server.timeout
  Number of milliseconds before incoming connections time out.
  (Default=1000*60*2, as before.)

Furthermore, if the user sets up their own timeout listener on either
the server, the request, or the response, then the default behavior
(destroying the socket) is suppressed.

Fix #3460",https://api.github.com/repos/nodejs/node/git/commits/d258fb0212530329b9941be18bc6e90d7afec5b5,2013-03-04,"  In this way, timeouts can be handled in one place consistently"
60,MDY6Q29tbWl0MjcxOTM3Nzk6ZDI1OGZiMDIxMjUzMDMyOWI5OTQxYmUxOGJjNmU5MGQ3YWZlYzViNQ==,isaacs,isaacs,"http: More useful setTimeout API on server

This adds the following to HTTP:

* server.setTimeout(msecs, callback)
  Sets all new connections to time out after the specified time, at
  which point it emits 'timeout' on the server, passing the socket as an
  argument.
  In this way, timeouts can be handled in one place consistently.
* req.setTimeout(), res.setTimeout()
  Essentially an alias to req/res.socket.setTimeout(), but without
  having to delve into a ""buried"" object.  Adds a listener on the
  req/res object, but not on the socket.
* server.timeout
  Number of milliseconds before incoming connections time out.
  (Default=1000*60*2, as before.)

Furthermore, if the user sets up their own timeout listener on either
the server, the request, or the response, then the default behavior
(destroying the socket) is suppressed.

Fix #3460",https://api.github.com/repos/nodejs/node/git/commits/d258fb0212530329b9941be18bc6e90d7afec5b5,2013-03-04,"  Essentially an alias to req/res.socket.setTimeout(), but without
  having to delve into a ""buried"" object"
60,MDY6Q29tbWl0MjcxOTM3Nzk6ZDI1OGZiMDIxMjUzMDMyOWI5OTQxYmUxOGJjNmU5MGQ3YWZlYzViNQ==,isaacs,isaacs,"http: More useful setTimeout API on server

This adds the following to HTTP:

* server.setTimeout(msecs, callback)
  Sets all new connections to time out after the specified time, at
  which point it emits 'timeout' on the server, passing the socket as an
  argument.
  In this way, timeouts can be handled in one place consistently.
* req.setTimeout(), res.setTimeout()
  Essentially an alias to req/res.socket.setTimeout(), but without
  having to delve into a ""buried"" object.  Adds a listener on the
  req/res object, but not on the socket.
* server.timeout
  Number of milliseconds before incoming connections time out.
  (Default=1000*60*2, as before.)

Furthermore, if the user sets up their own timeout listener on either
the server, the request, or the response, then the default behavior
(destroying the socket) is suppressed.

Fix #3460",https://api.github.com/repos/nodejs/node/git/commits/d258fb0212530329b9941be18bc6e90d7afec5b5,2013-03-04," Adds a listener on the
  req/res object, but not on the socket"
60,MDY6Q29tbWl0MjcxOTM3Nzk6ZDI1OGZiMDIxMjUzMDMyOWI5OTQxYmUxOGJjNmU5MGQ3YWZlYzViNQ==,isaacs,isaacs,"http: More useful setTimeout API on server

This adds the following to HTTP:

* server.setTimeout(msecs, callback)
  Sets all new connections to time out after the specified time, at
  which point it emits 'timeout' on the server, passing the socket as an
  argument.
  In this way, timeouts can be handled in one place consistently.
* req.setTimeout(), res.setTimeout()
  Essentially an alias to req/res.socket.setTimeout(), but without
  having to delve into a ""buried"" object.  Adds a listener on the
  req/res object, but not on the socket.
* server.timeout
  Number of milliseconds before incoming connections time out.
  (Default=1000*60*2, as before.)

Furthermore, if the user sets up their own timeout listener on either
the server, the request, or the response, then the default behavior
(destroying the socket) is suppressed.

Fix #3460",https://api.github.com/repos/nodejs/node/git/commits/d258fb0212530329b9941be18bc6e90d7afec5b5,2013-03-04,  Number of milliseconds before incoming connections time out
60,MDY6Q29tbWl0MjcxOTM3Nzk6ZDI1OGZiMDIxMjUzMDMyOWI5OTQxYmUxOGJjNmU5MGQ3YWZlYzViNQ==,isaacs,isaacs,"http: More useful setTimeout API on server

This adds the following to HTTP:

* server.setTimeout(msecs, callback)
  Sets all new connections to time out after the specified time, at
  which point it emits 'timeout' on the server, passing the socket as an
  argument.
  In this way, timeouts can be handled in one place consistently.
* req.setTimeout(), res.setTimeout()
  Essentially an alias to req/res.socket.setTimeout(), but without
  having to delve into a ""buried"" object.  Adds a listener on the
  req/res object, but not on the socket.
* server.timeout
  Number of milliseconds before incoming connections time out.
  (Default=1000*60*2, as before.)

Furthermore, if the user sets up their own timeout listener on either
the server, the request, or the response, then the default behavior
(destroying the socket) is suppressed.

Fix #3460",https://api.github.com/repos/nodejs/node/git/commits/d258fb0212530329b9941be18bc6e90d7afec5b5,2013-03-04,"  (Default=1000*60*2, as before.)
Furthermore, if the user sets up their own timeout listener on either
the server, the request, or the response, then the default behavior
(destroying the socket) is suppressed"
60,MDY6Q29tbWl0MjcxOTM3Nzk6ZDI1OGZiMDIxMjUzMDMyOWI5OTQxYmUxOGJjNmU5MGQ3YWZlYzViNQ==,isaacs,isaacs,"http: More useful setTimeout API on server

This adds the following to HTTP:

* server.setTimeout(msecs, callback)
  Sets all new connections to time out after the specified time, at
  which point it emits 'timeout' on the server, passing the socket as an
  argument.
  In this way, timeouts can be handled in one place consistently.
* req.setTimeout(), res.setTimeout()
  Essentially an alias to req/res.socket.setTimeout(), but without
  having to delve into a ""buried"" object.  Adds a listener on the
  req/res object, but not on the socket.
* server.timeout
  Number of milliseconds before incoming connections time out.
  (Default=1000*60*2, as before.)

Furthermore, if the user sets up their own timeout listener on either
the server, the request, or the response, then the default behavior
(destroying the socket) is suppressed.

Fix #3460",https://api.github.com/repos/nodejs/node/git/commits/d258fb0212530329b9941be18bc6e90d7afec5b5,2013-03-04,Fix #3460
61,MDY6Q29tbWl0MjcxOTM3Nzk6MjViYTk3MWY0MWQ0ZGRhZjdlMjQxNjQ1Y2ZjMjkxN2JkM2FmYTFmNw==,Eugene Girshov,isaacs,"http: fix multiple timeout events

Fixed up slightly by @isaacs so as not to miss 'timeout' events in some
cases.",https://api.github.com/repos/nodejs/node/git/commits/25ba971f41d4ddaf7e241645cfc2917bd3afa1f7,2013-03-04,fix multiple timeout events
61,MDY6Q29tbWl0MjcxOTM3Nzk6MjViYTk3MWY0MWQ0ZGRhZjdlMjQxNjQ1Y2ZjMjkxN2JkM2FmYTFmNw==,Eugene Girshov,isaacs,"http: fix multiple timeout events

Fixed up slightly by @isaacs so as not to miss 'timeout' events in some
cases.",https://api.github.com/repos/nodejs/node/git/commits/25ba971f41d4ddaf7e241645cfc2917bd3afa1f7,2013-03-04,"Fixed up slightly by @isaacs so as not to miss 'timeout' events in some
cases."
62,MDY6Q29tbWl0MjcxOTM3Nzk6MmQ1MTAzNmZiOTY1NWQ1Yjc3NWU3ZjllNWFiMzYyY2Q5MTQ2MGNhMw==,Ben Noordhuis,Ben Noordhuis,"Merge remote-tracking branch 'origin/v0.8'

Conflicts:
	doc/api/http.markdown
	test/simple/test-crypto.js",https://api.github.com/repos/nodejs/node/git/commits/2d51036fb9655d5b775e7f9e5ab362cd91460ca3,2013-03-02,Merge remote-tracking branch 'origin/v0.8'
62,MDY6Q29tbWl0MjcxOTM3Nzk6MmQ1MTAzNmZiOTY1NWQ1Yjc3NWU3ZjllNWFiMzYyY2Q5MTQ2MGNhMw==,Ben Noordhuis,Ben Noordhuis,"Merge remote-tracking branch 'origin/v0.8'

Conflicts:
	doc/api/http.markdown
	test/simple/test-crypto.js",https://api.github.com/repos/nodejs/node/git/commits/2d51036fb9655d5b775e7f9e5ab362cd91460ca3,2013-03-02,Conflicts
62,MDY6Q29tbWl0MjcxOTM3Nzk6MmQ1MTAzNmZiOTY1NWQ1Yjc3NWU3ZjllNWFiMzYyY2Q5MTQ2MGNhMw==,Ben Noordhuis,Ben Noordhuis,"Merge remote-tracking branch 'origin/v0.8'

Conflicts:
	doc/api/http.markdown
	test/simple/test-crypto.js",https://api.github.com/repos/nodejs/node/git/commits/2d51036fb9655d5b775e7f9e5ab362cd91460ca3,2013-03-02,	doc/api/	test/simple/test-crypto.js
63,MDY6Q29tbWl0MjcxOTM3Nzk6NzUzMDVmM2JhYmQ5ZTkyN2U5MmIwZDliNzBkOGJiMDI2NDkyZWJkMA==,Trevor Norris,isaacs,"events: add check for listeners length

Ability to return just the length of listeners for a given type, using
EventEmitter.listenerCount(emitter, event). This will be a lot cheaper
than creating a copy of the listeners array just to check its length.",https://api.github.com/repos/nodejs/node/git/commits/75305f3babd9e927e92b0d9b70d8bb026492ebd0,2013-02-14,events: add check for listeners length
63,MDY6Q29tbWl0MjcxOTM3Nzk6NzUzMDVmM2JhYmQ5ZTkyN2U5MmIwZDliNzBkOGJiMDI2NDkyZWJkMA==,Trevor Norris,isaacs,"events: add check for listeners length

Ability to return just the length of listeners for a given type, using
EventEmitter.listenerCount(emitter, event). This will be a lot cheaper
than creating a copy of the listeners array just to check its length.",https://api.github.com/repos/nodejs/node/git/commits/75305f3babd9e927e92b0d9b70d8bb026492ebd0,2013-02-14,"Ability to return just the length of listeners for a given type, using
EventEmitter.listenerCount(emitter, event)"
63,MDY6Q29tbWl0MjcxOTM3Nzk6NzUzMDVmM2JhYmQ5ZTkyN2U5MmIwZDliNzBkOGJiMDI2NDkyZWJkMA==,Trevor Norris,isaacs,"events: add check for listeners length

Ability to return just the length of listeners for a given type, using
EventEmitter.listenerCount(emitter, event). This will be a lot cheaper
than creating a copy of the listeners array just to check its length.",https://api.github.com/repos/nodejs/node/git/commits/75305f3babd9e927e92b0d9b70d8bb026492ebd0,2013-02-14,"This will be a lot cheaper
than creating a copy of the listeners array just to check its length."
64,MDY6Q29tbWl0MjcxOTM3Nzk6ZjI2MzYyZTkzODFkODhkNGM5MDZlMzYyNGY5MGZjNzZlOTA4N2MyMA==,Ben Noordhuis,Ben Noordhuis,"http: use socket.once, not socket.on

Register the 'close' event listener with .once(), not .on().

It doesn't matter in the grand scheme of things because the listener
doesn't keep references to any heavy-weight objects but using .once()
for a oneshot listener is something of a best practice.",https://api.github.com/repos/nodejs/node/git/commits/f26362e9381d88d4c906e3624f90fc76e9087c20,2013-03-01,"use socket.once, not socket.on"
64,MDY6Q29tbWl0MjcxOTM3Nzk6ZjI2MzYyZTkzODFkODhkNGM5MDZlMzYyNGY5MGZjNzZlOTA4N2MyMA==,Ben Noordhuis,Ben Noordhuis,"http: use socket.once, not socket.on

Register the 'close' event listener with .once(), not .on().

It doesn't matter in the grand scheme of things because the listener
doesn't keep references to any heavy-weight objects but using .once()
for a oneshot listener is something of a best practice.",https://api.github.com/repos/nodejs/node/git/commits/f26362e9381d88d4c906e3624f90fc76e9087c20,2013-03-01,"Register the 'close' event listener with .once(), not .on()"
64,MDY6Q29tbWl0MjcxOTM3Nzk6ZjI2MzYyZTkzODFkODhkNGM5MDZlMzYyNGY5MGZjNzZlOTA4N2MyMA==,Ben Noordhuis,Ben Noordhuis,"http: use socket.once, not socket.on

Register the 'close' event listener with .once(), not .on().

It doesn't matter in the grand scheme of things because the listener
doesn't keep references to any heavy-weight objects but using .once()
for a oneshot listener is something of a best practice.",https://api.github.com/repos/nodejs/node/git/commits/f26362e9381d88d4c906e3624f90fc76e9087c20,2013-03-01,"It doesn't matter in the grand scheme of things because the listener
doesn't keep references to any heavy-weight objects but using .once()
for a oneshot listener is something of a best practice."
65,MDY6Q29tbWl0MjcxOTM3Nzk6ODg2NDRlYWEyZGIzZTliNjAzZWZjYTAwZTY0MGZmMDhkOTMyMGMxYg==,isaacs,isaacs,"stream: There is no _read cb, there is only push

This makes it so that `stream.push(chunk)` is the only way to signal the
end of reading, removing the confusing disparity between the
callback-style _read method, and the fact that most real-world streams
do not have a 1:1 corollation between the ""please give me data"" event,
and the actual arrival of a chunk of data.

It is still possible, of course, to implement a `CallbackReadable` on
top of this.  Simply provide a method like this as the callback:

    function readCallback(er, chunk) {
      if (er)
        stream.emit('error', er);
      else
        stream.push(chunk);
    }

However, *only* fs streams actually would behave in this way, so it
makes not a lot of sense to make TCP, TLS, HTTP, and all the rest have
to bend into this uncomfortable paradigm.",https://api.github.com/repos/nodejs/node/git/commits/88644eaa2db3e9b603efca00e640ff08d9320c1b,2013-02-28,"stream: There is no _read cb, there is only push"
65,MDY6Q29tbWl0MjcxOTM3Nzk6ODg2NDRlYWEyZGIzZTliNjAzZWZjYTAwZTY0MGZmMDhkOTMyMGMxYg==,isaacs,isaacs,"stream: There is no _read cb, there is only push

This makes it so that `stream.push(chunk)` is the only way to signal the
end of reading, removing the confusing disparity between the
callback-style _read method, and the fact that most real-world streams
do not have a 1:1 corollation between the ""please give me data"" event,
and the actual arrival of a chunk of data.

It is still possible, of course, to implement a `CallbackReadable` on
top of this.  Simply provide a method like this as the callback:

    function readCallback(er, chunk) {
      if (er)
        stream.emit('error', er);
      else
        stream.push(chunk);
    }

However, *only* fs streams actually would behave in this way, so it
makes not a lot of sense to make TCP, TLS, HTTP, and all the rest have
to bend into this uncomfortable paradigm.",https://api.github.com/repos/nodejs/node/git/commits/88644eaa2db3e9b603efca00e640ff08d9320c1b,2013-02-28,"This makes it so that `stream.push(chunk)` is the only way to signal the
end of reading, removing the confusing disparity between the
callback-style _read method, and the fact that most real-world streams
do not have a 1:1 corollation between the ""please give me data"" event,
and the actual arrival of a chunk of data"
65,MDY6Q29tbWl0MjcxOTM3Nzk6ODg2NDRlYWEyZGIzZTliNjAzZWZjYTAwZTY0MGZmMDhkOTMyMGMxYg==,isaacs,isaacs,"stream: There is no _read cb, there is only push

This makes it so that `stream.push(chunk)` is the only way to signal the
end of reading, removing the confusing disparity between the
callback-style _read method, and the fact that most real-world streams
do not have a 1:1 corollation between the ""please give me data"" event,
and the actual arrival of a chunk of data.

It is still possible, of course, to implement a `CallbackReadable` on
top of this.  Simply provide a method like this as the callback:

    function readCallback(er, chunk) {
      if (er)
        stream.emit('error', er);
      else
        stream.push(chunk);
    }

However, *only* fs streams actually would behave in this way, so it
makes not a lot of sense to make TCP, TLS, HTTP, and all the rest have
to bend into this uncomfortable paradigm.",https://api.github.com/repos/nodejs/node/git/commits/88644eaa2db3e9b603efca00e640ff08d9320c1b,2013-02-28,"It is still possible, of course, to implement a `CallbackReadable` on
top of this"
65,MDY6Q29tbWl0MjcxOTM3Nzk6ODg2NDRlYWEyZGIzZTliNjAzZWZjYTAwZTY0MGZmMDhkOTMyMGMxYg==,isaacs,isaacs,"stream: There is no _read cb, there is only push

This makes it so that `stream.push(chunk)` is the only way to signal the
end of reading, removing the confusing disparity between the
callback-style _read method, and the fact that most real-world streams
do not have a 1:1 corollation between the ""please give me data"" event,
and the actual arrival of a chunk of data.

It is still possible, of course, to implement a `CallbackReadable` on
top of this.  Simply provide a method like this as the callback:

    function readCallback(er, chunk) {
      if (er)
        stream.emit('error', er);
      else
        stream.push(chunk);
    }

However, *only* fs streams actually would behave in this way, so it
makes not a lot of sense to make TCP, TLS, HTTP, and all the rest have
to bend into this uncomfortable paradigm.",https://api.github.com/repos/nodejs/node/git/commits/88644eaa2db3e9b603efca00e640ff08d9320c1b,2013-02-28, Simply provide a method like this as the callback
65,MDY6Q29tbWl0MjcxOTM3Nzk6ODg2NDRlYWEyZGIzZTliNjAzZWZjYTAwZTY0MGZmMDhkOTMyMGMxYg==,isaacs,isaacs,"stream: There is no _read cb, there is only push

This makes it so that `stream.push(chunk)` is the only way to signal the
end of reading, removing the confusing disparity between the
callback-style _read method, and the fact that most real-world streams
do not have a 1:1 corollation between the ""please give me data"" event,
and the actual arrival of a chunk of data.

It is still possible, of course, to implement a `CallbackReadable` on
top of this.  Simply provide a method like this as the callback:

    function readCallback(er, chunk) {
      if (er)
        stream.emit('error', er);
      else
        stream.push(chunk);
    }

However, *only* fs streams actually would behave in this way, so it
makes not a lot of sense to make TCP, TLS, HTTP, and all the rest have
to bend into this uncomfortable paradigm.",https://api.github.com/repos/nodejs/node/git/commits/88644eaa2db3e9b603efca00e640ff08d9320c1b,2013-02-28,"      else
However, *only* fs streams actually would behave in this way, so it
makes not a lot of sense to make TCP, TLS, HTTP, and all the rest have
to bend into this uncomfortable paradigm."
66,MDY6Q29tbWl0MjcxOTM3Nzk6Y2I4NzkyMGJhOWMyODcxNjMwZmYzN2FmNmYwMTMxZmIxOTY4ZGM5NQ==,Ben Noordhuis,Ben Noordhuis,"Merge remote-tracking branch 'origin/v0.8'

Conflicts:
	AUTHORS
	ChangeLog
	deps/uv/src/unix/pipe.c
	lib/http.js
	src/node_version.h",https://api.github.com/repos/nodejs/node/git/commits/cb87920ba9c2871630ff37af6f0131fb1968dc95,2013-02-28,Merge remote-tracking branch 'origin/v0.8'
66,MDY6Q29tbWl0MjcxOTM3Nzk6Y2I4NzkyMGJhOWMyODcxNjMwZmYzN2FmNmYwMTMxZmIxOTY4ZGM5NQ==,Ben Noordhuis,Ben Noordhuis,"Merge remote-tracking branch 'origin/v0.8'

Conflicts:
	AUTHORS
	ChangeLog
	deps/uv/src/unix/pipe.c
	lib/http.js
	src/node_version.h",https://api.github.com/repos/nodejs/node/git/commits/cb87920ba9c2871630ff37af6f0131fb1968dc95,2013-02-28,Conflicts
66,MDY6Q29tbWl0MjcxOTM3Nzk6Y2I4NzkyMGJhOWMyODcxNjMwZmYzN2FmNmYwMTMxZmIxOTY4ZGM5NQ==,Ben Noordhuis,Ben Noordhuis,"Merge remote-tracking branch 'origin/v0.8'

Conflicts:
	AUTHORS
	ChangeLog
	deps/uv/src/unix/pipe.c
	lib/http.js
	src/node_version.h",https://api.github.com/repos/nodejs/node/git/commits/cb87920ba9c2871630ff37af6f0131fb1968dc95,2013-02-28,"	AUTHORS
	ChangeLog
	deps/uv/src/unix/pipe.c
	lib/	src/node_version.h"
67,MDY6Q29tbWl0MjcxOTM3Nzk6ZDRhMjk3Y2NiMDU0MDE5YWE1ODJiYWIyYTA3NDZmNzYyYzkzMDE1OQ==,Ben Noordhuis,Ben Noordhuis,"http: fix case in 505 response status line

Fixes #4850.",https://api.github.com/repos/nodejs/node/git/commits/d4a297ccb054019aa582bab2a0746f762c930159,2013-02-26,fix case in 505 response status line
67,MDY6Q29tbWl0MjcxOTM3Nzk6ZDRhMjk3Y2NiMDU0MDE5YWE1ODJiYWIyYTA3NDZmNzYyYzkzMDE1OQ==,Ben Noordhuis,Ben Noordhuis,"http: fix case in 505 response status line

Fixes #4850.",https://api.github.com/repos/nodejs/node/git/commits/d4a297ccb054019aa582bab2a0746f762c930159,2013-02-26,Fixes #4850.
68,MDY6Q29tbWl0MjcxOTM3Nzk6YjBlN2RiZjJjMGJhYjM3MDE4ZTY0ZDE0ZDE3NmQwMjM2YzExY2Q4Nw==,isaacs,isaacs,"http: Do not free the wrong parser on socket close

This appears to fix #4673.  That bug is very hard to reproduce, so it's
hard to tell for certain, but this approach is more correct anyway.

Hat-tip: @dougwilson",https://api.github.com/repos/nodejs/node/git/commits/b0e7dbf2c0bab37018e64d14d176d0236c11cd87,2013-02-25,Do not free the wrong parser on socket close
68,MDY6Q29tbWl0MjcxOTM3Nzk6YjBlN2RiZjJjMGJhYjM3MDE4ZTY0ZDE0ZDE3NmQwMjM2YzExY2Q4Nw==,isaacs,isaacs,"http: Do not free the wrong parser on socket close

This appears to fix #4673.  That bug is very hard to reproduce, so it's
hard to tell for certain, but this approach is more correct anyway.

Hat-tip: @dougwilson",https://api.github.com/repos/nodejs/node/git/commits/b0e7dbf2c0bab37018e64d14d176d0236c11cd87,2013-02-25,This appears to fix #4673
68,MDY6Q29tbWl0MjcxOTM3Nzk6YjBlN2RiZjJjMGJhYjM3MDE4ZTY0ZDE0ZDE3NmQwMjM2YzExY2Q4Nw==,isaacs,isaacs,"http: Do not free the wrong parser on socket close

This appears to fix #4673.  That bug is very hard to reproduce, so it's
hard to tell for certain, but this approach is more correct anyway.

Hat-tip: @dougwilson",https://api.github.com/repos/nodejs/node/git/commits/b0e7dbf2c0bab37018e64d14d176d0236c11cd87,2013-02-25," That bug is very hard to reproduce, so it's
hard to tell for certain, but this approach is more correct anyway"
68,MDY6Q29tbWl0MjcxOTM3Nzk6YjBlN2RiZjJjMGJhYjM3MDE4ZTY0ZDE0ZDE3NmQwMjM2YzExY2Q4Nw==,isaacs,isaacs,"http: Do not free the wrong parser on socket close

This appears to fix #4673.  That bug is very hard to reproduce, so it's
hard to tell for certain, but this approach is more correct anyway.

Hat-tip: @dougwilson",https://api.github.com/repos/nodejs/node/git/commits/b0e7dbf2c0bab37018e64d14d176d0236c11cd87,2013-02-25,Hat-tip: @dougwilson
69,MDY6Q29tbWl0MjcxOTM3Nzk6ZjlhMDE0MGVmMTQwZDg5ZmVkMWExOTRjNDEwY2Q2OWVkOTk5MDMwNQ==,isaacs,isaacs,http: Handle hangup writes more gently,https://api.github.com/repos/nodejs/node/git/commits/f9a0140ef140d89fed1a194c410cd69ed9990305,2013-02-22,Handle hangup writes more gently
69,MDY6Q29tbWl0MjcxOTM3Nzk6ZjlhMDE0MGVmMTQwZDg5ZmVkMWExOTRjNDEwY2Q2OWVkOTk5MDMwNQ==,isaacs,isaacs,http: Handle hangup writes more gently,https://api.github.com/repos/nodejs/node/git/commits/f9a0140ef140d89fed1a194c410cd69ed9990305,2013-02-22,
70,MDY6Q29tbWl0MjcxOTM3Nzk6MDliMTIxMjI1NDQ0NWQxODQ4ZTM2OTQ2MmQzZjkxZmIxYzNmM2NmNA==,isaacs,isaacs,http: Add fixme comment about ECONNRESET handling,https://api.github.com/repos/nodejs/node/git/commits/09b1212254445d1848e369462d3f91fb1c3f3cf4,2013-02-18,Add fixme comment about ECONNRESET handling
70,MDY6Q29tbWl0MjcxOTM3Nzk6MDliMTIxMjI1NDQ0NWQxODQ4ZTM2OTQ2MmQzZjkxZmIxYzNmM2NmNA==,isaacs,isaacs,http: Add fixme comment about ECONNRESET handling,https://api.github.com/repos/nodejs/node/git/commits/09b1212254445d1848e369462d3f91fb1c3f3cf4,2013-02-18,
71,MDY6Q29tbWl0MjcxOTM3Nzk6ZDc1ZTM5Nzk0YmI5ZTU2NjNlOTMwMTA4N2MwNjE1MWY0MjA3MWRmZQ==,isaacs,isaacs,"Merge remote-tracking branch 'ry/v0.8' into master

Conflicts:
	AUTHORS
	ChangeLog
	lib/http.js
	src/node_version.h
	test/simple/test-http-header-response-splitting.js",https://api.github.com/repos/nodejs/node/git/commits/d75e39794bb9e5663e9301087c06151f42071dfe,2013-02-18,Merge remote-tracking branch 'ry/v0.8' into master
71,MDY6Q29tbWl0MjcxOTM3Nzk6ZDc1ZTM5Nzk0YmI5ZTU2NjNlOTMwMTA4N2MwNjE1MWY0MjA3MWRmZQ==,isaacs,isaacs,"Merge remote-tracking branch 'ry/v0.8' into master

Conflicts:
	AUTHORS
	ChangeLog
	lib/http.js
	src/node_version.h
	test/simple/test-http-header-response-splitting.js",https://api.github.com/repos/nodejs/node/git/commits/d75e39794bb9e5663e9301087c06151f42071dfe,2013-02-18,Conflicts
71,MDY6Q29tbWl0MjcxOTM3Nzk6ZDc1ZTM5Nzk0YmI5ZTU2NjNlOTMwMTA4N2MwNjE1MWY0MjA3MWRmZQ==,isaacs,isaacs,"Merge remote-tracking branch 'ry/v0.8' into master

Conflicts:
	AUTHORS
	ChangeLog
	lib/http.js
	src/node_version.h
	test/simple/test-http-header-response-splitting.js",https://api.github.com/repos/nodejs/node/git/commits/d75e39794bb9e5663e9301087c06151f42071dfe,2013-02-18,"	AUTHORS
	ChangeLog
	lib/	src/node_version.h
	test/simple/test-http-header-response-splitting.js"
72,MDY6Q29tbWl0MjcxOTM3Nzk6OTg3MzM4ZmUzMWIzOWI3ZjU3YThmNTY0NTU5MzQyNTcyMmJhNDBhZg==,isaacs,isaacs,"http: Do not let Agent hand out destroyed sockets

Fix #4373",https://api.github.com/repos/nodejs/node/git/commits/987338fe31b39b7f57a8f5645593425722ba40af,2013-02-14,Do not let Agent hand out destroyed sockets
72,MDY6Q29tbWl0MjcxOTM3Nzk6OTg3MzM4ZmUzMWIzOWI3ZjU3YThmNTY0NTU5MzQyNTcyMmJhNDBhZg==,isaacs,isaacs,"http: Do not let Agent hand out destroyed sockets

Fix #4373",https://api.github.com/repos/nodejs/node/git/commits/987338fe31b39b7f57a8f5645593425722ba40af,2013-02-14,Fix #4373
73,MDY6Q29tbWl0MjcxOTM3Nzk6YzlkY2Y1NzE4Y2Y0NzMyMmIwMGYyOTk0Nzk3YWViYjY4ZDdlZDBmYg==,isaacs,isaacs,"http: Raise hangup error on destroyed socket write

Prior to v0.10, Node ignored ECONNRESET errors in many situations.
There *are* valid cases in which ECONNRESET should be ignored as a
normal part of the TCP dance, but in many others, it's a very relevant
signal that must be heeded with care.

Exacerbating this problem, if the OutgoingMessage does not have a
req.connection._handle, it assumes that it is in the process of
connecting, and thus buffers writes up in an array.

The problem happens when you reuse a socket between two requests, and it
is destroyed abruptly in between them.  The writes will be buffered,
because the socket has no handle, but it's not ever going to GET a
handle, because it's not connecting, it's destroyed.

The proper fix is to treat ECONNRESET correctly.  However, this is a
behavior/semantics change, and cannot land in a stable branch.

Fix #4775",https://api.github.com/repos/nodejs/node/git/commits/c9dcf5718cf47322b00f2994797aebb68d7ed0fb,2013-02-14,Raise hangup error on destroyed socket write
73,MDY6Q29tbWl0MjcxOTM3Nzk6YzlkY2Y1NzE4Y2Y0NzMyMmIwMGYyOTk0Nzk3YWViYjY4ZDdlZDBmYg==,isaacs,isaacs,"http: Raise hangup error on destroyed socket write

Prior to v0.10, Node ignored ECONNRESET errors in many situations.
There *are* valid cases in which ECONNRESET should be ignored as a
normal part of the TCP dance, but in many others, it's a very relevant
signal that must be heeded with care.

Exacerbating this problem, if the OutgoingMessage does not have a
req.connection._handle, it assumes that it is in the process of
connecting, and thus buffers writes up in an array.

The problem happens when you reuse a socket between two requests, and it
is destroyed abruptly in between them.  The writes will be buffered,
because the socket has no handle, but it's not ever going to GET a
handle, because it's not connecting, it's destroyed.

The proper fix is to treat ECONNRESET correctly.  However, this is a
behavior/semantics change, and cannot land in a stable branch.

Fix #4775",https://api.github.com/repos/nodejs/node/git/commits/c9dcf5718cf47322b00f2994797aebb68d7ed0fb,2013-02-14,"Prior to v0.10, Node ignored ECONNRESET errors in many situations"
73,MDY6Q29tbWl0MjcxOTM3Nzk6YzlkY2Y1NzE4Y2Y0NzMyMmIwMGYyOTk0Nzk3YWViYjY4ZDdlZDBmYg==,isaacs,isaacs,"http: Raise hangup error on destroyed socket write

Prior to v0.10, Node ignored ECONNRESET errors in many situations.
There *are* valid cases in which ECONNRESET should be ignored as a
normal part of the TCP dance, but in many others, it's a very relevant
signal that must be heeded with care.

Exacerbating this problem, if the OutgoingMessage does not have a
req.connection._handle, it assumes that it is in the process of
connecting, and thus buffers writes up in an array.

The problem happens when you reuse a socket between two requests, and it
is destroyed abruptly in between them.  The writes will be buffered,
because the socket has no handle, but it's not ever going to GET a
handle, because it's not connecting, it's destroyed.

The proper fix is to treat ECONNRESET correctly.  However, this is a
behavior/semantics change, and cannot land in a stable branch.

Fix #4775",https://api.github.com/repos/nodejs/node/git/commits/c9dcf5718cf47322b00f2994797aebb68d7ed0fb,2013-02-14,"There *are* valid cases in which ECONNRESET should be ignored as a
normal part of the TCP dance, but in many others, it's a very relevant
signal that must be heeded with care"
73,MDY6Q29tbWl0MjcxOTM3Nzk6YzlkY2Y1NzE4Y2Y0NzMyMmIwMGYyOTk0Nzk3YWViYjY4ZDdlZDBmYg==,isaacs,isaacs,"http: Raise hangup error on destroyed socket write

Prior to v0.10, Node ignored ECONNRESET errors in many situations.
There *are* valid cases in which ECONNRESET should be ignored as a
normal part of the TCP dance, but in many others, it's a very relevant
signal that must be heeded with care.

Exacerbating this problem, if the OutgoingMessage does not have a
req.connection._handle, it assumes that it is in the process of
connecting, and thus buffers writes up in an array.

The problem happens when you reuse a socket between two requests, and it
is destroyed abruptly in between them.  The writes will be buffered,
because the socket has no handle, but it's not ever going to GET a
handle, because it's not connecting, it's destroyed.

The proper fix is to treat ECONNRESET correctly.  However, this is a
behavior/semantics change, and cannot land in a stable branch.

Fix #4775",https://api.github.com/repos/nodejs/node/git/commits/c9dcf5718cf47322b00f2994797aebb68d7ed0fb,2013-02-14,"Exacerbating this problem, if the OutgoingMessage does not have a
req.connection._handle, it assumes that it is in the process of
connecting, and thus buffers writes up in an array"
73,MDY6Q29tbWl0MjcxOTM3Nzk6YzlkY2Y1NzE4Y2Y0NzMyMmIwMGYyOTk0Nzk3YWViYjY4ZDdlZDBmYg==,isaacs,isaacs,"http: Raise hangup error on destroyed socket write

Prior to v0.10, Node ignored ECONNRESET errors in many situations.
There *are* valid cases in which ECONNRESET should be ignored as a
normal part of the TCP dance, but in many others, it's a very relevant
signal that must be heeded with care.

Exacerbating this problem, if the OutgoingMessage does not have a
req.connection._handle, it assumes that it is in the process of
connecting, and thus buffers writes up in an array.

The problem happens when you reuse a socket between two requests, and it
is destroyed abruptly in between them.  The writes will be buffered,
because the socket has no handle, but it's not ever going to GET a
handle, because it's not connecting, it's destroyed.

The proper fix is to treat ECONNRESET correctly.  However, this is a
behavior/semantics change, and cannot land in a stable branch.

Fix #4775",https://api.github.com/repos/nodejs/node/git/commits/c9dcf5718cf47322b00f2994797aebb68d7ed0fb,2013-02-14,"The problem happens when you reuse a socket between two requests, and it
is destroyed abruptly in between them"
73,MDY6Q29tbWl0MjcxOTM3Nzk6YzlkY2Y1NzE4Y2Y0NzMyMmIwMGYyOTk0Nzk3YWViYjY4ZDdlZDBmYg==,isaacs,isaacs,"http: Raise hangup error on destroyed socket write

Prior to v0.10, Node ignored ECONNRESET errors in many situations.
There *are* valid cases in which ECONNRESET should be ignored as a
normal part of the TCP dance, but in many others, it's a very relevant
signal that must be heeded with care.

Exacerbating this problem, if the OutgoingMessage does not have a
req.connection._handle, it assumes that it is in the process of
connecting, and thus buffers writes up in an array.

The problem happens when you reuse a socket between two requests, and it
is destroyed abruptly in between them.  The writes will be buffered,
because the socket has no handle, but it's not ever going to GET a
handle, because it's not connecting, it's destroyed.

The proper fix is to treat ECONNRESET correctly.  However, this is a
behavior/semantics change, and cannot land in a stable branch.

Fix #4775",https://api.github.com/repos/nodejs/node/git/commits/c9dcf5718cf47322b00f2994797aebb68d7ed0fb,2013-02-14," The writes will be buffered,
because the socket has no handle, but it's not ever going to GET a
handle, because it's not connecting, it's destroyed"
73,MDY6Q29tbWl0MjcxOTM3Nzk6YzlkY2Y1NzE4Y2Y0NzMyMmIwMGYyOTk0Nzk3YWViYjY4ZDdlZDBmYg==,isaacs,isaacs,"http: Raise hangup error on destroyed socket write

Prior to v0.10, Node ignored ECONNRESET errors in many situations.
There *are* valid cases in which ECONNRESET should be ignored as a
normal part of the TCP dance, but in many others, it's a very relevant
signal that must be heeded with care.

Exacerbating this problem, if the OutgoingMessage does not have a
req.connection._handle, it assumes that it is in the process of
connecting, and thus buffers writes up in an array.

The problem happens when you reuse a socket between two requests, and it
is destroyed abruptly in between them.  The writes will be buffered,
because the socket has no handle, but it's not ever going to GET a
handle, because it's not connecting, it's destroyed.

The proper fix is to treat ECONNRESET correctly.  However, this is a
behavior/semantics change, and cannot land in a stable branch.

Fix #4775",https://api.github.com/repos/nodejs/node/git/commits/c9dcf5718cf47322b00f2994797aebb68d7ed0fb,2013-02-14,The proper fix is to treat ECONNRESET correctly
73,MDY6Q29tbWl0MjcxOTM3Nzk6YzlkY2Y1NzE4Y2Y0NzMyMmIwMGYyOTk0Nzk3YWViYjY4ZDdlZDBmYg==,isaacs,isaacs,"http: Raise hangup error on destroyed socket write

Prior to v0.10, Node ignored ECONNRESET errors in many situations.
There *are* valid cases in which ECONNRESET should be ignored as a
normal part of the TCP dance, but in many others, it's a very relevant
signal that must be heeded with care.

Exacerbating this problem, if the OutgoingMessage does not have a
req.connection._handle, it assumes that it is in the process of
connecting, and thus buffers writes up in an array.

The problem happens when you reuse a socket between two requests, and it
is destroyed abruptly in between them.  The writes will be buffered,
because the socket has no handle, but it's not ever going to GET a
handle, because it's not connecting, it's destroyed.

The proper fix is to treat ECONNRESET correctly.  However, this is a
behavior/semantics change, and cannot land in a stable branch.

Fix #4775",https://api.github.com/repos/nodejs/node/git/commits/c9dcf5718cf47322b00f2994797aebb68d7ed0fb,2013-02-14," However, this is a
behavior/semantics change, and cannot land in a stable branch"
73,MDY6Q29tbWl0MjcxOTM3Nzk6YzlkY2Y1NzE4Y2Y0NzMyMmIwMGYyOTk0Nzk3YWViYjY4ZDdlZDBmYg==,isaacs,isaacs,"http: Raise hangup error on destroyed socket write

Prior to v0.10, Node ignored ECONNRESET errors in many situations.
There *are* valid cases in which ECONNRESET should be ignored as a
normal part of the TCP dance, but in many others, it's a very relevant
signal that must be heeded with care.

Exacerbating this problem, if the OutgoingMessage does not have a
req.connection._handle, it assumes that it is in the process of
connecting, and thus buffers writes up in an array.

The problem happens when you reuse a socket between two requests, and it
is destroyed abruptly in between them.  The writes will be buffered,
because the socket has no handle, but it's not ever going to GET a
handle, because it's not connecting, it's destroyed.

The proper fix is to treat ECONNRESET correctly.  However, this is a
behavior/semantics change, and cannot land in a stable branch.

Fix #4775",https://api.github.com/repos/nodejs/node/git/commits/c9dcf5718cf47322b00f2994797aebb68d7ed0fb,2013-02-14,Fix #4775
74,MDY6Q29tbWl0MjcxOTM3Nzk6MjU1YmM5NDVjMmJhZDM1YzAxYjY1ZTMzNTEzMzdlMzAzNzI5MDdiNA==,Bert Belder,Bert Belder,"http: protect against response splitting attacks

This patch is a back-port of 3c293ba.
Closes #4696",https://api.github.com/repos/nodejs/node/git/commits/255bc945c2bad35c01b65e3351337e30372907b4,2013-02-07,protect against response splitting attacks
74,MDY6Q29tbWl0MjcxOTM3Nzk6MjU1YmM5NDVjMmJhZDM1YzAxYjY1ZTMzNTEzMzdlMzAzNzI5MDdiNA==,Bert Belder,Bert Belder,"http: protect against response splitting attacks

This patch is a back-port of 3c293ba.
Closes #4696",https://api.github.com/repos/nodejs/node/git/commits/255bc945c2bad35c01b65e3351337e30372907b4,2013-02-07,This patch is a back-port of 3c293ba
74,MDY6Q29tbWl0MjcxOTM3Nzk6MjU1YmM5NDVjMmJhZDM1YzAxYjY1ZTMzNTEzMzdlMzAzNzI5MDdiNA==,Bert Belder,Bert Belder,"http: protect against response splitting attacks

This patch is a back-port of 3c293ba.
Closes #4696",https://api.github.com/repos/nodejs/node/git/commits/255bc945c2bad35c01b65e3351337e30372907b4,2013-02-07,Closes #4696
75,MDY6Q29tbWl0MjcxOTM3Nzk6ZmFmNzg2MDRjYTk4MGRiYjNhZDU3ZGY4NzY0MDQxNWM2YTkwMWZhYw==,isaacs,isaacs,http: Don't dump twice,https://api.github.com/repos/nodejs/node/git/commits/faf78604ca980dbb3ad57df87640415c6a901fac,2013-01-28,Don't dump twice
75,MDY6Q29tbWl0MjcxOTM3Nzk6ZmFmNzg2MDRjYTk4MGRiYjNhZDU3ZGY4NzY0MDQxNWM2YTkwMWZhYw==,isaacs,isaacs,http: Don't dump twice,https://api.github.com/repos/nodejs/node/git/commits/faf78604ca980dbb3ad57df87640415c6a901fac,2013-01-28,
76,MDY6Q29tbWl0MjcxOTM3Nzk6NGE3YTk4ZmQwYWIzZDM5Njg1ODg4ZjE1YmIzYTg0NGU4NjNiZTI1NQ==,Ben Noordhuis,Ben Noordhuis,"http: close connection on 204 and chunked encoding

This is similar to commit 2cbf458 but this time for 204 No Content
instead of 304 Not Modified responses.

When the user sends a 204 response with a Transfer-Encoding: chunked
header, suppress sending the zero chunk and force the connection to
close.",https://api.github.com/repos/nodejs/node/git/commits/4a7a98fd0ab3d39685888f15bb3a844e863be255,2013-01-23,close connection on 204 and chunked encoding
76,MDY6Q29tbWl0MjcxOTM3Nzk6NGE3YTk4ZmQwYWIzZDM5Njg1ODg4ZjE1YmIzYTg0NGU4NjNiZTI1NQ==,Ben Noordhuis,Ben Noordhuis,"http: close connection on 204 and chunked encoding

This is similar to commit 2cbf458 but this time for 204 No Content
instead of 304 Not Modified responses.

When the user sends a 204 response with a Transfer-Encoding: chunked
header, suppress sending the zero chunk and force the connection to
close.",https://api.github.com/repos/nodejs/node/git/commits/4a7a98fd0ab3d39685888f15bb3a844e863be255,2013-01-23,"This is similar to commit 2cbf458 but this time for 204 No Content
instead of 304 Not Modified responses"
76,MDY6Q29tbWl0MjcxOTM3Nzk6NGE3YTk4ZmQwYWIzZDM5Njg1ODg4ZjE1YmIzYTg0NGU4NjNiZTI1NQ==,Ben Noordhuis,Ben Noordhuis,"http: close connection on 204 and chunked encoding

This is similar to commit 2cbf458 but this time for 204 No Content
instead of 304 Not Modified responses.

When the user sends a 204 response with a Transfer-Encoding: chunked
header, suppress sending the zero chunk and force the connection to
close.",https://api.github.com/repos/nodejs/node/git/commits/4a7a98fd0ab3d39685888f15bb3a844e863be255,2013-01-23,"When the user sends a 204 response with a Transfer-Encoding: chunked
header, suppress sending the zero chunk and force the connection to
close."
77,MDY6Q29tbWl0MjcxOTM3Nzk6MmNiZjQ1ODZkZjgzN2U2YjJjYzdlMDRmN2I5YWU3NzY2OTA0ZGY2MQ==,Ben Noordhuis,Ben Noordhuis,"http: close connection on 304 and chunked encoding

Force the connection to close when the response is a 304 Not Modified
and the user has set a ""Transfer-Encoding: chunked"" header.

RFC 2616 mandates that 304 responses MUST NOT have a body but node.js
used to send out a zero chunk anyway to accommodate clients that don't
have special handling for 304 responses.

It was pointed out that this might confuse reverse proxies to the point
of creating security liabilities, so suppress the zero chunk and force
the connection to close.",https://api.github.com/repos/nodejs/node/git/commits/2cbf4586df837e6b2cc7e04f7b9ae7766904df61,2013-01-23,close connection on 304 and chunked encoding
77,MDY6Q29tbWl0MjcxOTM3Nzk6MmNiZjQ1ODZkZjgzN2U2YjJjYzdlMDRmN2I5YWU3NzY2OTA0ZGY2MQ==,Ben Noordhuis,Ben Noordhuis,"http: close connection on 304 and chunked encoding

Force the connection to close when the response is a 304 Not Modified
and the user has set a ""Transfer-Encoding: chunked"" header.

RFC 2616 mandates that 304 responses MUST NOT have a body but node.js
used to send out a zero chunk anyway to accommodate clients that don't
have special handling for 304 responses.

It was pointed out that this might confuse reverse proxies to the point
of creating security liabilities, so suppress the zero chunk and force
the connection to close.",https://api.github.com/repos/nodejs/node/git/commits/2cbf4586df837e6b2cc7e04f7b9ae7766904df61,2013-01-23,"Force the connection to close when the response is a 304 Not Modified
and the user has set a ""Transfer-Encoding: chunked"" header"
77,MDY6Q29tbWl0MjcxOTM3Nzk6MmNiZjQ1ODZkZjgzN2U2YjJjYzdlMDRmN2I5YWU3NzY2OTA0ZGY2MQ==,Ben Noordhuis,Ben Noordhuis,"http: close connection on 304 and chunked encoding

Force the connection to close when the response is a 304 Not Modified
and the user has set a ""Transfer-Encoding: chunked"" header.

RFC 2616 mandates that 304 responses MUST NOT have a body but node.js
used to send out a zero chunk anyway to accommodate clients that don't
have special handling for 304 responses.

It was pointed out that this might confuse reverse proxies to the point
of creating security liabilities, so suppress the zero chunk and force
the connection to close.",https://api.github.com/repos/nodejs/node/git/commits/2cbf4586df837e6b2cc7e04f7b9ae7766904df61,2013-01-23,"RFC 2616 mandates that 304 responses MUST NOT have a body but node.js
used to send out a zero chunk anyway to accommodate clients that don't
have special handling for 304 responses"
77,MDY6Q29tbWl0MjcxOTM3Nzk6MmNiZjQ1ODZkZjgzN2U2YjJjYzdlMDRmN2I5YWU3NzY2OTA0ZGY2MQ==,Ben Noordhuis,Ben Noordhuis,"http: close connection on 304 and chunked encoding

Force the connection to close when the response is a 304 Not Modified
and the user has set a ""Transfer-Encoding: chunked"" header.

RFC 2616 mandates that 304 responses MUST NOT have a body but node.js
used to send out a zero chunk anyway to accommodate clients that don't
have special handling for 304 responses.

It was pointed out that this might confuse reverse proxies to the point
of creating security liabilities, so suppress the zero chunk and force
the connection to close.",https://api.github.com/repos/nodejs/node/git/commits/2cbf4586df837e6b2cc7e04f7b9ae7766904df61,2013-01-23,"It was pointed out that this might confuse reverse proxies to the point
of creating security liabilities, so suppress the zero chunk and force
the connection to close."
78,MDY6Q29tbWl0MjcxOTM3Nzk6M2Q3ODE4ZmM0MmM1ZjlhZjJhZWNjZjlkNzVhZDZhMjM3MjE3OWYyOA==,isaacs,isaacs,"Merge remote-tracking branch 'ry/v0.8' into master

Conflicts:
	AUTHORS
	ChangeLog
	src/node_version.h
	test/simple/test-buffer.js",https://api.github.com/repos/nodejs/node/git/commits/3d7818fc42c5f9af2aeccf9d75ad6a2372179f28,2013-01-18,Merge remote-tracking branch 'ry/v0.8' into master
78,MDY6Q29tbWl0MjcxOTM3Nzk6M2Q3ODE4ZmM0MmM1ZjlhZjJhZWNjZjlkNzVhZDZhMjM3MjE3OWYyOA==,isaacs,isaacs,"Merge remote-tracking branch 'ry/v0.8' into master

Conflicts:
	AUTHORS
	ChangeLog
	src/node_version.h
	test/simple/test-buffer.js",https://api.github.com/repos/nodejs/node/git/commits/3d7818fc42c5f9af2aeccf9d75ad6a2372179f28,2013-01-18,Conflicts
78,MDY6Q29tbWl0MjcxOTM3Nzk6M2Q3ODE4ZmM0MmM1ZjlhZjJhZWNjZjlkNzVhZDZhMjM3MjE3OWYyOA==,isaacs,isaacs,"Merge remote-tracking branch 'ry/v0.8' into master

Conflicts:
	AUTHORS
	ChangeLog
	src/node_version.h
	test/simple/test-buffer.js",https://api.github.com/repos/nodejs/node/git/commits/3d7818fc42c5f9af2aeccf9d75ad6a2372179f28,2013-01-18,"	AUTHORS
	ChangeLog
	src/node_version.h
	test/simple/test-buffer.js"
79,MDY6Q29tbWl0MjcxOTM3Nzk6ZWVmMGNjYmNhZmI4MmIxYTQ3Y2U5NGZlMjU3Yzk5MTQyM2E1YmNkZg==,Alexandr Emelin,Ben Noordhuis,"http: fix duplicate var initialization

IncomingMessage function contained duplicate initialization
of this._pendings. Line with one of those expressions has been
removed.",https://api.github.com/repos/nodejs/node/git/commits/eef0ccbcafb82b1a47ce94fe257c991423a5bcdf,2013-01-10,fix duplicate var initialization
79,MDY6Q29tbWl0MjcxOTM3Nzk6ZWVmMGNjYmNhZmI4MmIxYTQ3Y2U5NGZlMjU3Yzk5MTQyM2E1YmNkZg==,Alexandr Emelin,Ben Noordhuis,"http: fix duplicate var initialization

IncomingMessage function contained duplicate initialization
of this._pendings. Line with one of those expressions has been
removed.",https://api.github.com/repos/nodejs/node/git/commits/eef0ccbcafb82b1a47ce94fe257c991423a5bcdf,2013-01-10,"IncomingMessage function contained duplicate initialization
of this._pendings"
79,MDY6Q29tbWl0MjcxOTM3Nzk6ZWVmMGNjYmNhZmI4MmIxYTQ3Y2U5NGZlMjU3Yzk5MTQyM2E1YmNkZg==,Alexandr Emelin,Ben Noordhuis,"http: fix duplicate var initialization

IncomingMessage function contained duplicate initialization
of this._pendings. Line with one of those expressions has been
removed.",https://api.github.com/repos/nodejs/node/git/commits/eef0ccbcafb82b1a47ce94fe257c991423a5bcdf,2013-01-10,"Line with one of those expressions has been
removed."
80,MDY6Q29tbWl0MjcxOTM3Nzk6ZjNlNzhiZDNjMjEwMjhkZmQ5NmVmZWQ3YWUyNjU0Y2VmZjFlNzg3OA==,Ben Noordhuis,Ben Noordhuis,"http: fix ""Cannot call method 'emit' of null""

Fix the following exception:

  http.js:974
    this._httpMessage.emit('close');
                      ^
  TypeError: Cannot call method 'emit' of null
      at Socket.onServerResponseClose (http.js:974:21)
      at Socket.EventEmitter.emit (events.js:124:20)
      at net.js:421:10
      at process._tickCallback (node.js:386:13)
      at process._makeCallback (node.js:304:15)

Fixes #4586.",https://api.github.com/repos/nodejs/node/git/commits/f3e78bd3c21028dfd96efed7ae2654ceff1e7878,2013-01-14,"fix ""Cannot call method 'emit' of null"""
80,MDY6Q29tbWl0MjcxOTM3Nzk6ZjNlNzhiZDNjMjEwMjhkZmQ5NmVmZWQ3YWUyNjU0Y2VmZjFlNzg3OA==,Ben Noordhuis,Ben Noordhuis,"http: fix ""Cannot call method 'emit' of null""

Fix the following exception:

  http.js:974
    this._httpMessage.emit('close');
                      ^
  TypeError: Cannot call method 'emit' of null
      at Socket.onServerResponseClose (http.js:974:21)
      at Socket.EventEmitter.emit (events.js:124:20)
      at net.js:421:10
      at process._tickCallback (node.js:386:13)
      at process._makeCallback (node.js:304:15)

Fixes #4586.",https://api.github.com/repos/nodejs/node/git/commits/f3e78bd3c21028dfd96efed7ae2654ceff1e7878,2013-01-14,Fix the following exception
80,MDY6Q29tbWl0MjcxOTM3Nzk6ZjNlNzhiZDNjMjEwMjhkZmQ5NmVmZWQ3YWUyNjU0Y2VmZjFlNzg3OA==,Ben Noordhuis,Ben Noordhuis,"http: fix ""Cannot call method 'emit' of null""

Fix the following exception:

  http.js:974
    this._httpMessage.emit('close');
                      ^
  TypeError: Cannot call method 'emit' of null
      at Socket.onServerResponseClose (http.js:974:21)
      at Socket.EventEmitter.emit (events.js:124:20)
      at net.js:421:10
      at process._tickCallback (node.js:386:13)
      at process._makeCallback (node.js:304:15)

Fixes #4586.",https://api.github.com/repos/nodejs/node/git/commits/f3e78bd3c21028dfd96efed7ae2654ceff1e7878,2013-01-14,"      this._                      ^
  TypeError: Cannot call method 'emit' of null
      at Socket.onServerResponseClose (      at Socket.EventEmitter.emit (events.js:124:20)
      at net.js:421:10
      at process._tickCallback (node.js:386:13)
      at process._makeCallback (node.js:304:15)
Fixes #4586."
81,MDY6Q29tbWl0MjcxOTM3Nzk6ZGMwYzUyNGNlNjgxZjUzZTJiZDhmMDk3NGVkNmFhM2ZkOTEwMDU0ZA==,isaacs,isaacs,"http: Set _dumped=false initially

The better to keep the IncomingMessage class isomorphic and avoid
creating additional hidden classes.",https://api.github.com/repos/nodejs/node/git/commits/dc0c524ce681f53e2bd8f0974ed6aa3fd910054d,2013-01-11,Set _dumped=false initially
81,MDY6Q29tbWl0MjcxOTM3Nzk6ZGMwYzUyNGNlNjgxZjUzZTJiZDhmMDk3NGVkNmFhM2ZkOTEwMDU0ZA==,isaacs,isaacs,"http: Set _dumped=false initially

The better to keep the IncomingMessage class isomorphic and avoid
creating additional hidden classes.",https://api.github.com/repos/nodejs/node/git/commits/dc0c524ce681f53e2bd8f0974ed6aa3fd910054d,2013-01-11,"The better to keep the IncomingMessage class isomorphic and avoid
creating additional hidden classes."
82,MDY6Q29tbWl0MjcxOTM3Nzk6OWVjZTYzYjFkNzRlYzEzNTlkZjdiM2VmNGQ2ZWQ1MzRhYzQ5YzBjZg==,isaacs,isaacs,http: Don't switch the socket into old-mode,https://api.github.com/repos/nodejs/node/git/commits/9ece63b1d74ec1359df7b3ef4d6ed534ac49c0cf,2013-01-08,Don't switch the socket into old-mode
82,MDY6Q29tbWl0MjcxOTM3Nzk6OWVjZTYzYjFkNzRlYzEzNTlkZjdiM2VmNGQ2ZWQ1MzRhYzQ5YzBjZg==,isaacs,isaacs,http: Don't switch the socket into old-mode,https://api.github.com/repos/nodejs/node/git/commits/9ece63b1d74ec1359df7b3ef4d6ed534ac49c0cf,2013-01-08,
83,MDY6Q29tbWl0MjcxOTM3Nzk6YmM4ZmViMTUxYzczMWY1ODYyYTAyZmNjYjU4NjM4MTA1YjQ0ZDQ1Yg==,isaacs,isaacs,http: Use stream.push() instead of touching _readableState,https://api.github.com/repos/nodejs/node/git/commits/bc8feb151c731f5862a02fccb58638105b44d45b,2013-01-08,Use stream.push() instead of touching _readableState
83,MDY6Q29tbWl0MjcxOTM3Nzk6YmM4ZmViMTUxYzczMWY1ODYyYTAyZmNjYjU4NjM4MTA1YjQ0ZDQ1Yg==,isaacs,isaacs,http: Use stream.push() instead of touching _readableState,https://api.github.com/repos/nodejs/node/git/commits/bc8feb151c731f5862a02fccb58638105b44d45b,2013-01-08,
84,MDY6Q29tbWl0MjcxOTM3Nzk6ZjQyMzI4NzQ1M2U5MTRjMjY2ODAwMmZjNGU2NDgyODIxNjI1YTdhYw==,isaacs,isaacs,http: Separate out the storeHeader closure,https://api.github.com/repos/nodejs/node/git/commits/f423287453e914c2668002fc4e6482821625a7ac,2012-12-27,Separate out the storeHeader closure
84,MDY6Q29tbWl0MjcxOTM3Nzk6ZjQyMzI4NzQ1M2U5MTRjMjY2ODAwMmZjNGU2NDgyODIxNjI1YTdhYw==,isaacs,isaacs,http: Separate out the storeHeader closure,https://api.github.com/repos/nodejs/node/git/commits/f423287453e914c2668002fc4e6482821625a7ac,2012-12-27,
85,MDY6Q29tbWl0MjcxOTM3Nzk6OTc4NWFiNjA1NzQ2NTkzNjAxNzUyYTI3OGM5M2ZkYzc4NDQ2MjExNQ==,isaacs,isaacs,"http: Replace ""in"" usage with ""=== undefined""

Speeds up http benchmarks.",https://api.github.com/repos/nodejs/node/git/commits/9785ab605746593601752a278c93fdc784462115,2012-12-27,"Replace ""in"" usage with ""=== undefined"""
85,MDY6Q29tbWl0MjcxOTM3Nzk6OTc4NWFiNjA1NzQ2NTkzNjAxNzUyYTI3OGM5M2ZkYzc4NDQ2MjExNQ==,isaacs,isaacs,"http: Replace ""in"" usage with ""=== undefined""

Speeds up http benchmarks.",https://api.github.com/repos/nodejs/node/git/commits/9785ab605746593601752a278c93fdc784462115,2012-12-27,Speeds up benchmarks.
86,MDY6Q29tbWl0MjcxOTM3Nzk6ODkzNjg2OGU5YmY2YjRhM2Y1NjY4NGM0ODk1ZTJhN2MzMzM5NTQ3OQ==,Ryunosuke SATO,isaacs,"http: remove unused variable

The module variable `END_OF_FILE` was no longer needed from 1d369317.",https://api.github.com/repos/nodejs/node/git/commits/8936868e9bf6b4a3f56684c4895e2a7c33395479,2012-12-27,remove unused variable
86,MDY6Q29tbWl0MjcxOTM3Nzk6ODkzNjg2OGU5YmY2YjRhM2Y1NjY4NGM0ODk1ZTJhN2MzMzM5NTQ3OQ==,Ryunosuke SATO,isaacs,"http: remove unused variable

The module variable `END_OF_FILE` was no longer needed from 1d369317.",https://api.github.com/repos/nodejs/node/git/commits/8936868e9bf6b4a3f56684c4895e2a7c33395479,2012-12-27,The module variable `END_OF_FILE` was no longer needed from 1d369317.
87,MDY6Q29tbWl0MjcxOTM3Nzk6ZDc2ZWFjZDRlNjE4ZDYwNzE0ZjJkZDU2OGQ0NWJkNmNkOTYwMTliNg==,isaacs,isaacs,"http: Handle end only when stream is not dumped

This fixes regression introduced in some cases by 8bf0c15",https://api.github.com/repos/nodejs/node/git/commits/d76eacd4e618d60714f2dd568d45bd6cd96019b6,2012-12-26,Handle end only when stream is not dumped
87,MDY6Q29tbWl0MjcxOTM3Nzk6ZDc2ZWFjZDRlNjE4ZDYwNzE0ZjJkZDU2OGQ0NWJkNmNkOTYwMTliNg==,isaacs,isaacs,"http: Handle end only when stream is not dumped

This fixes regression introduced in some cases by 8bf0c15",https://api.github.com/repos/nodejs/node/git/commits/d76eacd4e618d60714f2dd568d45bd6cd96019b6,2012-12-26,This fixes regression introduced in some cases by 8bf0c15
88,MDY6Q29tbWl0MjcxOTM3Nzk6NTQ3NDBjOGIyNDdjOWNlNTBhNDQwMDE0MjAwNGZkMDVlYzA5OGUyMQ==,isaacs,isaacs,lint,https://api.github.com/repos/nodejs/node/git/commits/54740c8b247c9ce50a4400142004fd05ec098e21,2012-12-26,lint
88,MDY6Q29tbWl0MjcxOTM3Nzk6NTQ3NDBjOGIyNDdjOWNlNTBhNDQwMDE0MjAwNGZkMDVlYzA5OGUyMQ==,isaacs,isaacs,lint,https://api.github.com/repos/nodejs/node/git/commits/54740c8b247c9ce50a4400142004fd05ec098e21,2012-12-26,
89,MDY6Q29tbWl0MjcxOTM3Nzk6OGJmMGMxNWE1YjIxNzU1YzRjNjZiNTRmNWFhZDE2ZTgxYTQxNmMxMw==,Shigeki Ohtsu,isaacs,stream2: fix to emit end event on http.ClientResponse,https://api.github.com/repos/nodejs/node/git/commits/8bf0c15a5b21755c4c66b54f5aad16e81a416c13,2012-12-18,stream2: fix to emit end event on http.ClientResponse
89,MDY6Q29tbWl0MjcxOTM3Nzk6OGJmMGMxNWE1YjIxNzU1YzRjNjZiNTRmNWFhZDE2ZTgxYTQxNmMxMw==,Shigeki Ohtsu,isaacs,stream2: fix to emit end event on http.ClientResponse,https://api.github.com/repos/nodejs/node/git/commits/8bf0c15a5b21755c4c66b54f5aad16e81a416c13,2012-12-18,
90,MDY6Q29tbWl0MjcxOTM3Nzk6ZmI5MTVlZDk1NzNkMjFjNWI2MmMxM2I4ZWFhOTY0MmE2ZGJiNGIwMg==,isaacs,isaacs,lint,https://api.github.com/repos/nodejs/node/git/commits/fb915ed9573d21c5b62c13b8eaa9642a6dbb4b02,2012-12-21,lint
90,MDY6Q29tbWl0MjcxOTM3Nzk6ZmI5MTVlZDk1NzNkMjFjNWI2MmMxM2I4ZWFhOTY0MmE2ZGJiNGIwMg==,isaacs,isaacs,lint,https://api.github.com/repos/nodejs/node/git/commits/fb915ed9573d21c5b62c13b8eaa9642a6dbb4b02,2012-12-21,
91,MDY6Q29tbWl0MjcxOTM3Nzk6YzA0OGM4MTRjNzlhODcwNmYxNzc1NzNjNzZiZmNiYTNjZGEwYjYzMw==,isaacs,isaacs,http: Trivial fix for comments and 'this.read',https://api.github.com/repos/nodejs/node/git/commits/c048c814c79a8706f177573c76bfcba3cda0b633,2012-12-21,Trivial fix for comments and 'this.read'
91,MDY6Q29tbWl0MjcxOTM3Nzk6YzA0OGM4MTRjNzlhODcwNmYxNzc1NzNjNzZiZmNiYTNjZGEwYjYzMw==,isaacs,isaacs,http: Trivial fix for comments and 'this.read',https://api.github.com/repos/nodejs/node/git/commits/c048c814c79a8706f177573c76bfcba3cda0b633,2012-12-21,
92,MDY6Q29tbWl0MjcxOTM3Nzk6ODYyNGFkZjVkOGI3ZTA0MjlmN2MxMjdhMmVkZTg1NTY4MGZlNWMxOA==,isaacs,isaacs,http: use IncomingMessage._dump() instead of resume(),https://api.github.com/repos/nodejs/node/git/commits/8624adf5d8b7e0429f7c127a2ede855680fe5c18,2012-12-19,use IncomingMessage._dump() instead of resume()
92,MDY6Q29tbWl0MjcxOTM3Nzk6ODYyNGFkZjVkOGI3ZTA0MjlmN2MxMjdhMmVkZTg1NTY4MGZlNWMxOA==,isaacs,isaacs,http: use IncomingMessage._dump() instead of resume(),https://api.github.com/repos/nodejs/node/git/commits/8624adf5d8b7e0429f7c127a2ede855680fe5c18,2012-12-19,
93,MDY6Q29tbWl0MjcxOTM3Nzk6NzlhZThiN2FlMmZiNjdmMzkzNzVmNDZlMGFkNzU1MmFhOWZiODJlYQ==,Ben Noordhuis,Ben Noordhuis,Merge remote-tracking branch 'origin/v0.8',https://api.github.com/repos/nodejs/node/git/commits/79ae8b7ae2fb67f39375f46e0ad7552aa9fb82ea,2012-12-20,Merge remote-tracking branch 'origin/v0.8'
93,MDY6Q29tbWl0MjcxOTM3Nzk6NzlhZThiN2FlMmZiNjdmMzkzNzVmNDZlMGFkNzU1MmFhOWZiODJlYQ==,Ben Noordhuis,Ben Noordhuis,Merge remote-tracking branch 'origin/v0.8',https://api.github.com/repos/nodejs/node/git/commits/79ae8b7ae2fb67f39375f46e0ad7552aa9fb82ea,2012-12-20,
94,MDY6Q29tbWl0MjcxOTM3Nzk6NWExOWMwN2MwODdjNTc0OWUzMTczN2NiNGZiNWExMTM2NDNmMzVkNg==,Ben Noordhuis,Ben Noordhuis,"http: pack response body buffer in first tcp packet

Apply the same optimization to res.end(buf) that is applied to res.end(str).

Speeds up `node benchmark/http_simple_auto -k -c 1 -n 25000 buffer/1`
(non-chunked response body) by about 750x. That's not a typo.

Chunked responses:

  $ cat tmp/http-chunked-client.js
  // Run `node benchmark/http_simple` in another terminal.
  var http = require('http'), url = require('url');
  var options = url.parse('http://127.0.0.1:8000/buffer/1/1');
  options.agent = new http.Agent({ maxSockets: 1 });
  for (var i = 0; i < 25000; ++i) http.get(options);

Before:

  $ time out/Release/node tmp/http-chunked-client.js
  real    16m40.411s
  user    0m9.184s
  sys     0m0.604s

After:

  $ time out/Release/node tmp/http-chunked-client.js
  real    0m5.386s
  user    0m2.768s
  sys     0m0.728s

That's still a 185x speed-up.

Fixes #4415.",https://api.github.com/repos/nodejs/node/git/commits/5a19c07c087c5749e31737cb4fb5a113643f35d6,2012-12-19,pack response body buffer in first tcp packet
94,MDY6Q29tbWl0MjcxOTM3Nzk6NWExOWMwN2MwODdjNTc0OWUzMTczN2NiNGZiNWExMTM2NDNmMzVkNg==,Ben Noordhuis,Ben Noordhuis,"http: pack response body buffer in first tcp packet

Apply the same optimization to res.end(buf) that is applied to res.end(str).

Speeds up `node benchmark/http_simple_auto -k -c 1 -n 25000 buffer/1`
(non-chunked response body) by about 750x. That's not a typo.

Chunked responses:

  $ cat tmp/http-chunked-client.js
  // Run `node benchmark/http_simple` in another terminal.
  var http = require('http'), url = require('url');
  var options = url.parse('http://127.0.0.1:8000/buffer/1/1');
  options.agent = new http.Agent({ maxSockets: 1 });
  for (var i = 0; i < 25000; ++i) http.get(options);

Before:

  $ time out/Release/node tmp/http-chunked-client.js
  real    16m40.411s
  user    0m9.184s
  sys     0m0.604s

After:

  $ time out/Release/node tmp/http-chunked-client.js
  real    0m5.386s
  user    0m2.768s
  sys     0m0.728s

That's still a 185x speed-up.

Fixes #4415.",https://api.github.com/repos/nodejs/node/git/commits/5a19c07c087c5749e31737cb4fb5a113643f35d6,2012-12-19,Apply the same optimization to res.end(buf) that is applied to res.end(str)
94,MDY6Q29tbWl0MjcxOTM3Nzk6NWExOWMwN2MwODdjNTc0OWUzMTczN2NiNGZiNWExMTM2NDNmMzVkNg==,Ben Noordhuis,Ben Noordhuis,"http: pack response body buffer in first tcp packet

Apply the same optimization to res.end(buf) that is applied to res.end(str).

Speeds up `node benchmark/http_simple_auto -k -c 1 -n 25000 buffer/1`
(non-chunked response body) by about 750x. That's not a typo.

Chunked responses:

  $ cat tmp/http-chunked-client.js
  // Run `node benchmark/http_simple` in another terminal.
  var http = require('http'), url = require('url');
  var options = url.parse('http://127.0.0.1:8000/buffer/1/1');
  options.agent = new http.Agent({ maxSockets: 1 });
  for (var i = 0; i < 25000; ++i) http.get(options);

Before:

  $ time out/Release/node tmp/http-chunked-client.js
  real    16m40.411s
  user    0m9.184s
  sys     0m0.604s

After:

  $ time out/Release/node tmp/http-chunked-client.js
  real    0m5.386s
  user    0m2.768s
  sys     0m0.728s

That's still a 185x speed-up.

Fixes #4415.",https://api.github.com/repos/nodejs/node/git/commits/5a19c07c087c5749e31737cb4fb5a113643f35d6,2012-12-19,"Speeds up `node benchmark/-k -c 1 -n 25000 buffer/1`
(non-chunked response body) by about 750x"
94,MDY6Q29tbWl0MjcxOTM3Nzk6NWExOWMwN2MwODdjNTc0OWUzMTczN2NiNGZiNWExMTM2NDNmMzVkNg==,Ben Noordhuis,Ben Noordhuis,"http: pack response body buffer in first tcp packet

Apply the same optimization to res.end(buf) that is applied to res.end(str).

Speeds up `node benchmark/http_simple_auto -k -c 1 -n 25000 buffer/1`
(non-chunked response body) by about 750x. That's not a typo.

Chunked responses:

  $ cat tmp/http-chunked-client.js
  // Run `node benchmark/http_simple` in another terminal.
  var http = require('http'), url = require('url');
  var options = url.parse('http://127.0.0.1:8000/buffer/1/1');
  options.agent = new http.Agent({ maxSockets: 1 });
  for (var i = 0; i < 25000; ++i) http.get(options);

Before:

  $ time out/Release/node tmp/http-chunked-client.js
  real    16m40.411s
  user    0m9.184s
  sys     0m0.604s

After:

  $ time out/Release/node tmp/http-chunked-client.js
  real    0m5.386s
  user    0m2.768s
  sys     0m0.728s

That's still a 185x speed-up.

Fixes #4415.",https://api.github.com/repos/nodejs/node/git/commits/5a19c07c087c5749e31737cb4fb5a113643f35d6,2012-12-19,That's not a typo
94,MDY6Q29tbWl0MjcxOTM3Nzk6NWExOWMwN2MwODdjNTc0OWUzMTczN2NiNGZiNWExMTM2NDNmMzVkNg==,Ben Noordhuis,Ben Noordhuis,"http: pack response body buffer in first tcp packet

Apply the same optimization to res.end(buf) that is applied to res.end(str).

Speeds up `node benchmark/http_simple_auto -k -c 1 -n 25000 buffer/1`
(non-chunked response body) by about 750x. That's not a typo.

Chunked responses:

  $ cat tmp/http-chunked-client.js
  // Run `node benchmark/http_simple` in another terminal.
  var http = require('http'), url = require('url');
  var options = url.parse('http://127.0.0.1:8000/buffer/1/1');
  options.agent = new http.Agent({ maxSockets: 1 });
  for (var i = 0; i < 25000; ++i) http.get(options);

Before:

  $ time out/Release/node tmp/http-chunked-client.js
  real    16m40.411s
  user    0m9.184s
  sys     0m0.604s

After:

  $ time out/Release/node tmp/http-chunked-client.js
  real    0m5.386s
  user    0m2.768s
  sys     0m0.728s

That's still a 185x speed-up.

Fixes #4415.",https://api.github.com/repos/nodejs/node/git/commits/5a19c07c087c5749e31737cb4fb5a113643f35d6,2012-12-19,Chunked responses
94,MDY6Q29tbWl0MjcxOTM3Nzk6NWExOWMwN2MwODdjNTc0OWUzMTczN2NiNGZiNWExMTM2NDNmMzVkNg==,Ben Noordhuis,Ben Noordhuis,"http: pack response body buffer in first tcp packet

Apply the same optimization to res.end(buf) that is applied to res.end(str).

Speeds up `node benchmark/http_simple_auto -k -c 1 -n 25000 buffer/1`
(non-chunked response body) by about 750x. That's not a typo.

Chunked responses:

  $ cat tmp/http-chunked-client.js
  // Run `node benchmark/http_simple` in another terminal.
  var http = require('http'), url = require('url');
  var options = url.parse('http://127.0.0.1:8000/buffer/1/1');
  options.agent = new http.Agent({ maxSockets: 1 });
  for (var i = 0; i < 25000; ++i) http.get(options);

Before:

  $ time out/Release/node tmp/http-chunked-client.js
  real    16m40.411s
  user    0m9.184s
  sys     0m0.604s

After:

  $ time out/Release/node tmp/http-chunked-client.js
  real    0m5.386s
  user    0m2.768s
  sys     0m0.728s

That's still a 185x speed-up.

Fixes #4415.",https://api.github.com/repos/nodejs/node/git/commits/5a19c07c087c5749e31737cb4fb5a113643f35d6,2012-12-19,"  for (var i = 0; i < 25000; ++i) 
Before"
94,MDY6Q29tbWl0MjcxOTM3Nzk6NWExOWMwN2MwODdjNTc0OWUzMTczN2NiNGZiNWExMTM2NDNmMzVkNg==,Ben Noordhuis,Ben Noordhuis,"http: pack response body buffer in first tcp packet

Apply the same optimization to res.end(buf) that is applied to res.end(str).

Speeds up `node benchmark/http_simple_auto -k -c 1 -n 25000 buffer/1`
(non-chunked response body) by about 750x. That's not a typo.

Chunked responses:

  $ cat tmp/http-chunked-client.js
  // Run `node benchmark/http_simple` in another terminal.
  var http = require('http'), url = require('url');
  var options = url.parse('http://127.0.0.1:8000/buffer/1/1');
  options.agent = new http.Agent({ maxSockets: 1 });
  for (var i = 0; i < 25000; ++i) http.get(options);

Before:

  $ time out/Release/node tmp/http-chunked-client.js
  real    16m40.411s
  user    0m9.184s
  sys     0m0.604s

After:

  $ time out/Release/node tmp/http-chunked-client.js
  real    0m5.386s
  user    0m2.768s
  sys     0m0.728s

That's still a 185x speed-up.

Fixes #4415.",https://api.github.com/repos/nodejs/node/git/commits/5a19c07c087c5749e31737cb4fb5a113643f35d6,2012-12-19,"  $ time out/Release/node tmp/  real    16m40.411s
  user    0m9.184s
  sys     0m0.604s
After"
94,MDY6Q29tbWl0MjcxOTM3Nzk6NWExOWMwN2MwODdjNTc0OWUzMTczN2NiNGZiNWExMTM2NDNmMzVkNg==,Ben Noordhuis,Ben Noordhuis,"http: pack response body buffer in first tcp packet

Apply the same optimization to res.end(buf) that is applied to res.end(str).

Speeds up `node benchmark/http_simple_auto -k -c 1 -n 25000 buffer/1`
(non-chunked response body) by about 750x. That's not a typo.

Chunked responses:

  $ cat tmp/http-chunked-client.js
  // Run `node benchmark/http_simple` in another terminal.
  var http = require('http'), url = require('url');
  var options = url.parse('http://127.0.0.1:8000/buffer/1/1');
  options.agent = new http.Agent({ maxSockets: 1 });
  for (var i = 0; i < 25000; ++i) http.get(options);

Before:

  $ time out/Release/node tmp/http-chunked-client.js
  real    16m40.411s
  user    0m9.184s
  sys     0m0.604s

After:

  $ time out/Release/node tmp/http-chunked-client.js
  real    0m5.386s
  user    0m2.768s
  sys     0m0.728s

That's still a 185x speed-up.

Fixes #4415.",https://api.github.com/repos/nodejs/node/git/commits/5a19c07c087c5749e31737cb4fb5a113643f35d6,2012-12-19,"  $ time out/Release/node tmp/  real    0m5.386s
  user    0m2.768s
  sys     0m0.728s
That's still a 185x speed-up"
94,MDY6Q29tbWl0MjcxOTM3Nzk6NWExOWMwN2MwODdjNTc0OWUzMTczN2NiNGZiNWExMTM2NDNmMzVkNg==,Ben Noordhuis,Ben Noordhuis,"http: pack response body buffer in first tcp packet

Apply the same optimization to res.end(buf) that is applied to res.end(str).

Speeds up `node benchmark/http_simple_auto -k -c 1 -n 25000 buffer/1`
(non-chunked response body) by about 750x. That's not a typo.

Chunked responses:

  $ cat tmp/http-chunked-client.js
  // Run `node benchmark/http_simple` in another terminal.
  var http = require('http'), url = require('url');
  var options = url.parse('http://127.0.0.1:8000/buffer/1/1');
  options.agent = new http.Agent({ maxSockets: 1 });
  for (var i = 0; i < 25000; ++i) http.get(options);

Before:

  $ time out/Release/node tmp/http-chunked-client.js
  real    16m40.411s
  user    0m9.184s
  sys     0m0.604s

After:

  $ time out/Release/node tmp/http-chunked-client.js
  real    0m5.386s
  user    0m2.768s
  sys     0m0.728s

That's still a 185x speed-up.

Fixes #4415.",https://api.github.com/repos/nodejs/node/git/commits/5a19c07c087c5749e31737cb4fb5a113643f35d6,2012-12-19,Fixes #4415.
95,MDY6Q29tbWl0MjcxOTM3Nzk6ODI3YjJhOWIwYjJiOTM4ZjQ1OGE3NTY5YmY2YzczYjZiZTI1ZGRjNw==,Brian White,Ben Noordhuis,"http: bubble up parser errors to ClientRequest

Make parser errors bubble up to the ClientRequest instead of the underlying
net.Socket object.

This is a back-port of commit c78678b from the master branch.

Fixes #3776.",https://api.github.com/repos/nodejs/node/git/commits/827b2a9b0b2b938f458a7569bf6c73b6be25ddc7,2012-08-07,bubble up parser errors to ClientRequest
95,MDY6Q29tbWl0MjcxOTM3Nzk6ODI3YjJhOWIwYjJiOTM4ZjQ1OGE3NTY5YmY2YzczYjZiZTI1ZGRjNw==,Brian White,Ben Noordhuis,"http: bubble up parser errors to ClientRequest

Make parser errors bubble up to the ClientRequest instead of the underlying
net.Socket object.

This is a back-port of commit c78678b from the master branch.

Fixes #3776.",https://api.github.com/repos/nodejs/node/git/commits/827b2a9b0b2b938f458a7569bf6c73b6be25ddc7,2012-08-07,"Make parser errors bubble up to the ClientRequest instead of the underlying
net.Socket object"
95,MDY6Q29tbWl0MjcxOTM3Nzk6ODI3YjJhOWIwYjJiOTM4ZjQ1OGE3NTY5YmY2YzczYjZiZTI1ZGRjNw==,Brian White,Ben Noordhuis,"http: bubble up parser errors to ClientRequest

Make parser errors bubble up to the ClientRequest instead of the underlying
net.Socket object.

This is a back-port of commit c78678b from the master branch.

Fixes #3776.",https://api.github.com/repos/nodejs/node/git/commits/827b2a9b0b2b938f458a7569bf6c73b6be25ddc7,2012-08-07,This is a back-port of commit c78678b from the master branch
95,MDY6Q29tbWl0MjcxOTM3Nzk6ODI3YjJhOWIwYjJiOTM4ZjQ1OGE3NTY5YmY2YzczYjZiZTI1ZGRjNw==,Brian White,Ben Noordhuis,"http: bubble up parser errors to ClientRequest

Make parser errors bubble up to the ClientRequest instead of the underlying
net.Socket object.

This is a back-port of commit c78678b from the master branch.

Fixes #3776.",https://api.github.com/repos/nodejs/node/git/commits/827b2a9b0b2b938f458a7569bf6c73b6be25ddc7,2012-08-07,Fixes #3776.
96,MDY6Q29tbWl0MjcxOTM3Nzk6MWQzNjkzMTdlYTQ0OTQyNGI5OGFlYzY0NWYxMmIwZDllNDM4NzZkNg==,isaacs,isaacs,"http: Refactor for streams2

Because of some of the peculiarities of http, this has a bit of special
magic to handle cases where the IncomingMessage would wait forever in a
paused state.

In the server, if you do not begin consuming the request body by the
time the response emits 'finish', then it will be flushed out.

In the client, if you do not add a 'response' handler onto the request,
then the response stream will be flushed out.",https://api.github.com/repos/nodejs/node/git/commits/1d369317ea449424b98aec645f12b0d9e43876d6,2012-12-13,Refactor for streams2
96,MDY6Q29tbWl0MjcxOTM3Nzk6MWQzNjkzMTdlYTQ0OTQyNGI5OGFlYzY0NWYxMmIwZDllNDM4NzZkNg==,isaacs,isaacs,"http: Refactor for streams2

Because of some of the peculiarities of http, this has a bit of special
magic to handle cases where the IncomingMessage would wait forever in a
paused state.

In the server, if you do not begin consuming the request body by the
time the response emits 'finish', then it will be flushed out.

In the client, if you do not add a 'response' handler onto the request,
then the response stream will be flushed out.",https://api.github.com/repos/nodejs/node/git/commits/1d369317ea449424b98aec645f12b0d9e43876d6,2012-12-13,"Because of some of the peculiarities of this has a bit of special
magic to handle cases where the IncomingMessage would wait forever in a
paused state"
96,MDY6Q29tbWl0MjcxOTM3Nzk6MWQzNjkzMTdlYTQ0OTQyNGI5OGFlYzY0NWYxMmIwZDllNDM4NzZkNg==,isaacs,isaacs,"http: Refactor for streams2

Because of some of the peculiarities of http, this has a bit of special
magic to handle cases where the IncomingMessage would wait forever in a
paused state.

In the server, if you do not begin consuming the request body by the
time the response emits 'finish', then it will be flushed out.

In the client, if you do not add a 'response' handler onto the request,
then the response stream will be flushed out.",https://api.github.com/repos/nodejs/node/git/commits/1d369317ea449424b98aec645f12b0d9e43876d6,2012-12-13,"In the server, if you do not begin consuming the request body by the
time the response emits 'finish', then it will be flushed out"
96,MDY6Q29tbWl0MjcxOTM3Nzk6MWQzNjkzMTdlYTQ0OTQyNGI5OGFlYzY0NWYxMmIwZDllNDM4NzZkNg==,isaacs,isaacs,"http: Refactor for streams2

Because of some of the peculiarities of http, this has a bit of special
magic to handle cases where the IncomingMessage would wait forever in a
paused state.

In the server, if you do not begin consuming the request body by the
time the response emits 'finish', then it will be flushed out.

In the client, if you do not add a 'response' handler onto the request,
then the response stream will be flushed out.",https://api.github.com/repos/nodejs/node/git/commits/1d369317ea449424b98aec645f12b0d9e43876d6,2012-12-13,"In the client, if you do not add a 'response' handler onto the request,
then the response stream will be flushed out."
97,MDY6Q29tbWl0MjcxOTM3Nzk6M2MyOTNiYTI3MjUwZjE4ODVlZmE4ZDhkYjhlNzVkM2VhMDMzYzIwNg==,Bert Belder,isaacs,http: protect against response splitting attacks,https://api.github.com/repos/nodejs/node/git/commits/3c293ba27250f1885efa8d8db8e75d3ea033c206,2012-11-19,protect against response splitting attacks
97,MDY6Q29tbWl0MjcxOTM3Nzk6M2MyOTNiYTI3MjUwZjE4ODVlZmE4ZDhkYjhlNzVkM2VhMDMzYzIwNg==,Bert Belder,isaacs,http: protect against response splitting attacks,https://api.github.com/repos/nodejs/node/git/commits/3c293ba27250f1885efa8d8db8e75d3ea033c206,2012-11-19,
98,MDY6Q29tbWl0MjcxOTM3Nzk6ZjY1N2NlNjg1ZGRkYzFiZjJkNWI0MmY1NmQ3MjhkZjkxNzZjY2ViOQ==,Scott Blomquist,Bert Belder,"windows: add tracing with performance counters

Patch by Henry Rawas and Scott Blomquist.",https://api.github.com/repos/nodejs/node/git/commits/f657ce685dddc1bf2d5b42f56d728df9176cceb9,2012-11-20,windows: add tracing with performance counters
98,MDY6Q29tbWl0MjcxOTM3Nzk6ZjY1N2NlNjg1ZGRkYzFiZjJkNWI0MmY1NmQ3MjhkZjkxNzZjY2ViOQ==,Scott Blomquist,Bert Belder,"windows: add tracing with performance counters

Patch by Henry Rawas and Scott Blomquist.",https://api.github.com/repos/nodejs/node/git/commits/f657ce685dddc1bf2d5b42f56d728df9176cceb9,2012-11-20,Patch by Henry Rawas and Scott Blomquist.
99,MDY6Q29tbWl0MjcxOTM3Nzk6ODUwOTA3MzQ1OGYyMjc5MDFkYzg0ZTg3MmRjMDE2NTFjM2I5MTJkMw==,isaacs,isaacs,lint,https://api.github.com/repos/nodejs/node/git/commits/8509073458f227901dc84e872dc01651c3b912d3,2012-10-12,lint
99,MDY6Q29tbWl0MjcxOTM3Nzk6ODUwOTA3MzQ1OGYyMjc5MDFkYzg0ZTg3MmRjMDE2NTFjM2I5MTJkMw==,isaacs,isaacs,lint,https://api.github.com/repos/nodejs/node/git/commits/8509073458f227901dc84e872dc01651c3b912d3,2012-10-12,
100,MDY6Q29tbWl0MjcxOTM3Nzk6MDYxZjIwNzVjZjgxMDE3Y2RiNDBkZTgwNTMzYmExODc0Njc0M2M5NA==,isaacs,isaacs,"string_decoder: Add 'end' method, do base64 properly",https://api.github.com/repos/nodejs/node/git/commits/061f2075cf81017cdb40de80533ba18746743c94,2012-10-11,"string_decoder: Add 'end' method, do base64 properly"
100,MDY6Q29tbWl0MjcxOTM3Nzk6MDYxZjIwNzVjZjgxMDE3Y2RiNDBkZTgwNTMzYmExODc0Njc0M2M5NA==,isaacs,isaacs,"string_decoder: Add 'end' method, do base64 properly",https://api.github.com/repos/nodejs/node/git/commits/061f2075cf81017cdb40de80533ba18746743c94,2012-10-11,
101,MDY6Q29tbWl0MjcxOTM3Nzk6MGFkMDA1ODUyYzdiZDdlODk2YzljOTRhZTUyODQ0OTNhYTM1Y2I4Mw==,Ben Noordhuis,Ben Noordhuis,"https: fix renegotation attack protection

Listen for the 'clientError' event that is emitted when a renegotation attack
is detected and close the connection.

Fixes test/pummel/test-https-ci-reneg-attack.js",https://api.github.com/repos/nodejs/node/git/commits/0ad005852c7bd7e896c9c94ae5284493aa35cb83,2012-10-07,fix renegotation attack protection
101,MDY6Q29tbWl0MjcxOTM3Nzk6MGFkMDA1ODUyYzdiZDdlODk2YzljOTRhZTUyODQ0OTNhYTM1Y2I4Mw==,Ben Noordhuis,Ben Noordhuis,"https: fix renegotation attack protection

Listen for the 'clientError' event that is emitted when a renegotation attack
is detected and close the connection.

Fixes test/pummel/test-https-ci-reneg-attack.js",https://api.github.com/repos/nodejs/node/git/commits/0ad005852c7bd7e896c9c94ae5284493aa35cb83,2012-10-07,"Listen for the 'clientError' event that is emitted when a renegotation attack
is detected and close the connection"
101,MDY6Q29tbWl0MjcxOTM3Nzk6MGFkMDA1ODUyYzdiZDdlODk2YzljOTRhZTUyODQ0OTNhYTM1Y2I4Mw==,Ben Noordhuis,Ben Noordhuis,"https: fix renegotation attack protection

Listen for the 'clientError' event that is emitted when a renegotation attack
is detected and close the connection.

Fixes test/pummel/test-https-ci-reneg-attack.js",https://api.github.com/repos/nodejs/node/git/commits/0ad005852c7bd7e896c9c94ae5284493aa35cb83,2012-10-07,Fixes test/pummel/test-https-ci-reneg-attack.js
102,MDY6Q29tbWl0MjcxOTM3Nzk6ODM2YTA2ZmM0ZjQ5MjBkNWU5Njc1NzYzMjkwYzk3YWE0ZTcyODhmZQ==,isaacs,isaacs,"Revert ""http: make http.ServerResponse emit 'end'""

This reverts commit 790d651f0dfae13f1e2b799820ab18ac09f251b7.

This makes Duplex streams unworkable, and would only ever be a special
case for HTTP responses, which is not ideal.

Intead, we're going to just bless the 'finish' event for all Writable
streams in 0.10",https://api.github.com/repos/nodejs/node/git/commits/836a06fc4f4920d5e9675763290c97aa4e7288fe,2012-10-04,"Revert ""make emit 'end'"""
102,MDY6Q29tbWl0MjcxOTM3Nzk6ODM2YTA2ZmM0ZjQ5MjBkNWU5Njc1NzYzMjkwYzk3YWE0ZTcyODhmZQ==,isaacs,isaacs,"Revert ""http: make http.ServerResponse emit 'end'""

This reverts commit 790d651f0dfae13f1e2b799820ab18ac09f251b7.

This makes Duplex streams unworkable, and would only ever be a special
case for HTTP responses, which is not ideal.

Intead, we're going to just bless the 'finish' event for all Writable
streams in 0.10",https://api.github.com/repos/nodejs/node/git/commits/836a06fc4f4920d5e9675763290c97aa4e7288fe,2012-10-04,This reverts commit 790d651f0dfae13f1e2b799820ab18ac09f251b7
102,MDY6Q29tbWl0MjcxOTM3Nzk6ODM2YTA2ZmM0ZjQ5MjBkNWU5Njc1NzYzMjkwYzk3YWE0ZTcyODhmZQ==,isaacs,isaacs,"Revert ""http: make http.ServerResponse emit 'end'""

This reverts commit 790d651f0dfae13f1e2b799820ab18ac09f251b7.

This makes Duplex streams unworkable, and would only ever be a special
case for HTTP responses, which is not ideal.

Intead, we're going to just bless the 'finish' event for all Writable
streams in 0.10",https://api.github.com/repos/nodejs/node/git/commits/836a06fc4f4920d5e9675763290c97aa4e7288fe,2012-10-04,"This makes Duplex streams unworkable, and would only ever be a special
case for HTTP responses, which is not ideal"
102,MDY6Q29tbWl0MjcxOTM3Nzk6ODM2YTA2ZmM0ZjQ5MjBkNWU5Njc1NzYzMjkwYzk3YWE0ZTcyODhmZQ==,isaacs,isaacs,"Revert ""http: make http.ServerResponse emit 'end'""

This reverts commit 790d651f0dfae13f1e2b799820ab18ac09f251b7.

This makes Duplex streams unworkable, and would only ever be a special
case for HTTP responses, which is not ideal.

Intead, we're going to just bless the 'finish' event for all Writable
streams in 0.10",https://api.github.com/repos/nodejs/node/git/commits/836a06fc4f4920d5e9675763290c97aa4e7288fe,2012-10-04,"Intead, we're going to just bless the 'finish' event for all Writable
streams in 0.10"
103,MDY6Q29tbWl0MjcxOTM3Nzk6YWU0MGYxYzQzODA1MGJmNDYwNzE0Mzg2MjI1OWFlMTA5MzFlM2EzYw==,isaacs,isaacs,"Merge remote-tracking branch 'ry/v0.8' into v0.8-merge

Conflicts:
	AUTHORS
	ChangeLog
	deps/openssl/openssl.gyp
	deps/uv/src/unix/linux/linux-core.c
	deps/uv/src/unix/process.c
	deps/uv/src/unix/stream.c
	deps/v8/src/arm/builtins-arm.cc
	deps/v8/src/arm/code-stubs-arm.cc
	deps/v8/src/arm/full-codegen-arm.cc
	lib/tls.js
	src/node_version.h
	test/simple/test-http-client-timeout-agent.js",https://api.github.com/repos/nodejs/node/git/commits/ae40f1c438050bf4607143862259ae10931e3a3c,2012-09-28,Merge remote-tracking branch 'ry/v0.8' into v0.8-merge
103,MDY6Q29tbWl0MjcxOTM3Nzk6YWU0MGYxYzQzODA1MGJmNDYwNzE0Mzg2MjI1OWFlMTA5MzFlM2EzYw==,isaacs,isaacs,"Merge remote-tracking branch 'ry/v0.8' into v0.8-merge

Conflicts:
	AUTHORS
	ChangeLog
	deps/openssl/openssl.gyp
	deps/uv/src/unix/linux/linux-core.c
	deps/uv/src/unix/process.c
	deps/uv/src/unix/stream.c
	deps/v8/src/arm/builtins-arm.cc
	deps/v8/src/arm/code-stubs-arm.cc
	deps/v8/src/arm/full-codegen-arm.cc
	lib/tls.js
	src/node_version.h
	test/simple/test-http-client-timeout-agent.js",https://api.github.com/repos/nodejs/node/git/commits/ae40f1c438050bf4607143862259ae10931e3a3c,2012-09-28,Conflicts
103,MDY6Q29tbWl0MjcxOTM3Nzk6YWU0MGYxYzQzODA1MGJmNDYwNzE0Mzg2MjI1OWFlMTA5MzFlM2EzYw==,isaacs,isaacs,"Merge remote-tracking branch 'ry/v0.8' into v0.8-merge

Conflicts:
	AUTHORS
	ChangeLog
	deps/openssl/openssl.gyp
	deps/uv/src/unix/linux/linux-core.c
	deps/uv/src/unix/process.c
	deps/uv/src/unix/stream.c
	deps/v8/src/arm/builtins-arm.cc
	deps/v8/src/arm/code-stubs-arm.cc
	deps/v8/src/arm/full-codegen-arm.cc
	lib/tls.js
	src/node_version.h
	test/simple/test-http-client-timeout-agent.js",https://api.github.com/repos/nodejs/node/git/commits/ae40f1c438050bf4607143862259ae10931e3a3c,2012-09-28,"	AUTHORS
	ChangeLog
	deps/openssl/openssl.gyp
	deps/uv/src/unix/linux/linux-core.c
	deps/uv/src/unix/process.c
	deps/uv/src/unix/stream.c
	deps/v8/src/arm/builtins-arm.cc
	deps/v8/src/arm/code-stubs-arm.cc
	deps/v8/src/arm/full-codegen-arm.cc
	lib/tls.js
	src/node_version.h
	test/simple/test-http-client-timeout-agent.js"
104,MDY6Q29tbWl0MjcxOTM3Nzk6YjM4Mjc3YmUyNjZjZmQ2YjZjM2NjOWUwMDczMDg5OGY2MmExMWY2ZQ==,Pavel Lang,Ben Noordhuis,"http: add response.headersSent property

Boolean property getter. True if headers was sent, false otherwise.",https://api.github.com/repos/nodejs/node/git/commits/b38277be266cfd6b6c3cc9e00730898f62a11f6e,2012-09-18,add response.headersSent property
104,MDY6Q29tbWl0MjcxOTM3Nzk6YjM4Mjc3YmUyNjZjZmQ2YjZjM2NjOWUwMDczMDg5OGY2MmExMWY2ZQ==,Pavel Lang,Ben Noordhuis,"http: add response.headersSent property

Boolean property getter. True if headers was sent, false otherwise.",https://api.github.com/repos/nodejs/node/git/commits/b38277be266cfd6b6c3cc9e00730898f62a11f6e,2012-09-18,Boolean property getter
104,MDY6Q29tbWl0MjcxOTM3Nzk6YjM4Mjc3YmUyNjZjZmQ2YjZjM2NjOWUwMDczMDg5OGY2MmExMWY2ZQ==,Pavel Lang,Ben Noordhuis,"http: add response.headersSent property

Boolean property getter. True if headers was sent, false otherwise.",https://api.github.com/repos/nodejs/node/git/commits/b38277be266cfd6b6c3cc9e00730898f62a11f6e,2012-09-18,"True if headers was sent, false otherwise."
105,MDY6Q29tbWl0MjcxOTM3Nzk6MzNhNWM4YTgxNDQ4M2ZmNDhiYTNhY2Q5NGUwOTEzMzViMzUzNjg3MA==,thewilli,isaacs,"http: handle multiple Proxy-Authenticate values

Just as the 'WWW-Authenticate' HTTP header the 'Proxy-Authenticate' header might
be received several times as well. Currently only one value is preserved. This
change allows to receive multiple values concatenated by space and comma.",https://api.github.com/repos/nodejs/node/git/commits/33a5c8a814483ff48ba3acd94e091335b3536870,2012-09-24,handle multiple Proxy-Authenticate values
105,MDY6Q29tbWl0MjcxOTM3Nzk6MzNhNWM4YTgxNDQ4M2ZmNDhiYTNhY2Q5NGUwOTEzMzViMzUzNjg3MA==,thewilli,isaacs,"http: handle multiple Proxy-Authenticate values

Just as the 'WWW-Authenticate' HTTP header the 'Proxy-Authenticate' header might
be received several times as well. Currently only one value is preserved. This
change allows to receive multiple values concatenated by space and comma.",https://api.github.com/repos/nodejs/node/git/commits/33a5c8a814483ff48ba3acd94e091335b3536870,2012-09-24,"Just as the 'WWW-Authenticate' HTTP header the 'Proxy-Authenticate' header might
be received several times as well"
105,MDY6Q29tbWl0MjcxOTM3Nzk6MzNhNWM4YTgxNDQ4M2ZmNDhiYTNhY2Q5NGUwOTEzMzViMzUzNjg3MA==,thewilli,isaacs,"http: handle multiple Proxy-Authenticate values

Just as the 'WWW-Authenticate' HTTP header the 'Proxy-Authenticate' header might
be received several times as well. Currently only one value is preserved. This
change allows to receive multiple values concatenated by space and comma.",https://api.github.com/repos/nodejs/node/git/commits/33a5c8a814483ff48ba3acd94e091335b3536870,2012-09-24,Currently only one value is preserved
105,MDY6Q29tbWl0MjcxOTM3Nzk6MzNhNWM4YTgxNDQ4M2ZmNDhiYTNhY2Q5NGUwOTEzMzViMzUzNjg3MA==,thewilli,isaacs,"http: handle multiple Proxy-Authenticate values

Just as the 'WWW-Authenticate' HTTP header the 'Proxy-Authenticate' header might
be received several times as well. Currently only one value is preserved. This
change allows to receive multiple values concatenated by space and comma.",https://api.github.com/repos/nodejs/node/git/commits/33a5c8a814483ff48ba3acd94e091335b3536870,2012-09-24,"This
change allows to receive multiple values concatenated by space and comma."
106,MDY6Q29tbWl0MjcxOTM3Nzk6YWMxN2RjMTc2NDcwMGY3NDEzYzI0MDk4MmM0MzcxN2M0MTU1M2FiMA==,thewilli,Ben Noordhuis,"http: handle multiple Proxy-Authenticate values

Just as the 'WWW-Authenticate' HTTP header the 'Proxy-Authenticate' header might
be received several times as well. Currently only one value is preserved. This
change allows to receive multiple values concatenated by space and comma.",https://api.github.com/repos/nodejs/node/git/commits/ac17dc1764700f7413c240982c43717c41553ab0,2012-09-24,handle multiple Proxy-Authenticate values
106,MDY6Q29tbWl0MjcxOTM3Nzk6YWMxN2RjMTc2NDcwMGY3NDEzYzI0MDk4MmM0MzcxN2M0MTU1M2FiMA==,thewilli,Ben Noordhuis,"http: handle multiple Proxy-Authenticate values

Just as the 'WWW-Authenticate' HTTP header the 'Proxy-Authenticate' header might
be received several times as well. Currently only one value is preserved. This
change allows to receive multiple values concatenated by space and comma.",https://api.github.com/repos/nodejs/node/git/commits/ac17dc1764700f7413c240982c43717c41553ab0,2012-09-24,"Just as the 'WWW-Authenticate' HTTP header the 'Proxy-Authenticate' header might
be received several times as well"
106,MDY6Q29tbWl0MjcxOTM3Nzk6YWMxN2RjMTc2NDcwMGY3NDEzYzI0MDk4MmM0MzcxN2M0MTU1M2FiMA==,thewilli,Ben Noordhuis,"http: handle multiple Proxy-Authenticate values

Just as the 'WWW-Authenticate' HTTP header the 'Proxy-Authenticate' header might
be received several times as well. Currently only one value is preserved. This
change allows to receive multiple values concatenated by space and comma.",https://api.github.com/repos/nodejs/node/git/commits/ac17dc1764700f7413c240982c43717c41553ab0,2012-09-24,Currently only one value is preserved
106,MDY6Q29tbWl0MjcxOTM3Nzk6YWMxN2RjMTc2NDcwMGY3NDEzYzI0MDk4MmM0MzcxN2M0MTU1M2FiMA==,thewilli,Ben Noordhuis,"http: handle multiple Proxy-Authenticate values

Just as the 'WWW-Authenticate' HTTP header the 'Proxy-Authenticate' header might
be received several times as well. Currently only one value is preserved. This
change allows to receive multiple values concatenated by space and comma.",https://api.github.com/repos/nodejs/node/git/commits/ac17dc1764700f7413c240982c43717c41553ab0,2012-09-24,"This
change allows to receive multiple values concatenated by space and comma."
107,MDY6Q29tbWl0MjcxOTM3Nzk6MGYyZWQyYmMyYzExNjRhMzNjMzlkMTcyOTYwYjRhY2ExYmUwOGJhYQ==,Nathan Rajlich,Nathan Rajlich,"http: make the client ""res"" object gets the same domain as ""req""

Fixes #4046.",https://api.github.com/repos/nodejs/node/git/commits/0f2ed2bc2c1164a33c39d172960b4aca1be08baa,2012-09-24,"make the client ""res"" object gets the same domain as ""req"""
107,MDY6Q29tbWl0MjcxOTM3Nzk6MGYyZWQyYmMyYzExNjRhMzNjMzlkMTcyOTYwYjRhY2ExYmUwOGJhYQ==,Nathan Rajlich,Nathan Rajlich,"http: make the client ""res"" object gets the same domain as ""req""

Fixes #4046.",https://api.github.com/repos/nodejs/node/git/commits/0f2ed2bc2c1164a33c39d172960b4aca1be08baa,2012-09-24,Fixes #4046.
108,MDY6Q29tbWl0MjcxOTM3Nzk6YmIyMDdjMjgyN2NkNzU4ZGQyNzNhZGIyOGJhZGViOWVjMjU4NjkzOQ==,isaacs,isaacs,"Merge remote-tracking branch 'ry/v0.8' into master

Conflicts:
	ChangeLog
	src/node_version.h
	test/simple/test-util-inspect.js",https://api.github.com/repos/nodejs/node/git/commits/bb207c2827cd758dd273adb28badeb9ec2586939,2012-09-12,Merge remote-tracking branch 'ry/v0.8' into master
108,MDY6Q29tbWl0MjcxOTM3Nzk6YmIyMDdjMjgyN2NkNzU4ZGQyNzNhZGIyOGJhZGViOWVjMjU4NjkzOQ==,isaacs,isaacs,"Merge remote-tracking branch 'ry/v0.8' into master

Conflicts:
	ChangeLog
	src/node_version.h
	test/simple/test-util-inspect.js",https://api.github.com/repos/nodejs/node/git/commits/bb207c2827cd758dd273adb28badeb9ec2586939,2012-09-12,Conflicts
108,MDY6Q29tbWl0MjcxOTM3Nzk6YmIyMDdjMjgyN2NkNzU4ZGQyNzNhZGIyOGJhZGViOWVjMjU4NjkzOQ==,isaacs,isaacs,"Merge remote-tracking branch 'ry/v0.8' into master

Conflicts:
	ChangeLog
	src/node_version.h
	test/simple/test-util-inspect.js",https://api.github.com/repos/nodejs/node/git/commits/bb207c2827cd758dd273adb28badeb9ec2586939,2012-09-12,"	ChangeLog
	src/node_version.h
	test/simple/test-util-inspect.js"
109,MDY6Q29tbWl0MjcxOTM3Nzk6NDUxZmYxNTQwYWI1MzYyMzdlOGQ3NTFkMjQxZDdmYzMzOTFhNDA4Nw==,Frédéric Germain,isaacs,http: Remove timeout handler when data arrives,https://api.github.com/repos/nodejs/node/git/commits/451ff1540ab536237e8d751d241d7fc3391a4087,2012-09-09,Remove timeout handler when data arrives
109,MDY6Q29tbWl0MjcxOTM3Nzk6NDUxZmYxNTQwYWI1MzYyMzdlOGQ3NTFkMjQxZDdmYzMzOTFhNDA4Nw==,Frédéric Germain,isaacs,http: Remove timeout handler when data arrives,https://api.github.com/repos/nodejs/node/git/commits/451ff1540ab536237e8d751d241d7fc3391a4087,2012-09-09,
110,MDY6Q29tbWl0MjcxOTM3Nzk6OWEzNTIxY2IyNWU1ZjAwMzVjZjM4ZWQ3YjE2NzI5YzhkMGRjM2M2NQ==,Ben Noordhuis,Ben Noordhuis,"http: respect HTTP/1.0 TE header

A HTTP/1.0 client does not support 'Transfer-Encoding: chunked' unless it
explicitly requests it by sending a 'TE: chunked' header.

Before this commit, node.js always disabled chunked encoding for HTTP/1.0
clients. Now it will scan for the TE header and turn on chunked encoding if
requested and applicable.

Fixes #940.",https://api.github.com/repos/nodejs/node/git/commits/9a3521cb25e5f0035cf38ed7b16729c8d0dc3c65,2012-09-08,respect HTTP/1.0 TE header
110,MDY6Q29tbWl0MjcxOTM3Nzk6OWEzNTIxY2IyNWU1ZjAwMzVjZjM4ZWQ3YjE2NzI5YzhkMGRjM2M2NQ==,Ben Noordhuis,Ben Noordhuis,"http: respect HTTP/1.0 TE header

A HTTP/1.0 client does not support 'Transfer-Encoding: chunked' unless it
explicitly requests it by sending a 'TE: chunked' header.

Before this commit, node.js always disabled chunked encoding for HTTP/1.0
clients. Now it will scan for the TE header and turn on chunked encoding if
requested and applicable.

Fixes #940.",https://api.github.com/repos/nodejs/node/git/commits/9a3521cb25e5f0035cf38ed7b16729c8d0dc3c65,2012-09-08,"A HTTP/1.0 client does not support 'Transfer-Encoding: chunked' unless it
explicitly requests it by sending a 'TE: chunked' header"
110,MDY6Q29tbWl0MjcxOTM3Nzk6OWEzNTIxY2IyNWU1ZjAwMzVjZjM4ZWQ3YjE2NzI5YzhkMGRjM2M2NQ==,Ben Noordhuis,Ben Noordhuis,"http: respect HTTP/1.0 TE header

A HTTP/1.0 client does not support 'Transfer-Encoding: chunked' unless it
explicitly requests it by sending a 'TE: chunked' header.

Before this commit, node.js always disabled chunked encoding for HTTP/1.0
clients. Now it will scan for the TE header and turn on chunked encoding if
requested and applicable.

Fixes #940.",https://api.github.com/repos/nodejs/node/git/commits/9a3521cb25e5f0035cf38ed7b16729c8d0dc3c65,2012-09-08,"Before this commit, node.js always disabled chunked encoding for HTTP/1.0
clients"
110,MDY6Q29tbWl0MjcxOTM3Nzk6OWEzNTIxY2IyNWU1ZjAwMzVjZjM4ZWQ3YjE2NzI5YzhkMGRjM2M2NQ==,Ben Noordhuis,Ben Noordhuis,"http: respect HTTP/1.0 TE header

A HTTP/1.0 client does not support 'Transfer-Encoding: chunked' unless it
explicitly requests it by sending a 'TE: chunked' header.

Before this commit, node.js always disabled chunked encoding for HTTP/1.0
clients. Now it will scan for the TE header and turn on chunked encoding if
requested and applicable.

Fixes #940.",https://api.github.com/repos/nodejs/node/git/commits/9a3521cb25e5f0035cf38ed7b16729c8d0dc3c65,2012-09-08,"Now it will scan for the TE header and turn on chunked encoding if
requested and applicable"
110,MDY6Q29tbWl0MjcxOTM3Nzk6OWEzNTIxY2IyNWU1ZjAwMzVjZjM4ZWQ3YjE2NzI5YzhkMGRjM2M2NQ==,Ben Noordhuis,Ben Noordhuis,"http: respect HTTP/1.0 TE header

A HTTP/1.0 client does not support 'Transfer-Encoding: chunked' unless it
explicitly requests it by sending a 'TE: chunked' header.

Before this commit, node.js always disabled chunked encoding for HTTP/1.0
clients. Now it will scan for the TE header and turn on chunked encoding if
requested and applicable.

Fixes #940.",https://api.github.com/repos/nodejs/node/git/commits/9a3521cb25e5f0035cf38ed7b16729c8d0dc3c65,2012-09-08,Fixes #940.
111,MDY6Q29tbWl0MjcxOTM3Nzk6NzkwZDY1MWYwZGZhZTEzZjFlMmI3OTk4MjBhYjE4YWMwOWYyNTFiNw==,Ben Noordhuis,Ben Noordhuis,"http: make http.ServerResponse emit 'end'

This used to be the internal 'finish' event. Make it public so API users will
know when the response has been sent completely.

Fixes #3855.",https://api.github.com/repos/nodejs/node/git/commits/790d651f0dfae13f1e2b799820ab18ac09f251b7,2012-09-04,make emit 'end'
111,MDY6Q29tbWl0MjcxOTM3Nzk6NzkwZDY1MWYwZGZhZTEzZjFlMmI3OTk4MjBhYjE4YWMwOWYyNTFiNw==,Ben Noordhuis,Ben Noordhuis,"http: make http.ServerResponse emit 'end'

This used to be the internal 'finish' event. Make it public so API users will
know when the response has been sent completely.

Fixes #3855.",https://api.github.com/repos/nodejs/node/git/commits/790d651f0dfae13f1e2b799820ab18ac09f251b7,2012-09-04,This used to be the internal 'finish' event
111,MDY6Q29tbWl0MjcxOTM3Nzk6NzkwZDY1MWYwZGZhZTEzZjFlMmI3OTk4MjBhYjE4YWMwOWYyNTFiNw==,Ben Noordhuis,Ben Noordhuis,"http: make http.ServerResponse emit 'end'

This used to be the internal 'finish' event. Make it public so API users will
know when the response has been sent completely.

Fixes #3855.",https://api.github.com/repos/nodejs/node/git/commits/790d651f0dfae13f1e2b799820ab18ac09f251b7,2012-09-04,"Make it public so API users will
know when the response has been sent completely"
111,MDY6Q29tbWl0MjcxOTM3Nzk6NzkwZDY1MWYwZGZhZTEzZjFlMmI3OTk4MjBhYjE4YWMwOWYyNTFiNw==,Ben Noordhuis,Ben Noordhuis,"http: make http.ServerResponse emit 'end'

This used to be the internal 'finish' event. Make it public so API users will
know when the response has been sent completely.

Fixes #3855.",https://api.github.com/repos/nodejs/node/git/commits/790d651f0dfae13f1e2b799820ab18ac09f251b7,2012-09-04,Fixes #3855.
112,MDY6Q29tbWl0MjcxOTM3Nzk6Yzc4Njc4YjA4MWQ4YzM3YjhiYmM2MTZlNGNiNzgyY2YzMjY0NTYxOQ==,Brian White,Ben Noordhuis,"http: bubble up parser errors to ClientRequest

Make parser errors bubble up to the ClientRequest instead of the underlying
net.Socket object.

Fixes #3776.",https://api.github.com/repos/nodejs/node/git/commits/c78678b081d8c37b8bbc616e4cb782cf32645619,2012-08-07,bubble up parser errors to ClientRequest
112,MDY6Q29tbWl0MjcxOTM3Nzk6Yzc4Njc4YjA4MWQ4YzM3YjhiYmM2MTZlNGNiNzgyY2YzMjY0NTYxOQ==,Brian White,Ben Noordhuis,"http: bubble up parser errors to ClientRequest

Make parser errors bubble up to the ClientRequest instead of the underlying
net.Socket object.

Fixes #3776.",https://api.github.com/repos/nodejs/node/git/commits/c78678b081d8c37b8bbc616e4cb782cf32645619,2012-08-07,"Make parser errors bubble up to the ClientRequest instead of the underlying
net.Socket object"
112,MDY6Q29tbWl0MjcxOTM3Nzk6Yzc4Njc4YjA4MWQ4YzM3YjhiYmM2MTZlNGNiNzgyY2YzMjY0NTYxOQ==,Brian White,Ben Noordhuis,"http: bubble up parser errors to ClientRequest

Make parser errors bubble up to the ClientRequest instead of the underlying
net.Socket object.

Fixes #3776.",https://api.github.com/repos/nodejs/node/git/commits/c78678b081d8c37b8bbc616e4cb782cf32645619,2012-08-07,Fixes #3776.
113,MDY6Q29tbWl0MjcxOTM3Nzk6YjBjMDExMWIwNDIwMWJmOTlmZGUwZmUwNjE2YjlmZGYxZjMzNjU1ZA==,isaacs,isaacs,https: Use host header as effective servername,https://api.github.com/repos/nodejs/node/git/commits/b0c0111b04201bf99fde0fe0616b9fdf1f33655d,2012-07-25,Use host header as effective servername
113,MDY6Q29tbWl0MjcxOTM3Nzk6YjBjMDExMWIwNDIwMWJmOTlmZGUwZmUwNjE2YjlmZGYxZjMzNjU1ZA==,isaacs,isaacs,https: Use host header as effective servername,https://api.github.com/repos/nodejs/node/git/commits/b0c0111b04201bf99fde0fe0616b9fdf1f33655d,2012-07-25,
114,MDY6Q29tbWl0MjcxOTM3Nzk6ZTA2YjVkN2FmNzYxOWU5MjM0YmI3ZWI4YTlkNjZiM2M3ZDI0NWFkOQ==,Brian White,Bert Belder,"http: remove duplicate assignments

Closes GH-3754",https://api.github.com/repos/nodejs/node/git/commits/e06b5d7af7619e9234bb7eb8a9d66b3c7d245ad9,2012-07-23,remove duplicate assignments
114,MDY6Q29tbWl0MjcxOTM3Nzk6ZTA2YjVkN2FmNzYxOWU5MjM0YmI3ZWI4YTlkNjZiM2M3ZDI0NWFkOQ==,Brian White,Bert Belder,"http: remove duplicate assignments

Closes GH-3754",https://api.github.com/repos/nodejs/node/git/commits/e06b5d7af7619e9234bb7eb8a9d66b3c7d245ad9,2012-07-23,Closes GH-3754
115,MDY6Q29tbWl0MjcxOTM3Nzk6ZTQzZmU1YzgzM2M5NDFhYmEyNWJmZGI2MTkzZWY0MWZjNTBhZTQwNQ==,Fedor Indutny,Fedor Indutny,"Revert ""http/https: pass request to .createConnection()""

This reverts commit 53716eb0b5338999761d115fad9d392077836e63.",https://api.github.com/repos/nodejs/node/git/commits/e43fe5c833c941aba25bfdb6193ef41fc50ae405,2012-07-20,"Revert ""pass request to .createConnection()"""
115,MDY6Q29tbWl0MjcxOTM3Nzk6ZTQzZmU1YzgzM2M5NDFhYmEyNWJmZGI2MTkzZWY0MWZjNTBhZTQwNQ==,Fedor Indutny,Fedor Indutny,"Revert ""http/https: pass request to .createConnection()""

This reverts commit 53716eb0b5338999761d115fad9d392077836e63.",https://api.github.com/repos/nodejs/node/git/commits/e43fe5c833c941aba25bfdb6193ef41fc50ae405,2012-07-20,This reverts commit 53716eb0b5338999761d115fad9d392077836e63.
116,MDY6Q29tbWl0MjcxOTM3Nzk6ZWIyY2ExMDQ2MjhlNDE1ZmM3M2MzMzBjZGQ3NmZjYTc3YmY1YmE5Nw==,Fedor Indutny,Fedor Indutny,tls: veryify server's identity,https://api.github.com/repos/nodejs/node/git/commits/eb2ca104628e415fc73c330cdd76fca77bf5ba97,2012-07-11,tls: veryify server's identity
116,MDY6Q29tbWl0MjcxOTM3Nzk6ZWIyY2ExMDQ2MjhlNDE1ZmM3M2MzMzBjZGQ3NmZjYTc3YmY1YmE5Nw==,Fedor Indutny,Fedor Indutny,tls: veryify server's identity,https://api.github.com/repos/nodejs/node/git/commits/eb2ca104628e415fc73c330cdd76fca77bf5ba97,2012-07-11,
117,MDY6Q29tbWl0MjcxOTM3Nzk6NTM3MTZlYjBiNTMzODk5OTc2MWQxMTVmYWQ5ZDM5MjA3NzgzNmU2Mw==,Fedor Indutny,Fedor Indutny,"http/https: pass request to .createConnection()

It's useful for passing some additional options of request object to the
underlying API",https://api.github.com/repos/nodejs/node/git/commits/53716eb0b5338999761d115fad9d392077836e63,2012-07-11,pass request to .createConnection()
117,MDY6Q29tbWl0MjcxOTM3Nzk6NTM3MTZlYjBiNTMzODk5OTc2MWQxMTVmYWQ5ZDM5MjA3NzgzNmU2Mw==,Fedor Indutny,Fedor Indutny,"http/https: pass request to .createConnection()

It's useful for passing some additional options of request object to the
underlying API",https://api.github.com/repos/nodejs/node/git/commits/53716eb0b5338999761d115fad9d392077836e63,2012-07-11,"It's useful for passing some additional options of request object to the
underlying API"
118,MDY6Q29tbWl0MjcxOTM3Nzk6NWIzOTkyOWQ0N2Y5NjJmY2NhZmI0MTE2ZjNjMTc3ZGRjNGZkMzI2OQ==,isaacs,isaacs,Add --no-deprecation and --trace-deprecation flags,https://api.github.com/repos/nodejs/node/git/commits/5b39929d47f962fccafb4116f3c177ddc4fd3269,2012-06-21,Add --no-deprecation and --trace-deprecation flags
118,MDY6Q29tbWl0MjcxOTM3Nzk6NWIzOTkyOWQ0N2Y5NjJmY2NhZmI0MTE2ZjNjMTc3ZGRjNGZkMzI2OQ==,isaacs,isaacs,Add --no-deprecation and --trace-deprecation flags,https://api.github.com/repos/nodejs/node/git/commits/5b39929d47f962fccafb4116f3c177ddc4fd3269,2012-06-21,
119,MDY6Q29tbWl0MjcxOTM3Nzk6MjYwNjk1YWZkMDcwNjcyNTRhNzA0YzA1MDI0M2QyZTYxOWJhZThiNw==,isaacs,isaacs,http: Hush 'MUST NOT have a body' warnings to debug(),https://api.github.com/repos/nodejs/node/git/commits/260695afd07067254a704c050243d2e619bae8b7,2012-06-21,Hush 'MUST NOT have a body' warnings to debug()
119,MDY6Q29tbWl0MjcxOTM3Nzk6MjYwNjk1YWZkMDcwNjcyNTRhNzA0YzA1MDI0M2QyZTYxOWJhZThiNw==,isaacs,isaacs,http: Hush 'MUST NOT have a body' warnings to debug(),https://api.github.com/repos/nodejs/node/git/commits/260695afd07067254a704c050243d2e619bae8b7,2012-06-21,
120,MDY6Q29tbWl0MjcxOTM3Nzk6MWUwY2U1ZDFiZGYzNjRiZjZlY2E4MjE2MzVlM2FlOGU2NTgwNzY2Nw==,Andreas Madsen,isaacs,domain: the EventEmitter constructor is now always called in nodecore,https://api.github.com/repos/nodejs/node/git/commits/1e0ce5d1bdf364bf6eca821635e3ae8e65807667,2012-06-12,domain: the EventEmitter constructor is now always called in nodecore
120,MDY6Q29tbWl0MjcxOTM3Nzk6MWUwY2U1ZDFiZGYzNjRiZjZlY2E4MjE2MzVlM2FlOGU2NTgwNzY2Nw==,Andreas Madsen,isaacs,domain: the EventEmitter constructor is now always called in nodecore,https://api.github.com/repos/nodejs/node/git/commits/1e0ce5d1bdf364bf6eca821635e3ae8e65807667,2012-06-12,
121,MDY6Q29tbWl0MjcxOTM3Nzk6OWE5OThkNWUyNDRkYzU4YTFmNzY1MGU1NzQzNzFlMGQ0Yzc1ZmNjMQ==,Simon Sturmer,Ben Noordhuis,"http: don't lowercase http req header until later

Don't lowercase the request header until we're in the _addHeaderLine method,
makes it easier to intercept the raw request headers.",https://api.github.com/repos/nodejs/node/git/commits/9a998d5e244dc58a1f7650e574371e0d4c75fcc1,2012-06-01,don't lowercase req header until later
121,MDY6Q29tbWl0MjcxOTM3Nzk6OWE5OThkNWUyNDRkYzU4YTFmNzY1MGU1NzQzNzFlMGQ0Yzc1ZmNjMQ==,Simon Sturmer,Ben Noordhuis,"http: don't lowercase http req header until later

Don't lowercase the request header until we're in the _addHeaderLine method,
makes it easier to intercept the raw request headers.",https://api.github.com/repos/nodejs/node/git/commits/9a998d5e244dc58a1f7650e574371e0d4c75fcc1,2012-06-01,"Don't lowercase the request header until we're in the _addHeaderLine method,
makes it easier to intercept the raw request headers."
122,MDY6Q29tbWl0MjcxOTM3Nzk6ZjcyMWQwMmM4YTM1NmMxYTlhNDBkOGJmNzA5OTE4Njc0OWYwMTk3OA==,Shigeki Ohtsu,Ben Noordhuis,http: fix duplicated variable declaration,https://api.github.com/repos/nodejs/node/git/commits/f721d02c8a356c1a9a40d8bf7099186749f01978,2012-05-28,fix duplicated variable declaration
122,MDY6Q29tbWl0MjcxOTM3Nzk6ZjcyMWQwMmM4YTM1NmMxYTlhNDBkOGJmNzA5OTE4Njc0OWYwMTk3OA==,Shigeki Ohtsu,Ben Noordhuis,http: fix duplicated variable declaration,https://api.github.com/repos/nodejs/node/git/commits/f721d02c8a356c1a9a40d8bf7099186749f01978,2012-05-28,
123,MDY6Q29tbWl0MjcxOTM3Nzk6NDA5OWQxZWViYWU0ZTc4ODY0YTY4NzljMGI5ZTA4ZjMxZDQ4ZDhjYg==,Adam Malcontenti-Wilson,Ben Noordhuis,"http: make http.get() accept a URL

http.get() now accepts either a URL (as a string) or an options object.",https://api.github.com/repos/nodejs/node/git/commits/4099d1eebae4e78864a6879c0b9e08f31d48d8cb,2012-05-16,make accept a URL
123,MDY6Q29tbWl0MjcxOTM3Nzk6NDA5OWQxZWViYWU0ZTc4ODY0YTY4NzljMGI5ZTA4ZjMxZDQ4ZDhjYg==,Adam Malcontenti-Wilson,Ben Noordhuis,"http: make http.get() accept a URL

http.get() now accepts either a URL (as a string) or an options object.",https://api.github.com/repos/nodejs/node/git/commits/4099d1eebae4e78864a6879c0b9e08f31d48d8cb,2012-05-16,now accepts either a URL (as a string) or an options object.
124,MDY6Q29tbWl0MjcxOTM3Nzk6ZmFhNGQ5ZmY1ZjdmZjY3NmRiMDYyNDBlMDkxNDBmOTc4MGUyNjM4Yw==,isaacs,isaacs,Re-apply http fixes from v0.6 branch properly,https://api.github.com/repos/nodejs/node/git/commits/faa4d9ff5f7ff676db06240e09140f9780e2638c,2012-05-15,Re-apply fixes from v0.6 branch properly
124,MDY6Q29tbWl0MjcxOTM3Nzk6ZmFhNGQ5ZmY1ZjdmZjY3NmRiMDYyNDBlMDkxNDBmOTc4MGUyNjM4Yw==,isaacs,isaacs,Re-apply http fixes from v0.6 branch properly,https://api.github.com/repos/nodejs/node/git/commits/faa4d9ff5f7ff676db06240e09140f9780e2638c,2012-05-15,
125,MDY6Q29tbWl0MjcxOTM3Nzk6OWFlNmQ4ZmVlMzQ1YmRiYzZmOTRlMzhlZWU1N2I2MGQyMzEyODhlYg==,Ben Noordhuis,Ben Noordhuis,"http: fix client request.end() EPIPE race

request.end() would sometimes try to write a zero-length buffer to the socket.
Don't do that, it triggers an unnecessary EPIPE when the other end has closed
the connection.

Fixes #3257.",https://api.github.com/repos/nodejs/node/git/commits/9ae6d8fee345bdbc6f94e38eee57b60d231288eb,2012-05-15,fix client request.end() EPIPE race
125,MDY6Q29tbWl0MjcxOTM3Nzk6OWFlNmQ4ZmVlMzQ1YmRiYzZmOTRlMzhlZWU1N2I2MGQyMzEyODhlYg==,Ben Noordhuis,Ben Noordhuis,"http: fix client request.end() EPIPE race

request.end() would sometimes try to write a zero-length buffer to the socket.
Don't do that, it triggers an unnecessary EPIPE when the other end has closed
the connection.

Fixes #3257.",https://api.github.com/repos/nodejs/node/git/commits/9ae6d8fee345bdbc6f94e38eee57b60d231288eb,2012-05-15,request.end() would sometimes try to write a zero-length buffer to the socket
125,MDY6Q29tbWl0MjcxOTM3Nzk6OWFlNmQ4ZmVlMzQ1YmRiYzZmOTRlMzhlZWU1N2I2MGQyMzEyODhlYg==,Ben Noordhuis,Ben Noordhuis,"http: fix client request.end() EPIPE race

request.end() would sometimes try to write a zero-length buffer to the socket.
Don't do that, it triggers an unnecessary EPIPE when the other end has closed
the connection.

Fixes #3257.",https://api.github.com/repos/nodejs/node/git/commits/9ae6d8fee345bdbc6f94e38eee57b60d231288eb,2012-05-15,"Don't do that, it triggers an unnecessary EPIPE when the other end has closed
the connection"
125,MDY6Q29tbWl0MjcxOTM3Nzk6OWFlNmQ4ZmVlMzQ1YmRiYzZmOTRlMzhlZWU1N2I2MGQyMzEyODhlYg==,Ben Noordhuis,Ben Noordhuis,"http: fix client request.end() EPIPE race

request.end() would sometimes try to write a zero-length buffer to the socket.
Don't do that, it triggers an unnecessary EPIPE when the other end has closed
the connection.

Fixes #3257.",https://api.github.com/repos/nodejs/node/git/commits/9ae6d8fee345bdbc6f94e38eee57b60d231288eb,2012-05-15,Fixes #3257.
126,MDY6Q29tbWl0MjcxOTM3Nzk6NTE2NGFlMzgzODBkYWRjZTc0ZThmNjRkN2JkM2VhYTE5MzVkZDEwMQ==,isaacs,isaacs,"Merge remote-tracking branch 'ry/v0.6' into v0.6-merge

Conflicts:
	ChangeLog
	deps/uv/include/uv-private/uv-unix.h
	deps/uv/src/unix/core.c
	deps/uv/src/unix/sunos.c
	deps/v8/src/runtime.cc
	doc/api/crypto.markdown
	lib/http.js
	src/node_version.h
	test/gc/test-http-client-timeout.js
	wscript",https://api.github.com/repos/nodejs/node/git/commits/5164ae38380dadce74e8f64d7bd3eaa1935dd101,2012-05-15,Merge remote-tracking branch 'ry/v0.6' into v0.6-merge
126,MDY6Q29tbWl0MjcxOTM3Nzk6NTE2NGFlMzgzODBkYWRjZTc0ZThmNjRkN2JkM2VhYTE5MzVkZDEwMQ==,isaacs,isaacs,"Merge remote-tracking branch 'ry/v0.6' into v0.6-merge

Conflicts:
	ChangeLog
	deps/uv/include/uv-private/uv-unix.h
	deps/uv/src/unix/core.c
	deps/uv/src/unix/sunos.c
	deps/v8/src/runtime.cc
	doc/api/crypto.markdown
	lib/http.js
	src/node_version.h
	test/gc/test-http-client-timeout.js
	wscript",https://api.github.com/repos/nodejs/node/git/commits/5164ae38380dadce74e8f64d7bd3eaa1935dd101,2012-05-15,Conflicts
126,MDY6Q29tbWl0MjcxOTM3Nzk6NTE2NGFlMzgzODBkYWRjZTc0ZThmNjRkN2JkM2VhYTE5MzVkZDEwMQ==,isaacs,isaacs,"Merge remote-tracking branch 'ry/v0.6' into v0.6-merge

Conflicts:
	ChangeLog
	deps/uv/include/uv-private/uv-unix.h
	deps/uv/src/unix/core.c
	deps/uv/src/unix/sunos.c
	deps/v8/src/runtime.cc
	doc/api/crypto.markdown
	lib/http.js
	src/node_version.h
	test/gc/test-http-client-timeout.js
	wscript",https://api.github.com/repos/nodejs/node/git/commits/5164ae38380dadce74e8f64d7bd3eaa1935dd101,2012-05-15,"	ChangeLog
	deps/uv/include/uv-private/uv-unix.h
	deps/uv/src/unix/core.c
	deps/uv/src/unix/sunos.c
	deps/v8/src/runtime.cc
	doc/api/crypto.markdown
	lib/	src/node_version.h
	test/gc/test-	wscript"
127,MDY6Q29tbWl0MjcxOTM3Nzk6MDExMDNkMDc3YmNlNjI2YTMzMmJlOTk4ODEzMzgyZDE1YmVkMzUwMQ==,isaacs,isaacs,"Guard against emitting 'end' twice on http responses

Conflicts:

	lib/http.js",https://api.github.com/repos/nodejs/node/git/commits/01103d077bce626a332be998813382d15bed3501,2012-05-15,Guard against emitting 'end' twice on responses
127,MDY6Q29tbWl0MjcxOTM3Nzk6MDExMDNkMDc3YmNlNjI2YTMzMmJlOTk4ODEzMzgyZDE1YmVkMzUwMQ==,isaacs,isaacs,"Guard against emitting 'end' twice on http responses

Conflicts:

	lib/http.js",https://api.github.com/repos/nodejs/node/git/commits/01103d077bce626a332be998813382d15bed3501,2012-05-15,Conflicts
127,MDY6Q29tbWl0MjcxOTM3Nzk6MDExMDNkMDc3YmNlNjI2YTMzMmJlOTk4ODEzMzgyZDE1YmVkMzUwMQ==,isaacs,isaacs,"Guard against emitting 'end' twice on http responses

Conflicts:

	lib/http.js",https://api.github.com/repos/nodejs/node/git/commits/01103d077bce626a332be998813382d15bed3501,2012-05-15,	lib/http.js
128,MDY6Q29tbWl0MjcxOTM3Nzk6YTk4ZTg0NTUxNjIwNGY1OWI2ODIyMjhhOTYyODljZDg4NDc2OTI0Mg==,isaacs,isaacs,"Break up huge function in ClientRequest.onSocket

Conflicts:

	lib/http.js",https://api.github.com/repos/nodejs/node/git/commits/a98e845516204f59b682228a96289cd884769242,2012-05-11,Break up huge function in ClientRequest.onSocket
128,MDY6Q29tbWl0MjcxOTM3Nzk6YTk4ZTg0NTUxNjIwNGY1OWI2ODIyMjhhOTYyODljZDg4NDc2OTI0Mg==,isaacs,isaacs,"Break up huge function in ClientRequest.onSocket

Conflicts:

	lib/http.js",https://api.github.com/repos/nodejs/node/git/commits/a98e845516204f59b682228a96289cd884769242,2012-05-11,Conflicts
128,MDY6Q29tbWl0MjcxOTM3Nzk6YTk4ZTg0NTUxNjIwNGY1OWI2ODIyMjhhOTYyODljZDg4NDc2OTI0Mg==,isaacs,isaacs,"Break up huge function in ClientRequest.onSocket

Conflicts:

	lib/http.js",https://api.github.com/repos/nodejs/node/git/commits/a98e845516204f59b682228a96289cd884769242,2012-05-11,	lib/http.js
129,MDY6Q29tbWl0MjcxOTM3Nzk6MTRhNWI0NWMwNmMzMjdjODM4ZDkzMTMwY2RmZWVjMDNlOGZhZDFmYg==,isaacs,isaacs,Guard against emitting 'end' twice on http responses,https://api.github.com/repos/nodejs/node/git/commits/14a5b45c06c327c838d93130cdfeec03e8fad1fb,2012-05-15,Guard against emitting 'end' twice on responses
129,MDY6Q29tbWl0MjcxOTM3Nzk6MTRhNWI0NWMwNmMzMjdjODM4ZDkzMTMwY2RmZWVjMDNlOGZhZDFmYg==,isaacs,isaacs,Guard against emitting 'end' twice on http responses,https://api.github.com/repos/nodejs/node/git/commits/14a5b45c06c327c838d93130cdfeec03e8fad1fb,2012-05-15,
130,MDY6Q29tbWl0MjcxOTM3Nzk6MDdkOGE0NjUwZTllNDk5ZDQ3OTcxNWI2MDMxY2RiYTcwOTZiNzM4NQ==,isaacs,isaacs,Break up huge function in ClientRequest.onSocket,https://api.github.com/repos/nodejs/node/git/commits/07d8a4650e9e499d479715b6031cdba7096b7385,2012-05-11,Break up huge function in ClientRequest.onSocket
130,MDY6Q29tbWl0MjcxOTM3Nzk6MDdkOGE0NjUwZTllNDk5ZDQ3OTcxNWI2MDMxY2RiYTcwOTZiNzM4NQ==,isaacs,isaacs,Break up huge function in ClientRequest.onSocket,https://api.github.com/repos/nodejs/node/git/commits/07d8a4650e9e499d479715b6031cdba7096b7385,2012-05-11,
131,MDY6Q29tbWl0MjcxOTM3Nzk6MDdiZTlmYzNhNjc0ZDhhMmUxNDgwNDFmMzY3NGMxYWJhZWUwOTA3Zg==,isaacs,isaacs,"Merge remote-tracking branch 'ry/v0.6' into v0.6-merge

Conflicts:
	Makefile
	lib/zlib.js
	src/node.cc
	src/node.js",https://api.github.com/repos/nodejs/node/git/commits/07be9fc3a674d8a2e148041f3674c1abaee0907f,2012-05-09,Merge remote-tracking branch 'ry/v0.6' into v0.6-merge
131,MDY6Q29tbWl0MjcxOTM3Nzk6MDdiZTlmYzNhNjc0ZDhhMmUxNDgwNDFmMzY3NGMxYWJhZWUwOTA3Zg==,isaacs,isaacs,"Merge remote-tracking branch 'ry/v0.6' into v0.6-merge

Conflicts:
	Makefile
	lib/zlib.js
	src/node.cc
	src/node.js",https://api.github.com/repos/nodejs/node/git/commits/07be9fc3a674d8a2e148041f3674c1abaee0907f,2012-05-09,Conflicts
131,MDY6Q29tbWl0MjcxOTM3Nzk6MDdiZTlmYzNhNjc0ZDhhMmUxNDgwNDFmMzY3NGMxYWJhZWUwOTA3Zg==,isaacs,isaacs,"Merge remote-tracking branch 'ry/v0.6' into v0.6-merge

Conflicts:
	Makefile
	lib/zlib.js
	src/node.cc
	src/node.js",https://api.github.com/repos/nodejs/node/git/commits/07be9fc3a674d8a2e148041f3674c1abaee0907f,2012-05-09,"	Makefile
	lib/zlib.js
	src/node.cc
	src/node.js"
132,MDY6Q29tbWl0MjcxOTM3Nzk6OGM3NThlMTI3YzlkODE3OTFjYjU1MDQzYWJiNDE4Y2U2MjRkZmNhZg==,isaacs,isaacs,Don't destroy on timeout,https://api.github.com/repos/nodejs/node/git/commits/8c758e127c9d81791cb55043abb418ce624dfcaf,2012-05-07,Don't destroy on timeout
132,MDY6Q29tbWl0MjcxOTM3Nzk6OGM3NThlMTI3YzlkODE3OTFjYjU1MDQzYWJiNDE4Y2U2MjRkZmNhZg==,isaacs,isaacs,Don't destroy on timeout,https://api.github.com/repos/nodejs/node/git/commits/8c758e127c9d81791cb55043abb418ce624dfcaf,2012-05-07,
133,MDY6Q29tbWl0MjcxOTM3Nzk6YjRmYmY2ZDI3NTkwZTBmYWU0MmNjMzlhZGNhOTY5NDc5M2VmZGNlMQ==,isaacs,isaacs,Fix #3231. Don't try to emit error on a null'ed req object,https://api.github.com/repos/nodejs/node/git/commits/b4fbf6d27590e0fae42cc39adca9694793efdce1,2012-05-07,Fix #3231. Don't try to emit error on a null'ed req object
133,MDY6Q29tbWl0MjcxOTM3Nzk6YjRmYmY2ZDI3NTkwZTBmYWU0MmNjMzlhZGNhOTY5NDc5M2VmZGNlMQ==,isaacs,isaacs,Fix #3231. Don't try to emit error on a null'ed req object,https://api.github.com/repos/nodejs/node/git/commits/b4fbf6d27590e0fae42cc39adca9694793efdce1,2012-05-07,
134,MDY6Q29tbWl0MjcxOTM3Nzk6NTg3MWM4MTE4MWJjMzM5ZTIyNjVlNTZlMWJhNThiZjNiZTczNzA4ZA==,Mark Cavage,isaacs,"Add HTTP Status codes from RFC 6585

See: http://tools.ietf.org/html/rfc6585",https://api.github.com/repos/nodejs/node/git/commits/5871c81181bc339e2265e56e1ba58bf3be73708d,2011-12-19,Add HTTP Status codes from RFC 6585
134,MDY6Q29tbWl0MjcxOTM3Nzk6NTg3MWM4MTE4MWJjMzM5ZTIyNjVlNTZlMWJhNThiZjNiZTczNzA4ZA==,Mark Cavage,isaacs,"Add HTTP Status codes from RFC 6585

See: http://tools.ietf.org/html/rfc6585",https://api.github.com/repos/nodejs/node/git/commits/5871c81181bc339e2265e56e1ba58bf3be73708d,2011-12-19,See: http://tools.ietf.org/html/rfc6585
135,MDY6Q29tbWl0MjcxOTM3Nzk6Y2Q4ZjgyYzAwN2JmMzE2ZmNkODU3ZGExZTAwYmZlMzU4ZGY3YWY0NA==,isaacs,isaacs,Fix incorrect merge choices,https://api.github.com/repos/nodejs/node/git/commits/cd8f82c007bf316fcd857da1e00bfe358df7af44,2012-05-05,Fix incorrect merge choices
135,MDY6Q29tbWl0MjcxOTM3Nzk6Y2Q4ZjgyYzAwN2JmMzE2ZmNkODU3ZGExZTAwYmZlMzU4ZGY3YWY0NA==,isaacs,isaacs,Fix incorrect merge choices,https://api.github.com/repos/nodejs/node/git/commits/cd8f82c007bf316fcd857da1e00bfe358df7af44,2012-05-05,
136,MDY6Q29tbWl0MjcxOTM3Nzk6MWRlNDMxNDliYmI4YzQyYjgwY2VmNGMyNTUwOTM5MGYzYjQwMDBjYw==,isaacs,isaacs,"http: Clean up parser usage

Move parsers.free(parser) to a single function, which also
nulls all of the various references we hang on them.

Also, move the parser.on* methods out of the closure, so that
there's one shared definition of each, instead of re-defining
for each parser in a spot where they can close over references
to other request-specific objects.

Conflicts:

	lib/http.js",https://api.github.com/repos/nodejs/node/git/commits/1de43149bbb8c42b80cef4c25509390f3b4000cc,2012-05-04,Clean up parser usage
136,MDY6Q29tbWl0MjcxOTM3Nzk6MWRlNDMxNDliYmI4YzQyYjgwY2VmNGMyNTUwOTM5MGYzYjQwMDBjYw==,isaacs,isaacs,"http: Clean up parser usage

Move parsers.free(parser) to a single function, which also
nulls all of the various references we hang on them.

Also, move the parser.on* methods out of the closure, so that
there's one shared definition of each, instead of re-defining
for each parser in a spot where they can close over references
to other request-specific objects.

Conflicts:

	lib/http.js",https://api.github.com/repos/nodejs/node/git/commits/1de43149bbb8c42b80cef4c25509390f3b4000cc,2012-05-04,"Move parsers.free(parser) to a single function, which also
nulls all of the various references we hang on them"
136,MDY6Q29tbWl0MjcxOTM3Nzk6MWRlNDMxNDliYmI4YzQyYjgwY2VmNGMyNTUwOTM5MGYzYjQwMDBjYw==,isaacs,isaacs,"http: Clean up parser usage

Move parsers.free(parser) to a single function, which also
nulls all of the various references we hang on them.

Also, move the parser.on* methods out of the closure, so that
there's one shared definition of each, instead of re-defining
for each parser in a spot where they can close over references
to other request-specific objects.

Conflicts:

	lib/http.js",https://api.github.com/repos/nodejs/node/git/commits/1de43149bbb8c42b80cef4c25509390f3b4000cc,2012-05-04,"Also, move the parser.on* methods out of the closure, so that
there's one shared definition of each, instead of re-defining
for each parser in a spot where they can close over references
to other request-specific objects"
136,MDY6Q29tbWl0MjcxOTM3Nzk6MWRlNDMxNDliYmI4YzQyYjgwY2VmNGMyNTUwOTM5MGYzYjQwMDBjYw==,isaacs,isaacs,"http: Clean up parser usage

Move parsers.free(parser) to a single function, which also
nulls all of the various references we hang on them.

Also, move the parser.on* methods out of the closure, so that
there's one shared definition of each, instead of re-defining
for each parser in a spot where they can close over references
to other request-specific objects.

Conflicts:

	lib/http.js",https://api.github.com/repos/nodejs/node/git/commits/1de43149bbb8c42b80cef4c25509390f3b4000cc,2012-05-04,Conflicts
136,MDY6Q29tbWl0MjcxOTM3Nzk6MWRlNDMxNDliYmI4YzQyYjgwY2VmNGMyNTUwOTM5MGYzYjQwMDBjYw==,isaacs,isaacs,"http: Clean up parser usage

Move parsers.free(parser) to a single function, which also
nulls all of the various references we hang on them.

Also, move the parser.on* methods out of the closure, so that
there's one shared definition of each, instead of re-defining
for each parser in a spot where they can close over references
to other request-specific objects.

Conflicts:

	lib/http.js",https://api.github.com/repos/nodejs/node/git/commits/1de43149bbb8c42b80cef4c25509390f3b4000cc,2012-05-04,	lib/http.js
137,MDY6Q29tbWl0MjcxOTM3Nzk6MGFiZTQyYTBmNGJlODBiZDY1OTQxMTY1NjUwM2U3YWMyYzI0MzgxMw==,isaacs,isaacs,http: .once() usage in setTimeout,https://api.github.com/repos/nodejs/node/git/commits/0abe42a0f4be80bd659411656503e7ac2c243813,2012-05-03,.once() usage in setTimeout
137,MDY6Q29tbWl0MjcxOTM3Nzk6MGFiZTQyYTBmNGJlODBiZDY1OTQxMTY1NjUwM2U3YWMyYzI0MzgxMw==,isaacs,isaacs,http: .once() usage in setTimeout,https://api.github.com/repos/nodejs/node/git/commits/0abe42a0f4be80bd659411656503e7ac2c243813,2012-05-03,
138,MDY6Q29tbWl0MjcxOTM3Nzk6ZTRkZDhkYzI4ZWZjOGJiZjhlMmFkYjNkOWNlMTcyMjlkYjQ2MjE5Yg==,isaacs,isaacs,http leak: Null links from parser to req/res,https://api.github.com/repos/nodejs/node/git/commits/e4dd8dc28efc8bbf8e2adb3d9ce17229db46219b,2012-05-03,leak: Null links from parser to req/res
138,MDY6Q29tbWl0MjcxOTM3Nzk6ZTRkZDhkYzI4ZWZjOGJiZjhlMmFkYjNkOWNlMTcyMjlkYjQ2MjE5Yg==,isaacs,isaacs,http leak: Null links from parser to req/res,https://api.github.com/repos/nodejs/node/git/commits/e4dd8dc28efc8bbf8e2adb3d9ce17229db46219b,2012-05-03,
139,MDY6Q29tbWl0MjcxOTM3Nzk6NWVhYzhkNjczOWNkYTlhMDdkNzU1MjhhMTdiMTE1YjIyNWIxOTZlOA==,vvo,isaacs,Fix #3179 HTTP memory leak using ClientRequest.,https://api.github.com/repos/nodejs/node/git/commits/5eac8d6739cda9a07d75528a17b115b225b196e8,2012-04-26,Fix #3179 HTTP memory leak using ClientRequest.
139,MDY6Q29tbWl0MjcxOTM3Nzk6NWVhYzhkNjczOWNkYTlhMDdkNzU1MjhhMTdiMTE1YjIyNWIxOTZlOA==,vvo,isaacs,Fix #3179 HTTP memory leak using ClientRequest.,https://api.github.com/repos/nodejs/node/git/commits/5eac8d6739cda9a07d75528a17b115b225b196e8,2012-04-26,
140,MDY6Q29tbWl0MjcxOTM3Nzk6MmY5M2ViNjEwMmZjN2YyMjZlMmJjYTY0MWQ2ZTFiY2VlMTQwMzdlNA==,isaacs,isaacs,http client: Destroy on timeout,https://api.github.com/repos/nodejs/node/git/commits/2f93eb6102fc7f226e2bca641d6e1bcee14037e4,2012-05-02,client: Destroy on timeout
140,MDY6Q29tbWl0MjcxOTM3Nzk6MmY5M2ViNjEwMmZjN2YyMjZlMmJjYTY0MWQ2ZTFiY2VlMTQwMzdlNA==,isaacs,isaacs,http client: Destroy on timeout,https://api.github.com/repos/nodejs/node/git/commits/2f93eb6102fc7f226e2bca641d6e1bcee14037e4,2012-05-02,
141,MDY6Q29tbWl0MjcxOTM3Nzk6MGE0MTRmNGNhYWQzNDMwYjRkNzNhNjlmNTQzNDUyNDVlMWZhZDAxNg==,isaacs,isaacs,http: Remove socket ondata/onend in parser cleanup,https://api.github.com/repos/nodejs/node/git/commits/0a414f4caad3430b4d73a69f54345245e1fad016,2012-05-01,Remove socket ondata/onend in parser cleanup
141,MDY6Q29tbWl0MjcxOTM3Nzk6MGE0MTRmNGNhYWQzNDMwYjRkNzNhNjlmNTQzNDUyNDVlMWZhZDAxNg==,isaacs,isaacs,http: Remove socket ondata/onend in parser cleanup,https://api.github.com/repos/nodejs/node/git/commits/0a414f4caad3430b4d73a69f54345245e1fad016,2012-05-01,
142,MDY6Q29tbWl0MjcxOTM3Nzk6OTE2NGZhNmFhYWE2ZTQ4M2M1NzBkMzQxMDliY2IwNjczNmVmNTc1MA==,isaacs,isaacs,"Null references to request object on socket errors.

Regarding #3199 and #3179 and issues seen in production.
Hopefully this fixes them.",https://api.github.com/repos/nodejs/node/git/commits/9164fa6aaaa6e483c570d34109bcb06736ef5750,2012-05-01,Null references to request object on socket errors.
142,MDY6Q29tbWl0MjcxOTM3Nzk6OTE2NGZhNmFhYWE2ZTQ4M2M1NzBkMzQxMDliY2IwNjczNmVmNTc1MA==,isaacs,isaacs,"Null references to request object on socket errors.

Regarding #3199 and #3179 and issues seen in production.
Hopefully this fixes them.",https://api.github.com/repos/nodejs/node/git/commits/9164fa6aaaa6e483c570d34109bcb06736ef5750,2012-05-01,Regarding #3199 and #3179 and issues seen in production
142,MDY6Q29tbWl0MjcxOTM3Nzk6OTE2NGZhNmFhYWE2ZTQ4M2M1NzBkMzQxMDliY2IwNjczNmVmNTc1MA==,isaacs,isaacs,"Null references to request object on socket errors.

Regarding #3199 and #3179 and issues seen in production.
Hopefully this fixes them.",https://api.github.com/repos/nodejs/node/git/commits/9164fa6aaaa6e483c570d34109bcb06736ef5750,2012-05-01,Hopefully this fixes them.
143,MDY6Q29tbWl0MjcxOTM3Nzk6MmZjNTI4Y2UwMDlhNDU1YTY5ZjU5ODRlNjJjODgxYTA1Y2Q0Y2EzNw==,isaacs,isaacs,"http: Clean up parser usage

Move parsers.free(parser) to a single function, which also
nulls all of the various references we hang on them.

Also, move the parser.on* methods out of the closure, so that
there's one shared definition of each, instead of re-defining
for each parser in a spot where they can close over references
to other request-specific objects.",https://api.github.com/repos/nodejs/node/git/commits/2fc528ce009a455a69f5984e62c881a05cd4ca37,2012-05-04,Clean up parser usage
143,MDY6Q29tbWl0MjcxOTM3Nzk6MmZjNTI4Y2UwMDlhNDU1YTY5ZjU5ODRlNjJjODgxYTA1Y2Q0Y2EzNw==,isaacs,isaacs,"http: Clean up parser usage

Move parsers.free(parser) to a single function, which also
nulls all of the various references we hang on them.

Also, move the parser.on* methods out of the closure, so that
there's one shared definition of each, instead of re-defining
for each parser in a spot where they can close over references
to other request-specific objects.",https://api.github.com/repos/nodejs/node/git/commits/2fc528ce009a455a69f5984e62c881a05cd4ca37,2012-05-04,"Move parsers.free(parser) to a single function, which also
nulls all of the various references we hang on them"
143,MDY6Q29tbWl0MjcxOTM3Nzk6MmZjNTI4Y2UwMDlhNDU1YTY5ZjU5ODRlNjJjODgxYTA1Y2Q0Y2EzNw==,isaacs,isaacs,"http: Clean up parser usage

Move parsers.free(parser) to a single function, which also
nulls all of the various references we hang on them.

Also, move the parser.on* methods out of the closure, so that
there's one shared definition of each, instead of re-defining
for each parser in a spot where they can close over references
to other request-specific objects.",https://api.github.com/repos/nodejs/node/git/commits/2fc528ce009a455a69f5984e62c881a05cd4ca37,2012-05-04,"Also, move the parser.on* methods out of the closure, so that
there's one shared definition of each, instead of re-defining
for each parser in a spot where they can close over references
to other request-specific objects."
144,MDY6Q29tbWl0MjcxOTM3Nzk6ZTNjZWVlMmRjZTYzNDI1ZjVjMTA1ZDIzYTIwMmRkNDI5ODUwNzQ0OQ==,isaacs,isaacs,http: .once() usage in setTimeout,https://api.github.com/repos/nodejs/node/git/commits/e3ceee2dce63425f5c105d23a202dd4298507449,2012-05-03,.once() usage in setTimeout
144,MDY6Q29tbWl0MjcxOTM3Nzk6ZTNjZWVlMmRjZTYzNDI1ZjVjMTA1ZDIzYTIwMmRkNDI5ODUwNzQ0OQ==,isaacs,isaacs,http: .once() usage in setTimeout,https://api.github.com/repos/nodejs/node/git/commits/e3ceee2dce63425f5c105d23a202dd4298507449,2012-05-03,
145,MDY6Q29tbWl0MjcxOTM3Nzk6YjdlOGUzNWMwZWQyZDFmYWVhYzEzNTRmY2M2YjM0YzU1OTAwNzVmYQ==,isaacs,isaacs,http leak: Null links from parser to req/res,https://api.github.com/repos/nodejs/node/git/commits/b7e8e35c0ed2d1faeac1354fcc6b34c5590075fa,2012-05-03,leak: Null links from parser to req/res
145,MDY6Q29tbWl0MjcxOTM3Nzk6YjdlOGUzNWMwZWQyZDFmYWVhYzEzNTRmY2M2YjM0YzU1OTAwNzVmYQ==,isaacs,isaacs,http leak: Null links from parser to req/res,https://api.github.com/repos/nodejs/node/git/commits/b7e8e35c0ed2d1faeac1354fcc6b34c5590075fa,2012-05-03,
146,MDY6Q29tbWl0MjcxOTM3Nzk6NzVmMjM2NTU1ODFkNmYwYWMyOGJmYWE4NjRjMWE1NzhiOTRmZmNkNw==,vvo,isaacs,Fix #3179 HTTP memory leak using ClientRequest.,https://api.github.com/repos/nodejs/node/git/commits/75f23655581d6f0ac28bfaa864c1a578b94ffcd7,2012-04-26,Fix #3179 HTTP memory leak using ClientRequest.
146,MDY6Q29tbWl0MjcxOTM3Nzk6NzVmMjM2NTU1ODFkNmYwYWMyOGJmYWE4NjRjMWE1NzhiOTRmZmNkNw==,vvo,isaacs,Fix #3179 HTTP memory leak using ClientRequest.,https://api.github.com/repos/nodejs/node/git/commits/75f23655581d6f0ac28bfaa864c1a578b94ffcd7,2012-04-26,
147,MDY6Q29tbWl0MjcxOTM3Nzk6YzliZTFkNWZmZGIzMjQ5MzMyMzk0ZTk4YTlmMDA5Mzc5YWM0MTg3Mw==,isaacs,isaacs,http client: Destroy on timeout,https://api.github.com/repos/nodejs/node/git/commits/c9be1d5ffdb3249332394e98a9f009379ac41873,2012-05-02,client: Destroy on timeout
147,MDY6Q29tbWl0MjcxOTM3Nzk6YzliZTFkNWZmZGIzMjQ5MzMyMzk0ZTk4YTlmMDA5Mzc5YWM0MTg3Mw==,isaacs,isaacs,http client: Destroy on timeout,https://api.github.com/repos/nodejs/node/git/commits/c9be1d5ffdb3249332394e98a9f009379ac41873,2012-05-02,
148,MDY6Q29tbWl0MjcxOTM3Nzk6YmNlNjgxMzRiNjQ3ZTZmMTAyYWNmOGU4ZjhhYjNiMTUzODU4ZDMyYw==,isaacs,isaacs,http: Remove socket ondata/onend in parser cleanup,https://api.github.com/repos/nodejs/node/git/commits/bce68134b647e6f102acf8e8f8ab3b153858d32c,2012-05-01,Remove socket ondata/onend in parser cleanup
148,MDY6Q29tbWl0MjcxOTM3Nzk6YmNlNjgxMzRiNjQ3ZTZmMTAyYWNmOGU4ZjhhYjNiMTUzODU4ZDMyYw==,isaacs,isaacs,http: Remove socket ondata/onend in parser cleanup,https://api.github.com/repos/nodejs/node/git/commits/bce68134b647e6f102acf8e8f8ab3b153858d32c,2012-05-01,
149,MDY6Q29tbWl0MjcxOTM3Nzk6YmZlOWNkYjdmMmY5YjkwYzk1YTIyMWRjZGNlMjkyNjNmMGRhNWM3NQ==,isaacs,isaacs,"Null references to request object on socket errors.

Regarding #3199 and #3179 and issues seen in production.
Hopefully this fixes them.",https://api.github.com/repos/nodejs/node/git/commits/bfe9cdb7f2f9b90c95a221dcdce29263f0da5c75,2012-05-01,Null references to request object on socket errors.
149,MDY6Q29tbWl0MjcxOTM3Nzk6YmZlOWNkYjdmMmY5YjkwYzk1YTIyMWRjZGNlMjkyNjNmMGRhNWM3NQ==,isaacs,isaacs,"Null references to request object on socket errors.

Regarding #3199 and #3179 and issues seen in production.
Hopefully this fixes them.",https://api.github.com/repos/nodejs/node/git/commits/bfe9cdb7f2f9b90c95a221dcdce29263f0da5c75,2012-05-01,Regarding #3199 and #3179 and issues seen in production
149,MDY6Q29tbWl0MjcxOTM3Nzk6YmZlOWNkYjdmMmY5YjkwYzk1YTIyMWRjZGNlMjkyNjNmMGRhNWM3NQ==,isaacs,isaacs,"Null references to request object on socket errors.

Regarding #3199 and #3179 and issues seen in production.
Hopefully this fixes them.",https://api.github.com/repos/nodejs/node/git/commits/bfe9cdb7f2f9b90c95a221dcdce29263f0da5c75,2012-05-01,Hopefully this fixes them.
150,MDY6Q29tbWl0MjcxOTM3Nzk6NzAwMDViZTRmZmRjZmVkMGFjMzcxODczZmE3OWEzMDhhZTRjYzU0Ng==,ssuda,Ben Noordhuis,"Fixing ClientRequest setTimeout EventEmitter Leak

This will fix #3068",https://api.github.com/repos/nodejs/node/git/commits/70005be4ffdcfed0ac371873fa79a308ae4cc546,2012-04-08,Fixing ClientRequest setTimeout EventEmitter Leak
150,MDY6Q29tbWl0MjcxOTM3Nzk6NzAwMDViZTRmZmRjZmVkMGFjMzcxODczZmE3OWEzMDhhZTRjYzU0Ng==,ssuda,Ben Noordhuis,"Fixing ClientRequest setTimeout EventEmitter Leak

This will fix #3068",https://api.github.com/repos/nodejs/node/git/commits/70005be4ffdcfed0ac371873fa79a308ae4cc546,2012-04-08,This will fix #3068
151,MDY6Q29tbWl0MjcxOTM3Nzk6NDhkNTJkODVjM2UyNmU5MWU2ZThmMDg0Zjg5YWYwYTdjM2YzZWM2NQ==,ssuda,Ben Noordhuis,"http, https: fix .setTimeout()

Fixes #3107.",https://api.github.com/repos/nodejs/node/git/commits/48d52d85c3e26e91e6e8f084f89af0a7c3f3ec65,2012-04-13,fix .setTimeout()
151,MDY6Q29tbWl0MjcxOTM3Nzk6NDhkNTJkODVjM2UyNmU5MWU2ZThmMDg0Zjg5YWYwYTdjM2YzZWM2NQ==,ssuda,Ben Noordhuis,"http, https: fix .setTimeout()

Fixes #3107.",https://api.github.com/repos/nodejs/node/git/commits/48d52d85c3e26e91e6e8f084f89af0a7c3f3ec65,2012-04-13,Fixes #3107.
152,MDY6Q29tbWl0MjcxOTM3Nzk6NWFkMDE0MGY0ODdjYWUzMTg1OWNjNWZlODI0NzI0MjA3NDNlZDI5YQ==,Igor Zinkovsky,Igor Zinkovsky,"Emit end event only once
fixes #2888

Previously a pair of end events would be emitted if a response was
paused/resumed, and the underlying socket was closed while the
response was paused",https://api.github.com/repos/nodejs/node/git/commits/5ad0140f487cae31859cc5fe82472420743ed29a,2012-03-07,Emit end event only once
152,MDY6Q29tbWl0MjcxOTM3Nzk6NWFkMDE0MGY0ODdjYWUzMTg1OWNjNWZlODI0NzI0MjA3NDNlZDI5YQ==,Igor Zinkovsky,Igor Zinkovsky,"Emit end event only once
fixes #2888

Previously a pair of end events would be emitted if a response was
paused/resumed, and the underlying socket was closed while the
response was paused",https://api.github.com/repos/nodejs/node/git/commits/5ad0140f487cae31859cc5fe82472420743ed29a,2012-03-07,"fixes #2888
Previously a pair of end events would be emitted if a response was
paused/resumed, and the underlying socket was closed while the
response was paused"
153,MDY6Q29tbWl0MjcxOTM3Nzk6ZjgyZWYwZjdjM2EwMjQ0NzQ4NDdmMTBmMThjZjM5ZGY1Zjc0M2IzOA==,Yoshihiro Kikuchi,Ben Noordhuis,"http: remove ClientRequest.prototype.pause()

ClientRequest.prototype.pause() is not needed. ClientRequest is a writable
stream and deferring to OutgoingMessage.prototype.pause() is broken, the method
does not exist.",https://api.github.com/repos/nodejs/node/git/commits/f82ef0f7c3a024474847f10f18cf39df5f743b38,2012-03-07,remove ClientRequest.prototype.pause()
153,MDY6Q29tbWl0MjcxOTM3Nzk6ZjgyZWYwZjdjM2EwMjQ0NzQ4NDdmMTBmMThjZjM5ZGY1Zjc0M2IzOA==,Yoshihiro Kikuchi,Ben Noordhuis,"http: remove ClientRequest.prototype.pause()

ClientRequest.prototype.pause() is not needed. ClientRequest is a writable
stream and deferring to OutgoingMessage.prototype.pause() is broken, the method
does not exist.",https://api.github.com/repos/nodejs/node/git/commits/f82ef0f7c3a024474847f10f18cf39df5f743b38,2012-03-07,ClientRequest.prototype.pause() is not needed
153,MDY6Q29tbWl0MjcxOTM3Nzk6ZjgyZWYwZjdjM2EwMjQ0NzQ4NDdmMTBmMThjZjM5ZGY1Zjc0M2IzOA==,Yoshihiro Kikuchi,Ben Noordhuis,"http: remove ClientRequest.prototype.pause()

ClientRequest.prototype.pause() is not needed. ClientRequest is a writable
stream and deferring to OutgoingMessage.prototype.pause() is broken, the method
does not exist.",https://api.github.com/repos/nodejs/node/git/commits/f82ef0f7c3a024474847f10f18cf39df5f743b38,2012-03-07,"ClientRequest is a writable
stream and deferring to OutgoingMessage.prototype.pause() is broken, the method
does not exist."
154,MDY6Q29tbWl0MjcxOTM3Nzk6MWU5YmNmMjZjZTllOTNjYWVkYTMyODBiODE4NjE2OGI0OWFlNjIxZA==,Dmitry Nizovtsev,Ben Noordhuis,"net, http, https: add localAddress option

Binds to a local address before making the outgoing connection.",https://api.github.com/repos/nodejs/node/git/commits/1e9bcf26ce9e93caeda3280b8186168b49ae621d,2012-02-23,"net, add localAddress option"
154,MDY6Q29tbWl0MjcxOTM3Nzk6MWU5YmNmMjZjZTllOTNjYWVkYTMyODBiODE4NjE2OGI0OWFlNjIxZA==,Dmitry Nizovtsev,Ben Noordhuis,"net, http, https: add localAddress option

Binds to a local address before making the outgoing connection.",https://api.github.com/repos/nodejs/node/git/commits/1e9bcf26ce9e93caeda3280b8186168b49ae621d,2012-02-23,Binds to a local address before making the outgoing connection.
155,MDY6Q29tbWl0MjcxOTM3Nzk6ZGE5MDgzNjRhOGVjZTcxODZmNDA4ZWIxMzA3ZWNmNTRhYzJhNzZhNw==,Maciej Małecki,Ben Noordhuis,tls http https: don't pollute user's `options` object,https://api.github.com/repos/nodejs/node/git/commits/da908364a8ece7186f408eb1307ecf54ac2a76a7,2012-02-20,tls don't pollute user's `options` object
155,MDY6Q29tbWl0MjcxOTM3Nzk6ZGE5MDgzNjRhOGVjZTcxODZmNDA4ZWIxMzA3ZWNmNTRhYzJhNzZhNw==,Maciej Małecki,Ben Noordhuis,tls http https: don't pollute user's `options` object,https://api.github.com/repos/nodejs/node/git/commits/da908364a8ece7186f408eb1307ecf54ac2a76a7,2012-02-20,
156,MDY6Q29tbWl0MjcxOTM3Nzk6MGNkZjg1ZTI4ZDU3NDI4YTkwMDI2YzZhNDAyZTYyNGMxZGNhYWJjZQ==,isaacs,isaacs,Lint all the JavaScripts.,https://api.github.com/repos/nodejs/node/git/commits/0cdf85e28d57428a90026c6a402e624c1dcaabce,2012-02-18,Lint all the JavaScripts.
156,MDY6Q29tbWl0MjcxOTM3Nzk6MGNkZjg1ZTI4ZDU3NDI4YTkwMDI2YzZhNDAyZTYyNGMxZGNhYWJjZQ==,isaacs,isaacs,Lint all the JavaScripts.,https://api.github.com/repos/nodejs/node/git/commits/0cdf85e28d57428a90026c6a402e624c1dcaabce,2012-02-18,
157,MDY6Q29tbWl0MjcxOTM3Nzk6MzE3MjFkYTRiMTIwY2EyYjFjMGI2YjllOTNjZThiZWI1ZTgxMGRhMw==,isaacs,isaacs,"Merge remote-tracking branch 'ry/v0.6' into v0.6-merge

Conflicts:
	AUTHORS
	ChangeLog
	Makefile
	doc/about/index.html
	doc/api/tls.markdown
	doc/community/index.html
	doc/index.html
	doc/logos/index.html
	doc/template.html
	lib/http.js
	lib/tls.js
	src/node_version.h
	src/platform_win32.cc
	test/simple/test-tls-connect-given-socket.js",https://api.github.com/repos/nodejs/node/git/commits/31721da4b120ca2b1c0b6b9e93ce8beb5e810da3,2012-02-18,Merge remote-tracking branch 'ry/v0.6' into v0.6-merge
157,MDY6Q29tbWl0MjcxOTM3Nzk6MzE3MjFkYTRiMTIwY2EyYjFjMGI2YjllOTNjZThiZWI1ZTgxMGRhMw==,isaacs,isaacs,"Merge remote-tracking branch 'ry/v0.6' into v0.6-merge

Conflicts:
	AUTHORS
	ChangeLog
	Makefile
	doc/about/index.html
	doc/api/tls.markdown
	doc/community/index.html
	doc/index.html
	doc/logos/index.html
	doc/template.html
	lib/http.js
	lib/tls.js
	src/node_version.h
	src/platform_win32.cc
	test/simple/test-tls-connect-given-socket.js",https://api.github.com/repos/nodejs/node/git/commits/31721da4b120ca2b1c0b6b9e93ce8beb5e810da3,2012-02-18,Conflicts
157,MDY6Q29tbWl0MjcxOTM3Nzk6MzE3MjFkYTRiMTIwY2EyYjFjMGI2YjllOTNjZThiZWI1ZTgxMGRhMw==,isaacs,isaacs,"Merge remote-tracking branch 'ry/v0.6' into v0.6-merge

Conflicts:
	AUTHORS
	ChangeLog
	Makefile
	doc/about/index.html
	doc/api/tls.markdown
	doc/community/index.html
	doc/index.html
	doc/logos/index.html
	doc/template.html
	lib/http.js
	lib/tls.js
	src/node_version.h
	src/platform_win32.cc
	test/simple/test-tls-connect-given-socket.js",https://api.github.com/repos/nodejs/node/git/commits/31721da4b120ca2b1c0b6b9e93ce8beb5e810da3,2012-02-18,"	AUTHORS
	ChangeLog
	Makefile
	doc/about/index.html
	doc/api/tls.markdown
	doc/community/index.html
	doc/index.html
	doc/logos/index.html
	doc/template.html
	lib/	lib/tls.js
	src/node_version.h
	src/platform_win32.cc
	test/simple/test-tls-connect-given-socket.js"
158,MDY6Q29tbWl0MjcxOTM3Nzk6ODNmZDFjMWRlNTFlNmIwMTcxMTAxYTcyNWM4ZDkyMDgxYzJmYWRiZA==,einaros,isaacs,Add WebSocket RFC6455 multiheader fields to the http parser.,https://api.github.com/repos/nodejs/node/git/commits/83fd1c1de51e6b0171101a725c8d92081c2fadbd,2012-02-16,Add WebSocket RFC6455 multiheader fields to the parser.
158,MDY6Q29tbWl0MjcxOTM3Nzk6ODNmZDFjMWRlNTFlNmIwMTcxMTAxYTcyNWM4ZDkyMDgxYzJmYWRiZA==,einaros,isaacs,Add WebSocket RFC6455 multiheader fields to the http parser.,https://api.github.com/repos/nodejs/node/git/commits/83fd1c1de51e6b0171101a725c8d92081c2fadbd,2012-02-16,
159,MDY6Q29tbWl0MjcxOTM3Nzk6MmMwNzcxMjg2MDM5OGY4NjM2NzBjNWI5MGZiNGY0NTU5ZDI5OWUxOQ==,Ben Noordhuis,isaacs,http: allow multiple WWW-Authenticate headers,https://api.github.com/repos/nodejs/node/git/commits/2c07712860398f863670c5b90fb4f4559d299e19,2012-02-14,allow multiple WWW-Authenticate headers
159,MDY6Q29tbWl0MjcxOTM3Nzk6MmMwNzcxMjg2MDM5OGY4NjM2NzBjNWI5MGZiNGY0NTU5ZDI5OWUxOQ==,Ben Noordhuis,isaacs,http: allow multiple WWW-Authenticate headers,https://api.github.com/repos/nodejs/node/git/commits/2c07712860398f863670c5b90fb4f4559d299e19,2012-02-14,
160,MDY6Q29tbWl0MjcxOTM3Nzk6MWU0MjVlM2ZhNzc0ZmVmZDM1NTNlY2FhNmYwYWMzNWY5YjBhMTM1NQ==,Mark Nottingham,isaacs,Generate Date headers on responses when not already present.,https://api.github.com/repos/nodejs/node/git/commits/1e425e3fa774fefd3553ecaa6f0ac35f9b0a1355,2012-02-14,Generate Date headers on responses when not already present.
160,MDY6Q29tbWl0MjcxOTM3Nzk6MWU0MjVlM2ZhNzc0ZmVmZDM1NTNlY2FhNmYwYWMzNWY5YjBhMTM1NQ==,Mark Nottingham,isaacs,Generate Date headers on responses when not already present.,https://api.github.com/repos/nodejs/node/git/commits/1e425e3fa774fefd3553ecaa6f0ac35f9b0a1355,2012-02-14,
161,MDY6Q29tbWl0MjcxOTM3Nzk6NjE0MTM4NmY3ZWFlZGM2NmFhZmQzOWE1YTg0Mjc3MmU5MWI0MTRhZg==,Ben Noordhuis,Ben Noordhuis,http: allow multiple WWW-Authenticate headers,https://api.github.com/repos/nodejs/node/git/commits/6141386f7eaedc66aafd39a5a842772e91b414af,2012-02-14,allow multiple WWW-Authenticate headers
161,MDY6Q29tbWl0MjcxOTM3Nzk6NjE0MTM4NmY3ZWFlZGM2NmFhZmQzOWE1YTg0Mjc3MmU5MWI0MTRhZg==,Ben Noordhuis,Ben Noordhuis,http: allow multiple WWW-Authenticate headers,https://api.github.com/repos/nodejs/node/git/commits/6141386f7eaedc66aafd39a5a842772e91b414af,2012-02-14,
162,MDY6Q29tbWl0MjcxOTM3Nzk6YzJkYzY3M2ViNWE3YTZhNzA2YjAyNGE1ZTUwMWNkMzkzOWFkMzk5Yg==,koichik,koichik,"http: fix http-parser is freed twice

after response to CONNECT/Upgrade request.

Fixes #2704.",https://api.github.com/repos/nodejs/node/git/commits/c2dc673eb5a7a6a706b024a5e501cd3939ad399b,2012-02-06,fix is freed twice
162,MDY6Q29tbWl0MjcxOTM3Nzk6YzJkYzY3M2ViNWE3YTZhNzA2YjAyNGE1ZTUwMWNkMzkzOWFkMzk5Yg==,koichik,koichik,"http: fix http-parser is freed twice

after response to CONNECT/Upgrade request.

Fixes #2704.",https://api.github.com/repos/nodejs/node/git/commits/c2dc673eb5a7a6a706b024a5e501cd3939ad399b,2012-02-06,after response to CONNECT/Upgrade request
162,MDY6Q29tbWl0MjcxOTM3Nzk6YzJkYzY3M2ViNWE3YTZhNzA2YjAyNGE1ZTUwMWNkMzkzOWFkMzk5Yg==,koichik,koichik,"http: fix http-parser is freed twice

after response to CONNECT/Upgrade request.

Fixes #2704.",https://api.github.com/repos/nodejs/node/git/commits/c2dc673eb5a7a6a706b024a5e501cd3939ad399b,2012-02-06,Fixes #2704.
163,MDY6Q29tbWl0MjcxOTM3Nzk6MThkMTc5YzJkOGY5MTZjMDdhNzYzZWE4ZTk5ZWQ2ZGM3Nzc1MWJmYQ==,isaacs,isaacs,"Merge remote-tracking branch 'ry/v0.6' into master

Conflicts:
	ChangeLog
	deps/uv/src/unix/udp.c
	deps/uv/src/win/fs.c
	deps/uv/src/win/udp.c
	deps/uv/test/test-fs.c
	doc/index.html
	doc/logos/index.html
	doc/template.html
	src/node_version.h",https://api.github.com/repos/nodejs/node/git/commits/18d179c2d8f916c07a763ea8e99ed6dc77751bfa,2012-02-01,Merge remote-tracking branch 'ry/v0.6' into master
163,MDY6Q29tbWl0MjcxOTM3Nzk6MThkMTc5YzJkOGY5MTZjMDdhNzYzZWE4ZTk5ZWQ2ZGM3Nzc1MWJmYQ==,isaacs,isaacs,"Merge remote-tracking branch 'ry/v0.6' into master

Conflicts:
	ChangeLog
	deps/uv/src/unix/udp.c
	deps/uv/src/win/fs.c
	deps/uv/src/win/udp.c
	deps/uv/test/test-fs.c
	doc/index.html
	doc/logos/index.html
	doc/template.html
	src/node_version.h",https://api.github.com/repos/nodejs/node/git/commits/18d179c2d8f916c07a763ea8e99ed6dc77751bfa,2012-02-01,Conflicts
163,MDY6Q29tbWl0MjcxOTM3Nzk6MThkMTc5YzJkOGY5MTZjMDdhNzYzZWE4ZTk5ZWQ2ZGM3Nzc1MWJmYQ==,isaacs,isaacs,"Merge remote-tracking branch 'ry/v0.6' into master

Conflicts:
	ChangeLog
	deps/uv/src/unix/udp.c
	deps/uv/src/win/fs.c
	deps/uv/src/win/udp.c
	deps/uv/test/test-fs.c
	doc/index.html
	doc/logos/index.html
	doc/template.html
	src/node_version.h",https://api.github.com/repos/nodejs/node/git/commits/18d179c2d8f916c07a763ea8e99ed6dc77751bfa,2012-02-01,"	ChangeLog
	deps/uv/src/unix/udp.c
	deps/uv/src/win/fs.c
	deps/uv/src/win/udp.c
	deps/uv/test/test-fs.c
	doc/index.html
	doc/logos/index.html
	doc/template.html
	src/node_version.h"
164,MDY6Q29tbWl0MjcxOTM3Nzk6M2ZkMTNjNjQyNmIzMzgxOTZkMTM4YjBkYzU2NDAyMGRhZWQ3OGJjZA==,koichik,koichik,"http: fix free http-parser too early

when the status code is 100 (Continue).

Fixes #2636.",https://api.github.com/repos/nodejs/node/git/commits/3fd13c6426b338196d138b0dc564020daed78bcd,2012-01-30,fix free too early
164,MDY6Q29tbWl0MjcxOTM3Nzk6M2ZkMTNjNjQyNmIzMzgxOTZkMTM4YjBkYzU2NDAyMGRhZWQ3OGJjZA==,koichik,koichik,"http: fix free http-parser too early

when the status code is 100 (Continue).

Fixes #2636.",https://api.github.com/repos/nodejs/node/git/commits/3fd13c6426b338196d138b0dc564020daed78bcd,2012-01-30,when the status code is 100 (Continue)
164,MDY6Q29tbWl0MjcxOTM3Nzk6M2ZkMTNjNjQyNmIzMzgxOTZkMTM4YjBkYzU2NDAyMGRhZWQ3OGJjZA==,koichik,koichik,"http: fix free http-parser too early

when the status code is 100 (Continue).

Fixes #2636.",https://api.github.com/repos/nodejs/node/git/commits/3fd13c6426b338196d138b0dc564020daed78bcd,2012-01-30,Fixes #2636.
165,MDY6Q29tbWl0MjcxOTM3Nzk6NTQwM2E4Y2U0Y2NlODNhMTM1NjliMDllZTViMmJhM2QxYWQ4YzE3Ng==,Brandon Benvie,Ben Noordhuis,"core: add `NativeModule.prototype.deprecate`

Formalize and cleanup handling of deprecated core methods.",https://api.github.com/repos/nodejs/node/git/commits/5403a8ce4cce83a13569b09ee5b2ba3d1ad8c176,2012-01-29,core: add `NativeModule.prototype.deprecate`
165,MDY6Q29tbWl0MjcxOTM3Nzk6NTQwM2E4Y2U0Y2NlODNhMTM1NjliMDllZTViMmJhM2QxYWQ4YzE3Ng==,Brandon Benvie,Ben Noordhuis,"core: add `NativeModule.prototype.deprecate`

Formalize and cleanup handling of deprecated core methods.",https://api.github.com/repos/nodejs/node/git/commits/5403a8ce4cce83a13569b09ee5b2ba3d1ad8c176,2012-01-29,Formalize and cleanup handling of deprecated core methods.
166,MDY6Q29tbWl0MjcxOTM3Nzk6ZTgwNmFkMzlkMGNmMTM4MDBlMjFlZGQ3ZmZkNTZmNzA3ZTkyYjA4ZA==,Ben Noordhuis,Ben Noordhuis,"net, tls, http: remove socket.ondrain

Replace the ondrain hack with a regular 'drain' listener. Speeds up the
bytes/1024 http benchmark by about 1.2%.",https://api.github.com/repos/nodejs/node/git/commits/e806ad39d0cf13800e21edd7ffd56f707e92b08d,2012-01-24,"net, tls, remove socket.ondrain"
166,MDY6Q29tbWl0MjcxOTM3Nzk6ZTgwNmFkMzlkMGNmMTM4MDBlMjFlZGQ3ZmZkNTZmNzA3ZTkyYjA4ZA==,Ben Noordhuis,Ben Noordhuis,"net, tls, http: remove socket.ondrain

Replace the ondrain hack with a regular 'drain' listener. Speeds up the
bytes/1024 http benchmark by about 1.2%.",https://api.github.com/repos/nodejs/node/git/commits/e806ad39d0cf13800e21edd7ffd56f707e92b08d,2012-01-24,Replace the ondrain hack with a regular 'drain' listener
166,MDY6Q29tbWl0MjcxOTM3Nzk6ZTgwNmFkMzlkMGNmMTM4MDBlMjFlZGQ3ZmZkNTZmNzA3ZTkyYjA4ZA==,Ben Noordhuis,Ben Noordhuis,"net, tls, http: remove socket.ondrain

Replace the ondrain hack with a regular 'drain' listener. Speeds up the
bytes/1024 http benchmark by about 1.2%.",https://api.github.com/repos/nodejs/node/git/commits/e806ad39d0cf13800e21edd7ffd56f707e92b08d,2012-01-24,"Speeds up the
bytes/1024 benchmark by about 1.2%."
167,MDY6Q29tbWl0MjcxOTM3Nzk6YTZmMzQ1MWUyNTQ5ZDBiODJmZjE4OTkwZThiZmUyOGVhNDM4NmFiYQ==,koichik,koichik,"http: fix test-http-should-keepalive.js is fail

3df7c90 was removed when conflict was resolved.",https://api.github.com/repos/nodejs/node/git/commits/a6f3451e2549d0b82ff18990e8bfe28ea4386aba,2012-01-24,fix test-is fail
167,MDY6Q29tbWl0MjcxOTM3Nzk6YTZmMzQ1MWUyNTQ5ZDBiODJmZjE4OTkwZThiZmUyOGVhNDM4NmFiYQ==,koichik,koichik,"http: fix test-http-should-keepalive.js is fail

3df7c90 was removed when conflict was resolved.",https://api.github.com/repos/nodejs/node/git/commits/a6f3451e2549d0b82ff18990e8bfe28ea4386aba,2012-01-24,3df7c90 was removed when conflict was resolved.
168,MDY6Q29tbWl0MjcxOTM3Nzk6M2RmN2M5MGMzMDU5ZjQ5YzgxZjliOGY1OWZjM2FiZjE4ZDVkMzkyYg==,koichik,koichik,"http: keep-alive should default with HTTP/1.1 server

As RFC 2616 says we should, assume that servers will provide a persistent
connection by default.

> A significant difference between HTTP/1.1 and earlier versions of
> HTTP is that persistent connections are the default behavior of any
> HTTP connection. That is, unless otherwise indicated, the client
> SHOULD assume that the server will maintain a persistent connection,
> even after error responses from the server.

> HTTP/1.1 applications that do not support persistent connections MUST
> include the ""close"" connection option in every message.

Fixes #2436.",https://api.github.com/repos/nodejs/node/git/commits/3df7c90c3059f49c81f9b8f59fc3abf18d5d392b,2012-01-22,keep-alive should default with HTTP/1.1 server
168,MDY6Q29tbWl0MjcxOTM3Nzk6M2RmN2M5MGMzMDU5ZjQ5YzgxZjliOGY1OWZjM2FiZjE4ZDVkMzkyYg==,koichik,koichik,"http: keep-alive should default with HTTP/1.1 server

As RFC 2616 says we should, assume that servers will provide a persistent
connection by default.

> A significant difference between HTTP/1.1 and earlier versions of
> HTTP is that persistent connections are the default behavior of any
> HTTP connection. That is, unless otherwise indicated, the client
> SHOULD assume that the server will maintain a persistent connection,
> even after error responses from the server.

> HTTP/1.1 applications that do not support persistent connections MUST
> include the ""close"" connection option in every message.

Fixes #2436.",https://api.github.com/repos/nodejs/node/git/commits/3df7c90c3059f49c81f9b8f59fc3abf18d5d392b,2012-01-22,"As RFC 2616 says we should, assume that servers will provide a persistent
connection by default"
168,MDY6Q29tbWl0MjcxOTM3Nzk6M2RmN2M5MGMzMDU5ZjQ5YzgxZjliOGY1OWZjM2FiZjE4ZDVkMzkyYg==,koichik,koichik,"http: keep-alive should default with HTTP/1.1 server

As RFC 2616 says we should, assume that servers will provide a persistent
connection by default.

> A significant difference between HTTP/1.1 and earlier versions of
> HTTP is that persistent connections are the default behavior of any
> HTTP connection. That is, unless otherwise indicated, the client
> SHOULD assume that the server will maintain a persistent connection,
> even after error responses from the server.

> HTTP/1.1 applications that do not support persistent connections MUST
> include the ""close"" connection option in every message.

Fixes #2436.",https://api.github.com/repos/nodejs/node/git/commits/3df7c90c3059f49c81f9b8f59fc3abf18d5d392b,2012-01-22,"> A significant difference between HTTP/1.1 and earlier versions of
> HTTP is that persistent connections are the default behavior of any
> HTTP connection"
168,MDY6Q29tbWl0MjcxOTM3Nzk6M2RmN2M5MGMzMDU5ZjQ5YzgxZjliOGY1OWZjM2FiZjE4ZDVkMzkyYg==,koichik,koichik,"http: keep-alive should default with HTTP/1.1 server

As RFC 2616 says we should, assume that servers will provide a persistent
connection by default.

> A significant difference between HTTP/1.1 and earlier versions of
> HTTP is that persistent connections are the default behavior of any
> HTTP connection. That is, unless otherwise indicated, the client
> SHOULD assume that the server will maintain a persistent connection,
> even after error responses from the server.

> HTTP/1.1 applications that do not support persistent connections MUST
> include the ""close"" connection option in every message.

Fixes #2436.",https://api.github.com/repos/nodejs/node/git/commits/3df7c90c3059f49c81f9b8f59fc3abf18d5d392b,2012-01-22,"That is, unless otherwise indicated, the client
> SHOULD assume that the server will maintain a persistent connection,
> even after error responses from the server"
168,MDY6Q29tbWl0MjcxOTM3Nzk6M2RmN2M5MGMzMDU5ZjQ5YzgxZjliOGY1OWZjM2FiZjE4ZDVkMzkyYg==,koichik,koichik,"http: keep-alive should default with HTTP/1.1 server

As RFC 2616 says we should, assume that servers will provide a persistent
connection by default.

> A significant difference between HTTP/1.1 and earlier versions of
> HTTP is that persistent connections are the default behavior of any
> HTTP connection. That is, unless otherwise indicated, the client
> SHOULD assume that the server will maintain a persistent connection,
> even after error responses from the server.

> HTTP/1.1 applications that do not support persistent connections MUST
> include the ""close"" connection option in every message.

Fixes #2436.",https://api.github.com/repos/nodejs/node/git/commits/3df7c90c3059f49c81f9b8f59fc3abf18d5d392b,2012-01-22,"> HTTP/1.1 applications that do not support persistent connections MUST
> include the ""close"" connection option in every message"
168,MDY6Q29tbWl0MjcxOTM3Nzk6M2RmN2M5MGMzMDU5ZjQ5YzgxZjliOGY1OWZjM2FiZjE4ZDVkMzkyYg==,koichik,koichik,"http: keep-alive should default with HTTP/1.1 server

As RFC 2616 says we should, assume that servers will provide a persistent
connection by default.

> A significant difference between HTTP/1.1 and earlier versions of
> HTTP is that persistent connections are the default behavior of any
> HTTP connection. That is, unless otherwise indicated, the client
> SHOULD assume that the server will maintain a persistent connection,
> even after error responses from the server.

> HTTP/1.1 applications that do not support persistent connections MUST
> include the ""close"" connection option in every message.

Fixes #2436.",https://api.github.com/repos/nodejs/node/git/commits/3df7c90c3059f49c81f9b8f59fc3abf18d5d392b,2012-01-22,Fixes #2436.
169,MDY6Q29tbWl0MjcxOTM3Nzk6NTZlMzRjMmY4MTQ5MDVhOGZjMzMyOTQ4NWM2NGE3MGQ1OWQ4ZWViYQ==,Ben Noordhuis,Ben Noordhuis,"http: fix deprecation warning module ID

Mea culpa, I told @mmalecki wrong",https://api.github.com/repos/nodejs/node/git/commits/56e34c2f814905a8fc3329485c64a70d59d8eeba,2012-01-21,fix deprecation warning module ID
169,MDY6Q29tbWl0MjcxOTM3Nzk6NTZlMzRjMmY4MTQ5MDVhOGZjMzMyOTQ4NWM2NGE3MGQ1OWQ4ZWViYQ==,Ben Noordhuis,Ben Noordhuis,"http: fix deprecation warning module ID

Mea culpa, I told @mmalecki wrong",https://api.github.com/repos/nodejs/node/git/commits/56e34c2f814905a8fc3329485c64a70d59d8eeba,2012-01-21,"Mea culpa, I told @mmalecki wrong"
170,MDY6Q29tbWl0MjcxOTM3Nzk6MzVmZTNlYjVjNzc0ZDFjMjFmZGFmYjAxMGM2MzNhYjZiYzQyZDJjNw==,koichik,isaacs,"http: reduce creating http-parser instances

Fixes #2577.",https://api.github.com/repos/nodejs/node/git/commits/35fe3eb5c774d1c21fdafb010c633ab6bc42d2c7,2012-01-20,reduce creating instances
170,MDY6Q29tbWl0MjcxOTM3Nzk6MzVmZTNlYjVjNzc0ZDFjMjFmZGFmYjAxMGM2MzNhYjZiYzQyZDJjNw==,koichik,isaacs,"http: reduce creating http-parser instances

Fixes #2577.",https://api.github.com/repos/nodejs/node/git/commits/35fe3eb5c774d1c21fdafb010c633ab6bc42d2c7,2012-01-20,Fixes #2577.
171,MDY6Q29tbWl0MjcxOTM3Nzk6ZDUwNDdmNWZlNjY5YzA0MzRkYTk5ZTJhYWNkMTk3ZTIyOGQwNDBhNA==,Maciej Małecki,Ben Noordhuis,http: use `util._deprecationWarning` for deprecation warning,https://api.github.com/repos/nodejs/node/git/commits/d5047f5fe669c0434da99e2aacd197e228d040a4,2012-01-16,use `util._deprecationWarning` for deprecation warning
171,MDY6Q29tbWl0MjcxOTM3Nzk6ZDUwNDdmNWZlNjY5YzA0MzRkYTk5ZTJhYWNkMTk3ZTIyOGQwNDBhNA==,Maciej Małecki,Ben Noordhuis,http: use `util._deprecationWarning` for deprecation warning,https://api.github.com/repos/nodejs/node/git/commits/d5047f5fe669c0434da99e2aacd197e228d040a4,2012-01-16,
172,MDY6Q29tbWl0MjcxOTM3Nzk6ZjE2NzhiZmM2NWJjYjJjZGE0N2JjYjM4ZjQ2YjE3MjNmMGIyNjg3Nw==,Fedor Indutny,Fedor Indutny,"http: do not accept headers if limit is exceeded

* fix limiting when parser was reused
* fix maxHeadersCount = 0 is ignored ( credit to @koichik )
* add test-http-max-headers-count.js ( credit to @koichik )",https://api.github.com/repos/nodejs/node/git/commits/f1678bfc65bcb2cda47bcb38f46b1723f0b26877,2012-01-16,do not accept headers if limit is exceeded
172,MDY6Q29tbWl0MjcxOTM3Nzk6ZjE2NzhiZmM2NWJjYjJjZGE0N2JjYjM4ZjQ2YjE3MjNmMGIyNjg3Nw==,Fedor Indutny,Fedor Indutny,"http: do not accept headers if limit is exceeded

* fix limiting when parser was reused
* fix maxHeadersCount = 0 is ignored ( credit to @koichik )
* add test-http-max-headers-count.js ( credit to @koichik )",https://api.github.com/repos/nodejs/node/git/commits/f1678bfc65bcb2cda47bcb38f46b1723f0b26877,2012-01-16,
173,MDY6Q29tbWl0MjcxOTM3Nzk6OGE5OGMyZjFkODFjYWJiNjU5NGRjMzg4Nzg5ZDYwZDJmM2Y2N2MwOQ==,Fedor Indutny,Fedor Indutny,"http, querystring: added limits to prevent DoS",https://api.github.com/repos/nodejs/node/git/commits/8a98c2f1d81cabb6594dc388789d60d2f3f67c09,2012-01-15,querystring: added limits to prevent DoS
173,MDY6Q29tbWl0MjcxOTM3Nzk6OGE5OGMyZjFkODFjYWJiNjU5NGRjMzg4Nzg5ZDYwZDJmM2Y2N2MwOQ==,Fedor Indutny,Fedor Indutny,"http, querystring: added limits to prevent DoS",https://api.github.com/repos/nodejs/node/git/commits/8a98c2f1d81cabb6594dc388789d60d2f3f67c09,2012-01-15,
174,MDY6Q29tbWl0MjcxOTM3Nzk6N2RmZmJhZjJjZWQxMjc1MWI3M2U0MzNiMTI3MjFlZmE4YjM4YWQ1ZA==,koichik,koichik,"http: Upgrade/CONNECT request should detach its socket earlier

With Upgrade or CONNECT request, http.ClientRequest emits 'close' event
after its socket is closed. However, after receiving a response, the socket
is not under management by the request.

http.ClientRequest should detach the socket before 'upgrade'/'connect'
event is emitted to pass the socket to a user. After that, it should
emit 'close' event immediately without waiting for closing of the socket.

Fixes #2510.",https://api.github.com/repos/nodejs/node/git/commits/7dffbaf2ced12751b73e433b12721efa8b38ad5d,2012-01-12,Upgrade/CONNECT request should detach its socket earlier
174,MDY6Q29tbWl0MjcxOTM3Nzk6N2RmZmJhZjJjZWQxMjc1MWI3M2U0MzNiMTI3MjFlZmE4YjM4YWQ1ZA==,koichik,koichik,"http: Upgrade/CONNECT request should detach its socket earlier

With Upgrade or CONNECT request, http.ClientRequest emits 'close' event
after its socket is closed. However, after receiving a response, the socket
is not under management by the request.

http.ClientRequest should detach the socket before 'upgrade'/'connect'
event is emitted to pass the socket to a user. After that, it should
emit 'close' event immediately without waiting for closing of the socket.

Fixes #2510.",https://api.github.com/repos/nodejs/node/git/commits/7dffbaf2ced12751b73e433b12721efa8b38ad5d,2012-01-12,"With Upgrade or CONNECT request, emits 'close' event
after its socket is closed"
174,MDY6Q29tbWl0MjcxOTM3Nzk6N2RmZmJhZjJjZWQxMjc1MWI3M2U0MzNiMTI3MjFlZmE4YjM4YWQ1ZA==,koichik,koichik,"http: Upgrade/CONNECT request should detach its socket earlier

With Upgrade or CONNECT request, http.ClientRequest emits 'close' event
after its socket is closed. However, after receiving a response, the socket
is not under management by the request.

http.ClientRequest should detach the socket before 'upgrade'/'connect'
event is emitted to pass the socket to a user. After that, it should
emit 'close' event immediately without waiting for closing of the socket.

Fixes #2510.",https://api.github.com/repos/nodejs/node/git/commits/7dffbaf2ced12751b73e433b12721efa8b38ad5d,2012-01-12,"However, after receiving a response, the socket
is not under management by the request"
174,MDY6Q29tbWl0MjcxOTM3Nzk6N2RmZmJhZjJjZWQxMjc1MWI3M2U0MzNiMTI3MjFlZmE4YjM4YWQ1ZA==,koichik,koichik,"http: Upgrade/CONNECT request should detach its socket earlier

With Upgrade or CONNECT request, http.ClientRequest emits 'close' event
after its socket is closed. However, after receiving a response, the socket
is not under management by the request.

http.ClientRequest should detach the socket before 'upgrade'/'connect'
event is emitted to pass the socket to a user. After that, it should
emit 'close' event immediately without waiting for closing of the socket.

Fixes #2510.",https://api.github.com/repos/nodejs/node/git/commits/7dffbaf2ced12751b73e433b12721efa8b38ad5d,2012-01-12,"should detach the socket before 'upgrade'/'connect'
event is emitted to pass the socket to a user"
174,MDY6Q29tbWl0MjcxOTM3Nzk6N2RmZmJhZjJjZWQxMjc1MWI3M2U0MzNiMTI3MjFlZmE4YjM4YWQ1ZA==,koichik,koichik,"http: Upgrade/CONNECT request should detach its socket earlier

With Upgrade or CONNECT request, http.ClientRequest emits 'close' event
after its socket is closed. However, after receiving a response, the socket
is not under management by the request.

http.ClientRequest should detach the socket before 'upgrade'/'connect'
event is emitted to pass the socket to a user. After that, it should
emit 'close' event immediately without waiting for closing of the socket.

Fixes #2510.",https://api.github.com/repos/nodejs/node/git/commits/7dffbaf2ced12751b73e433b12721efa8b38ad5d,2012-01-12,"After that, it should
emit 'close' event immediately without waiting for closing of the socket"
174,MDY6Q29tbWl0MjcxOTM3Nzk6N2RmZmJhZjJjZWQxMjc1MWI3M2U0MzNiMTI3MjFlZmE4YjM4YWQ1ZA==,koichik,koichik,"http: Upgrade/CONNECT request should detach its socket earlier

With Upgrade or CONNECT request, http.ClientRequest emits 'close' event
after its socket is closed. However, after receiving a response, the socket
is not under management by the request.

http.ClientRequest should detach the socket before 'upgrade'/'connect'
event is emitted to pass the socket to a user. After that, it should
emit 'close' event immediately without waiting for closing of the socket.

Fixes #2510.",https://api.github.com/repos/nodejs/node/git/commits/7dffbaf2ced12751b73e433b12721efa8b38ad5d,2012-01-12,Fixes #2510.
175,MDY6Q29tbWl0MjcxOTM3Nzk6OGIyOGQ1OTlhNzJlNzE3ZGMwMGQxMGYyY2M2OGU2NGFjNmZkNTMzMA==,Ryan Dahl,Ryan Dahl,"Merge remote branch 'origin/v0.6'

Conflicts:
	Makefile
	configure
	src/node_version.h",https://api.github.com/repos/nodejs/node/git/commits/8b28d599a72e717dc00d10f2cc68e64ac6fd5330,2012-01-09,Merge remote branch 'origin/v0.6'
175,MDY6Q29tbWl0MjcxOTM3Nzk6OGIyOGQ1OTlhNzJlNzE3ZGMwMGQxMGYyY2M2OGU2NGFjNmZkNTMzMA==,Ryan Dahl,Ryan Dahl,"Merge remote branch 'origin/v0.6'

Conflicts:
	Makefile
	configure
	src/node_version.h",https://api.github.com/repos/nodejs/node/git/commits/8b28d599a72e717dc00d10f2cc68e64ac6fd5330,2012-01-09,Conflicts
175,MDY6Q29tbWl0MjcxOTM3Nzk6OGIyOGQ1OTlhNzJlNzE3ZGMwMGQxMGYyY2M2OGU2NGFjNmZkNTMzMA==,Ryan Dahl,Ryan Dahl,"Merge remote branch 'origin/v0.6'

Conflicts:
	Makefile
	configure
	src/node_version.h",https://api.github.com/repos/nodejs/node/git/commits/8b28d599a72e717dc00d10f2cc68e64ac6fd5330,2012-01-09,"	Makefile
	configure
	src/node_version.h"
176,MDY6Q29tbWl0MjcxOTM3Nzk6MDhhOTFhY2Q3NmNkMTA3ZGMyZjM5MTRmOWVhN2UyNzdiYjg1MjA2ZQ==,koichik,koichik,"http: better support for CONNECT method.

Introduces 'connect' event on both client (http.ClientRequest) and
server (http.Server).

Refs: #2259, #2474.
Fixes #1576.",https://api.github.com/repos/nodejs/node/git/commits/08a91acd76cd107dc2f3914f9ea7e277bb85206e,2012-01-09,better support for CONNECT method.
176,MDY6Q29tbWl0MjcxOTM3Nzk6MDhhOTFhY2Q3NmNkMTA3ZGMyZjM5MTRmOWVhN2UyNzdiYjg1MjA2ZQ==,koichik,koichik,"http: better support for CONNECT method.

Introduces 'connect' event on both client (http.ClientRequest) and
server (http.Server).

Refs: #2259, #2474.
Fixes #1576.",https://api.github.com/repos/nodejs/node/git/commits/08a91acd76cd107dc2f3914f9ea7e277bb85206e,2012-01-09,"Introduces 'connect' event on both client (and
server (
Refs: #2259, #2474"
176,MDY6Q29tbWl0MjcxOTM3Nzk6MDhhOTFhY2Q3NmNkMTA3ZGMyZjM5MTRmOWVhN2UyNzdiYjg1MjA2ZQ==,koichik,koichik,"http: better support for CONNECT method.

Introduces 'connect' event on both client (http.ClientRequest) and
server (http.Server).

Refs: #2259, #2474.
Fixes #1576.",https://api.github.com/repos/nodejs/node/git/commits/08a91acd76cd107dc2f3914f9ea7e277bb85206e,2012-01-09,Fixes #1576.
177,MDY6Q29tbWl0MjcxOTM3Nzk6ZGQ5NTkzY2NjNGRkMWRlMjFmYWExOTk2YzI1NzdjN2E2YWMzZDhhZQ==,koichik,koichik,"http: fix ServerResponse does not emit 'close'

Refs #2453.",https://api.github.com/repos/nodejs/node/git/commits/dd9593ccc4dd1de21faa1996c2577c7a6ac3d8ae,2012-01-05,fix ServerResponse does not emit 'close'
177,MDY6Q29tbWl0MjcxOTM3Nzk6ZGQ5NTkzY2NjNGRkMWRlMjFmYWExOTk2YzI1NzdjN2E2YWMzZDhhZQ==,koichik,koichik,"http: fix ServerResponse does not emit 'close'

Refs #2453.",https://api.github.com/repos/nodejs/node/git/commits/dd9593ccc4dd1de21faa1996c2577c7a6ac3d8ae,2012-01-05,Refs #2453.
178,MDY6Q29tbWl0MjcxOTM3Nzk6YmFlYmQzMGVlZWM4NGQ3MzYxNzE4M2JlNGI1YmU5MjU1NzUxOGQ2Yw==,koichik,koichik,http: use `self` insted of `this`,https://api.github.com/repos/nodejs/node/git/commits/baebd30eeec84d73617183be4b5be92557518d6c,2012-01-05,use `self` insted of `this`
178,MDY6Q29tbWl0MjcxOTM3Nzk6YmFlYmQzMGVlZWM4NGQ3MzYxNzE4M2JlNGI1YmU5MjU1NzUxOGQ2Yw==,koichik,koichik,http: use `self` insted of `this`,https://api.github.com/repos/nodejs/node/git/commits/baebd30eeec84d73617183be4b5be92557518d6c,2012-01-05,
179,MDY6Q29tbWl0MjcxOTM3Nzk6YTMzN2FjNzU4NDNiYTQ1NDdhMThkNWI3YzA5OTMwZDVmNWQ5NTRmYQ==,koichik,koichik,"http: fix XMLHttpRequest piped in a writable file stream hangs next request

Fixes #2263.",https://api.github.com/repos/nodejs/node/git/commits/a337ac75843ba4547a18d5b7c09930d5f5d954fa,2011-12-27,fix XMLHttpRequest piped in a writable file stream hangs next request
179,MDY6Q29tbWl0MjcxOTM3Nzk6YTMzN2FjNzU4NDNiYTQ1NDdhMThkNWI3YzA5OTMwZDVmNWQ5NTRmYQ==,koichik,koichik,"http: fix XMLHttpRequest piped in a writable file stream hangs next request

Fixes #2263.",https://api.github.com/repos/nodejs/node/git/commits/a337ac75843ba4547a18d5b7c09930d5f5d954fa,2011-12-27,Fixes #2263.
180,MDY6Q29tbWl0MjcxOTM3Nzk6ZTZiNjA3NTAyNGU5ZjEzMzA1NzViMTBkN2U2NTUyZTFlYTZkYWQ1Ng==,koichik,koichik,"http: Avoid 'data'/'end' events after pause()

Fixes #1040.",https://api.github.com/repos/nodejs/node/git/commits/e6b6075024e9f1330575b10d7e6552e1ea6dad56,2011-12-26,Avoid 'data'/'end' events after pause()
180,MDY6Q29tbWl0MjcxOTM3Nzk6ZTZiNjA3NTAyNGU5ZjEzMzA1NzViMTBkN2U2NTUyZTFlYTZkYWQ1Ng==,koichik,koichik,"http: Avoid 'data'/'end' events after pause()

Fixes #1040.",https://api.github.com/repos/nodejs/node/git/commits/e6b6075024e9f1330575b10d7e6552e1ea6dad56,2011-12-26,Fixes #1040.
181,MDY6Q29tbWl0MjcxOTM3Nzk6N2FhNTkyNGRjNmU4ZDgwOTgwYTliNzlmM2Q1ZmM2MzA1YmYxYWVhNw==,koichik,koichik,"http: fix resource leak

Fixes #2069",https://api.github.com/repos/nodejs/node/git/commits/7aa5924dc6e8d80980a9b79f3d5fc6305bf1aea7,2011-11-29,fix resource leak
181,MDY6Q29tbWl0MjcxOTM3Nzk6N2FhNTkyNGRjNmU4ZDgwOTgwYTliNzlmM2Q1ZmM2MzA1YmYxYWVhNw==,koichik,koichik,"http: fix resource leak

Fixes #2069",https://api.github.com/repos/nodejs/node/git/commits/7aa5924dc6e8d80980a9b79f3d5fc6305bf1aea7,2011-11-29,Fixes #2069
182,MDY6Q29tbWl0MjcxOTM3Nzk6NDhhOWEyZDM1NTdhMjYxMGYxZjE1OTdiMzY3ZGVmOTA3MzZmOWM5MA==,Ryan Dahl,Ryan Dahl,Add deprecation message for http.Client,https://api.github.com/repos/nodejs/node/git/commits/48a9a2d3557a2610f1f1597b367def90736f9c90,2011-12-24,Add deprecation message for http.Client
182,MDY6Q29tbWl0MjcxOTM3Nzk6NDhhOWEyZDM1NTdhMjYxMGYxZjE1OTdiMzY3ZGVmOTA3MzZmOWM5MA==,Ryan Dahl,Ryan Dahl,Add deprecation message for http.Client,https://api.github.com/repos/nodejs/node/git/commits/48a9a2d3557a2610f1f1597b367def90736f9c90,2011-12-24,
183,MDY6Q29tbWl0MjcxOTM3Nzk6YWFiOTU4YjcxMzAyODBlNDg2MmFiNzI0NThkMTIwZDE1OWYyNGZjMQ==,seebees,koichik,"OutgoingMessage.prototype.write does not take Array

Changed the type checking for OutgoingMessage.prototype.write so it only accepts string and Buffer.

And test.
Fixes #2162
Fixes #2208",https://api.github.com/repos/nodejs/node/git/commits/aab958b7130280e4862ab72458d120d159f24fc1,2011-11-28,OutgoingMessage.prototype.write does not take Array
183,MDY6Q29tbWl0MjcxOTM3Nzk6YWFiOTU4YjcxMzAyODBlNDg2MmFiNzI0NThkMTIwZDE1OWYyNGZjMQ==,seebees,koichik,"OutgoingMessage.prototype.write does not take Array

Changed the type checking for OutgoingMessage.prototype.write so it only accepts string and Buffer.

And test.
Fixes #2162
Fixes #2208",https://api.github.com/repos/nodejs/node/git/commits/aab958b7130280e4862ab72458d120d159f24fc1,2011-11-28,Changed the type checking for OutgoingMessage.prototype.write so it only accepts string and Buffer
183,MDY6Q29tbWl0MjcxOTM3Nzk6YWFiOTU4YjcxMzAyODBlNDg2MmFiNzI0NThkMTIwZDE1OWYyNGZjMQ==,seebees,koichik,"OutgoingMessage.prototype.write does not take Array

Changed the type checking for OutgoingMessage.prototype.write so it only accepts string and Buffer.

And test.
Fixes #2162
Fixes #2208",https://api.github.com/repos/nodejs/node/git/commits/aab958b7130280e4862ab72458d120d159f24fc1,2011-11-28,And test
183,MDY6Q29tbWl0MjcxOTM3Nzk6YWFiOTU4YjcxMzAyODBlNDg2MmFiNzI0NThkMTIwZDE1OWYyNGZjMQ==,seebees,koichik,"OutgoingMessage.prototype.write does not take Array

Changed the type checking for OutgoingMessage.prototype.write so it only accepts string and Buffer.

And test.
Fixes #2162
Fixes #2208",https://api.github.com/repos/nodejs/node/git/commits/aab958b7130280e4862ab72458d120d159f24fc1,2011-11-28,"Fixes #2162
Fixes #2208"
184,MDY6Q29tbWl0MjcxOTM3Nzk6MzU5YTY1YTZkYjFjODJlZDNhNGJiN2Y1YmUyNTQ5MTI3NzFmNTA2Mg==,Ben Noordhuis,Ben Noordhuis,"http: emit Error object after .abort()

It was emitting the net.Socket object due to misuse of the arguments object.

Fixes #1399.",https://api.github.com/repos/nodejs/node/git/commits/359a65a6db1c82ed3a4bb7f5be254912771f5062,2011-11-03,emit Error object after .abort()
184,MDY6Q29tbWl0MjcxOTM3Nzk6MzU5YTY1YTZkYjFjODJlZDNhNGJiN2Y1YmUyNTQ5MTI3NzFmNTA2Mg==,Ben Noordhuis,Ben Noordhuis,"http: emit Error object after .abort()

It was emitting the net.Socket object due to misuse of the arguments object.

Fixes #1399.",https://api.github.com/repos/nodejs/node/git/commits/359a65a6db1c82ed3a4bb7f5be254912771f5062,2011-11-03,It was emitting the net.Socket object due to misuse of the arguments object
184,MDY6Q29tbWl0MjcxOTM3Nzk6MzU5YTY1YTZkYjFjODJlZDNhNGJiN2Y1YmUyNTQ5MTI3NzFmNTA2Mg==,Ben Noordhuis,Ben Noordhuis,"http: emit Error object after .abort()

It was emitting the net.Socket object due to misuse of the arguments object.

Fixes #1399.",https://api.github.com/repos/nodejs/node/git/commits/359a65a6db1c82ed3a4bb7f5be254912771f5062,2011-11-03,Fixes #1399.
185,MDY6Q29tbWl0MjcxOTM3Nzk6OGE3MjkyNzBjMTQ0ZjkzYWFjYTcyZjU5NDFjOTkyMTdmZTZlMmQ2Nw==,koichik,koichik,"fix for --harmony_block_scoping

Fixes #1969.",https://api.github.com/repos/nodejs/node/git/commits/8a729270c144f93aaca72f5941c99217fe6e2d67,2011-10-30,fix for --harmony_block_scoping
185,MDY6Q29tbWl0MjcxOTM3Nzk6OGE3MjkyNzBjMTQ0ZjkzYWFjYTcyZjU5NDFjOTkyMTdmZTZlMmQ2Nw==,koichik,koichik,"fix for --harmony_block_scoping

Fixes #1969.",https://api.github.com/repos/nodejs/node/git/commits/8a729270c144f93aaca72f5941c99217fe6e2d67,2011-10-30,Fixes #1969.
186,MDY6Q29tbWl0MjcxOTM3Nzk6MjE2NTcwYjVlMWIxMjYzMDgzZjE0NTU2NjExMmQzZjM0M2EyMjY0Yg==,seebees,koichik,Lint,https://api.github.com/repos/nodejs/node/git/commits/216570b5e1b1263083f145566112d3f343a2264b,2011-10-19,Lint
186,MDY6Q29tbWl0MjcxOTM3Nzk6MjE2NTcwYjVlMWIxMjYzMDgzZjE0NTU2NjExMmQzZjM0M2EyMjY0Yg==,seebees,koichik,Lint,https://api.github.com/repos/nodejs/node/git/commits/216570b5e1b1263083f145566112d3f343a2264b,2011-10-19,
187,MDY6Q29tbWl0MjcxOTM3Nzk6MDA1ZDYwN2FlZGY1N2VhYzA0NjgzNDA2MGYzZjZlOGYyNDgxNzQwNw==,seebees,koichik,"http.request(url.parse(x))

http2.js

protocols object to store defaults for http and https, and use as a switch for supported protocols.
options.hostname > options.host > 'localhost'
if I have an options.auth element and I do not have an Authorization header, I do basic auth.
http.request collapses to new ClientRequest since the defaults are handled by the protocol object

test-http-url.parse*

Fixes #1390

Conflicts:

	lib/http2.js",https://api.github.com/repos/nodejs/node/git/commits/005d607aedf57eac046834060f3f6e8f24817407,2011-10-15,
187,MDY6Q29tbWl0MjcxOTM3Nzk6MDA1ZDYwN2FlZGY1N2VhYzA0NjgzNDA2MGYzZjZlOGYyNDgxNzQwNw==,seebees,koichik,"http.request(url.parse(x))

http2.js

protocols object to store defaults for http and https, and use as a switch for supported protocols.
options.hostname > options.host > 'localhost'
if I have an options.auth element and I do not have an Authorization header, I do basic auth.
http.request collapses to new ClientRequest since the defaults are handled by the protocol object

test-http-url.parse*

Fixes #1390

Conflicts:

	lib/http2.js",https://api.github.com/repos/nodejs/node/git/commits/005d607aedf57eac046834060f3f6e8f24817407,2011-10-15,protocols object to store defaults for and and use as a switch for supported protocols
187,MDY6Q29tbWl0MjcxOTM3Nzk6MDA1ZDYwN2FlZGY1N2VhYzA0NjgzNDA2MGYzZjZlOGYyNDgxNzQwNw==,seebees,koichik,"http.request(url.parse(x))

http2.js

protocols object to store defaults for http and https, and use as a switch for supported protocols.
options.hostname > options.host > 'localhost'
if I have an options.auth element and I do not have an Authorization header, I do basic auth.
http.request collapses to new ClientRequest since the defaults are handled by the protocol object

test-http-url.parse*

Fixes #1390

Conflicts:

	lib/http2.js",https://api.github.com/repos/nodejs/node/git/commits/005d607aedf57eac046834060f3f6e8f24817407,2011-10-15,"options.hostname > options.host > 'localhost'
if I have an options.auth element and I do not have an Authorization header, I do basic auth"
187,MDY6Q29tbWl0MjcxOTM3Nzk6MDA1ZDYwN2FlZGY1N2VhYzA0NjgzNDA2MGYzZjZlOGYyNDgxNzQwNw==,seebees,koichik,"http.request(url.parse(x))

http2.js

protocols object to store defaults for http and https, and use as a switch for supported protocols.
options.hostname > options.host > 'localhost'
if I have an options.auth element and I do not have an Authorization header, I do basic auth.
http.request collapses to new ClientRequest since the defaults are handled by the protocol object

test-http-url.parse*

Fixes #1390

Conflicts:

	lib/http2.js",https://api.github.com/repos/nodejs/node/git/commits/005d607aedf57eac046834060f3f6e8f24817407,2011-10-15,"collapses to new ClientRequest since the defaults are handled by the protocol object
test-
Fixes #1390
Conflicts"
187,MDY6Q29tbWl0MjcxOTM3Nzk6MDA1ZDYwN2FlZGY1N2VhYzA0NjgzNDA2MGYzZjZlOGYyNDgxNzQwNw==,seebees,koichik,"http.request(url.parse(x))

http2.js

protocols object to store defaults for http and https, and use as a switch for supported protocols.
options.hostname > options.host > 'localhost'
if I have an options.auth element and I do not have an Authorization header, I do basic auth.
http.request collapses to new ClientRequest since the defaults are handled by the protocol object

test-http-url.parse*

Fixes #1390

Conflicts:

	lib/http2.js",https://api.github.com/repos/nodejs/node/git/commits/005d607aedf57eac046834060f3f6e8f24817407,2011-10-15,	lib/http2.js
188,MDY6Q29tbWl0MjcxOTM3Nzk6ODRkMGIxYmNjNTE1NGY2N2Q5ZjIwMGYzYzg1MmJiOGM1YjY0YzZlZg==,Ben Noordhuis,Ben Noordhuis,"http: improve http parser bindings

Speeds up HTTP benchmarks by 10% on average.",https://api.github.com/repos/nodejs/node/git/commits/84d0b1bcc5154f67d9f200f3c852bb8c5b64c6ef,2011-09-27,improve parser bindings
188,MDY6Q29tbWl0MjcxOTM3Nzk6ODRkMGIxYmNjNTE1NGY2N2Q5ZjIwMGYzYzg1MmJiOGM1YjY0YzZlZg==,Ben Noordhuis,Ben Noordhuis,"http: improve http parser bindings

Speeds up HTTP benchmarks by 10% on average.",https://api.github.com/repos/nodejs/node/git/commits/84d0b1bcc5154f67d9f200f3c852bb8c5b64c6ef,2011-09-27,Speeds up HTTP benchmarks by 10% on average.
189,MDY6Q29tbWl0MjcxOTM3Nzk6ZjkwYmE2MTQ3ODJjZjI1NGEyZDM0ODllYzUxM2E4MjQ5MzUxYzk0Zg==,Yoshihiro Kikuchi,koichik,"http: tiny fix in http.js

Fixes #1885.",https://api.github.com/repos/nodejs/node/git/commits/f90ba614782cf254a2d3489ec513a8249351c94f,2011-10-13,tiny fix in 
189,MDY6Q29tbWl0MjcxOTM3Nzk6ZjkwYmE2MTQ3ODJjZjI1NGEyZDM0ODllYzUxM2E4MjQ5MzUxYzk0Zg==,Yoshihiro Kikuchi,koichik,"http: tiny fix in http.js

Fixes #1885.",https://api.github.com/repos/nodejs/node/git/commits/f90ba614782cf254a2d3489ec513a8249351c94f,2011-10-13,Fixes #1885.
190,MDY6Q29tbWl0MjcxOTM3Nzk6M2EzNDk3MjY3MjBiNjA5ZmIxOWYwNmUwYTg3MGY2ZjQwMGUxOWE2ZQ==,Ryan Dahl,Ryan Dahl,Fix test-http-conn-reset.js on OSX,https://api.github.com/repos/nodejs/node/git/commits/3a349726720b609fb19f06e0a870f6f400e19a6e,2011-10-13,Fix test-on OSX
190,MDY6Q29tbWl0MjcxOTM3Nzk6M2EzNDk3MjY3MjBiNjA5ZmIxOWYwNmUwYTg3MGY2ZjQwMGUxOWE2ZQ==,Ryan Dahl,Ryan Dahl,Fix test-http-conn-reset.js on OSX,https://api.github.com/repos/nodejs/node/git/commits/3a349726720b609fb19f06e0a870f6f400e19a6e,2011-10-13,
191,MDY6Q29tbWl0MjcxOTM3Nzk6MTUzNjI5Yzk5YThmMjZlZmNjZmM5Yjc1ZGQxZTg2NzQxYzk2OGYxNw==,Bert Belder,Ryan Dahl,Some small optimizations,https://api.github.com/repos/nodejs/node/git/commits/153629c99a8f26efccfc9b75dd1e86741c968f17,2011-10-07,Some small optimizations
191,MDY6Q29tbWl0MjcxOTM3Nzk6MTUzNjI5Yzk5YThmMjZlZmNjZmM5Yjc1ZGQxZTg2NzQxYzk2OGYxNw==,Bert Belder,Ryan Dahl,Some small optimizations,https://api.github.com/repos/nodejs/node/git/commits/153629c99a8f26efccfc9b75dd1e86741c968f17,2011-10-07,
192,MDY6Q29tbWl0MjcxOTM3Nzk6YmM3Y2ZkN2NkN2MyZTUxM2E5YWM5YTI4MjBmM2I2ZjczMzE3MzViNQ==,Ben Noordhuis,Ben Noordhuis,http: remove legacy http library,https://api.github.com/repos/nodejs/node/git/commits/bc7cfd7cd7c2e513a9ac9a2820f3b6f7331735b5,2011-10-04,remove legacy library
192,MDY6Q29tbWl0MjcxOTM3Nzk6YmM3Y2ZkN2NkN2MyZTUxM2E5YWM5YTI4MjBmM2I2ZjczMzE3MzViNQ==,Ben Noordhuis,Ben Noordhuis,http: remove legacy http library,https://api.github.com/repos/nodejs/node/git/commits/bc7cfd7cd7c2e513a9ac9a2820f3b6f7331735b5,2011-10-04,
193,MDY6Q29tbWl0MjcxOTM3Nzk6YTRlZWUzZDI4ZmUyYjZjOTQ0YWU0ZjQwY2FlYWVjMGVmYTg1ZjJkYw==,Peter Lyons,Ben Noordhuis,"http: remove 'headers sent?' check in OutgoingMessage.getHeader()

Fixes #752.",https://api.github.com/repos/nodejs/node/git/commits/a4eee3d28fe2b6c944ae4f40caeaec0efa85f2dc,2011-08-01,remove 'headers sent?' check in OutgoingMessage.getHeader()
193,MDY6Q29tbWl0MjcxOTM3Nzk6YTRlZWUzZDI4ZmUyYjZjOTQ0YWU0ZjQwY2FlYWVjMGVmYTg1ZjJkYw==,Peter Lyons,Ben Noordhuis,"http: remove 'headers sent?' check in OutgoingMessage.getHeader()

Fixes #752.",https://api.github.com/repos/nodejs/node/git/commits/a4eee3d28fe2b6c944ae4f40caeaec0efa85f2dc,2011-08-01,Fixes #752.
194,MDY6Q29tbWl0MjcxOTM3Nzk6ODMyMGFmN2VmMzcwZDg4MTFkNGE3MWJmMDk0ZjNmNDMyYTcyMDgzYw==,Ryan Dahl,Ryan Dahl,"Merge remote branch 'origin/v0.4'

Conflicts:
	doc/api/tls.markdown",https://api.github.com/repos/nodejs/node/git/commits/8320af7ef370d8811d4a71bf094f3f432a72083c,2011-08-17,Merge remote branch 'origin/v0.4'
194,MDY6Q29tbWl0MjcxOTM3Nzk6ODMyMGFmN2VmMzcwZDg4MTFkNGE3MWJmMDk0ZjNmNDMyYTcyMDgzYw==,Ryan Dahl,Ryan Dahl,"Merge remote branch 'origin/v0.4'

Conflicts:
	doc/api/tls.markdown",https://api.github.com/repos/nodejs/node/git/commits/8320af7ef370d8811d4a71bf094f3f432a72083c,2011-08-17,Conflicts
194,MDY6Q29tbWl0MjcxOTM3Nzk6ODMyMGFmN2VmMzcwZDg4MTFkNGE3MWJmMDk0ZjNmNDMyYTcyMDgzYw==,Ryan Dahl,Ryan Dahl,"Merge remote branch 'origin/v0.4'

Conflicts:
	doc/api/tls.markdown",https://api.github.com/repos/nodejs/node/git/commits/8320af7ef370d8811d4a71bf094f3f432a72083c,2011-08-17,	doc/api/tls.markdown
195,MDY6Q29tbWl0MjcxOTM3Nzk6OWNkNTEwODQ2ZWVhNWViZGQxMTZmYjQ1ZWY0ZDViZTY0YWNkYTAyMg==,Ryan Dahl,Ryan Dahl,Fixes #1546. Remove expensive debug call.,https://api.github.com/repos/nodejs/node/git/commits/9cd510846eea5ebdd116fb45ef4d5be64acda022,2011-08-17,Fixes #1546. Remove expensive debug call.
195,MDY6Q29tbWl0MjcxOTM3Nzk6OWNkNTEwODQ2ZWVhNWViZGQxMTZmYjQ1ZWY0ZDViZTY0YWNkYTAyMg==,Ryan Dahl,Ryan Dahl,Fixes #1546. Remove expensive debug call.,https://api.github.com/repos/nodejs/node/git/commits/9cd510846eea5ebdd116fb45ef4d5be64acda022,2011-08-17,
196,MDY6Q29tbWl0MjcxOTM3Nzk6MjEyNjk4OWEzMmY3NGRlYTA0NzZjNzcwZjVkZGE4MjZmMTJiYzQ1Nw==,Ryan Dahl,Ryan Dahl,"Fix test-http-upgrade-server and test-http-parser

Problem was introduced in last http-parser upgrade which fixed a long
standing bug with the upgrade event and removed several callbacks.",https://api.github.com/repos/nodejs/node/git/commits/2126989a32f74dea0476c770f5dda826f12bc457,2011-08-09,Fix test-and test-
196,MDY6Q29tbWl0MjcxOTM3Nzk6MjEyNjk4OWEzMmY3NGRlYTA0NzZjNzcwZjVkZGE4MjZmMTJiYzQ1Nw==,Ryan Dahl,Ryan Dahl,"Fix test-http-upgrade-server and test-http-parser

Problem was introduced in last http-parser upgrade which fixed a long
standing bug with the upgrade event and removed several callbacks.",https://api.github.com/repos/nodejs/node/git/commits/2126989a32f74dea0476c770f5dda826f12bc457,2011-08-09,"Problem was introduced in last upgrade which fixed a long
standing bug with the upgrade event and removed several callbacks."
197,MDY6Q29tbWl0MjcxOTM3Nzk6NjJhYWY1NmQxYmY0ODE5YmY3OGVjYjM1MjA5MmI2MjViOWE0YTBlYQ==,koichik,koichik,"Fix http.ClientRequest crashes if end() was called twice

Fixes #1417.
Fixes #1223.",https://api.github.com/repos/nodejs/node/git/commits/62aaf56d1bf4819bf78ecb352092b625b9a4a0ea,2011-07-29,Fix crashes if end() was called twice
197,MDY6Q29tbWl0MjcxOTM3Nzk6NjJhYWY1NmQxYmY0ODE5YmY3OGVjYjM1MjA5MmI2MjViOWE0YTBlYQ==,koichik,koichik,"Fix http.ClientRequest crashes if end() was called twice

Fixes #1417.
Fixes #1223.",https://api.github.com/repos/nodejs/node/git/commits/62aaf56d1bf4819bf78ecb352092b625b9a4a0ea,2011-07-29,Fixes #1417
197,MDY6Q29tbWl0MjcxOTM3Nzk6NjJhYWY1NmQxYmY0ODE5YmY3OGVjYjM1MjA5MmI2MjViOWE0YTBlYQ==,koichik,koichik,"Fix http.ClientRequest crashes if end() was called twice

Fixes #1417.
Fixes #1223.",https://api.github.com/repos/nodejs/node/git/commits/62aaf56d1bf4819bf78ecb352092b625b9a4a0ea,2011-07-29,Fixes #1223.
198,MDY6Q29tbWl0MjcxOTM3Nzk6OGIzYmE0N2Y4OGU1ZjU5MjU2ODE4ZTMxNzNjNzVjNjZmZjVhODJkZg==,koichik,koichik,"Fix http.ClientRequest crashes if end() was called twice

Fixes #1417.
Fixes #1223.",https://api.github.com/repos/nodejs/node/git/commits/8b3ba47f88e5f59256818e3173c75c66ff5a82df,2011-07-29,Fix crashes if end() was called twice
198,MDY6Q29tbWl0MjcxOTM3Nzk6OGIzYmE0N2Y4OGU1ZjU5MjU2ODE4ZTMxNzNjNzVjNjZmZjVhODJkZg==,koichik,koichik,"Fix http.ClientRequest crashes if end() was called twice

Fixes #1417.
Fixes #1223.",https://api.github.com/repos/nodejs/node/git/commits/8b3ba47f88e5f59256818e3173c75c66ff5a82df,2011-07-29,Fixes #1417
198,MDY6Q29tbWl0MjcxOTM3Nzk6OGIzYmE0N2Y4OGU1ZjU5MjU2ODE4ZTMxNzNjNzVjNjZmZjVhODJkZg==,koichik,koichik,"Fix http.ClientRequest crashes if end() was called twice

Fixes #1417.
Fixes #1223.",https://api.github.com/repos/nodejs/node/git/commits/8b3ba47f88e5f59256818e3173c75c66ff5a82df,2011-07-29,Fixes #1223.
199,MDY6Q29tbWl0MjcxOTM3Nzk6MmVkMjMzMTRjMzU2NDlmMTVkOTA1Y2IxZmNhNzVkMGI5ZDhiMGQwMQ==,Ben Noordhuis,Ben Noordhuis,"http: make http and http2 co-exist

http2 is currently disabled pending addition of a --use-http2 switch",https://api.github.com/repos/nodejs/node/git/commits/2ed23314c35649f15d905cb1fca75d0b9d8b0d01,2011-07-25,make and co-exist
199,MDY6Q29tbWl0MjcxOTM3Nzk6MmVkMjMzMTRjMzU2NDlmMTVkOTA1Y2IxZmNhNzVkMGI5ZDhiMGQwMQ==,Ben Noordhuis,Ben Noordhuis,"http: make http and http2 co-exist

http2 is currently disabled pending addition of a --use-http2 switch",https://api.github.com/repos/nodejs/node/git/commits/2ed23314c35649f15d905cb1fca75d0b9d8b0d01,2011-07-25,is currently disabled pending addition of a --use-switch
200,MDY6Q29tbWl0MjcxOTM3Nzk6MmI5MjljN2YxOTQ0YmM5YWMzM2ZiMjE5MjdmMmNjOTZjMTExMzcxYg==,Mikeal Rogers,Ben Noordhuis,http: http2 implementation,https://api.github.com/repos/nodejs/node/git/commits/2b929c7f1944bc9ac33fb21927f2cc96c111371b,2011-07-25,implementation
200,MDY6Q29tbWl0MjcxOTM3Nzk6MmI5MjljN2YxOTQ0YmM5YWMzM2ZiMjE5MjdmMmNjOTZjMTExMzcxYg==,Mikeal Rogers,Ben Noordhuis,http: http2 implementation,https://api.github.com/repos/nodejs/node/git/commits/2b929c7f1944bc9ac33fb21927f2cc96c111371b,2011-07-25,
201,MDY6Q29tbWl0MjcxOTM3Nzk6YmJmN2U4ZWQ1ZWU0ODg1MmEyYWRiOTdkZTMwNTZlZjA2NzM0MzUwMA==,Trent Mick,Ben Noordhuis,"http: fix setting ServerResponse.statusCode in writeHead

Fixes #1374.",https://api.github.com/repos/nodejs/node/git/commits/bbf7e8ed5ee48852a2adb97de3056ef067343500,2011-07-21,fix setting ServerResponse.statusCode in writeHead
201,MDY6Q29tbWl0MjcxOTM3Nzk6YmJmN2U4ZWQ1ZWU0ODg1MmEyYWRiOTdkZTMwNTZlZjA2NzM0MzUwMA==,Trent Mick,Ben Noordhuis,"http: fix setting ServerResponse.statusCode in writeHead

Fixes #1374.",https://api.github.com/repos/nodejs/node/git/commits/bbf7e8ed5ee48852a2adb97de3056ef067343500,2011-07-21,Fixes #1374.
202,MDY6Q29tbWl0MjcxOTM3Nzk6YThmOTZkMzMxNGYyZWI3NTk5N2E4NGVhMDAyMTk4YWU3ZDZmNmY0Ng==,Trent Mick,Ben Noordhuis,"http: fix setting ServerResponse.statusCode in writeHead

Fixes #1374.",https://api.github.com/repos/nodejs/node/git/commits/a8f96d3314f2eb75997a84ea002198ae7d6f6f46,2011-07-21,fix setting ServerResponse.statusCode in writeHead
202,MDY6Q29tbWl0MjcxOTM3Nzk6YThmOTZkMzMxNGYyZWI3NTk5N2E4NGVhMDAyMTk4YWU3ZDZmNmY0Ng==,Trent Mick,Ben Noordhuis,"http: fix setting ServerResponse.statusCode in writeHead

Fixes #1374.",https://api.github.com/repos/nodejs/node/git/commits/a8f96d3314f2eb75997a84ea002198ae7d6f6f46,2011-07-21,Fixes #1374.
203,MDY6Q29tbWl0MjcxOTM3Nzk6OTczMTUzZDFjY2RiYjA2ZjkwNjdmMzY5ODU3OGU4YTU2ODVhODdjNA==,Reid Burke,koichik,"Properly respond to HEAD during end(body) hot path

During write(), _hasBody is checked to make sure a body
is allowed -- this is now also checked during end(body)
when write() isn't used.

Concise final chunk for HEAD req's res.end(data).

Instead of simply clearing data, check _hasBody
earlier to avoid sending cruft when chunkedEncoding
is used.

Fixes #1291.",https://api.github.com/repos/nodejs/node/git/commits/973153d1ccdbb06f9067f3698578e8a5685a87c4,2011-07-08,Properly respond to HEAD during end(body) hot path
203,MDY6Q29tbWl0MjcxOTM3Nzk6OTczMTUzZDFjY2RiYjA2ZjkwNjdmMzY5ODU3OGU4YTU2ODVhODdjNA==,Reid Burke,koichik,"Properly respond to HEAD during end(body) hot path

During write(), _hasBody is checked to make sure a body
is allowed -- this is now also checked during end(body)
when write() isn't used.

Concise final chunk for HEAD req's res.end(data).

Instead of simply clearing data, check _hasBody
earlier to avoid sending cruft when chunkedEncoding
is used.

Fixes #1291.",https://api.github.com/repos/nodejs/node/git/commits/973153d1ccdbb06f9067f3698578e8a5685a87c4,2011-07-08,"During write(), _hasBody is checked to make sure a body
is allowed -- this is now also checked during end(body)
when write() isn't used"
203,MDY6Q29tbWl0MjcxOTM3Nzk6OTczMTUzZDFjY2RiYjA2ZjkwNjdmMzY5ODU3OGU4YTU2ODVhODdjNA==,Reid Burke,koichik,"Properly respond to HEAD during end(body) hot path

During write(), _hasBody is checked to make sure a body
is allowed -- this is now also checked during end(body)
when write() isn't used.

Concise final chunk for HEAD req's res.end(data).

Instead of simply clearing data, check _hasBody
earlier to avoid sending cruft when chunkedEncoding
is used.

Fixes #1291.",https://api.github.com/repos/nodejs/node/git/commits/973153d1ccdbb06f9067f3698578e8a5685a87c4,2011-07-08,Concise final chunk for HEAD req's res.end(data)
203,MDY6Q29tbWl0MjcxOTM3Nzk6OTczMTUzZDFjY2RiYjA2ZjkwNjdmMzY5ODU3OGU4YTU2ODVhODdjNA==,Reid Burke,koichik,"Properly respond to HEAD during end(body) hot path

During write(), _hasBody is checked to make sure a body
is allowed -- this is now also checked during end(body)
when write() isn't used.

Concise final chunk for HEAD req's res.end(data).

Instead of simply clearing data, check _hasBody
earlier to avoid sending cruft when chunkedEncoding
is used.

Fixes #1291.",https://api.github.com/repos/nodejs/node/git/commits/973153d1ccdbb06f9067f3698578e8a5685a87c4,2011-07-08,"Instead of simply clearing data, check _hasBody
earlier to avoid sending cruft when chunkedEncoding
is used"
203,MDY6Q29tbWl0MjcxOTM3Nzk6OTczMTUzZDFjY2RiYjA2ZjkwNjdmMzY5ODU3OGU4YTU2ODVhODdjNA==,Reid Burke,koichik,"Properly respond to HEAD during end(body) hot path

During write(), _hasBody is checked to make sure a body
is allowed -- this is now also checked during end(body)
when write() isn't used.

Concise final chunk for HEAD req's res.end(data).

Instead of simply clearing data, check _hasBody
earlier to avoid sending cruft when chunkedEncoding
is used.

Fixes #1291.",https://api.github.com/repos/nodejs/node/git/commits/973153d1ccdbb06f9067f3698578e8a5685a87c4,2011-07-08,Fixes #1291.
204,MDY6Q29tbWl0MjcxOTM3Nzk6NWIwMmQ1NjRjMzFmZmZiMTNmMTc0OWE0NzM0ZTVkZDRkYzk2NTRjMA==,Stefan Rusu,koichik,Fixes #1085. The agent end event may call detachSocket() after the socket is detached and destroyed by abort(). This patch avoids that behavior.,https://api.github.com/repos/nodejs/node/git/commits/5b02d564c31fffb13f1749a4734e5dd4dc9654c0,2011-07-14,Fixes #1085. The agent end event may call detachSocket() after the socket is detached and destroyed by abort(). This patch avoids that behavior.
204,MDY6Q29tbWl0MjcxOTM3Nzk6NWIwMmQ1NjRjMzFmZmZiMTNmMTc0OWE0NzM0ZTVkZDRkYzk2NTRjMA==,Stefan Rusu,koichik,Fixes #1085. The agent end event may call detachSocket() after the socket is detached and destroyed by abort(). This patch avoids that behavior.,https://api.github.com/repos/nodejs/node/git/commits/5b02d564c31fffb13f1749a4734e5dd4dc9654c0,2011-07-14,
205,MDY6Q29tbWl0MjcxOTM3Nzk6YjYyZWNkYzViYmVlMmEzYmRmYThiNjJkNDNiYjk0MzI2YTliNWU0Yg==,Ben Noordhuis,Ben Noordhuis,Revert 3e2a2a7. Always send a HTTP/1.1 status line to the client.,https://api.github.com/repos/nodejs/node/git/commits/b62ecdc5bbee2a3bdfa8b62d43bb94326a9b5e4b,2011-07-05,Revert 3e2a2a7. Always send a HTTP/1.1 status line to the client.
205,MDY6Q29tbWl0MjcxOTM3Nzk6YjYyZWNkYzViYmVlMmEzYmRmYThiNjJkNDNiYjk0MzI2YTliNWU0Yg==,Ben Noordhuis,Ben Noordhuis,Revert 3e2a2a7. Always send a HTTP/1.1 status line to the client.,https://api.github.com/repos/nodejs/node/git/commits/b62ecdc5bbee2a3bdfa8b62d43bb94326a9b5e4b,2011-07-05,
206,MDY6Q29tbWl0MjcxOTM3Nzk6M2U4NjY3ZDgyOWIyMjQ1Njk0ODczN2M4Yjg3ODYyZjU5MDIzNjA2Yg==,Ben Noordhuis,Ben Noordhuis,Revert 8dc8773. Always send a HTTP/1.1 status line to the client.,https://api.github.com/repos/nodejs/node/git/commits/3e8667d829b22456948737c8b87862f59023606b,2011-07-05,Revert 8dc8773. Always send a HTTP/1.1 status line to the client.
206,MDY6Q29tbWl0MjcxOTM3Nzk6M2U4NjY3ZDgyOWIyMjQ1Njk0ODczN2M4Yjg3ODYyZjU5MDIzNjA2Yg==,Ben Noordhuis,Ben Noordhuis,Revert 8dc8773. Always send a HTTP/1.1 status line to the client.,https://api.github.com/repos/nodejs/node/git/commits/3e8667d829b22456948737c8b87862f59023606b,2011-07-05,
207,MDY6Q29tbWl0MjcxOTM3Nzk6NjRhMDZjNWZmZDkyZjY3OGQzMThlNjFmYjhkYThjNTFmMDI4NjI3Yw==,Ryan Dahl,Ryan Dahl,"Revert ""Error argument for http.ServerRequest 'close'""

Too slow.

This reverts commit e7ac6d8fcd3841da072d8b4b6c328b33549d45c3.",https://api.github.com/repos/nodejs/node/git/commits/64a06c5ffd92f678d318e61fb8da8c51f028627c,2011-07-05,"Revert ""Error argument for 'close'"""
207,MDY6Q29tbWl0MjcxOTM3Nzk6NjRhMDZjNWZmZDkyZjY3OGQzMThlNjFmYjhkYThjNTFmMDI4NjI3Yw==,Ryan Dahl,Ryan Dahl,"Revert ""Error argument for http.ServerRequest 'close'""

Too slow.

This reverts commit e7ac6d8fcd3841da072d8b4b6c328b33549d45c3.",https://api.github.com/repos/nodejs/node/git/commits/64a06c5ffd92f678d318e61fb8da8c51f028627c,2011-07-05,Too slow
207,MDY6Q29tbWl0MjcxOTM3Nzk6NjRhMDZjNWZmZDkyZjY3OGQzMThlNjFmYjhkYThjNTFmMDI4NjI3Yw==,Ryan Dahl,Ryan Dahl,"Revert ""Error argument for http.ServerRequest 'close'""

Too slow.

This reverts commit e7ac6d8fcd3841da072d8b4b6c328b33549d45c3.",https://api.github.com/repos/nodejs/node/git/commits/64a06c5ffd92f678d318e61fb8da8c51f028627c,2011-07-05,This reverts commit e7ac6d8fcd3841da072d8b4b6c328b33549d45c3.
208,MDY6Q29tbWl0MjcxOTM3Nzk6ZjkxOTg4OTc5ZjM0MDAwMGE0MTZkZmJkZDc0ODhiOWFlODRlZTQxOQ==,Ben Noordhuis,Ben Noordhuis,"Don't send a HTTP/1.1 status line to HTTP/1.0 clients.

Fixes #1234.",https://api.github.com/repos/nodejs/node/git/commits/f91988979f340000a416dfbdd7488b9ae84ee419,2011-06-29,Don't send a HTTP/1.1 status line to HTTP/1.0 clients.
208,MDY6Q29tbWl0MjcxOTM3Nzk6ZjkxOTg4OTc5ZjM0MDAwMGE0MTZkZmJkZDc0ODhiOWFlODRlZTQxOQ==,Ben Noordhuis,Ben Noordhuis,"Don't send a HTTP/1.1 status line to HTTP/1.0 clients.

Fixes #1234.",https://api.github.com/repos/nodejs/node/git/commits/f91988979f340000a416dfbdd7488b9ae84ee419,2011-06-29,Fixes #1234.
209,MDY6Q29tbWl0MjcxOTM3Nzk6OGRjODc3MzFjNzZmOGE0YTg2ZDYyYjNmYjZkNTY0MWQwODRlNTI4Yw==,Ben Noordhuis,Ben Noordhuis,"Don't send a HTTP/1.1 status line to HTTP/1.0 clients.

Fixes #1234.",https://api.github.com/repos/nodejs/node/git/commits/8dc87731c76f8a4a86d62b3fb6d5641d084e528c,2011-06-29,Don't send a HTTP/1.1 status line to HTTP/1.0 clients.
209,MDY6Q29tbWl0MjcxOTM3Nzk6OGRjODc3MzFjNzZmOGE0YTg2ZDYyYjNmYjZkNTY0MWQwODRlNTI4Yw==,Ben Noordhuis,Ben Noordhuis,"Don't send a HTTP/1.1 status line to HTTP/1.0 clients.

Fixes #1234.",https://api.github.com/repos/nodejs/node/git/commits/8dc87731c76f8a4a86d62b3fb6d5641d084e528c,2011-06-29,Fixes #1234.
210,MDY6Q29tbWl0MjcxOTM3Nzk6NmQ4YjQzYzM2NmZkZTlhZjRiNmQ1YzllMzdkMTVjYzg1NGFhMGE2OQ==,Ryan Dahl,Ryan Dahl,"http: Fix agent id creation

Unbreaks test-regress-GH-877.js",https://api.github.com/repos/nodejs/node/git/commits/6d8b43c366fde9af4b6d5c9e37d15cc854aa0a69,2011-07-03,Fix agent id creation
210,MDY6Q29tbWl0MjcxOTM3Nzk6NmQ4YjQzYzM2NmZkZTlhZjRiNmQ1YzllMzdkMTVjYzg1NGFhMGE2OQ==,Ryan Dahl,Ryan Dahl,"http: Fix agent id creation

Unbreaks test-regress-GH-877.js",https://api.github.com/repos/nodejs/node/git/commits/6d8b43c366fde9af4b6d5c9e37d15cc854aa0a69,2011-07-03,Unbreaks test-regress-GH-877.js
211,MDY6Q29tbWl0MjcxOTM3Nzk6ZWZjYTU0NTZiOGRkM2U5NGIzYWYwMmNjYWY5NGQwMzJkZWQ2YTQ4Yw==,Ryan Dahl,Ryan Dahl,"Fixes #877. Don't wait for socket pool to establish connections.

Thanks to Yann Biancheri for putting together an initial test.",https://api.github.com/repos/nodejs/node/git/commits/efca5456b8dd3e94b3af02ccaf94d032ded6a48c,2011-07-01,Fixes #877. Don't wait for socket pool to establish connections.
211,MDY6Q29tbWl0MjcxOTM3Nzk6ZWZjYTU0NTZiOGRkM2U5NGIzYWYwMmNjYWY5NGQwMzJkZWQ2YTQ4Yw==,Ryan Dahl,Ryan Dahl,"Fixes #877. Don't wait for socket pool to establish connections.

Thanks to Yann Biancheri for putting together an initial test.",https://api.github.com/repos/nodejs/node/git/commits/efca5456b8dd3e94b3af02ccaf94d032ded6a48c,2011-07-01,Thanks to Yann Biancheri for putting together an initial test.
212,MDY6Q29tbWl0MjcxOTM3Nzk6ZDYyNzA4M2VkNTA4YzBlZDJhMGM3MjUxYmNiNDQzOTM3NWQ5N2NjYQ==,Ryan Dahl,Ryan Dahl,Fixes #1187. Support multiple 'link' headers,https://api.github.com/repos/nodejs/node/git/commits/d627083ed508c0ed2a0c7251bcb4439375d97cca,2011-06-20,Fixes #1187. Support multiple 'link' headers
212,MDY6Q29tbWl0MjcxOTM3Nzk6ZDYyNzA4M2VkNTA4YzBlZDJhMGM3MjUxYmNiNDQzOTM3NWQ5N2NjYQ==,Ryan Dahl,Ryan Dahl,Fixes #1187. Support multiple 'link' headers,https://api.github.com/repos/nodejs/node/git/commits/d627083ed508c0ed2a0c7251bcb4439375d97cca,2011-06-20,
213,MDY6Q29tbWl0MjcxOTM3Nzk6Nzk0Y2I2MGY5ZTg2ODllYzZlMTYzYWExMTE5ZmRiYjA3ZDMwMjRlYg==,isaacs,isaacs,typo,https://api.github.com/repos/nodejs/node/git/commits/794cb60f9e8689ec6e163aa1119fdbb07d3024eb,2011-06-04,typo
213,MDY6Q29tbWl0MjcxOTM3Nzk6Nzk0Y2I2MGY5ZTg2ODllYzZlMTYzYWExMTE5ZmRiYjA3ZDMwMjRlYg==,isaacs,isaacs,typo,https://api.github.com/repos/nodejs/node/git/commits/794cb60f9e8689ec6e163aa1119fdbb07d3024eb,2011-06-04,
214,MDY6Q29tbWl0MjcxOTM3Nzk6NTgwYWI3YmEyYzFlMGM4OWYzNTE3NTliMzFmNjViZmVkNDUxYmE5ZA==,isaacs,isaacs,"Avoid instanceof for native object types

For classes defined in the module, this is fine.  For 'Error'
it's probably not very hazardous.  However, testing 'Object'
and 'String' is much more reliable using typeof, to work with
the repl and NODE_MODULE_CONTEXT modes.",https://api.github.com/repos/nodejs/node/git/commits/580ab7ba2c1e0c89f351759b31f65bfed451ba9d,2011-06-04,Avoid instanceof for native object types
214,MDY6Q29tbWl0MjcxOTM3Nzk6NTgwYWI3YmEyYzFlMGM4OWYzNTE3NTliMzFmNjViZmVkNDUxYmE5ZA==,isaacs,isaacs,"Avoid instanceof for native object types

For classes defined in the module, this is fine.  For 'Error'
it's probably not very hazardous.  However, testing 'Object'
and 'String' is much more reliable using typeof, to work with
the repl and NODE_MODULE_CONTEXT modes.",https://api.github.com/repos/nodejs/node/git/commits/580ab7ba2c1e0c89f351759b31f65bfed451ba9d,2011-06-04,"For classes defined in the module, this is fine"
214,MDY6Q29tbWl0MjcxOTM3Nzk6NTgwYWI3YmEyYzFlMGM4OWYzNTE3NTliMzFmNjViZmVkNDUxYmE5ZA==,isaacs,isaacs,"Avoid instanceof for native object types

For classes defined in the module, this is fine.  For 'Error'
it's probably not very hazardous.  However, testing 'Object'
and 'String' is much more reliable using typeof, to work with
the repl and NODE_MODULE_CONTEXT modes.",https://api.github.com/repos/nodejs/node/git/commits/580ab7ba2c1e0c89f351759b31f65bfed451ba9d,2011-06-04," For 'Error'
it's probably not very hazardous"
214,MDY6Q29tbWl0MjcxOTM3Nzk6NTgwYWI3YmEyYzFlMGM4OWYzNTE3NTliMzFmNjViZmVkNDUxYmE5ZA==,isaacs,isaacs,"Avoid instanceof for native object types

For classes defined in the module, this is fine.  For 'Error'
it's probably not very hazardous.  However, testing 'Object'
and 'String' is much more reliable using typeof, to work with
the repl and NODE_MODULE_CONTEXT modes.",https://api.github.com/repos/nodejs/node/git/commits/580ab7ba2c1e0c89f351759b31f65bfed451ba9d,2011-06-04," However, testing 'Object'
and 'String' is much more reliable using typeof, to work with
the repl and NODE_MODULE_CONTEXT modes."
215,MDY6Q29tbWl0MjcxOTM3Nzk6NzBkZDZkNGVhMzY5Y2NiZmQ2ZTU3M2Q5YTQyYjUxNDRkYzIzYjRiMw==,Ryan Dahl,Ryan Dahl,"Fix TJ's assert error

Unable to reproduce but connect's ""make test TESTS=test/static.test.js"" does
it occasionally.",https://api.github.com/repos/nodejs/node/git/commits/70dd6d4ea369ccbfd6e573d9a42b5144dc23b4b3,2011-05-20,Fix TJ's assert error
215,MDY6Q29tbWl0MjcxOTM3Nzk6NzBkZDZkNGVhMzY5Y2NiZmQ2ZTU3M2Q5YTQyYjUxNDRkYzIzYjRiMw==,Ryan Dahl,Ryan Dahl,"Fix TJ's assert error

Unable to reproduce but connect's ""make test TESTS=test/static.test.js"" does
it occasionally.",https://api.github.com/repos/nodejs/node/git/commits/70dd6d4ea369ccbfd6e573d9a42b5144dc23b4b3,2011-05-20,"Unable to reproduce but connect's ""make test TESTS=test/static.test.js"" does
it occasionally."
216,MDY6Q29tbWl0MjcxOTM3Nzk6ZTdhYzZkOGZjZDM4NDFkYTA3MmQ4YjRiNmMzMjhiMzM1NDlkNDVjMw==,Felix Geisendörfer,Ryan Dahl,"Error argument for http.ServerRequest 'close'

Problem: It was not possible to detect the reason for a premature
connection termination in http requests.

This patch provides a new `err` argument to the 'close' event which
can be inspected to differentiate between a timeout and a client
actively terminating the connection.

Also contains tests for this new behavior for http and https.",https://api.github.com/repos/nodejs/node/git/commits/e7ac6d8fcd3841da072d8b4b6c328b33549d45c3,2011-05-14,Error argument for 'close'
216,MDY6Q29tbWl0MjcxOTM3Nzk6ZTdhYzZkOGZjZDM4NDFkYTA3MmQ4YjRiNmMzMjhiMzM1NDlkNDVjMw==,Felix Geisendörfer,Ryan Dahl,"Error argument for http.ServerRequest 'close'

Problem: It was not possible to detect the reason for a premature
connection termination in http requests.

This patch provides a new `err` argument to the 'close' event which
can be inspected to differentiate between a timeout and a client
actively terminating the connection.

Also contains tests for this new behavior for http and https.",https://api.github.com/repos/nodejs/node/git/commits/e7ac6d8fcd3841da072d8b4b6c328b33549d45c3,2011-05-14,"Problem: It was not possible to detect the reason for a premature
connection termination in requests"
216,MDY6Q29tbWl0MjcxOTM3Nzk6ZTdhYzZkOGZjZDM4NDFkYTA3MmQ4YjRiNmMzMjhiMzM1NDlkNDVjMw==,Felix Geisendörfer,Ryan Dahl,"Error argument for http.ServerRequest 'close'

Problem: It was not possible to detect the reason for a premature
connection termination in http requests.

This patch provides a new `err` argument to the 'close' event which
can be inspected to differentiate between a timeout and a client
actively terminating the connection.

Also contains tests for this new behavior for http and https.",https://api.github.com/repos/nodejs/node/git/commits/e7ac6d8fcd3841da072d8b4b6c328b33549d45c3,2011-05-14,"This patch provides a new `err` argument to the 'close' event which
can be inspected to differentiate between a timeout and a client
actively terminating the connection"
216,MDY6Q29tbWl0MjcxOTM3Nzk6ZTdhYzZkOGZjZDM4NDFkYTA3MmQ4YjRiNmMzMjhiMzM1NDlkNDVjMw==,Felix Geisendörfer,Ryan Dahl,"Error argument for http.ServerRequest 'close'

Problem: It was not possible to detect the reason for a premature
connection termination in http requests.

This patch provides a new `err` argument to the 'close' event which
can be inspected to differentiate between a timeout and a client
actively terminating the connection.

Also contains tests for this new behavior for http and https.",https://api.github.com/repos/nodejs/node/git/commits/e7ac6d8fcd3841da072d8b4b6c328b33549d45c3,2011-05-14,Also contains tests for this new behavior for and https.
217,MDY6Q29tbWl0MjcxOTM3Nzk6MTEwZjA2NTc4ZGE5ZmE0ZjUzODkyNjllOWM4NmU1NjU1OGEyZDdkYw==,Ryan Dahl,Ryan Dahl,"Agent socket errors bubble up to req only if req exists

Fixes #836.",https://api.github.com/repos/nodejs/node/git/commits/110f06578da9fa4f5389269e9c86e56558a2d7dc,2011-05-07,Agent socket errors bubble up to req only if req exists
217,MDY6Q29tbWl0MjcxOTM3Nzk6MTEwZjA2NTc4ZGE5ZmE0ZjUzODkyNjllOWM4NmU1NjU1OGEyZDdkYw==,Ryan Dahl,Ryan Dahl,"Agent socket errors bubble up to req only if req exists

Fixes #836.",https://api.github.com/repos/nodejs/node/git/commits/110f06578da9fa4f5389269e9c86e56558a2d7dc,2011-05-07,Fixes #836.
218,MDY6Q29tbWl0MjcxOTM3Nzk6YTIzMjhkYzczYzQyNWM0ZDZmNThjYjhkOTdlY2U5MmFkYWZjYjk2Yg==,Mark Cavage,Ryan Dahl,"Add support for Unix Domain Sockets to HTTP

fixes #979.",https://api.github.com/repos/nodejs/node/git/commits/a2328dc73c425c4d6f58cb8d97ece92adafcb96b,2011-04-25,Add support for Unix Domain Sockets to HTTP
218,MDY6Q29tbWl0MjcxOTM3Nzk6YTIzMjhkYzczYzQyNWM0ZDZmNThjYjhkOTdlY2U5MmFkYWZjYjk2Yg==,Mark Cavage,Ryan Dahl,"Add support for Unix Domain Sockets to HTTP

fixes #979.",https://api.github.com/repos/nodejs/node/git/commits/a2328dc73c425c4d6f58cb8d97ece92adafcb96b,2011-04-25,fixes #979.
219,MDY6Q29tbWl0MjcxOTM3Nzk6ODM3MjdhNGM4NmU3ZTdmZTFiNjk4YmIyMmI4YWIyYTdmMTE5ZDY3ZA==,Abe Fettig,Ryan Dahl,"Fix bug where http response.readable was never set to false

Closes GH-867.",https://api.github.com/repos/nodejs/node/git/commits/83727a4c86e7e7fe1b698bb22b8ab2a7f119d67d,2011-03-31,Fix bug where response.readable was never set to false
219,MDY6Q29tbWl0MjcxOTM3Nzk6ODM3MjdhNGM4NmU3ZTdmZTFiNjk4YmIyMmI4YWIyYTdmMTE5ZDY3ZA==,Abe Fettig,Ryan Dahl,"Fix bug where http response.readable was never set to false

Closes GH-867.",https://api.github.com/repos/nodejs/node/git/commits/83727a4c86e7e7fe1b698bb22b8ab2a7f119d67d,2011-03-31,Closes GH-867.
220,MDY6Q29tbWl0MjcxOTM3Nzk6OWNjZjBlNTI3ZjA2NmNhNjllNjEwYmViMDRkOTUwN2VlNWJmMTg3Yw==,Ryan Dahl,Ryan Dahl,Don't error on ENOTCONN from shutdown(),https://api.github.com/repos/nodejs/node/git/commits/9ccf0e527f066ca69e610beb04d9507ee5bf187c,2011-04-11,Don't error on ENOTCONN from shutdown()
220,MDY6Q29tbWl0MjcxOTM3Nzk6OWNjZjBlNTI3ZjA2NmNhNjllNjEwYmViMDRkOTUwN2VlNWJmMTg3Yw==,Ryan Dahl,Ryan Dahl,Don't error on ENOTCONN from shutdown(),https://api.github.com/repos/nodejs/node/git/commits/9ccf0e527f066ca69e610beb04d9507ee5bf187c,2011-04-11,
221,MDY6Q29tbWl0MjcxOTM3Nzk6NmQ4NWRhMTg1Yzg1MGNmODcxZTFhZWVjMjViYWEzZGExOTcxNjEwZg==,isaacs,Ryan Dahl,"Closes GH-721 Set default host header properly

However, this test is failing for some quite unrelated issue.
Getting some odd ""socket hangup"" crashes, and only the first request
ever makes it to the server.",https://api.github.com/repos/nodejs/node/git/commits/6d85da185c850cf871e1aeec25baa3da1971610f,2011-02-23,Closes GH-721 Set default host header properly
221,MDY6Q29tbWl0MjcxOTM3Nzk6NmQ4NWRhMTg1Yzg1MGNmODcxZTFhZWVjMjViYWEzZGExOTcxNjEwZg==,isaacs,Ryan Dahl,"Closes GH-721 Set default host header properly

However, this test is failing for some quite unrelated issue.
Getting some odd ""socket hangup"" crashes, and only the first request
ever makes it to the server.",https://api.github.com/repos/nodejs/node/git/commits/6d85da185c850cf871e1aeec25baa3da1971610f,2011-02-23,"However, this test is failing for some quite unrelated issue"
221,MDY6Q29tbWl0MjcxOTM3Nzk6NmQ4NWRhMTg1Yzg1MGNmODcxZTFhZWVjMjViYWEzZGExOTcxNjEwZg==,isaacs,Ryan Dahl,"Closes GH-721 Set default host header properly

However, this test is failing for some quite unrelated issue.
Getting some odd ""socket hangup"" crashes, and only the first request
ever makes it to the server.",https://api.github.com/repos/nodejs/node/git/commits/6d85da185c850cf871e1aeec25baa3da1971610f,2011-02-23,"Getting some odd ""socket hangup"" crashes, and only the first request
ever makes it to the server."
222,MDY6Q29tbWl0MjcxOTM3Nzk6NjY1NzBjMTk2NDI5ZjAxNzg2Yzc5ZjE3N2M2NDNiMDdmNjc4YzMyYw==,Ryan Dahl,Ryan Dahl,"Fix double free of parser on error in http.Agent.

Thanks to Stéphan Kochen for the fix and Maurice Fonk for reproducing the
bug.

Closes GH-784.
Closes GH-803.",https://api.github.com/repos/nodejs/node/git/commits/66570c196429f01786c79f177c643b07f678c32c,2011-03-18,Fix double free of parser on error in 
222,MDY6Q29tbWl0MjcxOTM3Nzk6NjY1NzBjMTk2NDI5ZjAxNzg2Yzc5ZjE3N2M2NDNiMDdmNjc4YzMyYw==,Ryan Dahl,Ryan Dahl,"Fix double free of parser on error in http.Agent.

Thanks to Stéphan Kochen for the fix and Maurice Fonk for reproducing the
bug.

Closes GH-784.
Closes GH-803.",https://api.github.com/repos/nodejs/node/git/commits/66570c196429f01786c79f177c643b07f678c32c,2011-03-18,"Thanks to Stéphan Kochen for the fix and Maurice Fonk for reproducing the
bug"
222,MDY6Q29tbWl0MjcxOTM3Nzk6NjY1NzBjMTk2NDI5ZjAxNzg2Yzc5ZjE3N2M2NDNiMDdmNjc4YzMyYw==,Ryan Dahl,Ryan Dahl,"Fix double free of parser on error in http.Agent.

Thanks to Stéphan Kochen for the fix and Maurice Fonk for reproducing the
bug.

Closes GH-784.
Closes GH-803.",https://api.github.com/repos/nodejs/node/git/commits/66570c196429f01786c79f177c643b07f678c32c,2011-03-18,Closes GH-784
222,MDY6Q29tbWl0MjcxOTM3Nzk6NjY1NzBjMTk2NDI5ZjAxNzg2Yzc5ZjE3N2M2NDNiMDdmNjc4YzMyYw==,Ryan Dahl,Ryan Dahl,"Fix double free of parser on error in http.Agent.

Thanks to Stéphan Kochen for the fix and Maurice Fonk for reproducing the
bug.

Closes GH-784.
Closes GH-803.",https://api.github.com/repos/nodejs/node/git/commits/66570c196429f01786c79f177c643b07f678c32c,2011-03-18,Closes GH-803.
223,MDY6Q29tbWl0MjcxOTM3Nzk6NTUwNDhjZGY3OWYzYzYwN2FiOTg2YzM1ZDA0MjJlNTkxZTdmNjQ0OA==,Ryan Dahl,Ryan Dahl,Update copyright headers,https://api.github.com/repos/nodejs/node/git/commits/55048cdf79f3c607ab986c35d0422e591e7f6448,2011-03-10,Update copyright headers
223,MDY6Q29tbWl0MjcxOTM3Nzk6NTUwNDhjZGY3OWYzYzYwN2FiOTg2YzM1ZDA0MjJlNTkxZTdmNjQ0OA==,Ryan Dahl,Ryan Dahl,Update copyright headers,https://api.github.com/repos/nodejs/node/git/commits/55048cdf79f3c607ab986c35d0422e591e7f6448,2011-03-10,
224,MDY6Q29tbWl0MjcxOTM3Nzk6MzZlNzViNzM1MWM0ODNjZGM4YWUyODFlOWM0MzI3ODgzNmVhOTRmOA==,Ryan Dahl,Ryan Dahl,"Fix HTTP agent disconnection problem

https://groups.google.com/forum/#!topic/nodejs-dev/V5fB69hFa9o

Closes GH-787.",https://api.github.com/repos/nodejs/node/git/commits/36e75b7351c483cdc8ae281e9c43278836ea94f8,2011-03-14,Fix HTTP agent disconnection problem
224,MDY6Q29tbWl0MjcxOTM3Nzk6MzZlNzViNzM1MWM0ODNjZGM4YWUyODFlOWM0MzI3ODgzNmVhOTRmOA==,Ryan Dahl,Ryan Dahl,"Fix HTTP agent disconnection problem

https://groups.google.com/forum/#!topic/nodejs-dev/V5fB69hFa9o

Closes GH-787.",https://api.github.com/repos/nodejs/node/git/commits/36e75b7351c483cdc8ae281e9c43278836ea94f8,2011-03-14,Closes GH-787.
225,MDY6Q29tbWl0MjcxOTM3Nzk6NzI3NmZmOTgyMjE2YTNkZmJkYzhmOWZkM2I1MjVmMTIzNzJjZjE1Nw==,Russell Haering,Ryan Dahl,http: fix missing 'drain' events,https://api.github.com/repos/nodejs/node/git/commits/7276ff982216a3dfbdc8f9fd3b525f12372cf157,2011-02-20,fix missing 'drain' events
225,MDY6Q29tbWl0MjcxOTM3Nzk6NzI3NmZmOTgyMjE2YTNkZmJkYzhmOWZkM2I1MjVmMTIzNzJjZjE1Nw==,Russell Haering,Ryan Dahl,http: fix missing 'drain' events,https://api.github.com/repos/nodejs/node/git/commits/7276ff982216a3dfbdc8f9fd3b525f12372cf157,2011-02-20,
226,MDY6Q29tbWl0MjcxOTM3Nzk6ZWE5ZjViMTEwYTJlNDFmZjdiZmYyZmE3M2E4ODQ3MjI5YTIxYTRiYQ==,Ryan Dahl,Ryan Dahl,"Add 'close' and 'aborted' events to Agent responses

Closes GH-722.",https://api.github.com/repos/nodejs/node/git/commits/ea9f5b110a2e41ff7bff2fa73a8847229a21a4ba,2011-02-25,Add 'close' and 'aborted' events to Agent responses
226,MDY6Q29tbWl0MjcxOTM3Nzk6ZWE5ZjViMTEwYTJlNDFmZjdiZmYyZmE3M2E4ODQ3MjI5YTIxYTRiYQ==,Ryan Dahl,Ryan Dahl,"Add 'close' and 'aborted' events to Agent responses

Closes GH-722.",https://api.github.com/repos/nodejs/node/git/commits/ea9f5b110a2e41ff7bff2fa73a8847229a21a4ba,2011-02-25,Closes GH-722.
227,MDY6Q29tbWl0MjcxOTM3Nzk6MzYwODg1YTdlOWI5MGJmYWI4MzgwNTc5ZGYxOGFiM2Q4OTAzOWRjMg==,Ryan Dahl,Ryan Dahl,deprecate http.cat,https://api.github.com/repos/nodejs/node/git/commits/360885a7e9b90bfab8380579df18ab3d89039dc2,2011-02-25,deprecate http.cat
227,MDY6Q29tbWl0MjcxOTM3Nzk6MzYwODg1YTdlOWI5MGJmYWI4MzgwNTc5ZGYxOGFiM2Q4OTAzOWRjMg==,Ryan Dahl,Ryan Dahl,deprecate http.cat,https://api.github.com/repos/nodejs/node/git/commits/360885a7e9b90bfab8380579df18ab3d89039dc2,2011-02-25,
228,MDY6Q29tbWl0MjcxOTM3Nzk6ZjQyM2VjOTBmYzZjZmE0N2JhZjQ4NDg1MjQwZGQzMzhkNjFlOTMwNw==,Felix Geisendörfer,Ryan Dahl,"In addition to 'aborted' emit 'close' from incoming requests

Closes GH-160.",https://api.github.com/repos/nodejs/node/git/commits/f423ec90fc6cfa47baf48485240dd338d61e9307,2011-02-20,In addition to 'aborted' emit 'close' from incoming requests
228,MDY6Q29tbWl0MjcxOTM3Nzk6ZjQyM2VjOTBmYzZjZmE0N2JhZjQ4NDg1MjQwZGQzMzhkNjFlOTMwNw==,Felix Geisendörfer,Ryan Dahl,"In addition to 'aborted' emit 'close' from incoming requests

Closes GH-160.",https://api.github.com/repos/nodejs/node/git/commits/f423ec90fc6cfa47baf48485240dd338d61e9307,2011-02-20,Closes GH-160.
229,MDY6Q29tbWl0MjcxOTM3Nzk6NTI4NzcwM2NjZTU5ZTJlZTA5YzczYTg1MWJmZGNkMDE4YTY3OTI2Yw==,Ryan Dahl,Ryan Dahl,"Pragma HTTP header comma separation

Closes GH-715, GH-716.",https://api.github.com/repos/nodejs/node/git/commits/5287703cce59e2ee09c73a851bfdcd018a67926c,2011-02-24,Pragma HTTP header comma separation
229,MDY6Q29tbWl0MjcxOTM3Nzk6NTI4NzcwM2NjZTU5ZTJlZTA5YzczYTg1MWJmZGNkMDE4YTY3OTI2Yw==,Ryan Dahl,Ryan Dahl,"Pragma HTTP header comma separation

Closes GH-715, GH-716.",https://api.github.com/repos/nodejs/node/git/commits/5287703cce59e2ee09c73a851bfdcd018a67926c,2011-02-24,"Closes GH-715, GH-716."
230,MDY6Q29tbWl0MjcxOTM3Nzk6YzJhNjI5NTFmNjRkNTU4NGQ3NmZlYTU4NjVlOWJkOTRhODk4ZWQ4Yg==,Ryan Dahl,Ryan Dahl,"TLS sockets should not be writable after 'end'

Closes GH-694.",https://api.github.com/repos/nodejs/node/git/commits/c2a62951f64d5584d76fea5865e9bd94a898ed8b,2011-02-20,TLS sockets should not be writable after 'end'
230,MDY6Q29tbWl0MjcxOTM3Nzk6YzJhNjI5NTFmNjRkNTU4NGQ3NmZlYTU4NjVlOWJkOTRhODk4ZWQ4Yg==,Ryan Dahl,Ryan Dahl,"TLS sockets should not be writable after 'end'

Closes GH-694.",https://api.github.com/repos/nodejs/node/git/commits/c2a62951f64d5584d76fea5865e9bd94a898ed8b,2011-02-20,Closes GH-694.
231,MDY6Q29tbWl0MjcxOTM3Nzk6YWFjNWNiZTAyNTJmODI1NDIyNThkZWE3YjI2NTdkNjk0MGRmZTEzNA==,Ryan Dahl,Ryan Dahl,"HTTP Agent sockets should not reconnect on error

Closes GH-684.",https://api.github.com/repos/nodejs/node/git/commits/aac5cbe0252f82542258dea7b2657d6940dfe134,2011-02-18,HTTP Agent sockets should not reconnect on error
231,MDY6Q29tbWl0MjcxOTM3Nzk6YWFjNWNiZTAyNTJmODI1NDIyNThkZWE3YjI2NTdkNjk0MGRmZTEzNA==,Ryan Dahl,Ryan Dahl,"HTTP Agent sockets should not reconnect on error

Closes GH-684.",https://api.github.com/repos/nodejs/node/git/commits/aac5cbe0252f82542258dea7b2657d6940dfe134,2011-02-18,Closes GH-684.
232,MDY6Q29tbWl0MjcxOTM3Nzk6OWIwYzc2MThjNTQ3OTdjZWI5YmU3NGRjZGVmMGNiNjNlMDcxODVjNA==,Ryan Dahl,Ryan Dahl,"HTTP Agent should not die on evil server

Closes GH-680.",https://api.github.com/repos/nodejs/node/git/commits/9b0c7618c54797ceb9be74dcdef0cb63e07185c4,2011-02-18,HTTP Agent should not die on evil server
232,MDY6Q29tbWl0MjcxOTM3Nzk6OWIwYzc2MThjNTQ3OTdjZWI5YmU3NGRjZGVmMGNiNjNlMDcxODVjNA==,Ryan Dahl,Ryan Dahl,"HTTP Agent should not die on evil server

Closes GH-680.",https://api.github.com/repos/nodejs/node/git/commits/9b0c7618c54797ceb9be74dcdef0cb63e07185c4,2011-02-18,Closes GH-680.
233,MDY6Q29tbWl0MjcxOTM3Nzk6YzM2NWY1NjA2MTIxYzRhMWI4ZWRiZjI2MGEwZTMyMTk5ZTQ1M2ZlNw==,Ryan Dahl,Ryan Dahl,"https was missing 'end' event sometimes

Closes GH-671.",https://api.github.com/repos/nodejs/node/git/commits/c365f5606121c4a1b8edbf260a0e32199e453fe7,2011-02-16,was missing 'end' event sometimes
233,MDY6Q29tbWl0MjcxOTM3Nzk6YzM2NWY1NjA2MTIxYzRhMWI4ZWRiZjI2MGEwZTMyMTk5ZTQ1M2ZlNw==,Ryan Dahl,Ryan Dahl,"https was missing 'end' event sometimes

Closes GH-671.",https://api.github.com/repos/nodejs/node/git/commits/c365f5606121c4a1b8edbf260a0e32199e453fe7,2011-02-16,Closes GH-671.
234,MDY6Q29tbWl0MjcxOTM3Nzk6NzdhZTg3ZDM2NzNmMGYxNDk5NGMyNjkzNDVhYmMwNDk5MDc3ODkxMg==,Ryan Dahl,Ryan Dahl,default to port 80 for http.request,https://api.github.com/repos/nodejs/node/git/commits/77ae87d3673f0f14994c269345abc04990778912,2011-02-15,default to port 80 for http.request
234,MDY6Q29tbWl0MjcxOTM3Nzk6NzdhZTg3ZDM2NzNmMGYxNDk5NGMyNjkzNDVhYmMwNDk5MDc3ODkxMg==,Ryan Dahl,Ryan Dahl,default to port 80 for http.request,https://api.github.com/repos/nodejs/node/git/commits/77ae87d3673f0f14994c269345abc04990778912,2011-02-15,
235,MDY6Q29tbWl0MjcxOTM3Nzk6YjExZDc4YjM4NmQ3YWU1ZTQ2ZDYwNmRkMWQ3MzhhNWM2ZjViMzQwNg==,Richard Rodger,Ryan Dahl,"Fix for DNS fail in HTTP request

Closes GH-653.",https://api.github.com/repos/nodejs/node/git/commits/b11d78b386d7ae5e46d606dd1d738a5c6f5b3406,2011-02-10,Fix for DNS fail in HTTP request
235,MDY6Q29tbWl0MjcxOTM3Nzk6YjExZDc4YjM4NmQ3YWU1ZTQ2ZDYwNmRkMWQ3MzhhNWM2ZjViMzQwNg==,Richard Rodger,Ryan Dahl,"Fix for DNS fail in HTTP request

Closes GH-653.",https://api.github.com/repos/nodejs/node/git/commits/b11d78b386d7ae5e46d606dd1d738a5c6f5b3406,2011-02-10,Closes GH-653.
236,MDY6Q29tbWl0MjcxOTM3Nzk6ZmU4Mzg2MTFmNmQ3NjhhNmI0MDBlOWZmMTNmYWJkMDdmZmU0N2I2YQ==,Tj Holowaychuk,Ryan Dahl,Fixed field merging with progressive fields on writeHead(),https://api.github.com/repos/nodejs/node/git/commits/fe838611f6d768a6b400e9ff13fabd07ffe47b6a,2011-02-11,Fixed field merging with progressive fields on writeHead()
236,MDY6Q29tbWl0MjcxOTM3Nzk6ZmU4Mzg2MTFmNmQ3NjhhNmI0MDBlOWZmMTNmYWJkMDdmZmU0N2I2YQ==,Tj Holowaychuk,Ryan Dahl,Fixed field merging with progressive fields on writeHead(),https://api.github.com/repos/nodejs/node/git/commits/fe838611f6d768a6b400e9ff13fabd07ffe47b6a,2011-02-11,
237,MDY6Q29tbWl0MjcxOTM3Nzk6YjA5YzU4ODliZWU4Mzg4YTY3MTBlY2Y3NWQ3NmNhMjQyZTA2ODRiZA==,Tim Caswell,Ryan Dahl,"Add support for mutable/implicit headers for http.

This works for both ServerResponse and ClientRequest.
Adds three new methods as a couple properties to to OutgoingMessage objects.
Tests by Charlie Robbins.

Change-Id: Ib6f3829798e8f11dd2b6136e61df254f1564807e",https://api.github.com/repos/nodejs/node/git/commits/b09c5889bee8388a6710ecf75d76ca242e0684bd,2011-02-10,Add support for mutable/implicit headers for 
237,MDY6Q29tbWl0MjcxOTM3Nzk6YjA5YzU4ODliZWU4Mzg4YTY3MTBlY2Y3NWQ3NmNhMjQyZTA2ODRiZA==,Tim Caswell,Ryan Dahl,"Add support for mutable/implicit headers for http.

This works for both ServerResponse and ClientRequest.
Adds three new methods as a couple properties to to OutgoingMessage objects.
Tests by Charlie Robbins.

Change-Id: Ib6f3829798e8f11dd2b6136e61df254f1564807e",https://api.github.com/repos/nodejs/node/git/commits/b09c5889bee8388a6710ecf75d76ca242e0684bd,2011-02-10,This works for both ServerResponse and ClientRequest
237,MDY6Q29tbWl0MjcxOTM3Nzk6YjA5YzU4ODliZWU4Mzg4YTY3MTBlY2Y3NWQ3NmNhMjQyZTA2ODRiZA==,Tim Caswell,Ryan Dahl,"Add support for mutable/implicit headers for http.

This works for both ServerResponse and ClientRequest.
Adds three new methods as a couple properties to to OutgoingMessage objects.
Tests by Charlie Robbins.

Change-Id: Ib6f3829798e8f11dd2b6136e61df254f1564807e",https://api.github.com/repos/nodejs/node/git/commits/b09c5889bee8388a6710ecf75d76ca242e0684bd,2011-02-10,Adds three new methods as a couple properties to to OutgoingMessage objects
237,MDY6Q29tbWl0MjcxOTM3Nzk6YjA5YzU4ODliZWU4Mzg4YTY3MTBlY2Y3NWQ3NmNhMjQyZTA2ODRiZA==,Tim Caswell,Ryan Dahl,"Add support for mutable/implicit headers for http.

This works for both ServerResponse and ClientRequest.
Adds three new methods as a couple properties to to OutgoingMessage objects.
Tests by Charlie Robbins.

Change-Id: Ib6f3829798e8f11dd2b6136e61df254f1564807e",https://api.github.com/repos/nodejs/node/git/commits/b09c5889bee8388a6710ecf75d76ca242e0684bd,2011-02-10,Tests by Charlie Robbins
237,MDY6Q29tbWl0MjcxOTM3Nzk6YjA5YzU4ODliZWU4Mzg4YTY3MTBlY2Y3NWQ3NmNhMjQyZTA2ODRiZA==,Tim Caswell,Ryan Dahl,"Add support for mutable/implicit headers for http.

This works for both ServerResponse and ClientRequest.
Adds three new methods as a couple properties to to OutgoingMessage objects.
Tests by Charlie Robbins.

Change-Id: Ib6f3829798e8f11dd2b6136e61df254f1564807e",https://api.github.com/repos/nodejs/node/git/commits/b09c5889bee8388a6710ecf75d76ca242e0684bd,2011-02-10,Change-Id: Ib6f3829798e8f11dd2b6136e61df254f1564807e
238,MDY6Q29tbWl0MjcxOTM3Nzk6ZTkyNTdiODU5ZDZiYmViNjhiNDdhYmYwMzc0MWJjNTM3ODUzOGIwNQ==,Ryan Dahl,Ryan Dahl,New DTrace probes from CA team,https://api.github.com/repos/nodejs/node/git/commits/e9257b859d6bbeb68b47abf03741bc5378538b05,2011-02-10,New DTrace probes from CA team
238,MDY6Q29tbWl0MjcxOTM3Nzk6ZTkyNTdiODU5ZDZiYmViNjhiNDdhYmYwMzc0MWJjNTM3ODUzOGIwNQ==,Ryan Dahl,Ryan Dahl,New DTrace probes from CA team,https://api.github.com/repos/nodejs/node/git/commits/e9257b859d6bbeb68b47abf03741bc5378538b05,2011-02-10,
239,MDY6Q29tbWl0MjcxOTM3Nzk6ZTZlZGUzMTU1NGQyZjIzZDFlZmU1OTZiZDAyZTgzMDRmZjBkYzE3MQ==,Russell Haering,Ryan Dahl,http: fix buffer writes to outgoing messages,https://api.github.com/repos/nodejs/node/git/commits/e6ede31554d2f23d1efe596bd02e8304ff0dc171,2011-02-06,fix buffer writes to outgoing messages
239,MDY6Q29tbWl0MjcxOTM3Nzk6ZTZlZGUzMTU1NGQyZjIzZDFlZmU1OTZiZDAyZTgzMDRmZjBkYzE3MQ==,Russell Haering,Ryan Dahl,http: fix buffer writes to outgoing messages,https://api.github.com/repos/nodejs/node/git/commits/e6ede31554d2f23d1efe596bd02e8304ff0dc171,2011-02-06,
240,MDY6Q29tbWl0MjcxOTM3Nzk6MmIwM2JhNTkxNzdmZWU4YWQyOGI1YmUwYmViZDE0OWIwNmYzYzJhMg==,Mikeal Rogers,Ryan Dahl,"http: agent takes options instead of host, port pair",https://api.github.com/repos/nodejs/node/git/commits/2b03ba59177fee8ad28b5be0bebd149b06f3c2a2,2011-02-05,"agent takes options instead of host, port pair"
240,MDY6Q29tbWl0MjcxOTM3Nzk6MmIwM2JhNTkxNzdmZWU4YWQyOGI1YmUwYmViZDE0OWIwNmYzYzJhMg==,Mikeal Rogers,Ryan Dahl,"http: agent takes options instead of host, port pair",https://api.github.com/repos/nodejs/node/git/commits/2b03ba59177fee8ad28b5be0bebd149b06f3c2a2,2011-02-05,
241,MDY6Q29tbWl0MjcxOTM3Nzk6NDczM2QwYjFmMDhhNjQ0ZWNhZmM3YTgwZTk1MGZhM2FjNTgxNDg1OQ==,Ryan Dahl,Ryan Dahl,http: handle aborts,https://api.github.com/repos/nodejs/node/git/commits/4733d0b1f08a644ecafc7a80e950fa3ac5814859,2011-02-04,handle aborts
241,MDY6Q29tbWl0MjcxOTM3Nzk6NDczM2QwYjFmMDhhNjQ0ZWNhZmM3YTgwZTk1MGZhM2FjNTgxNDg1OQ==,Ryan Dahl,Ryan Dahl,http: handle aborts,https://api.github.com/repos/nodejs/node/git/commits/4733d0b1f08a644ecafc7a80e950fa3ac5814859,2011-02-04,
242,MDY6Q29tbWl0MjcxOTM3Nzk6YmZiNmE2N2Q2MDQyYWUwNmMyOGU3NzBhNzVlYWRjMzdiZGNhYTIzMA==,Ryan Dahl,Ryan Dahl,Another fix for process.assert,https://api.github.com/repos/nodejs/node/git/commits/bfb6a67d6042ae06c28e770a75eadc37bdcaa230,2011-01-28,Another fix for process.assert
242,MDY6Q29tbWl0MjcxOTM3Nzk6YmZiNmE2N2Q2MDQyYWUwNmMyOGU3NzBhNzVlYWRjMzdiZGNhYTIzMA==,Ryan Dahl,Ryan Dahl,Another fix for process.assert,https://api.github.com/repos/nodejs/node/git/commits/bfb6a67d6042ae06c28e770a75eadc37bdcaa230,2011-01-28,
243,MDY6Q29tbWl0MjcxOTM3Nzk6MzZlZjU2NDNjM2EzZGMxYTQzZTgwZWRlNDQyZDRkMWNkMjliNmE2OA==,Ali Farhadi,Ryan Dahl,Fixing bug in http request default encoding.,https://api.github.com/repos/nodejs/node/git/commits/36ef5643c3a3dc1a43e80ede442d4d1cd29b6a68,2011-01-26,Fixing bug in request default encoding.
243,MDY6Q29tbWl0MjcxOTM3Nzk6MzZlZjU2NDNjM2EzZGMxYTQzZTgwZWRlNDQyZDRkMWNkMjliNmE2OA==,Ali Farhadi,Ryan Dahl,Fixing bug in http request default encoding.,https://api.github.com/repos/nodejs/node/git/commits/36ef5643c3a3dc1a43e80ede442d4d1cd29b6a68,2011-01-26,
244,MDY6Q29tbWl0MjcxOTM3Nzk6MzlmZjQwZTVhMjM5NjA4NjI3NzZmZDY4YTg0MGMzNmY5OGM5ZTlkOQ==,Ryan Dahl,Ryan Dahl,"Use old http.Client

This is meant as a path for upgrading to the new http.request() API.
http.Client will be disappearing in the future.",https://api.github.com/repos/nodejs/node/git/commits/39ff40e5a23960862776fd68a840c36f98c9e9d9,2011-01-25,Use old 
244,MDY6Q29tbWl0MjcxOTM3Nzk6MzlmZjQwZTVhMjM5NjA4NjI3NzZmZDY4YTg0MGMzNmY5OGM5ZTlkOQ==,Ryan Dahl,Ryan Dahl,"Use old http.Client

This is meant as a path for upgrading to the new http.request() API.
http.Client will be disappearing in the future.",https://api.github.com/repos/nodejs/node/git/commits/39ff40e5a23960862776fd68a840c36f98c9e9d9,2011-01-25,This is meant as a path for upgrading to the new API
244,MDY6Q29tbWl0MjcxOTM3Nzk6MzlmZjQwZTVhMjM5NjA4NjI3NzZmZDY4YTg0MGMzNmY5OGM5ZTlkOQ==,Ryan Dahl,Ryan Dahl,"Use old http.Client

This is meant as a path for upgrading to the new http.request() API.
http.Client will be disappearing in the future.",https://api.github.com/repos/nodejs/node/git/commits/39ff40e5a23960862776fd68a840c36f98c9e9d9,2011-01-25,will be disappearing in the future.
245,MDY6Q29tbWl0MjcxOTM3Nzk6MDY4YjczMzU4M2E0ZjA3ODFhODQxOGRkZjQyZjc5MTJlM2RkNTNhNg==,Ryan Dahl,Ryan Dahl,"Land Cantrill's DTrace patch

only works on solaris",https://api.github.com/repos/nodejs/node/git/commits/068b733583a4f0781a8418ddf42f7912e3dd53a6,2011-01-25,Land Cantrill's DTrace patch
245,MDY6Q29tbWl0MjcxOTM3Nzk6MDY4YjczMzU4M2E0ZjA3ODFhODQxOGRkZjQyZjc5MTJlM2RkNTNhNg==,Ryan Dahl,Ryan Dahl,"Land Cantrill's DTrace patch

only works on solaris",https://api.github.com/repos/nodejs/node/git/commits/068b733583a4f0781a8418ddf42f7912e3dd53a6,2011-01-25,only works on solaris
246,MDY6Q29tbWl0MjcxOTM3Nzk6OWU5NzZhYmFkOTg3OWI0NzMwNzVhOTllZTVjNjY4ODVhZTc0NTJlMw==,Ryan Dahl,Ryan Dahl,lint,https://api.github.com/repos/nodejs/node/git/commits/9e976abad9879b473075a99ee5c66885ae7452e3,2011-01-24,lint
246,MDY6Q29tbWl0MjcxOTM3Nzk6OWU5NzZhYmFkOTg3OWI0NzMwNzVhOTllZTVjNjY4ODVhZTc0NTJlMw==,Ryan Dahl,Ryan Dahl,lint,https://api.github.com/repos/nodejs/node/git/commits/9e976abad9879b473075a99ee5c66885ae7452e3,2011-01-24,
247,MDY6Q29tbWl0MjcxOTM3Nzk6ZDgxYWZjYjNhNmQyZWUzOGQ3MzFkZmU5N2U0MmJmZjg5MTFmY2RkZg==,Ali Farhadi,Ryan Dahl,Fixing bug in http request's end method.,https://api.github.com/repos/nodejs/node/git/commits/d81afcb3a6d2ee38d731dfe97e42bff8911fcddf,2011-01-23,Fixing bug in request's end method.
247,MDY6Q29tbWl0MjcxOTM3Nzk6ZDgxYWZjYjNhNmQyZWUzOGQ3MzFkZmU5N2U0MmJmZjg5MTFmY2RkZg==,Ali Farhadi,Ryan Dahl,Fixing bug in http request's end method.,https://api.github.com/repos/nodejs/node/git/commits/d81afcb3a6d2ee38d731dfe97e42bff8911fcddf,2011-01-23,
248,MDY6Q29tbWl0MjcxOTM3Nzk6OGQzN2Y4MGY0YjU4MmE1NWQyMjk1MjFjY2U4MzY3MGI2MDMwMGVjMA==,Mikeal Rogers,Ryan Dahl,Expose agent in http and https client.,https://api.github.com/repos/nodejs/node/git/commits/8d37f80f4b582a55d229521cce83670b60300ec0,2011-01-23,Expose agent in and client.
248,MDY6Q29tbWl0MjcxOTM3Nzk6OGQzN2Y4MGY0YjU4MmE1NWQyMjk1MjFjY2U4MzY3MGI2MDMwMGVjMA==,Mikeal Rogers,Ryan Dahl,Expose agent in http and https client.,https://api.github.com/repos/nodejs/node/git/commits/8d37f80f4b582a55d229521cce83670b60300ec0,2011-01-23,
249,MDY6Q29tbWl0MjcxOTM3Nzk6NzZhZmVhOTBjZjVmNWQwN2Y1ZmRhY2M1ZTc1OWE4NzcwMGQyNDIyYw==,Ryan Dahl,Ryan Dahl,"Fix test-http-exceptions

Agent: Each time an http req is sent to a socket, _cycle to try to dispatch
another. Problem became apparent in 4612b0 when we wait for connecting
sockets.",https://api.github.com/repos/nodejs/node/git/commits/76afea90cf5f5d07f5fdacc5e759a87700d2422c,2011-01-22,Fix test-
249,MDY6Q29tbWl0MjcxOTM3Nzk6NzZhZmVhOTBjZjVmNWQwN2Y1ZmRhY2M1ZTc1OWE4NzcwMGQyNDIyYw==,Ryan Dahl,Ryan Dahl,"Fix test-http-exceptions

Agent: Each time an http req is sent to a socket, _cycle to try to dispatch
another. Problem became apparent in 4612b0 when we wait for connecting
sockets.",https://api.github.com/repos/nodejs/node/git/commits/76afea90cf5f5d07f5fdacc5e759a87700d2422c,2011-01-22,"Agent: Each time an req is sent to a socket, _cycle to try to dispatch
another"
249,MDY6Q29tbWl0MjcxOTM3Nzk6NzZhZmVhOTBjZjVmNWQwN2Y1ZmRhY2M1ZTc1OWE4NzcwMGQyNDIyYw==,Ryan Dahl,Ryan Dahl,"Fix test-http-exceptions

Agent: Each time an http req is sent to a socket, _cycle to try to dispatch
another. Problem became apparent in 4612b0 when we wait for connecting
sockets.",https://api.github.com/repos/nodejs/node/git/commits/76afea90cf5f5d07f5fdacc5e759a87700d2422c,2011-01-22,"Problem became apparent in 4612b0 when we wait for connecting
sockets."
250,MDY6Q29tbWl0MjcxOTM3Nzk6NDYxMmIwNzYwNGJmNjU0YmM1MjFkZDA0NzNmODJiMTY2ZGViNzQxMg==,Ryan Dahl,Ryan Dahl,"Fix test-http-allow-req-after-204-res

Agent queue waits for connecting sockets.",https://api.github.com/repos/nodejs/node/git/commits/4612b07604bf654bc521dd0473f82b166deb7412,2011-01-22,Fix test-
250,MDY6Q29tbWl0MjcxOTM3Nzk6NDYxMmIwNzYwNGJmNjU0YmM1MjFkZDA0NzNmODJiMTY2ZGViNzQxMg==,Ryan Dahl,Ryan Dahl,"Fix test-http-allow-req-after-204-res

Agent queue waits for connecting sockets.",https://api.github.com/repos/nodejs/node/git/commits/4612b07604bf654bc521dd0473f82b166deb7412,2011-01-22,Agent queue waits for connecting sockets.
251,MDY6Q29tbWl0MjcxOTM3Nzk6NjhmMmFhMjcxNWRiZmRhNmE5ZWM0YzAwNzQ1OGVmNjY0MjFkZDZjMQ==,Ryan Dahl,Ryan Dahl,http: agent should cycle on close,https://api.github.com/repos/nodejs/node/git/commits/68f2aa2715dbfda6a9ec4c007458ef66421dd6c1,2011-01-21,agent should cycle on close
251,MDY6Q29tbWl0MjcxOTM3Nzk6NjhmMmFhMjcxNWRiZmRhNmE5ZWM0YzAwNzQ1OGVmNjY0MjFkZDZjMQ==,Ryan Dahl,Ryan Dahl,http: agent should cycle on close,https://api.github.com/repos/nodejs/node/git/commits/68f2aa2715dbfda6a9ec4c007458ef66421dd6c1,2011-01-21,
252,MDY6Q29tbWl0MjcxOTM3Nzk6Yjk1NzRiOTk1ZmI0ODIxOWQ4ZjRlMTY0MWY4NzMwZTEwZjJjOWYzYw==,Ryan Dahl,Ryan Dahl,Expose http.getAgent,https://api.github.com/repos/nodejs/node/git/commits/b9574b995fb48219d8f4e1641f8730e10f2c9f3c,2011-01-21,Expose http.getAgent
252,MDY6Q29tbWl0MjcxOTM3Nzk6Yjk1NzRiOTk1ZmI0ODIxOWQ4ZjRlMTY0MWY4NzMwZTEwZjJjOWYzYw==,Ryan Dahl,Ryan Dahl,Expose http.getAgent,https://api.github.com/repos/nodejs/node/git/commits/b9574b995fb48219d8f4e1641f8730e10f2c9f3c,2011-01-21,
253,MDY6Q29tbWl0MjcxOTM3Nzk6ZTY1ZjZiNGNlMTI0NmZhMzJhMzBkNDA0MWY1NjhhY2I5M2M3Y2EyNA==,Ryan Dahl,Ryan Dahl,Initial pass at https client,https://api.github.com/repos/nodejs/node/git/commits/e65f6b4ce1246fa32a30d4041f568acb93c7ca24,2011-01-21,Initial pass at client
253,MDY6Q29tbWl0MjcxOTM3Nzk6ZTY1ZjZiNGNlMTI0NmZhMzJhMzBkNDA0MWY1NjhhY2I5M2M3Y2EyNA==,Ryan Dahl,Ryan Dahl,Initial pass at https client,https://api.github.com/repos/nodejs/node/git/commits/e65f6b4ce1246fa32a30d4041f568acb93c7ca24,2011-01-21,
254,MDY6Q29tbWl0MjcxOTM3Nzk6MDg2NmVjYWYzZmNkYTQ2MDNkOGEwNzMyZTQ1N2Q3NDI0ODk1MGI2Yg==,Ryan Dahl,Ryan Dahl,...,https://api.github.com/repos/nodejs/node/git/commits/0866ecaf3fcda4603d8a0732e457d74248950b6b,2011-01-21,...
254,MDY6Q29tbWl0MjcxOTM3Nzk6MDg2NmVjYWYzZmNkYTQ2MDNkOGEwNzMyZTQ1N2Q3NDI0ODk1MGI2Yg==,Ryan Dahl,Ryan Dahl,...,https://api.github.com/repos/nodejs/node/git/commits/0866ecaf3fcda4603d8a0732e457d74248950b6b,2011-01-21,
255,MDY6Q29tbWl0MjcxOTM3Nzk6ZjQ2NTk0OTUxNjc2ZGU3YWQ4ZjQ4MWU4NWVmYjhiZjQzZjg2MTRhNQ==,Ryan Dahl,Ryan Dahl,hacky work around socket hangups on http requests,https://api.github.com/repos/nodejs/node/git/commits/f46594951676de7ad8f481e85efb8bf43f8614a5,2011-01-21,hacky work around socket hangups on requests
255,MDY6Q29tbWl0MjcxOTM3Nzk6ZjQ2NTk0OTUxNjc2ZGU3YWQ4ZjQ4MWU4NWVmYjhiZjQzZjg2MTRhNQ==,Ryan Dahl,Ryan Dahl,hacky work around socket hangups on http requests,https://api.github.com/repos/nodejs/node/git/commits/f46594951676de7ad8f481e85efb8bf43f8614a5,2011-01-21,
256,MDY6Q29tbWl0MjcxOTM3Nzk6ZDg5NDU0ZTVkNDQzZWQzOTQyMmZiZjFjNDI4MGJhM2VhZDg0MmUxOA==,Ryan Dahl,Ryan Dahl,Backport client 'upgrade' events,https://api.github.com/repos/nodejs/node/git/commits/d89454e5d443ed39422fbf1c4280ba3ead842e18,2011-01-21,Backport client 'upgrade' events
256,MDY6Q29tbWl0MjcxOTM3Nzk6ZDg5NDU0ZTVkNDQzZWQzOTQyMmZiZjFjNDI4MGJhM2VhZDg0MmUxOA==,Ryan Dahl,Ryan Dahl,Backport client 'upgrade' events,https://api.github.com/repos/nodejs/node/git/commits/d89454e5d443ed39422fbf1c4280ba3ead842e18,2011-01-21,
257,MDY6Q29tbWl0MjcxOTM3Nzk6NDEyNTgyMmJlZGZiODRiMDUyZWFkNjk5OTQ2Mjk2Y2UzY2ZhNjkxYw==,Ryan Dahl,Ryan Dahl,all errors go to req object,https://api.github.com/repos/nodejs/node/git/commits/4125822bedfb84b052ead699946296ce3cfa691c,2011-01-20,all errors go to req object
257,MDY6Q29tbWl0MjcxOTM3Nzk6NDEyNTgyMmJlZGZiODRiMDUyZWFkNjk5OTQ2Mjk2Y2UzY2ZhNjkxYw==,Ryan Dahl,Ryan Dahl,all errors go to req object,https://api.github.com/repos/nodejs/node/git/commits/4125822bedfb84b052ead699946296ce3cfa691c,2011-01-20,
258,MDY6Q29tbWl0MjcxOTM3Nzk6MTA1YzM1YjlmZDY2NzQ1ZDliOGFiYWU3N2I5MzUzODg3M2NmMTJiYQ==,Ryan Dahl,Ryan Dahl,http.Client shims,https://api.github.com/repos/nodejs/node/git/commits/105c35b9fd66745d9b8abae77b93538873cf12ba,2011-01-20,shims
258,MDY6Q29tbWl0MjcxOTM3Nzk6MTA1YzM1YjlmZDY2NzQ1ZDliOGFiYWU3N2I5MzUzODg3M2NmMTJiYQ==,Ryan Dahl,Ryan Dahl,http.Client shims,https://api.github.com/repos/nodejs/node/git/commits/105c35b9fd66745d9b8abae77b93538873cf12ba,2011-01-20,
259,MDY6Q29tbWl0MjcxOTM3Nzk6ZTU3NmQ0ZWM3OWFkOTgzODUzZDk4OTgxOWM3ODMyOGFiYTBiYjZmOQ==,Ryan Dahl,Ryan Dahl,Add parser to agent,https://api.github.com/repos/nodejs/node/git/commits/e576d4ec79ad983853d989819c78328aba0bb6f9,2011-01-20,Add parser to agent
259,MDY6Q29tbWl0MjcxOTM3Nzk6ZTU3NmQ0ZWM3OWFkOTgzODUzZDk4OTgxOWM3ODMyOGFiYTBiYjZmOQ==,Ryan Dahl,Ryan Dahl,Add parser to agent,https://api.github.com/repos/nodejs/node/git/commits/e576d4ec79ad983853d989819c78328aba0bb6f9,2011-01-20,
260,MDY6Q29tbWl0MjcxOTM3Nzk6NjBhZWE5NmY4NGM4NTA2MTViYWM3YTZlMDBlZjI4ZmFiNWFlMThhZQ==,Ryan Dahl,Ryan Dahl,first pass at http refactor for TLS,https://api.github.com/repos/nodejs/node/git/commits/60aea96f84c850615bac7a6e00ef28fab5ae18ae,2011-01-20,first pass at refactor for TLS
260,MDY6Q29tbWl0MjcxOTM3Nzk6NjBhZWE5NmY4NGM4NTA2MTViYWM3YTZlMDBlZjI4ZmFiNWFlMThhZQ==,Ryan Dahl,Ryan Dahl,first pass at http refactor for TLS,https://api.github.com/repos/nodejs/node/git/commits/60aea96f84c850615bac7a6e00ef28fab5ae18ae,2011-01-20,
261,MDY6Q29tbWl0MjcxOTM3Nzk6Mjk1NzM4Mjk5MWM2NTU5ZmEzOTdkMGY5YTc5MGVlODJmNTAyOWIzNw==,Ryan Dahl,Ryan Dahl,"Implement new stream method, destroySoon

Still missing on fs.WriteStream",https://api.github.com/repos/nodejs/node/git/commits/2957382991c6559fa397d0f9a790ee82f5029b37,2011-01-04,"Implement new stream method, destroySoon"
261,MDY6Q29tbWl0MjcxOTM3Nzk6Mjk1NzM4Mjk5MWM2NTU5ZmEzOTdkMGY5YTc5MGVlODJmNTAyOWIzNw==,Ryan Dahl,Ryan Dahl,"Implement new stream method, destroySoon

Still missing on fs.WriteStream",https://api.github.com/repos/nodejs/node/git/commits/2957382991c6559fa397d0f9a790ee82f5029b37,2011-01-04,Still missing on fs.WriteStream
262,MDY6Q29tbWl0MjcxOTM3Nzk6NzNmNGVjNTFmZGUzYmZiM2UxNmQ2ZDcwNmFhZTQyNjU2ZDA4M2MxYQ==,Ryan Dahl,Ryan Dahl,hack for ending https connections,https://api.github.com/repos/nodejs/node/git/commits/73f4ec51fde3bfb3e16d6d706aae42656d083c1a,2011-01-04,hack for ending connections
262,MDY6Q29tbWl0MjcxOTM3Nzk6NzNmNGVjNTFmZGUzYmZiM2UxNmQ2ZDcwNmFhZTQyNjU2ZDA4M2MxYQ==,Ryan Dahl,Ryan Dahl,hack for ending https connections,https://api.github.com/repos/nodejs/node/git/commits/73f4ec51fde3bfb3e16d6d706aae42656d083c1a,2011-01-04,
263,MDY6Q29tbWl0MjcxOTM3Nzk6OTRmODM2OGNmOWU1MDc3MDUwNTI1ZTMyYTI0MTg4NDAyZjA3NzA3NA==,Ryan Dahl,Ryan Dahl,First pass at new https server,https://api.github.com/repos/nodejs/node/git/commits/94f8368cf9e5077050525e32a24188402f077074,2011-01-02,First pass at new server
263,MDY6Q29tbWl0MjcxOTM3Nzk6OTRmODM2OGNmOWU1MDc3MDUwNTI1ZTMyYTI0MTg4NDAyZjA3NzA3NA==,Ryan Dahl,Ryan Dahl,First pass at new https server,https://api.github.com/repos/nodejs/node/git/commits/94f8368cf9e5077050525e32a24188402f077074,2011-01-02,
264,MDY6Q29tbWl0MjcxOTM3Nzk6ZTRkZDVjZDZmZDdiNDRmNGZjMjFhNWNmZDM5NjE1YTdhNTgzMzk1Nw==,Ryan Dahl,Ryan Dahl,NODE_DEBUG uses strings instead of bitflags,https://api.github.com/repos/nodejs/node/git/commits/e4dd5cd6fd7b44f4fc21a5cfd39615a7a5833957,2011-01-03,NODE_DEBUG uses strings instead of bitflags
264,MDY6Q29tbWl0MjcxOTM3Nzk6ZTRkZDVjZDZmZDdiNDRmNGZjMjFhNWNmZDM5NjE1YTdhNTgzMzk1Nw==,Ryan Dahl,Ryan Dahl,NODE_DEBUG uses strings instead of bitflags,https://api.github.com/repos/nodejs/node/git/commits/e4dd5cd6fd7b44f4fc21a5cfd39615a7a5833957,2011-01-03,
265,MDY6Q29tbWl0MjcxOTM3Nzk6YTAxNTliNGIyOTVmNjllNTY1M2VmOTZkODhkZTU3OTc0NmRjZmRjOA==,Ryan Dahl,Ryan Dahl,Fix global leaks,https://api.github.com/repos/nodejs/node/git/commits/a0159b4b295f69e5653ef96d88de579746dcfdc8,2010-12-04,Fix global leaks
265,MDY6Q29tbWl0MjcxOTM3Nzk6YTAxNTliNGIyOTVmNjllNTY1M2VmOTZkODhkZTU3OTc0NmRjZmRjOA==,Ryan Dahl,Ryan Dahl,Fix global leaks,https://api.github.com/repos/nodejs/node/git/commits/a0159b4b295f69e5653ef96d88de579746dcfdc8,2010-12-04,
266,MDY6Q29tbWl0MjcxOTM3Nzk6ZTIzMmY2ZTczNTY1MzFiYjZhYjUwY2RmOWM4MjM4NjUzOGFlMmM3OQ==,Ryan Dahl,Ryan Dahl,more lint,https://api.github.com/repos/nodejs/node/git/commits/e232f6e7356531bb6ab50cdf9c82386538ae2c79,2010-12-02,more lint
266,MDY6Q29tbWl0MjcxOTM3Nzk6ZTIzMmY2ZTczNTY1MzFiYjZhYjUwY2RmOWM4MjM4NjUzOGFlMmM3OQ==,Ryan Dahl,Ryan Dahl,more lint,https://api.github.com/repos/nodejs/node/git/commits/e232f6e7356531bb6ab50cdf9c82386538ae2c79,2010-12-02,
267,MDY6Q29tbWl0MjcxOTM3Nzk6NzM1YjlkNTBhM2NiMDljOWE4NzA0NWZjZTE0OTMwMzZmYzc0MjI5NQ==,Ryan Dahl,Ryan Dahl,"Simplify state transitions in http.Client

Fixes new bug shown in test-http-allow-req-after-204-res.js pointed out by
Tom Carden <tom.carden@gmail.com>.",https://api.github.com/repos/nodejs/node/git/commits/735b9d50a3cb09c9a87045fce1493036fc742295,2010-11-29,Simplify state transitions in 
267,MDY6Q29tbWl0MjcxOTM3Nzk6NzM1YjlkNTBhM2NiMDljOWE4NzA0NWZjZTE0OTMwMzZmYzc0MjI5NQ==,Ryan Dahl,Ryan Dahl,"Simplify state transitions in http.Client

Fixes new bug shown in test-http-allow-req-after-204-res.js pointed out by
Tom Carden <tom.carden@gmail.com>.",https://api.github.com/repos/nodejs/node/git/commits/735b9d50a3cb09c9a87045fce1493036fc742295,2010-11-29,"Fixes new bug shown in test-pointed out by
Tom Carden <tom.carden@gmail.com>."
268,MDY6Q29tbWl0MjcxOTM3Nzk6NjA1Nzc0N2U5ZWRhMDJkNWI0MTM4NWQ2NTU1ZjY3NzMxNGY1NzgwZA==,Ryan Dahl,Ryan Dahl,Improve HTTP debug messages,https://api.github.com/repos/nodejs/node/git/commits/6057747e9eda02d5b41385d6555f677314f5780d,2010-11-29,Improve HTTP debug messages
268,MDY6Q29tbWl0MjcxOTM3Nzk6NjA1Nzc0N2U5ZWRhMDJkNWI0MTM4NWQ2NTU1ZjY3NzMxNGY1NzgwZA==,Ryan Dahl,Ryan Dahl,Improve HTTP debug messages,https://api.github.com/repos/nodejs/node/git/commits/6057747e9eda02d5b41385d6555f677314f5780d,2010-11-29,
269,MDY6Q29tbWl0MjcxOTM3Nzk6MWRiNTlhZmI3NThmYTNhZDQ5NzMzNGNlM2Y5NDIyMjY5ZjAxOWQ5Ng==,Ryan Dahl,Ryan Dahl,style,https://api.github.com/repos/nodejs/node/git/commits/1db59afb758fa3ad497334ce3f9422269f019d96,2010-11-29,style
269,MDY6Q29tbWl0MjcxOTM3Nzk6MWRiNTlhZmI3NThmYTNhZDQ5NzMzNGNlM2Y5NDIyMjY5ZjAxOWQ5Ng==,Ryan Dahl,Ryan Dahl,style,https://api.github.com/repos/nodejs/node/git/commits/1db59afb758fa3ad497334ce3f9422269f019d96,2010-11-29,
270,MDY6Q29tbWl0MjcxOTM3Nzk6MjMyMDQ5Nzk5MjZhM2Y2OTE0NGJlMTgyNzg2YzVkMmRjZjU4YzBjMg==,Ryan Dahl,Ryan Dahl,"Revert ""Merge branch 'writev'""

This reverts commit cd9515efd99dfa6510e72342a2621bb4b291a89c, reversing
changes made to df46c8e698b9400abaabd77ec836c7cdadf9735c.

Too slow. Needs more work.",https://api.github.com/repos/nodejs/node/git/commits/23204979926a3f69144be182786c5d2dcf58c0c2,2010-11-21,"Revert ""Merge branch 'writev'"""
270,MDY6Q29tbWl0MjcxOTM3Nzk6MjMyMDQ5Nzk5MjZhM2Y2OTE0NGJlMTgyNzg2YzVkMmRjZjU4YzBjMg==,Ryan Dahl,Ryan Dahl,"Revert ""Merge branch 'writev'""

This reverts commit cd9515efd99dfa6510e72342a2621bb4b291a89c, reversing
changes made to df46c8e698b9400abaabd77ec836c7cdadf9735c.

Too slow. Needs more work.",https://api.github.com/repos/nodejs/node/git/commits/23204979926a3f69144be182786c5d2dcf58c0c2,2010-11-21,"This reverts commit cd9515efd99dfa6510e72342a2621bb4b291a89c, reversing
changes made to df46c8e698b9400abaabd77ec836c7cdadf9735c"
270,MDY6Q29tbWl0MjcxOTM3Nzk6MjMyMDQ5Nzk5MjZhM2Y2OTE0NGJlMTgyNzg2YzVkMmRjZjU4YzBjMg==,Ryan Dahl,Ryan Dahl,"Revert ""Merge branch 'writev'""

This reverts commit cd9515efd99dfa6510e72342a2621bb4b291a89c, reversing
changes made to df46c8e698b9400abaabd77ec836c7cdadf9735c.

Too slow. Needs more work.",https://api.github.com/repos/nodejs/node/git/commits/23204979926a3f69144be182786c5d2dcf58c0c2,2010-11-21,Too slow
270,MDY6Q29tbWl0MjcxOTM3Nzk6MjMyMDQ5Nzk5MjZhM2Y2OTE0NGJlMTgyNzg2YzVkMmRjZjU4YzBjMg==,Ryan Dahl,Ryan Dahl,"Revert ""Merge branch 'writev'""

This reverts commit cd9515efd99dfa6510e72342a2621bb4b291a89c, reversing
changes made to df46c8e698b9400abaabd77ec836c7cdadf9735c.

Too slow. Needs more work.",https://api.github.com/repos/nodejs/node/git/commits/23204979926a3f69144be182786c5d2dcf58c0c2,2010-11-21,Needs more work.
271,MDY6Q29tbWl0MjcxOTM3Nzk6ZTEyNTBhMzMzM2QyMmYwMDNiMzdmNjY5NzhhODU2ZTFmN2VjOTZkYg==,Ryan Dahl,Ryan Dahl,Reset _eof on socket reuse,https://api.github.com/repos/nodejs/node/git/commits/e1250a3333d22f003b37f66978a856e1f7ec96db,2010-11-12,Reset _eof on socket reuse
271,MDY6Q29tbWl0MjcxOTM3Nzk6ZTEyNTBhMzMzM2QyMmYwMDNiMzdmNjY5NzhhODU2ZTFmN2VjOTZkYg==,Ryan Dahl,Ryan Dahl,Reset _eof on socket reuse,https://api.github.com/repos/nodejs/node/git/commits/e1250a3333d22f003b37f66978a856e1f7ec96db,2010-11-12,
272,MDY6Q29tbWl0MjcxOTM3Nzk6ZGNjNTQ3ZDc5OGMxMWVkODFmNDYxNzcyNGEwMTIwZGFkNDg0ZDBjZQ==,Ryan Dahl,Ryan Dahl,Dumper net.js integration,https://api.github.com/repos/nodejs/node/git/commits/dcc547d798c11ed81f4617724a0120dad484d0ce,2010-11-05,Dumper net.js integration
272,MDY6Q29tbWl0MjcxOTM3Nzk6ZGNjNTQ3ZDc5OGMxMWVkODFmNDYxNzcyNGEwMTIwZGFkNDg0ZDBjZQ==,Ryan Dahl,Ryan Dahl,Dumper net.js integration,https://api.github.com/repos/nodejs/node/git/commits/dcc547d798c11ed81f4617724a0120dad484d0ce,2010-11-05,
273,MDY6Q29tbWl0MjcxOTM3Nzk6ZGY0NmM4ZTY5OGI5NDAwYWJhYWJkNzdlYzgzNmM3Y2RhZGY5NzM1Yw==,Ryan Dahl,Ryan Dahl,Rip out the old TLS implementation,https://api.github.com/repos/nodejs/node/git/commits/df46c8e698b9400abaabd77ec836c7cdadf9735c,2010-10-28,Rip out the old TLS implementation
273,MDY6Q29tbWl0MjcxOTM3Nzk6ZGY0NmM4ZTY5OGI5NDAwYWJhYWJkNzdlYzgzNmM3Y2RhZGY5NzM1Yw==,Ryan Dahl,Ryan Dahl,Rip out the old TLS implementation,https://api.github.com/repos/nodejs/node/git/commits/df46c8e698b9400abaabd77ec836c7cdadf9735c,2010-10-28,
274,MDY6Q29tbWl0MjcxOTM3Nzk6NzJhZWU4MjE2Y2ZlN2E4MGMxOGVhMTcxZWU4NjBhMWM5M2JhNjBkZA==,Ryan Dahl,Ryan Dahl,Fix permissions on http.js,https://api.github.com/repos/nodejs/node/git/commits/72aee8216cfe7a80c18ea171ee860a1c93ba60dd,2010-10-26,Fix permissions on http.js
274,MDY6Q29tbWl0MjcxOTM3Nzk6NzJhZWU4MjE2Y2ZlN2E4MGMxOGVhMTcxZWU4NjBhMWM5M2JhNjBkZA==,Ryan Dahl,Ryan Dahl,Fix permissions on http.js,https://api.github.com/repos/nodejs/node/git/commits/72aee8216cfe7a80c18ea171ee860a1c93ba60dd,2010-10-26,
275,MDY6Q29tbWl0MjcxOTM3Nzk6MjQ3MGQyZWU5MmIxNjJlYmNjNGVkYTY4OTU4NzY5NzE1YzNkMTdmYg==,Ryan Dahl,Ryan Dahl,"allowHalfOpen disabled by default

Users too often would forget to add

  socket.on('end', function () {
    socket.end();
  });

Which is a mistake. Therefore we default to this behavior and
only optionally let people handle the 'end' case themselves.",https://api.github.com/repos/nodejs/node/git/commits/2470d2ee92b162ebcc4eda68958769715c3d17fb,2010-10-26,allowHalfOpen disabled by default
275,MDY6Q29tbWl0MjcxOTM3Nzk6MjQ3MGQyZWU5MmIxNjJlYmNjNGVkYTY4OTU4NzY5NzE1YzNkMTdmYg==,Ryan Dahl,Ryan Dahl,"allowHalfOpen disabled by default

Users too often would forget to add

  socket.on('end', function () {
    socket.end();
  });

Which is a mistake. Therefore we default to this behavior and
only optionally let people handle the 'end' case themselves.",https://api.github.com/repos/nodejs/node/git/commits/2470d2ee92b162ebcc4eda68958769715c3d17fb,2010-10-26,"Users too often would forget to add
Which is a mistake"
275,MDY6Q29tbWl0MjcxOTM3Nzk6MjQ3MGQyZWU5MmIxNjJlYmNjNGVkYTY4OTU4NzY5NzE1YzNkMTdmYg==,Ryan Dahl,Ryan Dahl,"allowHalfOpen disabled by default

Users too often would forget to add

  socket.on('end', function () {
    socket.end();
  });

Which is a mistake. Therefore we default to this behavior and
only optionally let people handle the 'end' case themselves.",https://api.github.com/repos/nodejs/node/git/commits/2470d2ee92b162ebcc4eda68958769715c3d17fb,2010-10-26,"Therefore we default to this behavior and
only optionally let people handle the 'end' case themselves."
276,MDY6Q29tbWl0MjcxOTM3Nzk6YjE0ZWViM2MxZWMxNWQ5NGQyMGRhNGRlZWE4NTM1ODI0ODJhNDdiMA==,Mark Nottingham,Ryan Dahl,Fix expect/continue keepalive,https://api.github.com/repos/nodejs/node/git/commits/b14eeb3c1ec15d94d20da4deea853582482a47b0,2010-10-18,Fix expect/continue keepalive
276,MDY6Q29tbWl0MjcxOTM3Nzk6YjE0ZWViM2MxZWMxNWQ5NGQyMGRhNGRlZWE4NTM1ODI0ODJhNDdiMA==,Mark Nottingham,Ryan Dahl,Fix expect/continue keepalive,https://api.github.com/repos/nodejs/node/git/commits/b14eeb3c1ec15d94d20da4deea853582482a47b0,2010-10-18,
277,MDY6Q29tbWl0MjcxOTM3Nzk6ODEzOWJiMjRjMWY3MmNkZWE0MTQ5MmJmM2JmMzk1YTY2ZTA0MTA0Zg==,Ryan Dahl,Ryan Dahl,"Add destroy methods to HTTP messages

needs tests (particularly for pipeline situations)",https://api.github.com/repos/nodejs/node/git/commits/8139bb24c1f72cdea41492bf3bf395a66e04104f,2010-10-11,Add destroy methods to HTTP messages
277,MDY6Q29tbWl0MjcxOTM3Nzk6ODEzOWJiMjRjMWY3MmNkZWE0MTQ5MmJmM2JmMzk1YTY2ZTA0MTA0Zg==,Ryan Dahl,Ryan Dahl,"Add destroy methods to HTTP messages

needs tests (particularly for pipeline situations)",https://api.github.com/repos/nodejs/node/git/commits/8139bb24c1f72cdea41492bf3bf395a66e04104f,2010-10-11,needs tests (particularly for pipeline situations)
278,MDY6Q29tbWl0MjcxOTM3Nzk6MGUxYTU4MTkxNjAxYTE3NzA4Mzg2Mjc3NmI0NmZjNGY0MzU2OWMyMw==,Micheil Smith,Ryan Dahl,Removed deprecated methods from lib/http.js,https://api.github.com/repos/nodejs/node/git/commits/0e1a58191601a177083862776b46fc4f43569c23,2010-10-11,Removed deprecated methods from lib/http.js
278,MDY6Q29tbWl0MjcxOTM3Nzk6MGUxYTU4MTkxNjAxYTE3NzA4Mzg2Mjc3NmI0NmZjNGY0MzU2OWMyMw==,Micheil Smith,Ryan Dahl,Removed deprecated methods from lib/http.js,https://api.github.com/repos/nodejs/node/git/commits/0e1a58191601a177083862776b46fc4f43569c23,2010-10-11,
279,MDY6Q29tbWl0MjcxOTM3Nzk6N2UyNGEwNWNiYTIzNzNjMGFiMWYwNjI5MzY2YjY2NGE1OTNmMzU3Zg==,Ryan Dahl,Ryan Dahl,Fix test-http-buffer-sanity,https://api.github.com/repos/nodejs/node/git/commits/7e24a05cba2373c0ab1f0629366b664a593f357f,2010-10-11,Fix test-http-buffer-sanity
279,MDY6Q29tbWl0MjcxOTM3Nzk6N2UyNGEwNWNiYTIzNzNjMGFiMWYwNjI5MzY2YjY2NGE1OTNmMzU3Zg==,Ryan Dahl,Ryan Dahl,Fix test-http-buffer-sanity,https://api.github.com/repos/nodejs/node/git/commits/7e24a05cba2373c0ab1f0629366b664a593f357f,2010-10-11,
280,MDY6Q29tbWl0MjcxOTM3Nzk6ZTM4ZWIwYzVhNGQ0ZTg0OTdmNTgxNWJlODE5OTRkZGIwMWZiY2ViNw==,Micheil Smith,Ryan Dahl,"Soft migration of sys -> util, Removal of deprecated utils module.",https://api.github.com/repos/nodejs/node/git/commits/e38eb0c5a4d4e8497f5815be81994ddb01fbceb7,2010-10-11,"Soft migration of sys -> util, Removal of deprecated utils module."
280,MDY6Q29tbWl0MjcxOTM3Nzk6ZTM4ZWIwYzVhNGQ0ZTg0OTdmNTgxNWJlODE5OTRkZGIwMWZiY2ViNw==,Micheil Smith,Ryan Dahl,"Soft migration of sys -> util, Removal of deprecated utils module.",https://api.github.com/repos/nodejs/node/git/commits/e38eb0c5a4d4e8497f5815be81994ddb01fbceb7,2010-10-11,
281,MDY6Q29tbWl0MjcxOTM3Nzk6Mjk0NGUwM2EwMzAwMjJlMTQyMDYzNGI4N2UzYTQ0ZTc3NTE4NDQyNQ==,Ryan Dahl,Ryan Dahl,Closer to a working pipe,https://api.github.com/repos/nodejs/node/git/commits/2944e03a030022e1420634b87e3a44e775184425,2010-10-11,Closer to a working pipe
281,MDY6Q29tbWl0MjcxOTM3Nzk6Mjk0NGUwM2EwMzAwMjJlMTQyMDYzNGI4N2UzYTQ0ZTc3NTE4NDQyNQ==,Ryan Dahl,Ryan Dahl,Closer to a working pipe,https://api.github.com/repos/nodejs/node/git/commits/2944e03a030022e1420634b87e3a44e775184425,2010-10-11,
282,MDY6Q29tbWl0MjcxOTM3Nzk6MWFmNTJkMjhjYTNjYzg0YTVkZjhkZWU3MjM2NDgxYmUwNzAwZWYwNQ==,Micheil Smith,Ryan Dahl,Changing http.js to use the same stream.Stream creation as net.js,https://api.github.com/repos/nodejs/node/git/commits/1af52d28ca3cc84a5df8dee7236481be0700ef05,2010-10-11,Changing to use the same stream.Stream creation as net.js
282,MDY6Q29tbWl0MjcxOTM3Nzk6MWFmNTJkMjhjYTNjYzg0YTVkZjhkZWU3MjM2NDgxYmUwNzAwZWYwNQ==,Micheil Smith,Ryan Dahl,Changing http.js to use the same stream.Stream creation as net.js,https://api.github.com/repos/nodejs/node/git/commits/1af52d28ca3cc84a5df8dee7236481be0700ef05,2010-10-11,
283,MDY6Q29tbWl0MjcxOTM3Nzk6YmM2OTU0NzViOTA4Y2NmMzBlNTAxNjY4OTMyOGRmMzdiNjc4Yjg3MA==,Ryan Dahl,Ryan Dahl,Add Stream base class with stream.pipe,https://api.github.com/repos/nodejs/node/git/commits/bc695475b908ccf30e5016689328df37b678b870,2010-10-11,Add Stream base class with stream.pipe
283,MDY6Q29tbWl0MjcxOTM3Nzk6YmM2OTU0NzViOTA4Y2NmMzBlNTAxNjY4OTMyOGRmMzdiNjc4Yjg3MA==,Ryan Dahl,Ryan Dahl,Add Stream base class with stream.pipe,https://api.github.com/repos/nodejs/node/git/commits/bc695475b908ccf30e5016689328df37b678b870,2010-10-11,
284,MDY6Q29tbWl0MjcxOTM3Nzk6MDAwM2M3MDFiY2IxZDkxNjA3M2Y4ODkzZWU0Y2JlNjk4NTE1MTU4ZA==,Ryan Dahl,Ryan Dahl,expose parsers freelist,https://api.github.com/repos/nodejs/node/git/commits/0003c701bcb1d916073f8893ee4cbe698515158d,2010-10-07,expose parsers freelist
284,MDY6Q29tbWl0MjcxOTM3Nzk6MDAwM2M3MDFiY2IxZDkxNjA3M2Y4ODkzZWU0Y2JlNjk4NTE1MTU4ZA==,Ryan Dahl,Ryan Dahl,expose parsers freelist,https://api.github.com/repos/nodejs/node/git/commits/0003c701bcb1d916073f8893ee4cbe698515158d,2010-10-07,
285,MDY6Q29tbWl0MjcxOTM3Nzk6M2Q0ZTRkODkwOTlmMWMwOGU1ODYwNjA5NjFlZDg4NGU1ZjUyMzAxYQ==,Joshaven Potter,Ryan Dahl,syntax fixes to pass jslint,https://api.github.com/repos/nodejs/node/git/commits/3d4e4d89099f1c08e586060961ed884e5f52301a,2010-10-07,syntax fixes to pass jslint
285,MDY6Q29tbWl0MjcxOTM3Nzk6M2Q0ZTRkODkwOTlmMWMwOGU1ODYwNjA5NjFlZDg4NGU1ZjUyMzAxYQ==,Joshaven Potter,Ryan Dahl,syntax fixes to pass jslint,https://api.github.com/repos/nodejs/node/git/commits/3d4e4d89099f1c08e586060961ed884e5f52301a,2010-10-07,
286,MDY6Q29tbWl0MjcxOTM3Nzk6MzhmODY2NWYzYThjMDE5Y2VlZTk0MzdjYTE0MjYzNWJiNWJhMTNhMw==,Ryan Dahl,Ryan Dahl,"lib/http.js - nested loop stepping on variables of outer loop

Fixes #318.",https://api.github.com/repos/nodejs/node/git/commits/38f8665f3a8c019ceee9437ca142635bb5ba13a3,2010-10-04,lib/- nested loop stepping on variables of outer loop
286,MDY6Q29tbWl0MjcxOTM3Nzk6MzhmODY2NWYzYThjMDE5Y2VlZTk0MzdjYTE0MjYzNWJiNWJhMTNhMw==,Ryan Dahl,Ryan Dahl,"lib/http.js - nested loop stepping on variables of outer loop

Fixes #318.",https://api.github.com/repos/nodejs/node/git/commits/38f8665f3a8c019ceee9437ca142635bb5ba13a3,2010-10-04,Fixes #318.
287,MDY6Q29tbWl0MjcxOTM3Nzk6ZDU5NTEyZjZmNDA2Y2VhZTQ5NDBmZDljODNlODI1NWYwYzAzMTczYg==,Mark Nottingham,Ryan Dahl,"Add support for handling Expect: 100-continue

HTTP/1.1 requests, either with an event (check_continue) or automatically, if no event handler is present.

Add client-side expect/continue support, tests.

Expound upon client requirements for expect/continue.",https://api.github.com/repos/nodejs/node/git/commits/d59512f6f406ceae4940fd9c83e8255f0c03173b,2010-09-10,Add support for handling Expect: 100-continue
287,MDY6Q29tbWl0MjcxOTM3Nzk6ZDU5NTEyZjZmNDA2Y2VhZTQ5NDBmZDljODNlODI1NWYwYzAzMTczYg==,Mark Nottingham,Ryan Dahl,"Add support for handling Expect: 100-continue

HTTP/1.1 requests, either with an event (check_continue) or automatically, if no event handler is present.

Add client-side expect/continue support, tests.

Expound upon client requirements for expect/continue.",https://api.github.com/repos/nodejs/node/git/commits/d59512f6f406ceae4940fd9c83e8255f0c03173b,2010-09-10,"HTTP/1.1 requests, either with an event (check_continue) or automatically, if no event handler is present"
287,MDY6Q29tbWl0MjcxOTM3Nzk6ZDU5NTEyZjZmNDA2Y2VhZTQ5NDBmZDljODNlODI1NWYwYzAzMTczYg==,Mark Nottingham,Ryan Dahl,"Add support for handling Expect: 100-continue

HTTP/1.1 requests, either with an event (check_continue) or automatically, if no event handler is present.

Add client-side expect/continue support, tests.

Expound upon client requirements for expect/continue.",https://api.github.com/repos/nodejs/node/git/commits/d59512f6f406ceae4940fd9c83e8255f0c03173b,2010-09-10,"Add client-side expect/continue support, tests"
287,MDY6Q29tbWl0MjcxOTM3Nzk6ZDU5NTEyZjZmNDA2Y2VhZTQ5NDBmZDljODNlODI1NWYwYzAzMTczYg==,Mark Nottingham,Ryan Dahl,"Add support for handling Expect: 100-continue

HTTP/1.1 requests, either with an event (check_continue) or automatically, if no event handler is present.

Add client-side expect/continue support, tests.

Expound upon client requirements for expect/continue.",https://api.github.com/repos/nodejs/node/git/commits/d59512f6f406ceae4940fd9c83e8255f0c03173b,2010-09-10,Expound upon client requirements for expect/continue.
288,MDY6Q29tbWl0MjcxOTM3Nzk6MjY1Y2RhOTdkN2U4NjI5MmE3YWQ1OGNhMDliOTdjOTUyN2Q3ODU0Mg==,Ryan Dahl,Ryan Dahl,"Fix zero length buffer bug for http res.end()

Reported by Kadir Pekel <kadirpekel@gmail.com>",https://api.github.com/repos/nodejs/node/git/commits/265cda97d7e86292a7ad58ca09b97c9527d78542,2010-10-01,Fix zero length buffer bug for res.end()
288,MDY6Q29tbWl0MjcxOTM3Nzk6MjY1Y2RhOTdkN2U4NjI5MmE3YWQ1OGNhMDliOTdjOTUyN2Q3ODU0Mg==,Ryan Dahl,Ryan Dahl,"Fix zero length buffer bug for http res.end()

Reported by Kadir Pekel <kadirpekel@gmail.com>",https://api.github.com/repos/nodejs/node/git/commits/265cda97d7e86292a7ad58ca09b97c9527d78542,2010-10-01,Reported by Kadir Pekel <kadirpekel@gmail.com>
289,MDY6Q29tbWl0MjcxOTM3Nzk6MWIyNGZjNjY3ODAyMjMzYjhlMWMzNGM0MTg5YWI4MmJhNWRkMzU3YQ==,Mark Nottingham,Ryan Dahl,Consume HTTP trailing headers,https://api.github.com/repos/nodejs/node/git/commits/1b24fc667802233b8e1c34c4189ab82ba5dd357a,2010-09-29,Consume HTTP trailing headers
289,MDY6Q29tbWl0MjcxOTM3Nzk6MWIyNGZjNjY3ODAyMjMzYjhlMWMzNGM0MTg5YWI4MmJhNWRkMzU3YQ==,Mark Nottingham,Ryan Dahl,Consume HTTP trailing headers,https://api.github.com/repos/nodejs/node/git/commits/1b24fc667802233b8e1c34c4189ab82ba5dd357a,2010-09-29,
290,MDY6Q29tbWl0MjcxOTM3Nzk6YzNiYzQ4ZDQ1MWM3N2ZmNjdhNjUzMzhmZWZiYTRhNmJjOTQ3OGQ3ZA==,Ryan Dahl,Ryan Dahl,Move the http client's initParser() into prototype,https://api.github.com/repos/nodejs/node/git/commits/c3bc48d451c77ff67a65338fefba4a6bc9478d7d,2010-09-30,Move the client's initParser() into prototype
290,MDY6Q29tbWl0MjcxOTM3Nzk6YzNiYzQ4ZDQ1MWM3N2ZmNjdhNjUzMzhmZWZiYTRhNmJjOTQ3OGQ3ZA==,Ryan Dahl,Ryan Dahl,Move the http client's initParser() into prototype,https://api.github.com/repos/nodejs/node/git/commits/c3bc48d451c77ff67a65338fefba4a6bc9478d7d,2010-09-30,
291,MDY6Q29tbWl0MjcxOTM3Nzk6MDY5ZDk3M2Q3NGVmZGY4NDkyNTEyYzU4YTcxZmQ4ZjEzZThjNjY5Ng==,Ryan Dahl,Ryan Dahl,Remove require('buffer') in built-in libraries.,https://api.github.com/repos/nodejs/node/git/commits/069d973d74efdf8492512c58a71fd8f13e8c6696,2010-09-28,Remove require('buffer') in built-in libraries.
291,MDY6Q29tbWl0MjcxOTM3Nzk6MDY5ZDk3M2Q3NGVmZGY4NDkyNTEyYzU4YTcxZmQ4ZjEzZThjNjY5Ng==,Ryan Dahl,Ryan Dahl,Remove require('buffer') in built-in libraries.,https://api.github.com/repos/nodejs/node/git/commits/069d973d74efdf8492512c58a71fd8f13e8c6696,2010-09-28,
292,MDY6Q29tbWl0MjcxOTM3Nzk6NTUzNWFhM2Q1MWM2YWYyMzgwNTQwYmI1ZjA5MDgzNTdiNzZlYmQxMw==,Fedor Indutny,Ryan Dahl,"Fixed 'upgrade' event for httpclient

onend and ondata was cleaning on parser end",https://api.github.com/repos/nodejs/node/git/commits/5535aa3d51c6af2380540bb5f0908357b76ebd13,2010-09-22,Fixed 'upgrade' event for 
292,MDY6Q29tbWl0MjcxOTM3Nzk6NTUzNWFhM2Q1MWM2YWYyMzgwNTQwYmI1ZjA5MDgzNTdiNzZlYmQxMw==,Fedor Indutny,Ryan Dahl,"Fixed 'upgrade' event for httpclient

onend and ondata was cleaning on parser end",https://api.github.com/repos/nodejs/node/git/commits/5535aa3d51c6af2380540bb5f0908357b76ebd13,2010-09-22,onend and ondata was cleaning on parser end
293,MDY6Q29tbWl0MjcxOTM3Nzk6Y2MxZDYxY2JiM2E5YjJiNzVlZGFjNjYyOTVmMmJjNTMxNGJlNTA0Mg==,Mikeal Rogers,Ryan Dahl,"HTTP: close connection on connection:close header.

rnewson found a good bug in keep-alive. we were only using the request
headers we send to enable/disable keep-alive but when the server sends
Connection: close we need to close down the connection regardless.

I wrote up a patch the Robert verified makes all his test client code work
now and I also added a new unittest for it.",https://api.github.com/repos/nodejs/node/git/commits/cc1d61cbb3a9b2b75edac66295f2bc5314be5042,2010-09-22,HTTP: close connection on connection:close header.
293,MDY6Q29tbWl0MjcxOTM3Nzk6Y2MxZDYxY2JiM2E5YjJiNzVlZGFjNjYyOTVmMmJjNTMxNGJlNTA0Mg==,Mikeal Rogers,Ryan Dahl,"HTTP: close connection on connection:close header.

rnewson found a good bug in keep-alive. we were only using the request
headers we send to enable/disable keep-alive but when the server sends
Connection: close we need to close down the connection regardless.

I wrote up a patch the Robert verified makes all his test client code work
now and I also added a new unittest for it.",https://api.github.com/repos/nodejs/node/git/commits/cc1d61cbb3a9b2b75edac66295f2bc5314be5042,2010-09-22,rnewson found a good bug in keep-alive
293,MDY6Q29tbWl0MjcxOTM3Nzk6Y2MxZDYxY2JiM2E5YjJiNzVlZGFjNjYyOTVmMmJjNTMxNGJlNTA0Mg==,Mikeal Rogers,Ryan Dahl,"HTTP: close connection on connection:close header.

rnewson found a good bug in keep-alive. we were only using the request
headers we send to enable/disable keep-alive but when the server sends
Connection: close we need to close down the connection regardless.

I wrote up a patch the Robert verified makes all his test client code work
now and I also added a new unittest for it.",https://api.github.com/repos/nodejs/node/git/commits/cc1d61cbb3a9b2b75edac66295f2bc5314be5042,2010-09-22,"we were only using the request
headers we send to enable/disable keep-alive but when the server sends
Connection: close we need to close down the connection regardless"
293,MDY6Q29tbWl0MjcxOTM3Nzk6Y2MxZDYxY2JiM2E5YjJiNzVlZGFjNjYyOTVmMmJjNTMxNGJlNTA0Mg==,Mikeal Rogers,Ryan Dahl,"HTTP: close connection on connection:close header.

rnewson found a good bug in keep-alive. we were only using the request
headers we send to enable/disable keep-alive but when the server sends
Connection: close we need to close down the connection regardless.

I wrote up a patch the Robert verified makes all his test client code work
now and I also added a new unittest for it.",https://api.github.com/repos/nodejs/node/git/commits/cc1d61cbb3a9b2b75edac66295f2bc5314be5042,2010-09-22,"I wrote up a patch the Robert verified makes all his test client code work
now and I also added a new unittest for it."
294,MDY6Q29tbWl0MjcxOTM3Nzk6ZGI3M2M3MTI4MDk2NmIwNTg3YThkMTY2NzdiODliZTdmY2ZkMWMyZA==,Ryan Dahl,Ryan Dahl,"Pass correct message in HTTP client upgrade

Simplify and correct test.

Fix by Fedor Indutny.",https://api.github.com/repos/nodejs/node/git/commits/db73c71280966b0587a8d16677b89be7fcfd1c2d,2010-09-19,Pass correct message in HTTP client upgrade
294,MDY6Q29tbWl0MjcxOTM3Nzk6ZGI3M2M3MTI4MDk2NmIwNTg3YThkMTY2NzdiODliZTdmY2ZkMWMyZA==,Ryan Dahl,Ryan Dahl,"Pass correct message in HTTP client upgrade

Simplify and correct test.

Fix by Fedor Indutny.",https://api.github.com/repos/nodejs/node/git/commits/db73c71280966b0587a8d16677b89be7fcfd1c2d,2010-09-19,Simplify and correct test
294,MDY6Q29tbWl0MjcxOTM3Nzk6ZGI3M2M3MTI4MDk2NmIwNTg3YThkMTY2NzdiODliZTdmY2ZkMWMyZA==,Ryan Dahl,Ryan Dahl,"Pass correct message in HTTP client upgrade

Simplify and correct test.

Fix by Fedor Indutny.",https://api.github.com/repos/nodejs/node/git/commits/db73c71280966b0587a8d16677b89be7fcfd1c2d,2010-09-19,Fix by Fedor Indutny.
295,MDY6Q29tbWl0MjcxOTM3Nzk6YTYzZmQwZmU1NjAwNTU0MjhiYzJlZGI4ZWU3YWYyZmZlNjFjZDdiZA==,Ryan Dahl,Ryan Dahl,Remove deprecation warnings in http module,https://api.github.com/repos/nodejs/node/git/commits/a63fd0fe560055428bc2edb8ee7af2ffe61cd7bd,2010-09-16,Remove deprecation warnings in module
295,MDY6Q29tbWl0MjcxOTM3Nzk6YTYzZmQwZmU1NjAwNTU0MjhiYzJlZGI4ZWU3YWYyZmZlNjFjZDdiZA==,Ryan Dahl,Ryan Dahl,Remove deprecation warnings in http module,https://api.github.com/repos/nodejs/node/git/commits/a63fd0fe560055428bc2edb8ee7af2ffe61cd7bd,2010-09-16,
296,MDY6Q29tbWl0MjcxOTM3Nzk6NjU2MGFiOTA3M2Y1YjIzYzQ2N2RkMDY2MmM0Y2QyMzY2ODU1NjRlZA==,Sam Stephenson,Ryan Dahl,Send multiple header lines in ServerResponse#writeHead when header values are arrays,https://api.github.com/repos/nodejs/node/git/commits/6560ab9073f5b23c467dd0662c4cd236685564ed,2010-09-15,Send multiple header lines in ServerResponse#writeHead when header values are arrays
296,MDY6Q29tbWl0MjcxOTM3Nzk6NjU2MGFiOTA3M2Y1YjIzYzQ2N2RkMDY2MmM0Y2QyMzY2ODU1NjRlZA==,Sam Stephenson,Ryan Dahl,Send multiple header lines in ServerResponse#writeHead when header values are arrays,https://api.github.com/repos/nodejs/node/git/commits/6560ab9073f5b23c467dd0662c4cd236685564ed,2010-09-15,
297,MDY6Q29tbWl0MjcxOTM3Nzk6NGZlMzAwN2ExYWU0YzM1ZTE4ZDI5N2FmMzE1MWViNTFkMDQ1ODg1OQ==,Mark Nottingham,Ryan Dahl,Support for outgoing HTTP trailing headers,https://api.github.com/repos/nodejs/node/git/commits/4fe3007a1ae4c35e18d297af3151eb51d0458859,2010-09-09,Support for outgoing HTTP trailing headers
297,MDY6Q29tbWl0MjcxOTM3Nzk6NGZlMzAwN2ExYWU0YzM1ZTE4ZDI5N2FmMzE1MWViNTFkMDQ1ODg1OQ==,Mark Nottingham,Ryan Dahl,Support for outgoing HTTP trailing headers,https://api.github.com/repos/nodejs/node/git/commits/4fe3007a1ae4c35e18d297af3151eb51d0458859,2010-09-09,
298,MDY6Q29tbWl0MjcxOTM3Nzk6NDRhMjg3OTg3ZTVlYjc5MWRjMTA5MjAwMmEzNWY3MTJkMzQ1MWI5NQ==,Ryan Dahl,Ryan Dahl,Safe constructors: http.Server and http.Client,https://api.github.com/repos/nodejs/node/git/commits/44a287987e5eb791dc1092002a35f712d3451b95,2010-08-27,Safe constructors: and http.Client
298,MDY6Q29tbWl0MjcxOTM3Nzk6NDRhMjg3OTg3ZTVlYjc5MWRjMTA5MjAwMmEzNWY3MTJkMzQ1MWI5NQ==,Ryan Dahl,Ryan Dahl,Safe constructors: http.Server and http.Client,https://api.github.com/repos/nodejs/node/git/commits/44a287987e5eb791dc1092002a35f712d3451b95,2010-08-27,
299,MDY6Q29tbWl0MjcxOTM3Nzk6Mjk4MmU3NWEwYjk4YTBjNjcwN2RiMmYwZjZlN2VkNzQwYjc4YTZiZQ==,Ryan Dahl,Ryan Dahl,set-cookies header is an array of values. always,https://api.github.com/repos/nodejs/node/git/commits/2982e75a0b98a0c6707db2f0f6e7ed740b78a6be,2010-08-21,set-cookies header is an array of values. always
299,MDY6Q29tbWl0MjcxOTM3Nzk6Mjk4MmU3NWEwYjk4YTBjNjcwN2RiMmYwZjZlN2VkNzQwYjc4YTZiZQ==,Ryan Dahl,Ryan Dahl,set-cookies header is an array of values. always,https://api.github.com/repos/nodejs/node/git/commits/2982e75a0b98a0c6707db2f0f6e7ed740b78a6be,2010-08-21,
300,MDY6Q29tbWl0MjcxOTM3Nzk6OWFjZDc2ZWQ2ZTAyMGZhNTQwZjY0ZWFiZjRiZGIzMzUxMzc5NTkyNA==,Ryan Dahl,Ryan Dahl,Don't throw on HEAD requests,https://api.github.com/repos/nodejs/node/git/commits/9acd76ed6e020fa540f64eabf4bdb33513795924,2010-08-12,Don't throw on HEAD requests
300,MDY6Q29tbWl0MjcxOTM3Nzk6OWFjZDc2ZWQ2ZTAyMGZhNTQwZjY0ZWFiZjRiZGIzMzUxMzc5NTkyNA==,Ryan Dahl,Ryan Dahl,Don't throw on HEAD requests,https://api.github.com/repos/nodejs/node/git/commits/9acd76ed6e020fa540f64eabf4bdb33513795924,2010-08-12,
301,MDY6Q29tbWl0MjcxOTM3Nzk6MWM1ZDVlMGI3MmFlZmU2Y2E2YjM4MGQxYjBhOGM5MjdlMmUzNjJlOA==,Ryan Dahl,Ryan Dahl,uppercase request methods,https://api.github.com/repos/nodejs/node/git/commits/1c5d5e0b72aefe6ca6b380d1b0a8c927e2e362e8,2010-08-10,uppercase request methods
301,MDY6Q29tbWl0MjcxOTM3Nzk6MWM1ZDVlMGI3MmFlZmU2Y2E2YjM4MGQxYjBhOGM5MjdlMmUzNjJlOA==,Ryan Dahl,Ryan Dahl,uppercase request methods,https://api.github.com/repos/nodejs/node/git/commits/1c5d5e0b72aefe6ca6b380d1b0a8c927e2e362e8,2010-08-10,
302,MDY6Q29tbWl0MjcxOTM3Nzk6NGIxOWJkMjg5NjcxMDFiN2FmZWQzODE5Y2Y1OTVkNGYwNGExYjExZQ==,Ben Noordhuis,Ryan Dahl,Client.onend: Anticipate that the HTTP parser object is uninitialized when the client setup failed.,https://api.github.com/repos/nodejs/node/git/commits/4b19bd28967101b7afed3819cf595d4f04a1b11e,2010-08-02,Client.onend: Anticipate that the HTTP parser object is uninitialized when the client setup failed.
302,MDY6Q29tbWl0MjcxOTM3Nzk6NGIxOWJkMjg5NjcxMDFiN2FmZWQzODE5Y2Y1OTVkNGYwNGExYjExZQ==,Ben Noordhuis,Ryan Dahl,Client.onend: Anticipate that the HTTP parser object is uninitialized when the client setup failed.,https://api.github.com/repos/nodejs/node/git/commits/4b19bd28967101b7afed3819cf595d4f04a1b11e,2010-08-02,
303,MDY6Q29tbWl0MjcxOTM3Nzk6MzIxNDExNmJlNmJkMDg4YTAyZDA0NDdmNTdiMGJhMTUwMzhhZGNlMA==,Mikeal Rogers,Ryan Dahl,"Implement keep-alive for http.Client

Send the 'Connection: keep-alive' header in your request to enable.",https://api.github.com/repos/nodejs/node/git/commits/3214116be6bd088a02d0447f57b0ba15038adce0,2010-08-02,Implement keep-alive for 
303,MDY6Q29tbWl0MjcxOTM3Nzk6MzIxNDExNmJlNmJkMDg4YTAyZDA0NDdmNTdiMGJhMTUwMzhhZGNlMA==,Mikeal Rogers,Ryan Dahl,"Implement keep-alive for http.Client

Send the 'Connection: keep-alive' header in your request to enable.",https://api.github.com/repos/nodejs/node/git/commits/3214116be6bd088a02d0447f57b0ba15038adce0,2010-08-02,Send the 'Connection: keep-alive' header in your request to enable.
304,MDY6Q29tbWl0MjcxOTM3Nzk6MDI3MjlkNGFmN2IxN2VhNGM3MjcyYTBkMGQ5OWY2Zjc0MThlMzIzNw==,Ryan Dahl,Ryan Dahl,instanceof Buffer to Buffer.isBuffer(),https://api.github.com/repos/nodejs/node/git/commits/02729d4af7b17ea4c7272a0d0d99f6f7418e3237,2010-07-15,instanceof Buffer to Buffer.isBuffer()
304,MDY6Q29tbWl0MjcxOTM3Nzk6MDI3MjlkNGFmN2IxN2VhNGM3MjcyYTBkMGQ5OWY2Zjc0MThlMzIzNw==,Ryan Dahl,Ryan Dahl,instanceof Buffer to Buffer.isBuffer(),https://api.github.com/repos/nodejs/node/git/commits/02729d4af7b17ea4c7272a0d0d99f6f7418e3237,2010-07-15,
305,MDY6Q29tbWl0MjcxOTM3Nzk6NmE1N2E0MjEwOTUwM2I1MzI3YzRmZmNhMjBmZTQwNDgxMDNjM2I4MA==,Ryan Dahl,Ryan Dahl,Use Array.isArray instead of instanceof,https://api.github.com/repos/nodejs/node/git/commits/6a57a42109503b5327c4ffca20fe4048103c3b80,2010-07-14,Use Array.isArray instead of instanceof
305,MDY6Q29tbWl0MjcxOTM3Nzk6NmE1N2E0MjEwOTUwM2I1MzI3YzRmZmNhMjBmZTQwNDgxMDNjM2I4MA==,Ryan Dahl,Ryan Dahl,Use Array.isArray instead of instanceof,https://api.github.com/repos/nodejs/node/git/commits/6a57a42109503b5327c4ffca20fe4048103c3b80,2010-07-14,
306,MDY6Q29tbWl0MjcxOTM3Nzk6NzBhOGZiMzc2M2M5MjMzN2JiYzZhNjEzOGRkMGMzMjAxMzRiODQ3Yw==,Dmitriy Shalashov,Ryan Dahl,Fix headers with empty value.,https://api.github.com/repos/nodejs/node/git/commits/70a8fb3763c92337bbc6a6138dd0c320134b847c,2010-07-07,Fix headers with empty value.
306,MDY6Q29tbWl0MjcxOTM3Nzk6NzBhOGZiMzc2M2M5MjMzN2JiYzZhNjEzOGRkMGMzMjAxMzRiODQ3Yw==,Dmitriy Shalashov,Ryan Dahl,Fix headers with empty value.,https://api.github.com/repos/nodejs/node/git/commits/70a8fb3763c92337bbc6a6138dd0c320134b847c,2010-07-07,
307,MDY6Q29tbWl0MjcxOTM3Nzk6NTFiZDFiNDQ4M2Y2MGQ4NWVlMTkyNzRhYWI5ODUwNWEwYjVjOTEwNQ==,Peter Griess,Ryan Dahl,"Only concatenate some incoming HTTP headers.

- Concatenate 'accept', 'accept-charset', 'accept-encoding',
  'accept-language', 'connection', 'cookie', and 'x-*' headers.
- For all others, drop duplicates.",https://api.github.com/repos/nodejs/node/git/commits/51bd1b4483f60d85ee19274aab98505a0b5c9105,2010-06-21,Only concatenate some incoming HTTP headers.
307,MDY6Q29tbWl0MjcxOTM3Nzk6NTFiZDFiNDQ4M2Y2MGQ4NWVlMTkyNzRhYWI5ODUwNWEwYjVjOTEwNQ==,Peter Griess,Ryan Dahl,"Only concatenate some incoming HTTP headers.

- Concatenate 'accept', 'accept-charset', 'accept-encoding',
  'accept-language', 'connection', 'cookie', and 'x-*' headers.
- For all others, drop duplicates.",https://api.github.com/repos/nodejs/node/git/commits/51bd1b4483f60d85ee19274aab98505a0b5c9105,2010-06-21,"- Concatenate 'accept', 'accept-charset', 'accept-encoding',
  'accept-language', 'connection', 'cookie', and 'x-*' headers"
307,MDY6Q29tbWl0MjcxOTM3Nzk6NTFiZDFiNDQ4M2Y2MGQ4NWVlMTkyNzRhYWI5ODUwNWEwYjVjOTEwNQ==,Peter Griess,Ryan Dahl,"Only concatenate some incoming HTTP headers.

- Concatenate 'accept', 'accept-charset', 'accept-encoding',
  'accept-language', 'connection', 'cookie', and 'x-*' headers.
- For all others, drop duplicates.",https://api.github.com/repos/nodejs/node/git/commits/51bd1b4483f60d85ee19274aab98505a0b5c9105,2010-06-21,"- For all others, drop duplicates."
308,MDY6Q29tbWl0MjcxOTM3Nzk6MTg3ZjE5MTU1OGVmNDU1NjI4NjVlMDcxZmRjZDExZTFkYmVjNzlkZg==,Peter Griess,Ryan Dahl,"Support 'upgrade' event in HTTP client.

- Add a unit test for client HTTP upgrade.
- Move around unit tests for server HTTP upgrade.",https://api.github.com/repos/nodejs/node/git/commits/187f191558ef45562865e071fdcd11e1dbec79df,2010-06-15,Support 'upgrade' event in HTTP client.
308,MDY6Q29tbWl0MjcxOTM3Nzk6MTg3ZjE5MTU1OGVmNDU1NjI4NjVlMDcxZmRjZDExZTFkYmVjNzlkZg==,Peter Griess,Ryan Dahl,"Support 'upgrade' event in HTTP client.

- Add a unit test for client HTTP upgrade.
- Move around unit tests for server HTTP upgrade.",https://api.github.com/repos/nodejs/node/git/commits/187f191558ef45562865e071fdcd11e1dbec79df,2010-06-15,- Add a unit test for client HTTP upgrade
308,MDY6Q29tbWl0MjcxOTM3Nzk6MTg3ZjE5MTU1OGVmNDU1NjI4NjVlMDcxZmRjZDExZTFkYmVjNzlkZg==,Peter Griess,Ryan Dahl,"Support 'upgrade' event in HTTP client.

- Add a unit test for client HTTP upgrade.
- Move around unit tests for server HTTP upgrade.",https://api.github.com/repos/nodejs/node/git/commits/187f191558ef45562865e071fdcd11e1dbec79df,2010-06-15,- Move around unit tests for server HTTP upgrade.
309,MDY6Q29tbWl0MjcxOTM3Nzk6NmJlZDE1ZTA3NDg1OTBlMjU4OWU2NGIxNTFjM2Y0YjhhYWI3YWU3OA==,Ryan Dahl,Ryan Dahl,"Refactor: Utf8Decoder -> StringDecoder

Instead of just decoding Utf8, this will proxy requests to buffer.toString()
for other encodings. This makes for a simpler interface.",https://api.github.com/repos/nodejs/node/git/commits/6bed15e0748590e2589e64b151c3f4b8aab7ae78,2010-06-16,Refactor: Utf8Decoder -> StringDecoder
309,MDY6Q29tbWl0MjcxOTM3Nzk6NmJlZDE1ZTA3NDg1OTBlMjU4OWU2NGIxNTFjM2Y0YjhhYWI3YWU3OA==,Ryan Dahl,Ryan Dahl,"Refactor: Utf8Decoder -> StringDecoder

Instead of just decoding Utf8, this will proxy requests to buffer.toString()
for other encodings. This makes for a simpler interface.",https://api.github.com/repos/nodejs/node/git/commits/6bed15e0748590e2589e64b151c3f4b8aab7ae78,2010-06-16,"Instead of just decoding Utf8, this will proxy requests to buffer.toString()
for other encodings"
309,MDY6Q29tbWl0MjcxOTM3Nzk6NmJlZDE1ZTA3NDg1OTBlMjU4OWU2NGIxNTFjM2Y0YjhhYWI3YWU3OA==,Ryan Dahl,Ryan Dahl,"Refactor: Utf8Decoder -> StringDecoder

Instead of just decoding Utf8, this will proxy requests to buffer.toString()
for other encodings. This makes for a simpler interface.",https://api.github.com/repos/nodejs/node/git/commits/6bed15e0748590e2589e64b151c3f4b8aab7ae78,2010-06-16,This makes for a simpler interface.
310,MDY6Q29tbWl0MjcxOTM3Nzk6NTVhNmYwMTczMjk0YjJlODlhN2YxNzk3NzA0NjY5ZjhiYTAzNDlkOA==,Ryan Dahl,Ryan Dahl,Server responses should have a body if HEAD request,https://api.github.com/repos/nodejs/node/git/commits/55a6f0173294b2e89a7f1797704669f8ba0349d8,2010-06-02,Server responses should have a body if HEAD request
310,MDY6Q29tbWl0MjcxOTM3Nzk6NTVhNmYwMTczMjk0YjJlODlhN2YxNzk3NzA0NjY5ZjhiYTAzNDlkOA==,Ryan Dahl,Ryan Dahl,Server responses should have a body if HEAD request,https://api.github.com/repos/nodejs/node/git/commits/55a6f0173294b2e89a7f1797704669f8ba0349d8,2010-06-02,
311,MDY6Q29tbWl0MjcxOTM3Nzk6ODBhOGU3MWZlMDgyNTExYjE1ZTUzMzdiMTY4N2ZjMDk1NTgwOWI2ZQ==,Ryan Dahl,Ryan Dahl,Insert some hot paths into HTTP,https://api.github.com/repos/nodejs/node/git/commits/80a8e71fe082511b15e5337b1687fc0955809b6e,2010-05-28,Insert some hot paths into HTTP
311,MDY6Q29tbWl0MjcxOTM3Nzk6ODBhOGU3MWZlMDgyNTExYjE1ZTUzMzdiMTY4N2ZjMDk1NTgwOWI2ZQ==,Ryan Dahl,Ryan Dahl,Insert some hot paths into HTTP,https://api.github.com/repos/nodejs/node/git/commits/80a8e71fe082511b15e5337b1687fc0955809b6e,2010-05-28,
312,MDY6Q29tbWl0MjcxOTM3Nzk6NzRiN2ZhMjlhMTFiYzAxMGNlZmQ3YzZhNTcxYTEyZDc5MGFiN2ZhOA==,Ryan Dahl,Ryan Dahl,"Refactor HTTP

Allow throttling from outgoing messages.",https://api.github.com/repos/nodejs/node/git/commits/74b7fa29a11bc010cefd7c6a571a12d790ab7fa8,2010-05-27,Refactor HTTP
312,MDY6Q29tbWl0MjcxOTM3Nzk6NzRiN2ZhMjlhMTFiYzAxMGNlZmQ3YzZhNTcxYTEyZDc5MGFiN2ZhOA==,Ryan Dahl,Ryan Dahl,"Refactor HTTP

Allow throttling from outgoing messages.",https://api.github.com/repos/nodejs/node/git/commits/74b7fa29a11bc010cefd7c6a571a12d790ab7fa8,2010-05-27,Allow throttling from outgoing messages.
313,MDY6Q29tbWl0MjcxOTM3Nzk6MjllODY3YWFhMDYyZTZkMDVlMzQ2OWFhMTZhNWY0MDg5YzI5NDAzMw==,Ryan Dahl,Ryan Dahl,Simplify a few internal HTTP events.,https://api.github.com/repos/nodejs/node/git/commits/29e867aaa062e6d05e3469aa16a5f4089c294033,2010-05-26,Simplify a few internal HTTP events.
313,MDY6Q29tbWl0MjcxOTM3Nzk6MjllODY3YWFhMDYyZTZkMDVlMzQ2OWFhMTZhNWY0MDg5YzI5NDAzMw==,Ryan Dahl,Ryan Dahl,Simplify a few internal HTTP events.,https://api.github.com/repos/nodejs/node/git/commits/29e867aaa062e6d05e3469aa16a5f4089c294033,2010-05-26,
314,MDY6Q29tbWl0MjcxOTM3Nzk6ODk1Zjg5ZDYyYTYzZTAyYmQ5MzZkZWViYWZiNDk0NjY0YmY0ZTI0OA==,Sam Hughes,Ryan Dahl,Avoided sending empty chunkedEncoding chunks in the middle of http responses,https://api.github.com/repos/nodejs/node/git/commits/895f89d62a63e02bd936deebafb494664bf4e248,2010-04-29,Avoided sending empty chunkedEncoding chunks in the middle of responses
314,MDY6Q29tbWl0MjcxOTM3Nzk6ODk1Zjg5ZDYyYTYzZTAyYmQ5MzZkZWViYWZiNDk0NjY0YmY0ZTI0OA==,Sam Hughes,Ryan Dahl,Avoided sending empty chunkedEncoding chunks in the middle of http responses,https://api.github.com/repos/nodejs/node/git/commits/895f89d62a63e02bd936deebafb494664bf4e248,2010-04-29,
315,MDY6Q29tbWl0MjcxOTM3Nzk6MTVlYzk5ZWM1OTQ1YzA3NjE2Y2Q5Mjk5ZTEyNmU5OTE5YmM5YzhjYw==,Ryan Dahl,Ryan Dahl,"Fix issue 89, parsing responses to HEAD requests

Test from Mark Hansen (mark at markhansen.co.nz)",https://api.github.com/repos/nodejs/node/git/commits/15ec99ec5945c07616cd9299e126e9919bc9c8cc,2010-05-26,"Fix issue 89, parsing responses to HEAD requests"
315,MDY6Q29tbWl0MjcxOTM3Nzk6MTVlYzk5ZWM1OTQ1YzA3NjE2Y2Q5Mjk5ZTEyNmU5OTE5YmM5YzhjYw==,Ryan Dahl,Ryan Dahl,"Fix issue 89, parsing responses to HEAD requests

Test from Mark Hansen (mark at markhansen.co.nz)",https://api.github.com/repos/nodejs/node/git/commits/15ec99ec5945c07616cd9299e126e9919bc9c8cc,2010-05-26,Test from Mark Hansen (mark at markhansen.co.nz)
316,MDY6Q29tbWl0MjcxOTM3Nzk6MzVjMTRmNjM3ZTc5NjNiZDZjYzY2Nzc2NDYzMzM5ZTAwNmU2MGMwMQ==,Ryan Dahl,Ryan Dahl,"In HTTP parser, proxy return value of onHeadersComplete",https://api.github.com/repos/nodejs/node/git/commits/35c14f637e7963bd6cc66776463339e006e60c01,2010-05-26,"In HTTP parser, proxy return value of onHeadersComplete"
316,MDY6Q29tbWl0MjcxOTM3Nzk6MzVjMTRmNjM3ZTc5NjNiZDZjYzY2Nzc2NDYzMzM5ZTAwNmU2MGMwMQ==,Ryan Dahl,Ryan Dahl,"In HTTP parser, proxy return value of onHeadersComplete",https://api.github.com/repos/nodejs/node/git/commits/35c14f637e7963bd6cc66776463339e006e60c01,2010-05-26,
317,MDY6Q29tbWl0MjcxOTM3Nzk6YjU4ZGIzY2Q3MzdmZmZiOWFiMzI2YjhkYzUxOTFmZGU1NmE3YTBkMw==,Ben Noordhuis,Ryan Dahl,Added reason phrases for a bunch of HTTP status codes.,https://api.github.com/repos/nodejs/node/git/commits/b58db3cd737fffb9ab326b8dc5191fde56a7a0d3,2010-05-23,Added reason phrases for a bunch of HTTP status codes.
317,MDY6Q29tbWl0MjcxOTM3Nzk6YjU4ZGIzY2Q3MzdmZmZiOWFiMzI2YjhkYzUxOTFmZGU1NmE3YTBkMw==,Ben Noordhuis,Ryan Dahl,Added reason phrases for a bunch of HTTP status codes.,https://api.github.com/repos/nodejs/node/git/commits/b58db3cd737fffb9ab326b8dc5191fde56a7a0d3,2010-05-23,
318,MDY6Q29tbWl0MjcxOTM3Nzk6Y2JkMmMzOTQ1YjFkZjViNTM4ZDllMjU3NjQ2ZjYwNGQ5MTg5NjAxYw==,Ryan Dahl,Ryan Dahl,"Throwing in a callback should kill the process

There is a difference between errors which happen to a socket - like
receiving EPIPE - an exceptional situation but ultimately okay and the
situation where code throws in a callback - which is not okay.

Fixes test/simple/test-http-exceptions.js

TODO: explain this in docs.",https://api.github.com/repos/nodejs/node/git/commits/cbd2c3945b1df5b538d9e257646f604d9189601c,2010-05-20,Throwing in a callback should kill the process
318,MDY6Q29tbWl0MjcxOTM3Nzk6Y2JkMmMzOTQ1YjFkZjViNTM4ZDllMjU3NjQ2ZjYwNGQ5MTg5NjAxYw==,Ryan Dahl,Ryan Dahl,"Throwing in a callback should kill the process

There is a difference between errors which happen to a socket - like
receiving EPIPE - an exceptional situation but ultimately okay and the
situation where code throws in a callback - which is not okay.

Fixes test/simple/test-http-exceptions.js

TODO: explain this in docs.",https://api.github.com/repos/nodejs/node/git/commits/cbd2c3945b1df5b538d9e257646f604d9189601c,2010-05-20,"There is a difference between errors which happen to a socket - like
receiving EPIPE - an exceptional situation but ultimately okay and the
situation where code throws in a callback - which is not okay"
318,MDY6Q29tbWl0MjcxOTM3Nzk6Y2JkMmMzOTQ1YjFkZjViNTM4ZDllMjU3NjQ2ZjYwNGQ5MTg5NjAxYw==,Ryan Dahl,Ryan Dahl,"Throwing in a callback should kill the process

There is a difference between errors which happen to a socket - like
receiving EPIPE - an exceptional situation but ultimately okay and the
situation where code throws in a callback - which is not okay.

Fixes test/simple/test-http-exceptions.js

TODO: explain this in docs.",https://api.github.com/repos/nodejs/node/git/commits/cbd2c3945b1df5b538d9e257646f604d9189601c,2010-05-20,"Fixes test/simple/test-
TODO: explain this in docs."
319,MDY6Q29tbWl0MjcxOTM3Nzk6MjY2M2M2OWY4ZDhlYTRkZjlmYmM0MGIwMzE4NjI1OTE4NjAxMWU5Nw==,Ryan Dahl,Ryan Dahl,Fix utf8stream references,https://api.github.com/repos/nodejs/node/git/commits/2663c69f8d8ea4df9fbc40b03186259186011e97,2010-05-18,Fix utf8stream references
319,MDY6Q29tbWl0MjcxOTM3Nzk6MjY2M2M2OWY4ZDhlYTRkZjlmYmM0MGIwMzE4NjI1OTE4NjAxMWU5Nw==,Ryan Dahl,Ryan Dahl,Fix utf8stream references,https://api.github.com/repos/nodejs/node/git/commits/2663c69f8d8ea4df9fbc40b03186259186011e97,2010-05-18,
320,MDY6Q29tbWl0MjcxOTM3Nzk6Zjk4N2VjZjQ1YmU2ZjVjN2MxOGQ1Y2ViZDM4YmUwYjQxMTY0ODE0MA==,Felix Geisendörfer,Ryan Dahl,Use Utf8Stream for http Streams with utf8 encoding,https://api.github.com/repos/nodejs/node/git/commits/f987ecf45be6f5c7c18d5cebd38be0b411648140,2010-05-18,Use Utf8Stream for Streams with utf8 encoding
320,MDY6Q29tbWl0MjcxOTM3Nzk6Zjk4N2VjZjQ1YmU2ZjVjN2MxOGQ1Y2ViZDM4YmUwYjQxMTY0ODE0MA==,Felix Geisendörfer,Ryan Dahl,Use Utf8Stream for http Streams with utf8 encoding,https://api.github.com/repos/nodejs/node/git/commits/f987ecf45be6f5c7c18d5cebd38be0b411648140,2010-05-18,
321,MDY6Q29tbWl0MjcxOTM3Nzk6ZDAxMjg3ODdlNzRjMzZkNTg5ZjAwYWM4OWFiMTc5MDJkZDhlMGRlMA==,Ryan Dahl,Ryan Dahl,"Deprecate sendHeader() and writeHeader(), ppl should use writeHead()",https://api.github.com/repos/nodejs/node/git/commits/d0128787e74c36d589f00ac89ab17902dd8e0de0,2010-05-12,"Deprecate sendHeader() and writeHeader(), ppl should use writeHead()"
321,MDY6Q29tbWl0MjcxOTM3Nzk6ZDAxMjg3ODdlNzRjMzZkNTg5ZjAwYWM4OWFiMTc5MDJkZDhlMGRlMA==,Ryan Dahl,Ryan Dahl,"Deprecate sendHeader() and writeHeader(), ppl should use writeHead()",https://api.github.com/repos/nodejs/node/git/commits/d0128787e74c36d589f00ac89ab17902dd8e0de0,2010-05-12,
322,MDY6Q29tbWl0MjcxOTM3Nzk6N2EyZTZkNjc0YTk0ZTAxYTE3ZTg1NmI0ZDUxZWMyMjlmYWQ5YWY1MQ==,Ryan Dahl,Ryan Dahl,"Default to 2 second timeout for http servers

Taking a performance hit on 'hello world' benchmark by enabling this by
default, but I think it's worth it. Hopefully we can improve performance by
resetting the timeout less often - ideally a 'hello world' benchmark would
only touch the one timer once - if it runs in less than 2 seconds. The rest
should be just link list manipulations.",https://api.github.com/repos/nodejs/node/git/commits/7a2e6d674a94e01a17e856b4d51ec229fad9af51,2010-05-12,Default to 2 second timeout for servers
322,MDY6Q29tbWl0MjcxOTM3Nzk6N2EyZTZkNjc0YTk0ZTAxYTE3ZTg1NmI0ZDUxZWMyMjlmYWQ5YWY1MQ==,Ryan Dahl,Ryan Dahl,"Default to 2 second timeout for http servers

Taking a performance hit on 'hello world' benchmark by enabling this by
default, but I think it's worth it. Hopefully we can improve performance by
resetting the timeout less often - ideally a 'hello world' benchmark would
only touch the one timer once - if it runs in less than 2 seconds. The rest
should be just link list manipulations.",https://api.github.com/repos/nodejs/node/git/commits/7a2e6d674a94e01a17e856b4d51ec229fad9af51,2010-05-12,"Taking a performance hit on 'hello world' benchmark by enabling this by
default, but I think it's worth it"
322,MDY6Q29tbWl0MjcxOTM3Nzk6N2EyZTZkNjc0YTk0ZTAxYTE3ZTg1NmI0ZDUxZWMyMjlmYWQ5YWY1MQ==,Ryan Dahl,Ryan Dahl,"Default to 2 second timeout for http servers

Taking a performance hit on 'hello world' benchmark by enabling this by
default, but I think it's worth it. Hopefully we can improve performance by
resetting the timeout less often - ideally a 'hello world' benchmark would
only touch the one timer once - if it runs in less than 2 seconds. The rest
should be just link list manipulations.",https://api.github.com/repos/nodejs/node/git/commits/7a2e6d674a94e01a17e856b4d51ec229fad9af51,2010-05-12,"Hopefully we can improve performance by
resetting the timeout less often - ideally a 'hello world' benchmark would
only touch the one timer once - if it runs in less than 2 seconds"
322,MDY6Q29tbWl0MjcxOTM3Nzk6N2EyZTZkNjc0YTk0ZTAxYTE3ZTg1NmI0ZDUxZWMyMjlmYWQ5YWY1MQ==,Ryan Dahl,Ryan Dahl,"Default to 2 second timeout for http servers

Taking a performance hit on 'hello world' benchmark by enabling this by
default, but I think it's worth it. Hopefully we can improve performance by
resetting the timeout less often - ideally a 'hello world' benchmark would
only touch the one timer once - if it runs in less than 2 seconds. The rest
should be just link list manipulations.",https://api.github.com/repos/nodejs/node/git/commits/7a2e6d674a94e01a17e856b4d51ec229fad9af51,2010-05-12,"The rest
should be just link list manipulations."
323,MDY6Q29tbWl0MjcxOTM3Nzk6OGFiMjM4ZTdkZTg0Mjk5NjFjZTRkNmZkOTExNDU1NWU1ZGY5MGExMw==,Ryan Dahl,Ryan Dahl,"Revert ""destroy instead of end http connection at end of pipeline""

This reverts commit 4ce1e1fca59bc6ad6e2d19643db2ed3159ccb7dc.

To fix test-http-full-response.js. Clearly this is not the correct solution.
Probably need idle timeouts.",https://api.github.com/repos/nodejs/node/git/commits/8ab238e7de8429961ce4d6fd9114555e5df90a13,2010-05-10,"Revert ""destroy instead of end connection at end of pipeline"""
323,MDY6Q29tbWl0MjcxOTM3Nzk6OGFiMjM4ZTdkZTg0Mjk5NjFjZTRkNmZkOTExNDU1NWU1ZGY5MGExMw==,Ryan Dahl,Ryan Dahl,"Revert ""destroy instead of end http connection at end of pipeline""

This reverts commit 4ce1e1fca59bc6ad6e2d19643db2ed3159ccb7dc.

To fix test-http-full-response.js. Clearly this is not the correct solution.
Probably need idle timeouts.",https://api.github.com/repos/nodejs/node/git/commits/8ab238e7de8429961ce4d6fd9114555e5df90a13,2010-05-10,This reverts commit 4ce1e1fca59bc6ad6e2d19643db2ed3159ccb7dc
323,MDY6Q29tbWl0MjcxOTM3Nzk6OGFiMjM4ZTdkZTg0Mjk5NjFjZTRkNmZkOTExNDU1NWU1ZGY5MGExMw==,Ryan Dahl,Ryan Dahl,"Revert ""destroy instead of end http connection at end of pipeline""

This reverts commit 4ce1e1fca59bc6ad6e2d19643db2ed3159ccb7dc.

To fix test-http-full-response.js. Clearly this is not the correct solution.
Probably need idle timeouts.",https://api.github.com/repos/nodejs/node/git/commits/8ab238e7de8429961ce4d6fd9114555e5df90a13,2010-05-10,To fix test-Clearly this is not the correct solution
323,MDY6Q29tbWl0MjcxOTM3Nzk6OGFiMjM4ZTdkZTg0Mjk5NjFjZTRkNmZkOTExNDU1NWU1ZGY5MGExMw==,Ryan Dahl,Ryan Dahl,"Revert ""destroy instead of end http connection at end of pipeline""

This reverts commit 4ce1e1fca59bc6ad6e2d19643db2ed3159ccb7dc.

To fix test-http-full-response.js. Clearly this is not the correct solution.
Probably need idle timeouts.",https://api.github.com/repos/nodejs/node/git/commits/8ab238e7de8429961ce4d6fd9114555e5df90a13,2010-05-10,Probably need idle timeouts.
324,MDY6Q29tbWl0MjcxOTM3Nzk6NGNlMWUxZmNhNTliYzZhZDZlMmQxOTY0M2RiMmVkMzE1OWNjYjdkYw==,Ryan Dahl,Ryan Dahl,destroy instead of end http connection at end of pipeline,https://api.github.com/repos/nodejs/node/git/commits/4ce1e1fca59bc6ad6e2d19643db2ed3159ccb7dc,2010-05-05,destroy instead of end connection at end of pipeline
324,MDY6Q29tbWl0MjcxOTM3Nzk6NGNlMWUxZmNhNTliYzZhZDZlMmQxOTY0M2RiMmVkMzE1OWNjYjdkYw==,Ryan Dahl,Ryan Dahl,destroy instead of end http connection at end of pipeline,https://api.github.com/repos/nodejs/node/git/commits/4ce1e1fca59bc6ad6e2d19643db2ed3159ccb7dc,2010-05-05,
325,MDY6Q29tbWl0MjcxOTM3Nzk6MzY3NDU2M2RkNWVjMmM5YmEzMDFkZmVlNmIwNDZmM2UzOTY2YzNkZA==,Thomas Lee,Ryan Dahl,Fix a bug in http.Client where parsers may be prematurely released back to the free pool.,https://api.github.com/repos/nodejs/node/git/commits/3674563dd5ec2c9ba301dfee6b046f3e3966c3dd,2010-05-05,Fix a bug in where parsers may be prematurely released back to the free pool.
325,MDY6Q29tbWl0MjcxOTM3Nzk6MzY3NDU2M2RkNWVjMmM5YmEzMDFkZmVlNmIwNDZmM2UzOTY2YzNkZA==,Thomas Lee,Ryan Dahl,Fix a bug in http.Client where parsers may be prematurely released back to the free pool.,https://api.github.com/repos/nodejs/node/git/commits/3674563dd5ec2c9ba301dfee6b046f3e3966c3dd,2010-05-05,
326,MDY6Q29tbWl0MjcxOTM3Nzk6NDUzYzllNjQxMTUyNzAxOGM2MTI0NWZiMjE1MTk0NmI3OTM2NWJhYw==,Ryan Dahl,Ryan Dahl,Fix whitespace,https://api.github.com/repos/nodejs/node/git/commits/453c9e6411527018c61245fb2151946b79365bac,2010-05-05,Fix whitespace
326,MDY6Q29tbWl0MjcxOTM3Nzk6NDUzYzllNjQxMTUyNzAxOGM2MTI0NWZiMjE1MTk0NmI3OTM2NWJhYw==,Ryan Dahl,Ryan Dahl,Fix whitespace,https://api.github.com/repos/nodejs/node/git/commits/453c9e6411527018c61245fb2151946b79365bac,2010-05-05,
327,MDY6Q29tbWl0MjcxOTM3Nzk6Mzg5MjYyODY1N2NhM2U1NmQxNjQ3M2U2NWRhMzVjNzdhNzQzODJjNw==,isaacs,Ryan Dahl,Emit a better error message when something strange is sent to OutgoingMessage#write,https://api.github.com/repos/nodejs/node/git/commits/3892628657ca3e56d16473e65da35c77a74382c7,2010-05-05,Emit a better error message when something strange is sent to OutgoingMessage#write
327,MDY6Q29tbWl0MjcxOTM3Nzk6Mzg5MjYyODY1N2NhM2U1NmQxNjQ3M2U2NWRhMzVjNzdhNzQzODJjNw==,isaacs,Ryan Dahl,Emit a better error message when something strange is sent to OutgoingMessage#write,https://api.github.com/repos/nodejs/node/git/commits/3892628657ca3e56d16473e65da35c77a74382c7,2010-05-05,
328,MDY6Q29tbWl0MjcxOTM3Nzk6YjViZGY5NDM0YmZhNzdjMjg0Njc4ZWY2YWUwNDNhOGUyMDVlOGQ2NQ==,Ryan Dahl,Ryan Dahl,Add another http upgrade test,https://api.github.com/repos/nodejs/node/git/commits/b5bdf9434bfa77c284678ef6ae043a8e205e8d65,2010-05-03,Add another upgrade test
328,MDY6Q29tbWl0MjcxOTM3Nzk6YjViZGY5NDM0YmZhNzdjMjg0Njc4ZWY2YWUwNDNhOGUyMDVlOGQ2NQ==,Ryan Dahl,Ryan Dahl,Add another http upgrade test,https://api.github.com/repos/nodejs/node/git/commits/b5bdf9434bfa77c284678ef6ae043a8e205e8d65,2010-05-03,
329,MDY6Q29tbWl0MjcxOTM3Nzk6ZjBmZWM3MzUyYWMyNTY1MGFiZTNiNzJiNTllNzhhZWJkMGE5NGViYw==,Ryan Dahl,Ryan Dahl,Don't emit error twice from http.Client,https://api.github.com/repos/nodejs/node/git/commits/f0fec7352ac25650abe3b72b59e78aebd0a94ebc,2010-05-03,Don't emit error twice from http.Client
329,MDY6Q29tbWl0MjcxOTM3Nzk6ZjBmZWM3MzUyYWMyNTY1MGFiZTNiNzJiNTllNzhhZWJkMGE5NGViYw==,Ryan Dahl,Ryan Dahl,Don't emit error twice from http.Client,https://api.github.com/repos/nodejs/node/git/commits/f0fec7352ac25650abe3b72b59e78aebd0a94ebc,2010-05-03,
330,MDY6Q29tbWl0MjcxOTM3Nzk6YWVlMjI2YjI0MzRiZmM5NDc1NzEzYTgwNWUzMDNlODdmMDcyMDc5MA==,Micheil Smith,Ryan Dahl,"Fixing the 1 byte off error in http.Server's upgradeHead

(And fix up some style issues)",https://api.github.com/repos/nodejs/node/git/commits/aee226b2434bfc9475713a805e303e87f0720790,2010-05-02,Fixing the 1 byte off error in upgradeHead
330,MDY6Q29tbWl0MjcxOTM3Nzk6YWVlMjI2YjI0MzRiZmM5NDc1NzEzYTgwNWUzMDNlODdmMDcyMDc5MA==,Micheil Smith,Ryan Dahl,"Fixing the 1 byte off error in http.Server's upgradeHead

(And fix up some style issues)",https://api.github.com/repos/nodejs/node/git/commits/aee226b2434bfc9475713a805e303e87f0720790,2010-05-02,(And fix up some style issues)
331,MDY6Q29tbWl0MjcxOTM3Nzk6NjdmYjBlY2U2YjMzMTI4NGJkZWExZjc1ZjU5NTdmNDdiZWRjYTU3Mg==,Ryan Dahl,Ryan Dahl,Fix deprecation message,https://api.github.com/repos/nodejs/node/git/commits/67fb0ece6b331284bdea1f75f5957f47bedca572,2010-05-01,Fix deprecation message
331,MDY6Q29tbWl0MjcxOTM3Nzk6NjdmYjBlY2U2YjMzMTI4NGJkZWExZjc1ZjU5NTdmNDdiZWRjYTU3Mg==,Ryan Dahl,Ryan Dahl,Fix deprecation message,https://api.github.com/repos/nodejs/node/git/commits/67fb0ece6b331284bdea1f75f5957f47bedca572,2010-05-01,
332,MDY6Q29tbWl0MjcxOTM3Nzk6ZDYxMTBmYmQxMTVlNmU2YTk3OGI4MDdlOTdmMDA3OTFmNGQyZTgwZg==,Micheil Smith,Ryan Dahl,"Making requestListener for the construction of a http.Server optional, as it is for net.Server",https://api.github.com/repos/nodejs/node/git/commits/d6110fbd115e6e6a978b807e97f00791f4d2e80f,2010-04-30,"Making requestListener for the construction of a optional, as it is for net.Server"
332,MDY6Q29tbWl0MjcxOTM3Nzk6ZDYxMTBmYmQxMTVlNmU2YTk3OGI4MDdlOTdmMDA3OTFmNGQyZTgwZg==,Micheil Smith,Ryan Dahl,"Making requestListener for the construction of a http.Server optional, as it is for net.Server",https://api.github.com/repos/nodejs/node/git/commits/d6110fbd115e6e6a978b807e97f00791f4d2e80f,2010-04-30,
333,MDY6Q29tbWl0MjcxOTM3Nzk6Zjk5MGYyNGFkMzZkZGFmZjNjMzc4NTMxZDE1ZWE1YzA1MjQ2N2Q0MQ==,Micheil Smith,Ryan Dahl,"Implementing the event emit for Upgrade requests, with tests.",https://api.github.com/repos/nodejs/node/git/commits/f990f24ad36ddaff3c378531d15ea5c052467d41,2010-04-30,"Implementing the event emit for Upgrade requests, with tests."
333,MDY6Q29tbWl0MjcxOTM3Nzk6Zjk5MGYyNGFkMzZkZGFmZjNjMzc4NTMxZDE1ZWE1YzA1MjQ2N2Q0MQ==,Micheil Smith,Ryan Dahl,"Implementing the event emit for Upgrade requests, with tests.",https://api.github.com/repos/nodejs/node/git/commits/f990f24ad36ddaff3c378531d15ea5c052467d41,2010-04-30,
334,MDY6Q29tbWl0MjcxOTM3Nzk6M2IzMjMwMjdiZTg2YWExM2JkZDQ5N2FhYzdiMTJhOGM2MGIyYjY1Yw==,Ryan Dahl,Ryan Dahl,http server emits 'clientError',https://api.github.com/repos/nodejs/node/git/commits/3b323027be86aa13bdd497aac7b12a8c60b2b65c,2010-04-30,server emits 'clientError'
334,MDY6Q29tbWl0MjcxOTM3Nzk6M2IzMjMwMjdiZTg2YWExM2JkZDQ5N2FhYzdiMTJhOGM2MGIyYjY1Yw==,Ryan Dahl,Ryan Dahl,http server emits 'clientError',https://api.github.com/repos/nodejs/node/git/commits/3b323027be86aa13bdd497aac7b12a8c60b2b65c,2010-04-30,
335,MDY6Q29tbWl0MjcxOTM3Nzk6NmFiZGYwNTFkM2Q5MWQwNWYyNjJkMmRmZTk4ZTFjNzY4ZmYwYjU0Mw==,Ryan Dahl,Ryan Dahl,"Unhandled 'error' events kill program

By default 'error' throws. addListener to prevent this.",https://api.github.com/repos/nodejs/node/git/commits/6abdf051d3d91d05f262d2dfe98e1c768ff0b543,2010-04-23,Unhandled 'error' events kill program
335,MDY6Q29tbWl0MjcxOTM3Nzk6NmFiZGYwNTFkM2Q5MWQwNWYyNjJkMmRmZTk4ZTFjNzY4ZmYwYjU0Mw==,Ryan Dahl,Ryan Dahl,"Unhandled 'error' events kill program

By default 'error' throws. addListener to prevent this.",https://api.github.com/repos/nodejs/node/git/commits/6abdf051d3d91d05f262d2dfe98e1c768ff0b543,2010-04-23,By default 'error' throws
335,MDY6Q29tbWl0MjcxOTM3Nzk6NmFiZGYwNTFkM2Q5MWQwNWYyNjJkMmRmZTk4ZTFjNzY4ZmYwYjU0Mw==,Ryan Dahl,Ryan Dahl,"Unhandled 'error' events kill program

By default 'error' throws. addListener to prevent this.",https://api.github.com/repos/nodejs/node/git/commits/6abdf051d3d91d05f262d2dfe98e1c768ff0b543,2010-04-23,addListener to prevent this.
336,MDY6Q29tbWl0MjcxOTM3Nzk6MzkzNGNiNTQ4NTNjYTIzY2VlN2VmM2M2MjA2YTViMTI2NGY4YmE2ZA==,Ryan Dahl,Ryan Dahl,"Force no body on http 204 and 304

Thanks to tjholowayhuk@gmail.com for the test case.",https://api.github.com/repos/nodejs/node/git/commits/3934cb54853ca23cee7ef3c6206a5b1264f8ba6d,2010-04-21,Force no body on 204 and 304
336,MDY6Q29tbWl0MjcxOTM3Nzk6MzkzNGNiNTQ4NTNjYTIzY2VlN2VmM2M2MjA2YTViMTI2NGY4YmE2ZA==,Ryan Dahl,Ryan Dahl,"Force no body on http 204 and 304

Thanks to tjholowayhuk@gmail.com for the test case.",https://api.github.com/repos/nodejs/node/git/commits/3934cb54853ca23cee7ef3c6206a5b1264f8ba6d,2010-04-21,Thanks to tjholowayhuk@gmail.com for the test case.
337,MDY6Q29tbWl0MjcxOTM3Nzk6NmFkMThhMjdhMGJmOWE4ZjBjNmQ2MThjMDAxMWYyMjY0MjM5YWYwNA==,Micheil Smith,Ryan Dahl,Fix upgradeHead bounds.,https://api.github.com/repos/nodejs/node/git/commits/6ad18a27a0bf9a8f0c6d618c0011f2264239af04,2010-04-15,Fix upgradeHead bounds.
337,MDY6Q29tbWl0MjcxOTM3Nzk6NmFkMThhMjdhMGJmOWE4ZjBjNmQ2MThjMDAxMWYyMjY0MjM5YWYwNA==,Micheil Smith,Ryan Dahl,Fix upgradeHead bounds.,https://api.github.com/repos/nodejs/node/git/commits/6ad18a27a0bf9a8f0c6d618c0011f2264239af04,2010-04-15,
338,MDY6Q29tbWl0MjcxOTM3Nzk6NzYwYmJhNTUxODZlYmEwMzljYTAwZTUzMmY3ODEzZDJhZWE0NTBhMg==,Ryan Dahl,Ryan Dahl,"Support Upgrade in HTTP messages

This allows for web servers to be ""hijacked"" and used as Web Socket servers
(or other). You simply listen for requests as normal, but check if

  req.upgrade === true

If so, this will be the last request of the connection. It's your job now to
hijack req.connection and start reading from it. req.upgradeHead is a buffer
containing the first part of the new protocol communication (in the case it
arrived on the same packet).

This needs tests and documentation. API subject to change.",https://api.github.com/repos/nodejs/node/git/commits/760bba55186eba039ca00e532f7813d2aea450a2,2010-04-14,Support Upgrade in HTTP messages
338,MDY6Q29tbWl0MjcxOTM3Nzk6NzYwYmJhNTUxODZlYmEwMzljYTAwZTUzMmY3ODEzZDJhZWE0NTBhMg==,Ryan Dahl,Ryan Dahl,"Support Upgrade in HTTP messages

This allows for web servers to be ""hijacked"" and used as Web Socket servers
(or other). You simply listen for requests as normal, but check if

  req.upgrade === true

If so, this will be the last request of the connection. It's your job now to
hijack req.connection and start reading from it. req.upgradeHead is a buffer
containing the first part of the new protocol communication (in the case it
arrived on the same packet).

This needs tests and documentation. API subject to change.",https://api.github.com/repos/nodejs/node/git/commits/760bba55186eba039ca00e532f7813d2aea450a2,2010-04-14,"This allows for web servers to be ""hijacked"" and used as Web Socket servers
(or other)"
338,MDY6Q29tbWl0MjcxOTM3Nzk6NzYwYmJhNTUxODZlYmEwMzljYTAwZTUzMmY3ODEzZDJhZWE0NTBhMg==,Ryan Dahl,Ryan Dahl,"Support Upgrade in HTTP messages

This allows for web servers to be ""hijacked"" and used as Web Socket servers
(or other). You simply listen for requests as normal, but check if

  req.upgrade === true

If so, this will be the last request of the connection. It's your job now to
hijack req.connection and start reading from it. req.upgradeHead is a buffer
containing the first part of the new protocol communication (in the case it
arrived on the same packet).

This needs tests and documentation. API subject to change.",https://api.github.com/repos/nodejs/node/git/commits/760bba55186eba039ca00e532f7813d2aea450a2,2010-04-14,"You simply listen for requests as normal, but check if
  req.upgrade === true
If so, this will be the last request of the connection"
338,MDY6Q29tbWl0MjcxOTM3Nzk6NzYwYmJhNTUxODZlYmEwMzljYTAwZTUzMmY3ODEzZDJhZWE0NTBhMg==,Ryan Dahl,Ryan Dahl,"Support Upgrade in HTTP messages

This allows for web servers to be ""hijacked"" and used as Web Socket servers
(or other). You simply listen for requests as normal, but check if

  req.upgrade === true

If so, this will be the last request of the connection. It's your job now to
hijack req.connection and start reading from it. req.upgradeHead is a buffer
containing the first part of the new protocol communication (in the case it
arrived on the same packet).

This needs tests and documentation. API subject to change.",https://api.github.com/repos/nodejs/node/git/commits/760bba55186eba039ca00e532f7813d2aea450a2,2010-04-14,"It's your job now to
hijack req.connection and start reading from it"
338,MDY6Q29tbWl0MjcxOTM3Nzk6NzYwYmJhNTUxODZlYmEwMzljYTAwZTUzMmY3ODEzZDJhZWE0NTBhMg==,Ryan Dahl,Ryan Dahl,"Support Upgrade in HTTP messages

This allows for web servers to be ""hijacked"" and used as Web Socket servers
(or other). You simply listen for requests as normal, but check if

  req.upgrade === true

If so, this will be the last request of the connection. It's your job now to
hijack req.connection and start reading from it. req.upgradeHead is a buffer
containing the first part of the new protocol communication (in the case it
arrived on the same packet).

This needs tests and documentation. API subject to change.",https://api.github.com/repos/nodejs/node/git/commits/760bba55186eba039ca00e532f7813d2aea450a2,2010-04-14,"req.upgradeHead is a buffer
containing the first part of the new protocol communication (in the case it
arrived on the same packet)"
338,MDY6Q29tbWl0MjcxOTM3Nzk6NzYwYmJhNTUxODZlYmEwMzljYTAwZTUzMmY3ODEzZDJhZWE0NTBhMg==,Ryan Dahl,Ryan Dahl,"Support Upgrade in HTTP messages

This allows for web servers to be ""hijacked"" and used as Web Socket servers
(or other). You simply listen for requests as normal, but check if

  req.upgrade === true

If so, this will be the last request of the connection. It's your job now to
hijack req.connection and start reading from it. req.upgradeHead is a buffer
containing the first part of the new protocol communication (in the case it
arrived on the same packet).

This needs tests and documentation. API subject to change.",https://api.github.com/repos/nodejs/node/git/commits/760bba55186eba039ca00e532f7813d2aea450a2,2010-04-14,This needs tests and documentation
338,MDY6Q29tbWl0MjcxOTM3Nzk6NzYwYmJhNTUxODZlYmEwMzljYTAwZTUzMmY3ODEzZDJhZWE0NTBhMg==,Ryan Dahl,Ryan Dahl,"Support Upgrade in HTTP messages

This allows for web servers to be ""hijacked"" and used as Web Socket servers
(or other). You simply listen for requests as normal, but check if

  req.upgrade === true

If so, this will be the last request of the connection. It's your job now to
hijack req.connection and start reading from it. req.upgradeHead is a buffer
containing the first part of the new protocol communication (in the case it
arrived on the same packet).

This needs tests and documentation. API subject to change.",https://api.github.com/repos/nodejs/node/git/commits/760bba55186eba039ca00e532f7813d2aea450a2,2010-04-14,API subject to change.
339,MDY6Q29tbWl0MjcxOTM3Nzk6NTdlYTA3YWM5MTJkODhmYjk0N2E5NWZmZDUwMmMyM2YyZDYwZjhiOQ==,Micheil Smith,Ryan Dahl,"Moving the http.js, net.js FreeList to being standalone.",https://api.github.com/repos/nodejs/node/git/commits/57ea07ac912d88fb947a95ffd502c23f2d60f8b9,2010-04-12,Moving the net.js FreeList to being standalone.
339,MDY6Q29tbWl0MjcxOTM3Nzk6NTdlYTA3YWM5MTJkODhmYjk0N2E5NWZmZDUwMmMyM2YyZDYwZjhiOQ==,Micheil Smith,Ryan Dahl,"Moving the http.js, net.js FreeList to being standalone.",https://api.github.com/repos/nodejs/node/git/commits/57ea07ac912d88fb947a95ffd502c23f2d60f8b9,2010-04-12,
340,MDY6Q29tbWl0MjcxOTM3Nzk6Yjc5NDdlNDVjMDkyZGY4YjAzMmYzYjY4OWEwMjBlZDk3MmVmNDg1YQ==,Ryan Dahl,Ryan Dahl,Recycle http client parsers,https://api.github.com/repos/nodejs/node/git/commits/b7947e45c092df8b032f3b689a020ed972ef485a,2010-04-12,Recycle client parsers
340,MDY6Q29tbWl0MjcxOTM3Nzk6Yjc5NDdlNDVjMDkyZGY4YjAzMmYzYjY4OWEwMjBlZDk3MmVmNDg1YQ==,Ryan Dahl,Ryan Dahl,Recycle http client parsers,https://api.github.com/repos/nodejs/node/git/commits/b7947e45c092df8b032f3b689a020ed972ef485a,2010-04-12,
341,MDY6Q29tbWl0MjcxOTM3Nzk6ODAxNzQzOTJiYmNlYzBjZWMxYzc5NjI4ZmIwOWFmMzUxYTY0ODhhYQ==,Rhys Jones,Rhys Jones,Moved Credentials into crypto module. Added node_crypto into crypto module,https://api.github.com/repos/nodejs/node/git/commits/80174392bbcec0cec1c79628fb09af351a6488aa,2010-04-12,Moved Credentials into crypto module. Added node_crypto into crypto module
341,MDY6Q29tbWl0MjcxOTM3Nzk6ODAxNzQzOTJiYmNlYzBjZWMxYzc5NjI4ZmIwOWFmMzUxYTY0ODhhYQ==,Rhys Jones,Rhys Jones,Moved Credentials into crypto module. Added node_crypto into crypto module,https://api.github.com/repos/nodejs/node/git/commits/80174392bbcec0cec1c79628fb09af351a6488aa,2010-04-12,
342,MDY6Q29tbWl0MjcxOTM3Nzk6NDViOGQyNGVhNjBiNDJmM2MyMDkzMmE5NmI1N2YxNDhkN2JmNThmNA==,Rhys Jones,Rhys Jones,Added https server support,https://api.github.com/repos/nodejs/node/git/commits/45b8d24ea60b42f3c20932a96b57f148d7bf58f4,2010-04-12,Added server support
342,MDY6Q29tbWl0MjcxOTM3Nzk6NDViOGQyNGVhNjBiNDJmM2MyMDkzMmE5NmI1N2YxNDhkN2JmNThmNA==,Rhys Jones,Rhys Jones,Added https server support,https://api.github.com/repos/nodejs/node/git/commits/45b8d24ea60b42f3c20932a96b57f148d7bf58f4,2010-04-12,
343,MDY6Q29tbWl0MjcxOTM3Nzk6YzlmNzFhODA3YzEwNmZkNTM5MGUzNTA1NDQ0NWEzZjNiODExMTkzMQ==,Rhys Jones,Rhys Jones,Added https support,https://api.github.com/repos/nodejs/node/git/commits/c9f71a807c106fd5390e35054445a3f3b8111931,2010-04-12,Added support
343,MDY6Q29tbWl0MjcxOTM3Nzk6YzlmNzFhODA3YzEwNmZkNTM5MGUzNTA1NDQ0NWEzZjNiODExMTkzMQ==,Rhys Jones,Rhys Jones,Added https support,https://api.github.com/repos/nodejs/node/git/commits/c9f71a807c106fd5390e35054445a3f3b8111931,2010-04-12,
344,MDY6Q29tbWl0MjcxOTM3Nzk6NjJkOTg1MmMzZDZlZDMyODI1YWJmZDc5NjQ1YzcyYTY2ZmIwMGU2Zg==,Tim Caswell,Ryan Dahl,Replace slow and broken for..in loops with faster for loops over the keys.,https://api.github.com/repos/nodejs/node/git/commits/62d9852c3d6ed32825abfd79645c72a66fb00e6f,2010-04-12,Replace slow and broken for..in loops with faster for loops over the keys.
344,MDY6Q29tbWl0MjcxOTM3Nzk6NjJkOTg1MmMzZDZlZDMyODI1YWJmZDc5NjQ1YzcyYTY2ZmIwMGU2Zg==,Tim Caswell,Ryan Dahl,Replace slow and broken for..in loops with faster for loops over the keys.,https://api.github.com/repos/nodejs/node/git/commits/62d9852c3d6ed32825abfd79645c72a66fb00e6f,2010-04-12,
345,MDY6Q29tbWl0MjcxOTM3Nzk6ODU1M2U4YTE1ZDBmZjM3MTVmYjNhOGEwMjA2MmRlOWRjYjkzMzliNg==,Ryan Dahl,Ryan Dahl,Add incoming.httpVersion,https://api.github.com/repos/nodejs/node/git/commits/8553e8a15d0ff3715fb3a8a02062de9dcb9339b6,2010-04-11,Add incoming.httpVersion
345,MDY6Q29tbWl0MjcxOTM3Nzk6ODU1M2U4YTE1ZDBmZjM3MTVmYjNhOGEwMjA2MmRlOWRjYjkzMzliNg==,Ryan Dahl,Ryan Dahl,Add incoming.httpVersion,https://api.github.com/repos/nodejs/node/git/commits/8553e8a15d0ff3715fb3a8a02062de9dcb9339b6,2010-04-11,
346,MDY6Q29tbWl0MjcxOTM3Nzk6MDhhMDliYjUwYWJjYzM1NTk0MWY2MmRlZWNlY2U1Y2I2ZjNhMjM4Mg==,Ryan Dahl,Ryan Dahl,Use some more Binary/F methods for Buffer,https://api.github.com/repos/nodejs/node/git/commits/08a09bb50abcc355941f62deecece5cb6f3a2382,2010-04-08,Use some more Binary/F methods for Buffer
346,MDY6Q29tbWl0MjcxOTM3Nzk6MDhhMDliYjUwYWJjYzM1NTk0MWY2MmRlZWNlY2U1Y2I2ZjNhMjM4Mg==,Ryan Dahl,Ryan Dahl,Use some more Binary/F methods for Buffer,https://api.github.com/repos/nodejs/node/git/commits/08a09bb50abcc355941f62deecece5cb6f3a2382,2010-04-08,
347,MDY6Q29tbWl0MjcxOTM3Nzk6NTBjNzBhYzcxNDk5MDdmMDBjZWEwMWRmYjM5NzAzNTkwYzU0ZGU0Mg==,Ryan Dahl,Ryan Dahl,"Update stream API: forceClose() -> destroy(),  close() -> end()",https://api.github.com/repos/nodejs/node/git/commits/50c70ac7149907f00cea01dfb39703590c54de42,2010-04-08,"Update stream API: forceClose() -> destroy(),  close() -> end()"
347,MDY6Q29tbWl0MjcxOTM3Nzk6NTBjNzBhYzcxNDk5MDdmMDBjZWEwMWRmYjM5NzAzNTkwYzU0ZGU0Mg==,Ryan Dahl,Ryan Dahl,"Update stream API: forceClose() -> destroy(),  close() -> end()",https://api.github.com/repos/nodejs/node/git/commits/50c70ac7149907f00cea01dfb39703590c54de42,2010-04-08,
348,MDY6Q29tbWl0MjcxOTM3Nzk6MWI3NThlZjI2OGMxYjgzYzhjODM4YjJjYWMxMGYxNzRhNzhjMzA2NA==,Ryan Dahl,Ryan Dahl,Allow stream to write on close,https://api.github.com/repos/nodejs/node/git/commits/1b758ef268c1b83c8c838b2cac10f174a78c3064,2010-04-05,Allow stream to write on close
348,MDY6Q29tbWl0MjcxOTM3Nzk6MWI3NThlZjI2OGMxYjgzYzhjODM4YjJjYWMxMGYxNzRhNzhjMzA2NA==,Ryan Dahl,Ryan Dahl,Allow stream to write on close,https://api.github.com/repos/nodejs/node/git/commits/1b758ef268c1b83c8c838b2cac10f174a78c3064,2010-04-05,
349,MDY6Q29tbWl0MjcxOTM3Nzk6NTM1MzBlOTgxYTgxZTI1ZTUyN2U2ZTZlZTNhZWFlOGIxYmVhYWM1OQ==,Ryan Dahl,Ryan Dahl,Fix test-http-chunked. Need to check for \0 at end of utf8 strings,https://api.github.com/repos/nodejs/node/git/commits/53530e981a81e25e527e6e6ee3aeae8b1beaac59,2010-04-02,Fix test-Need to check for \0 at end of utf8 strings
349,MDY6Q29tbWl0MjcxOTM3Nzk6NTM1MzBlOTgxYTgxZTI1ZTUyN2U2ZTZlZTNhZWFlOGIxYmVhYWM1OQ==,Ryan Dahl,Ryan Dahl,Fix test-http-chunked. Need to check for \0 at end of utf8 strings,https://api.github.com/repos/nodejs/node/git/commits/53530e981a81e25e527e6e6ee3aeae8b1beaac59,2010-04-02,
350,MDY6Q29tbWl0MjcxOTM3Nzk6MzU0NjEwNmM0M2MwOGFlZDBmM2U0NWY4MWY4MjQ5NmM5YzUxZjZiOQ==,Ryan Dahl,Ryan Dahl,Add req.connection and res.connection,https://api.github.com/repos/nodejs/node/git/commits/3546106c43c08aed0f3e45f81f82496c9c51f6b9,2010-03-24,Add req.connection and res.connection
350,MDY6Q29tbWl0MjcxOTM3Nzk6MzU0NjEwNmM0M2MwOGFlZDBmM2U0NWY4MWY4MjQ5NmM5YzUxZjZiOQ==,Ryan Dahl,Ryan Dahl,Add req.connection and res.connection,https://api.github.com/repos/nodejs/node/git/commits/3546106c43c08aed0f3e45f81f82496c9c51f6b9,2010-03-24,
351,MDY6Q29tbWl0MjcxOTM3Nzk6NmYyMWFjMTI4MjdhYWI0ZTljNzQ1NDQyZWExOTJmZjg3MDAxNjFhNA==,Ryan Dahl,Ryan Dahl,"Don't free http parser for the client!

Fixes test-http-client-race.js, test-http.js",https://api.github.com/repos/nodejs/node/git/commits/6f21ac12827aab4e9c745442ea192ff8700161a4,2010-03-24,Don't free parser for the client!
351,MDY6Q29tbWl0MjcxOTM3Nzk6NmYyMWFjMTI4MjdhYWI0ZTljNzQ1NDQyZWExOTJmZjg3MDAxNjFhNA==,Ryan Dahl,Ryan Dahl,"Don't free http parser for the client!

Fixes test-http-client-race.js, test-http.js",https://api.github.com/repos/nodejs/node/git/commits/6f21ac12827aab4e9c745442ea192ff8700161a4,2010-03-24,Fixes test-test-http.js
352,MDY6Q29tbWl0MjcxOTM3Nzk6NWM2ZjA2M2VmMjVlNzIyM2UxOTUwZDlkZTZmNGYwYWE3MjAxY2VkMg==,Ryan Dahl,Ryan Dahl,snake to camel in HTTP,https://api.github.com/repos/nodejs/node/git/commits/5c6f063ef25e7223e1950d9de6f4f0aa7201ced2,2010-03-24,snake to camel in HTTP
352,MDY6Q29tbWl0MjcxOTM3Nzk6NWM2ZjA2M2VmMjVlNzIyM2UxOTUwZDlkZTZmNGYwYWE3MjAxY2VkMg==,Ryan Dahl,Ryan Dahl,snake to camel in HTTP,https://api.github.com/repos/nodejs/node/git/commits/5c6f063ef25e7223e1950d9de6f4f0aa7201ced2,2010-03-24,
353,MDY6Q29tbWl0MjcxOTM3Nzk6NzBmZmRmNWRiOWQ2ODdiNGE2OGQ4ZmViNTNjNWU3ZGUzMzhjZGQ4NQ==,Ryan Dahl,Ryan Dahl,Fix HTTP keep-alive,https://api.github.com/repos/nodejs/node/git/commits/70ffdf5db9d687b4a68d8feb53c5e7de338cdd85,2010-03-24,Fix HTTP keep-alive
353,MDY6Q29tbWl0MjcxOTM3Nzk6NzBmZmRmNWRiOWQ2ODdiNGE2OGQ4ZmViNTNjNWU3ZGUzMzhjZGQ4NQ==,Ryan Dahl,Ryan Dahl,Fix HTTP keep-alive,https://api.github.com/repos/nodejs/node/git/commits/70ffdf5db9d687b4a68d8feb53c5e7de338cdd85,2010-03-24,
354,MDY6Q29tbWl0MjcxOTM3Nzk6NmU2MDNjY2JlMmRlYzMzOTRlYTBhZjg2ZTIyNmJmYzllZWE3YmNkNQ==,isaacs,Ryan Dahl,Fix debug statement that was using puts instead of debug(),https://api.github.com/repos/nodejs/node/git/commits/6e603ccbe2dec3394ea0af86e226bfc9eea7bcd5,2010-03-23,Fix debug statement that was using puts instead of debug()
354,MDY6Q29tbWl0MjcxOTM3Nzk6NmU2MDNjY2JlMmRlYzMzOTRlYTBhZjg2ZTIyNmJmYzllZWE3YmNkNQ==,isaacs,Ryan Dahl,Fix debug statement that was using puts instead of debug(),https://api.github.com/repos/nodejs/node/git/commits/6e603ccbe2dec3394ea0af86e226bfc9eea7bcd5,2010-03-23,
355,MDY6Q29tbWl0MjcxOTM3Nzk6ZWJlMjcyMWNiZmRiMmE5YjdlZDE3N2Q0NWIzYzdlZWQ5MmYxODgzNw==,Ryan Dahl,Ryan Dahl,"Don't use sys.debug, it gets preprocessed out

Problem introduced in b29f78772ec183b4e4aee0f67f95c599a7d8060b",https://api.github.com/repos/nodejs/node/git/commits/ebe2721cbfdb2a9b7ed177d45b3c7eed92f18837,2010-03-20,"Don't use sys.debug, it gets preprocessed out"
355,MDY6Q29tbWl0MjcxOTM3Nzk6ZWJlMjcyMWNiZmRiMmE5YjdlZDE3N2Q0NWIzYzdlZWQ5MmYxODgzNw==,Ryan Dahl,Ryan Dahl,"Don't use sys.debug, it gets preprocessed out

Problem introduced in b29f78772ec183b4e4aee0f67f95c599a7d8060b",https://api.github.com/repos/nodejs/node/git/commits/ebe2721cbfdb2a9b7ed177d45b3c7eed92f18837,2010-03-20,Problem introduced in b29f78772ec183b4e4aee0f67f95c599a7d8060b
356,MDY6Q29tbWl0MjcxOTM3Nzk6YWM2ODRmMzU4MzkxNDAwYTQ1MzNmYzgxZmE3YzUyMjA5MGFlYzg4NA==,Ryan Dahl,Ryan Dahl,Add legacy 'binary' encoding/decoding methods to Buffer,https://api.github.com/repos/nodejs/node/git/commits/ac684f358391400a4533fc81fa7c522090aec884,2010-03-20,Add legacy 'binary' encoding/decoding methods to Buffer
356,MDY6Q29tbWl0MjcxOTM3Nzk6YWM2ODRmMzU4MzkxNDAwYTQ1MzNmYzgxZmE3YzUyMjA5MGFlYzg4NA==,Ryan Dahl,Ryan Dahl,Add legacy 'binary' encoding/decoding methods to Buffer,https://api.github.com/repos/nodejs/node/git/commits/ac684f358391400a4533fc81fa7c522090aec884,2010-03-20,
357,MDY6Q29tbWl0MjcxOTM3Nzk6YjgwZjZlOWVkMTZmMzI5MjBlODFmOWFjZjc0OWQ3YmY5ZmFmMTMyMA==,Ryan Dahl,Ryan Dahl,http2 now default,https://api.github.com/repos/nodejs/node/git/commits/b80f6e9ed16f32920e81f9acf749d7bf9faf1320,2010-03-20,now default
357,MDY6Q29tbWl0MjcxOTM3Nzk6YjgwZjZlOWVkMTZmMzI5MjBlODFmOWFjZjc0OWQ3YmY5ZmFmMTMyMA==,Ryan Dahl,Ryan Dahl,http2 now default,https://api.github.com/repos/nodejs/node/git/commits/b80f6e9ed16f32920e81f9acf749d7bf9faf1320,2010-03-20,
358,MDY6Q29tbWl0MjcxOTM3Nzk6NjI3ZmI1YWRiYmMzMjRmYWU2NTdkMmM4ODUyMzIzNGU2ZDgzY2MxYw==,Ryan Dahl,Ryan Dahl,Load c++ modules on demand,https://api.github.com/repos/nodejs/node/git/commits/627fb5adbbc324fae657d2c88523234e6d83cc1c,2010-03-15,Load c++ modules on demand
358,MDY6Q29tbWl0MjcxOTM3Nzk6NjI3ZmI1YWRiYmMzMjRmYWU2NTdkMmM4ODUyMzIzNGU2ZDgzY2MxYw==,Ryan Dahl,Ryan Dahl,Load c++ modules on demand,https://api.github.com/repos/nodejs/node/git/commits/627fb5adbbc324fae657d2c88523234e6d83cc1c,2010-03-15,
359,MDY6Q29tbWl0MjcxOTM3Nzk6NGNjZGM1MDFkNDhhMGYxOThhMDQwZWU0NmY0ZGFiMjdhNjExYTQ4OQ==,Ryan Dahl,Ryan Dahl,"Include lib/ directory in node executable. Compile on demand.

Instead of installing the files in /usr/lib/node/libraries and loading them
from the file system, the files are built-in to the node executable.
However, they are only compiled on demand.

The reasoning is:
  1. Allow for more complex internal javascript. In particular,
  process.stdout and process.stdin can be js implemented streams.

  2. Ease system installs. Loading from disk each time is unnecessary
  overhead. Note that there is no ""system"" path for modules anymore. Only
  $HOME/.node_libraries.",https://api.github.com/repos/nodejs/node/git/commits/4ccdc501d48a0f198a040ee46f4dab27a611a489,2010-03-15,Include lib/ directory in node executable. Compile on demand.
359,MDY6Q29tbWl0MjcxOTM3Nzk6NGNjZGM1MDFkNDhhMGYxOThhMDQwZWU0NmY0ZGFiMjdhNjExYTQ4OQ==,Ryan Dahl,Ryan Dahl,"Include lib/ directory in node executable. Compile on demand.

Instead of installing the files in /usr/lib/node/libraries and loading them
from the file system, the files are built-in to the node executable.
However, they are only compiled on demand.

The reasoning is:
  1. Allow for more complex internal javascript. In particular,
  process.stdout and process.stdin can be js implemented streams.

  2. Ease system installs. Loading from disk each time is unnecessary
  overhead. Note that there is no ""system"" path for modules anymore. Only
  $HOME/.node_libraries.",https://api.github.com/repos/nodejs/node/git/commits/4ccdc501d48a0f198a040ee46f4dab27a611a489,2010-03-15,"Instead of installing the files in /usr/lib/node/libraries and loading them
from the file system, the files are built-in to the node executable"
359,MDY6Q29tbWl0MjcxOTM3Nzk6NGNjZGM1MDFkNDhhMGYxOThhMDQwZWU0NmY0ZGFiMjdhNjExYTQ4OQ==,Ryan Dahl,Ryan Dahl,"Include lib/ directory in node executable. Compile on demand.

Instead of installing the files in /usr/lib/node/libraries and loading them
from the file system, the files are built-in to the node executable.
However, they are only compiled on demand.

The reasoning is:
  1. Allow for more complex internal javascript. In particular,
  process.stdout and process.stdin can be js implemented streams.

  2. Ease system installs. Loading from disk each time is unnecessary
  overhead. Note that there is no ""system"" path for modules anymore. Only
  $HOME/.node_libraries.",https://api.github.com/repos/nodejs/node/git/commits/4ccdc501d48a0f198a040ee46f4dab27a611a489,2010-03-15,"However, they are only compiled on demand"
359,MDY6Q29tbWl0MjcxOTM3Nzk6NGNjZGM1MDFkNDhhMGYxOThhMDQwZWU0NmY0ZGFiMjdhNjExYTQ4OQ==,Ryan Dahl,Ryan Dahl,"Include lib/ directory in node executable. Compile on demand.

Instead of installing the files in /usr/lib/node/libraries and loading them
from the file system, the files are built-in to the node executable.
However, they are only compiled on demand.

The reasoning is:
  1. Allow for more complex internal javascript. In particular,
  process.stdout and process.stdin can be js implemented streams.

  2. Ease system installs. Loading from disk each time is unnecessary
  overhead. Note that there is no ""system"" path for modules anymore. Only
  $HOME/.node_libraries.",https://api.github.com/repos/nodejs/node/git/commits/4ccdc501d48a0f198a040ee46f4dab27a611a489,2010-03-15,The reasoning is
359,MDY6Q29tbWl0MjcxOTM3Nzk6NGNjZGM1MDFkNDhhMGYxOThhMDQwZWU0NmY0ZGFiMjdhNjExYTQ4OQ==,Ryan Dahl,Ryan Dahl,"Include lib/ directory in node executable. Compile on demand.

Instead of installing the files in /usr/lib/node/libraries and loading them
from the file system, the files are built-in to the node executable.
However, they are only compiled on demand.

The reasoning is:
  1. Allow for more complex internal javascript. In particular,
  process.stdout and process.stdin can be js implemented streams.

  2. Ease system installs. Loading from disk each time is unnecessary
  overhead. Note that there is no ""system"" path for modules anymore. Only
  $HOME/.node_libraries.",https://api.github.com/repos/nodejs/node/git/commits/4ccdc501d48a0f198a040ee46f4dab27a611a489,2010-03-15,  1
359,MDY6Q29tbWl0MjcxOTM3Nzk6NGNjZGM1MDFkNDhhMGYxOThhMDQwZWU0NmY0ZGFiMjdhNjExYTQ4OQ==,Ryan Dahl,Ryan Dahl,"Include lib/ directory in node executable. Compile on demand.

Instead of installing the files in /usr/lib/node/libraries and loading them
from the file system, the files are built-in to the node executable.
However, they are only compiled on demand.

The reasoning is:
  1. Allow for more complex internal javascript. In particular,
  process.stdout and process.stdin can be js implemented streams.

  2. Ease system installs. Loading from disk each time is unnecessary
  overhead. Note that there is no ""system"" path for modules anymore. Only
  $HOME/.node_libraries.",https://api.github.com/repos/nodejs/node/git/commits/4ccdc501d48a0f198a040ee46f4dab27a611a489,2010-03-15,Allow for more complex internal javascript
359,MDY6Q29tbWl0MjcxOTM3Nzk6NGNjZGM1MDFkNDhhMGYxOThhMDQwZWU0NmY0ZGFiMjdhNjExYTQ4OQ==,Ryan Dahl,Ryan Dahl,"Include lib/ directory in node executable. Compile on demand.

Instead of installing the files in /usr/lib/node/libraries and loading them
from the file system, the files are built-in to the node executable.
However, they are only compiled on demand.

The reasoning is:
  1. Allow for more complex internal javascript. In particular,
  process.stdout and process.stdin can be js implemented streams.

  2. Ease system installs. Loading from disk each time is unnecessary
  overhead. Note that there is no ""system"" path for modules anymore. Only
  $HOME/.node_libraries.",https://api.github.com/repos/nodejs/node/git/commits/4ccdc501d48a0f198a040ee46f4dab27a611a489,2010-03-15,"In particular,
  process.stdout and process.stdin can be js implemented streams"
359,MDY6Q29tbWl0MjcxOTM3Nzk6NGNjZGM1MDFkNDhhMGYxOThhMDQwZWU0NmY0ZGFiMjdhNjExYTQ4OQ==,Ryan Dahl,Ryan Dahl,"Include lib/ directory in node executable. Compile on demand.

Instead of installing the files in /usr/lib/node/libraries and loading them
from the file system, the files are built-in to the node executable.
However, they are only compiled on demand.

The reasoning is:
  1. Allow for more complex internal javascript. In particular,
  process.stdout and process.stdin can be js implemented streams.

  2. Ease system installs. Loading from disk each time is unnecessary
  overhead. Note that there is no ""system"" path for modules anymore. Only
  $HOME/.node_libraries.",https://api.github.com/repos/nodejs/node/git/commits/4ccdc501d48a0f198a040ee46f4dab27a611a489,2010-03-15,  2
359,MDY6Q29tbWl0MjcxOTM3Nzk6NGNjZGM1MDFkNDhhMGYxOThhMDQwZWU0NmY0ZGFiMjdhNjExYTQ4OQ==,Ryan Dahl,Ryan Dahl,"Include lib/ directory in node executable. Compile on demand.

Instead of installing the files in /usr/lib/node/libraries and loading them
from the file system, the files are built-in to the node executable.
However, they are only compiled on demand.

The reasoning is:
  1. Allow for more complex internal javascript. In particular,
  process.stdout and process.stdin can be js implemented streams.

  2. Ease system installs. Loading from disk each time is unnecessary
  overhead. Note that there is no ""system"" path for modules anymore. Only
  $HOME/.node_libraries.",https://api.github.com/repos/nodejs/node/git/commits/4ccdc501d48a0f198a040ee46f4dab27a611a489,2010-03-15,Ease system installs
359,MDY6Q29tbWl0MjcxOTM3Nzk6NGNjZGM1MDFkNDhhMGYxOThhMDQwZWU0NmY0ZGFiMjdhNjExYTQ4OQ==,Ryan Dahl,Ryan Dahl,"Include lib/ directory in node executable. Compile on demand.

Instead of installing the files in /usr/lib/node/libraries and loading them
from the file system, the files are built-in to the node executable.
However, they are only compiled on demand.

The reasoning is:
  1. Allow for more complex internal javascript. In particular,
  process.stdout and process.stdin can be js implemented streams.

  2. Ease system installs. Loading from disk each time is unnecessary
  overhead. Note that there is no ""system"" path for modules anymore. Only
  $HOME/.node_libraries.",https://api.github.com/repos/nodejs/node/git/commits/4ccdc501d48a0f198a040ee46f4dab27a611a489,2010-03-15,"Loading from disk each time is unnecessary
  overhead"
359,MDY6Q29tbWl0MjcxOTM3Nzk6NGNjZGM1MDFkNDhhMGYxOThhMDQwZWU0NmY0ZGFiMjdhNjExYTQ4OQ==,Ryan Dahl,Ryan Dahl,"Include lib/ directory in node executable. Compile on demand.

Instead of installing the files in /usr/lib/node/libraries and loading them
from the file system, the files are built-in to the node executable.
However, they are only compiled on demand.

The reasoning is:
  1. Allow for more complex internal javascript. In particular,
  process.stdout and process.stdin can be js implemented streams.

  2. Ease system installs. Loading from disk each time is unnecessary
  overhead. Note that there is no ""system"" path for modules anymore. Only
  $HOME/.node_libraries.",https://api.github.com/repos/nodejs/node/git/commits/4ccdc501d48a0f198a040ee46f4dab27a611a489,2010-03-15,"Note that there is no ""system"" path for modules anymore"
359,MDY6Q29tbWl0MjcxOTM3Nzk6NGNjZGM1MDFkNDhhMGYxOThhMDQwZWU0NmY0ZGFiMjdhNjExYTQ4OQ==,Ryan Dahl,Ryan Dahl,"Include lib/ directory in node executable. Compile on demand.

Instead of installing the files in /usr/lib/node/libraries and loading them
from the file system, the files are built-in to the node executable.
However, they are only compiled on demand.

The reasoning is:
  1. Allow for more complex internal javascript. In particular,
  process.stdout and process.stdin can be js implemented streams.

  2. Ease system installs. Loading from disk each time is unnecessary
  overhead. Note that there is no ""system"" path for modules anymore. Only
  $HOME/.node_libraries.",https://api.github.com/repos/nodejs/node/git/commits/4ccdc501d48a0f198a040ee46f4dab27a611a489,2010-03-15,"Only
  $HOME/.node_libraries."
360,MDY6Q29tbWl0MjcxOTM3Nzk6MDA0ZmFmMzg0NjkwYWE2N2NmZDM3N2U2ZWJjZmQxNjY3ZDVmMjQ4OQ==,Jed Schmidt,Ryan Dahl,"Added check to make sure writeHead() is called before write(), to prevent silent failure.",https://api.github.com/repos/nodejs/node/git/commits/004faf384690aa67cfd377e6ebcfd1667d5f2489,2010-03-14,"Added check to make sure writeHead() is called before write(), to prevent silent failure."
360,MDY6Q29tbWl0MjcxOTM3Nzk6MDA0ZmFmMzg0NjkwYWE2N2NmZDM3N2U2ZWJjZmQxNjY3ZDVmMjQ4OQ==,Jed Schmidt,Ryan Dahl,"Added check to make sure writeHead() is called before write(), to prevent silent failure.",https://api.github.com/repos/nodejs/node/git/commits/004faf384690aa67cfd377e6ebcfd1667d5f2489,2010-03-14,
361,MDY6Q29tbWl0MjcxOTM3Nzk6ZDE1MDBjZWU2ZTI3NTBiYjU3ZjczZjhlOGJmZDhjYTAzNGY5NjExMA==,Ryan Dahl,Ryan Dahl,Store connection in OutgoingMessage,https://api.github.com/repos/nodejs/node/git/commits/d1500cee6e2750bb57f73f8e8bfd8ca034f96110,2010-03-03,Store connection in OutgoingMessage
361,MDY6Q29tbWl0MjcxOTM3Nzk6ZDE1MDBjZWU2ZTI3NTBiYjU3ZjczZjhlOGJmZDhjYTAzNGY5NjExMA==,Ryan Dahl,Ryan Dahl,Store connection in OutgoingMessage,https://api.github.com/repos/nodejs/node/git/commits/d1500cee6e2750bb57f73f8e8bfd8ca034f96110,2010-03-03,
362,MDY6Q29tbWl0MjcxOTM3Nzk6OWQ0ZDIzMmVhYWExYWUwNDAzZWI0NzI3ZWUwM2U4NzQ5ZmExYzJjMw==,Ryan Dahl,Ryan Dahl,Factor out a http.Client._reconnect() function,https://api.github.com/repos/nodejs/node/git/commits/9d4d232eaaa1ae0403eb4727ee03e8749fa1c2c3,2010-03-03,Factor out a function
362,MDY6Q29tbWl0MjcxOTM3Nzk6OWQ0ZDIzMmVhYWExYWUwNDAzZWI0NzI3ZWUwM2U4NzQ5ZmExYzJjMw==,Ryan Dahl,Ryan Dahl,Factor out a http.Client._reconnect() function,https://api.github.com/repos/nodejs/node/git/commits/9d4d232eaaa1ae0403eb4727ee03e8749fa1c2c3,2010-03-03,
363,MDY6Q29tbWl0MjcxOTM3Nzk6NjRkMGUzMjhlOGEwMzI1MTIyM2RjYmJhOGM0Y2M5MjMxOTAzNmQxNg==,Ryan Dahl,Ryan Dahl,Remove unused EventEmitter object,https://api.github.com/repos/nodejs/node/git/commits/64d0e328e8a03251223dcbba8c4cc92319036d16,2010-03-03,Remove unused EventEmitter object
363,MDY6Q29tbWl0MjcxOTM3Nzk6NjRkMGUzMjhlOGEwMzI1MTIyM2RjYmJhOGM0Y2M5MjMxOTAzNmQxNg==,Ryan Dahl,Ryan Dahl,Remove unused EventEmitter object,https://api.github.com/repos/nodejs/node/git/commits/64d0e328e8a03251223dcbba8c4cc92319036d16,2010-03-03,
364,MDY6Q29tbWl0MjcxOTM3Nzk6YjAyMWE4NDVmN2QzNzEyYzZiODIxYTMwZWJmZTY5MTU2YzcwOGEyOA==,Ryan Dahl,Ryan Dahl,Move process.inherits to sys,https://api.github.com/repos/nodejs/node/git/commits/b021a845f7d3712c6b821a30ebfe69156c708a28,2010-03-01,Move process.inherits to sys
364,MDY6Q29tbWl0MjcxOTM3Nzk6YjAyMWE4NDVmN2QzNzEyYzZiODIxYTMwZWJmZTY5MTU2YzcwOGEyOA==,Ryan Dahl,Ryan Dahl,Move process.inherits to sys,https://api.github.com/repos/nodejs/node/git/commits/b021a845f7d3712c6b821a30ebfe69156c708a28,2010-03-01,
365,MDY6Q29tbWl0MjcxOTM3Nzk6YjFiODQ5NjBjZWRjYmMwMzNiMjhjMDY0NGJlYWRhNjE0YjAwNmE5Yg==,Benjamin Thomas,Ryan Dahl,Rename writeHeader to writeHead,https://api.github.com/repos/nodejs/node/git/commits/b1b84960cedcbc033b28c0644beada614b006a9b,2010-02-25,Rename writeHeader to writeHead
365,MDY6Q29tbWl0MjcxOTM3Nzk6YjFiODQ5NjBjZWRjYmMwMzNiMjhjMDY0NGJlYWRhNjE0YjAwNmE5Yg==,Benjamin Thomas,Ryan Dahl,Rename writeHeader to writeHead,https://api.github.com/repos/nodejs/node/git/commits/b1b84960cedcbc033b28c0644beada614b006a9b,2010-02-25,
366,MDY6Q29tbWl0MjcxOTM3Nzk6MTJkNzhjZDFkZjA4NGZkOWVkNjNkMTFmYWI5MjlhMWFmMGM0NmJjYQ==,Ryan Dahl,Ryan Dahl,Rename sendHeader to writeHeader; allow reasonPhrase,https://api.github.com/repos/nodejs/node/git/commits/12d78cd1df084fd9ed63d11fab929a1af0c46bca,2010-02-22,Rename sendHeader to writeHeader; allow reasonPhrase
366,MDY6Q29tbWl0MjcxOTM3Nzk6MTJkNzhjZDFkZjA4NGZkOWVkNjNkMTFmYWI5MjlhMWFmMGM0NmJjYQ==,Ryan Dahl,Ryan Dahl,Rename sendHeader to writeHeader; allow reasonPhrase,https://api.github.com/repos/nodejs/node/git/commits/12d78cd1df084fd9ed63d11fab929a1af0c46bca,2010-02-22,
367,MDY6Q29tbWl0MjcxOTM3Nzk6YzA5NGRkYTUzY2E4MmQxNGFkYmE0ZjYyMjFhZjFjMGQ1ZjcyNDgxMQ==,Ryan Dahl,Ryan Dahl,Move errors for readPause and readResume,https://api.github.com/repos/nodejs/node/git/commits/c094dda53ca82d14adba4f6221af1c0d5f724811,2010-02-22,Move errors for readPause and readResume
367,MDY6Q29tbWl0MjcxOTM3Nzk6YzA5NGRkYTUzY2E4MmQxNGFkYmE0ZjYyMjFhZjFjMGQ1ZjcyNDgxMQ==,Ryan Dahl,Ryan Dahl,Move errors for readPause and readResume,https://api.github.com/repos/nodejs/node/git/commits/c094dda53ca82d14adba4f6221af1c0d5f724811,2010-02-22,
368,MDY6Q29tbWl0MjcxOTM3Nzk6ZDBmMmQ0NjVhYThlMDU3NTk1ZTk4YWY0MjY4NWQ4NDMzNzY0ODhhOA==,Ryan Dahl,Ryan Dahl,http.cat no longer uses Promise,https://api.github.com/repos/nodejs/node/git/commits/d0f2d465aa8e057595e98af42685d843376488a8,2010-02-20,no longer uses Promise
368,MDY6Q29tbWl0MjcxOTM3Nzk6ZDBmMmQ0NjVhYThlMDU3NTk1ZTk4YWY0MjY4NWQ4NDMzNzY0ODhhOA==,Ryan Dahl,Ryan Dahl,http.cat no longer uses Promise,https://api.github.com/repos/nodejs/node/git/commits/d0f2d465aa8e057595e98af42685d843376488a8,2010-02-20,
369,MDY6Q29tbWl0MjcxOTM3Nzk6NTAxM2JmMTc4MTk1ZjkxYzM2ODE0NjU4OTM4YTcxOTMzMTBlYTkzMw==,Ryan Dahl,Ryan Dahl,API: OutgoingMessage.prototype.finish() renamed to close(),https://api.github.com/repos/nodejs/node/git/commits/5013bf178195f91c36814658938a7193310ea933,2010-02-17,API: OutgoingMessage.prototype.finish() renamed to close()
369,MDY6Q29tbWl0MjcxOTM3Nzk6NTAxM2JmMTc4MTk1ZjkxYzM2ODE0NjU4OTM4YTcxOTMzMTBlYTkzMw==,Ryan Dahl,Ryan Dahl,API: OutgoingMessage.prototype.finish() renamed to close(),https://api.github.com/repos/nodejs/node/git/commits/5013bf178195f91c36814658938a7193310ea933,2010-02-17,
370,MDY6Q29tbWl0MjcxOTM3Nzk6YWU4NWQ5YWY5N2I0ZGFlNDBlNmIwNGFkZGQ0NmRkMTI4MDk5ZGRiNw==,Ryan Dahl,Ryan Dahl,"API: Make request/response object closer to stream interface

- sendBody() renamed to write()
- 'body' event renamed to 'data'
- 'complete' event renamed to 'end'",https://api.github.com/repos/nodejs/node/git/commits/ae85d9af97b4dae40e6b04addd46dd128099ddb7,2010-02-17,API: Make request/response object closer to stream interface
370,MDY6Q29tbWl0MjcxOTM3Nzk6YWU4NWQ5YWY5N2I0ZGFlNDBlNmIwNGFkZGQ0NmRkMTI4MDk5ZGRiNw==,Ryan Dahl,Ryan Dahl,"API: Make request/response object closer to stream interface

- sendBody() renamed to write()
- 'body' event renamed to 'data'
- 'complete' event renamed to 'end'",https://api.github.com/repos/nodejs/node/git/commits/ae85d9af97b4dae40e6b04addd46dd128099ddb7,2010-02-17,"- sendBody() renamed to write()
- 'body' event renamed to 'data'
- 'complete' event renamed to 'end'"
371,MDY6Q29tbWl0MjcxOTM3Nzk6MjNjZjUwMmRiNzc5ZTU3NDgzNDEwMDkyYTk5MWE3NzRiMzBlZGM2Ng==,Ryan Dahl,Ryan Dahl,API: connection.send() renamed to connection.write(),https://api.github.com/repos/nodejs/node/git/commits/23cf502db779e57483410092a991a774b30edc66,2010-02-16,API: connection.send() renamed to connection.write()
371,MDY6Q29tbWl0MjcxOTM3Nzk6MjNjZjUwMmRiNzc5ZTU3NDgzNDEwMDkyYTk5MWE3NzRiMzBlZGM2Ng==,Ryan Dahl,Ryan Dahl,API: connection.send() renamed to connection.write(),https://api.github.com/repos/nodejs/node/git/commits/23cf502db779e57483410092a991a774b30edc66,2010-02-16,
372,MDY6Q29tbWl0MjcxOTM3Nzk6YmMxN2Q5NGEwYTVkMWU4ZDJiNDMyYzQyNGI3ZGVmNjU1NmZjMWFiZQ==,Ryan Dahl,Ryan Dahl,"API: tcp events 'receive' to 'data', 'eof' to 'end'

No deprecation messages. Not sure how...",https://api.github.com/repos/nodejs/node/git/commits/bc17d94a0a5d1e8d2b432c424b7def6556fc1abe,2010-02-12,"API: tcp events 'receive' to 'data', 'eof' to 'end'"
372,MDY6Q29tbWl0MjcxOTM3Nzk6YmMxN2Q5NGEwYTVkMWU4ZDJiNDMyYzQyNGI3ZGVmNjU1NmZjMWFiZQ==,Ryan Dahl,Ryan Dahl,"API: tcp events 'receive' to 'data', 'eof' to 'end'

No deprecation messages. Not sure how...",https://api.github.com/repos/nodejs/node/git/commits/bc17d94a0a5d1e8d2b432c424b7def6556fc1abe,2010-02-12,No deprecation messages
372,MDY6Q29tbWl0MjcxOTM3Nzk6YmMxN2Q5NGEwYTVkMWU4ZDJiNDMyYzQyNGI3ZGVmNjU1NmZjMWFiZQ==,Ryan Dahl,Ryan Dahl,"API: tcp events 'receive' to 'data', 'eof' to 'end'

No deprecation messages. Not sure how...",https://api.github.com/repos/nodejs/node/git/commits/bc17d94a0a5d1e8d2b432c424b7def6556fc1abe,2010-02-12,Not sure how...
373,MDY6Q29tbWl0MjcxOTM3Nzk6MWJiNTI5NDdlMDZkNTA0N2Q0ZDllOTk0NTEzN2ZjYjhjMTg2ZDU4MQ==,Ryan Dahl,Ryan Dahl,Forgot to include fix from HTTP client bug (30b0522),https://api.github.com/repos/nodejs/node/git/commits/1bb52947e06d5047d4d9e9945137fcb8c186d581,2010-01-27,Forgot to include fix from HTTP client bug (30b0522)
373,MDY6Q29tbWl0MjcxOTM3Nzk6MWJiNTI5NDdlMDZkNTA0N2Q0ZDllOTk0NTEzN2ZjYjhjMTg2ZDU4MQ==,Ryan Dahl,Ryan Dahl,Forgot to include fix from HTTP client bug (30b0522),https://api.github.com/repos/nodejs/node/git/commits/1bb52947e06d5047d4d9e9945137fcb8c186d581,2010-01-27,
374,MDY6Q29tbWl0MjcxOTM3Nzk6NGUxNmUzODZmZWM2NzViNTc2NjY5ZTY3ZjI1ZWZlNDc4NTRmZmVmNg==,Michaeljohn Clement,Ryan Dahl,set default encoding in sendBody,https://api.github.com/repos/nodejs/node/git/commits/4e16e386fec675b576669e67f25efe47854ffef6,2010-01-19,set default encoding in sendBody
374,MDY6Q29tbWl0MjcxOTM3Nzk6NGUxNmUzODZmZWM2NzViNTc2NjY5ZTY3ZjI1ZWZlNDc4NTRmZmVmNg==,Michaeljohn Clement,Ryan Dahl,set default encoding in sendBody,https://api.github.com/repos/nodejs/node/git/commits/4e16e386fec675b576669e67f25efe47854ffef6,2010-01-19,
375,MDY6Q29tbWl0MjcxOTM3Nzk6NzAyOTNhNDNjOWQ0MDc1MTY1ZTJmN2Y2MjNmYTg2MzM5ZWI5ZDI3Zg==,Ryan Dahl,Ryan Dahl,API: Move Promise and EventEmitter into 'events' module,https://api.github.com/repos/nodejs/node/git/commits/70293a43c9d4075165e2f7f623fa86339eb9d27f,2010-01-15,API: Move Promise and EventEmitter into 'events' module
375,MDY6Q29tbWl0MjcxOTM3Nzk6NzAyOTNhNDNjOWQ0MDc1MTY1ZTJmN2Y2MjNmYTg2MzM5ZWI5ZDI3Zg==,Ryan Dahl,Ryan Dahl,API: Move Promise and EventEmitter into 'events' module,https://api.github.com/repos/nodejs/node/git/commits/70293a43c9d4075165e2f7f623fa86339eb9d27f,2010-01-15,
376,MDY6Q29tbWl0MjcxOTM3Nzk6MmIzZDllNGFkMDc3MzkzZWEyYWYwZjRkNDVkNGMwMGMwMDA3MWRjZA==,isaacs,Ryan Dahl,"Use ""url"" module instead of ""uri"" module in http.js.

Deprecate the URI module and remove tests for it.
- Rename ""uri"" to ""url"".
- Use the ""url"" module instead of the ""uri"" module.
- Remove the url parsing from http.js
- Update http.cat with the changed field names.
- Update tests for changes to http.js
- Update documentation for changes in http.js",https://api.github.com/repos/nodejs/node/git/commits/2b3d9e4ad077393ea2af0f4d45d4c00c00071dcd,2010-01-05,"Use ""url"" module instead of ""uri"" module in "
376,MDY6Q29tbWl0MjcxOTM3Nzk6MmIzZDllNGFkMDc3MzkzZWEyYWYwZjRkNDVkNGMwMGMwMDA3MWRjZA==,isaacs,Ryan Dahl,"Use ""url"" module instead of ""uri"" module in http.js.

Deprecate the URI module and remove tests for it.
- Rename ""uri"" to ""url"".
- Use the ""url"" module instead of the ""uri"" module.
- Remove the url parsing from http.js
- Update http.cat with the changed field names.
- Update tests for changes to http.js
- Update documentation for changes in http.js",https://api.github.com/repos/nodejs/node/git/commits/2b3d9e4ad077393ea2af0f4d45d4c00c00071dcd,2010-01-05,Deprecate the URI module and remove tests for it
376,MDY6Q29tbWl0MjcxOTM3Nzk6MmIzZDllNGFkMDc3MzkzZWEyYWYwZjRkNDVkNGMwMGMwMDA3MWRjZA==,isaacs,Ryan Dahl,"Use ""url"" module instead of ""uri"" module in http.js.

Deprecate the URI module and remove tests for it.
- Rename ""uri"" to ""url"".
- Use the ""url"" module instead of the ""uri"" module.
- Remove the url parsing from http.js
- Update http.cat with the changed field names.
- Update tests for changes to http.js
- Update documentation for changes in http.js",https://api.github.com/repos/nodejs/node/git/commits/2b3d9e4ad077393ea2af0f4d45d4c00c00071dcd,2010-01-05,"- Rename ""uri"" to ""url"""
376,MDY6Q29tbWl0MjcxOTM3Nzk6MmIzZDllNGFkMDc3MzkzZWEyYWYwZjRkNDVkNGMwMGMwMDA3MWRjZA==,isaacs,Ryan Dahl,"Use ""url"" module instead of ""uri"" module in http.js.

Deprecate the URI module and remove tests for it.
- Rename ""uri"" to ""url"".
- Use the ""url"" module instead of the ""uri"" module.
- Remove the url parsing from http.js
- Update http.cat with the changed field names.
- Update tests for changes to http.js
- Update documentation for changes in http.js",https://api.github.com/repos/nodejs/node/git/commits/2b3d9e4ad077393ea2af0f4d45d4c00c00071dcd,2010-01-05,"- Use the ""url"" module instead of the ""uri"" module"
376,MDY6Q29tbWl0MjcxOTM3Nzk6MmIzZDllNGFkMDc3MzkzZWEyYWYwZjRkNDVkNGMwMGMwMDA3MWRjZA==,isaacs,Ryan Dahl,"Use ""url"" module instead of ""uri"" module in http.js.

Deprecate the URI module and remove tests for it.
- Rename ""uri"" to ""url"".
- Use the ""url"" module instead of the ""uri"" module.
- Remove the url parsing from http.js
- Update http.cat with the changed field names.
- Update tests for changes to http.js
- Update documentation for changes in http.js",https://api.github.com/repos/nodejs/node/git/commits/2b3d9e4ad077393ea2af0f4d45d4c00c00071dcd,2010-01-05,- Remove the url parsing from - Update with the changed field names
376,MDY6Q29tbWl0MjcxOTM3Nzk6MmIzZDllNGFkMDc3MzkzZWEyYWYwZjRkNDVkNGMwMGMwMDA3MWRjZA==,isaacs,Ryan Dahl,"Use ""url"" module instead of ""uri"" module in http.js.

Deprecate the URI module and remove tests for it.
- Rename ""uri"" to ""url"".
- Use the ""url"" module instead of the ""uri"" module.
- Remove the url parsing from http.js
- Update http.cat with the changed field names.
- Update tests for changes to http.js
- Update documentation for changes in http.js",https://api.github.com/repos/nodejs/node/git/commits/2b3d9e4ad077393ea2af0f4d45d4c00c00071dcd,2010-01-05,- Update tests for changes to - Update documentation for changes in http.js
377,MDY6Q29tbWl0MjcxOTM3Nzk6M2QyNGUxMTllMDZmZTIzMzg2ZTA2OGI1YjgzODA2ZDkxNzM1Y2M5Nw==,Michaeljohn Clement,Ryan Dahl,"don't chunk responses to HTTP/1.0 clients, even if they send Connection: Keep-Alive (e.g. wget)",https://api.github.com/repos/nodejs/node/git/commits/3d24e119e06fe23386e068b5b83806d91735cc97,2009-12-23,"don't chunk responses to HTTP/1.0 clients, even if they send Connection: Keep-Alive (e.g. wget)"
377,MDY6Q29tbWl0MjcxOTM3Nzk6M2QyNGUxMTllMDZmZTIzMzg2ZTA2OGI1YjgzODA2ZDkxNzM1Y2M5Nw==,Michaeljohn Clement,Ryan Dahl,"don't chunk responses to HTTP/1.0 clients, even if they send Connection: Keep-Alive (e.g. wget)",https://api.github.com/repos/nodejs/node/git/commits/3d24e119e06fe23386e068b5b83806d91735cc97,2009-12-23,
378,MDY6Q29tbWl0MjcxOTM3Nzk6ZjY1YjM2ZWVjMWUzYmYwNzMwN2U5MjY5ODFiM2VjNTdhMDE0NWMxZg==,isaacs,Ryan Dahl,Use the new uri parser.,https://api.github.com/repos/nodejs/node/git/commits/f65b36eec1e3bf07307e926981b3ec57a0145c1f,2009-12-11,Use the new uri parser.
378,MDY6Q29tbWl0MjcxOTM3Nzk6ZjY1YjM2ZWVjMWUzYmYwNzMwN2U5MjY5ODFiM2VjNTdhMDE0NWMxZg==,isaacs,Ryan Dahl,Use the new uri parser.,https://api.github.com/repos/nodejs/node/git/commits/f65b36eec1e3bf07307e926981b3ec57a0145c1f,2009-12-11,
379,MDY6Q29tbWl0MjcxOTM3Nzk6NTAxYjRhNTRiZTUxODhlMDYxOTQ1OTcwMTBiNWYxMzA2N2RhMWNhZg==,visionmedia,Ryan Dahl,"Export STATUS_CODES

Express (my framework) uses them as a default
response body when non is present. Others
might use them for something as well.

Beats duplicating the list :D",https://api.github.com/repos/nodejs/node/git/commits/501b4a54be5188e06194597010b5f13067da1caf,2009-12-08,Export STATUS_CODES
379,MDY6Q29tbWl0MjcxOTM3Nzk6NTAxYjRhNTRiZTUxODhlMDYxOTQ1OTcwMTBiNWYxMzA2N2RhMWNhZg==,visionmedia,Ryan Dahl,"Export STATUS_CODES

Express (my framework) uses them as a default
response body when non is present. Others
might use them for something as well.

Beats duplicating the list :D",https://api.github.com/repos/nodejs/node/git/commits/501b4a54be5188e06194597010b5f13067da1caf,2009-12-08,"Express (my framework) uses them as a default
response body when non is present"
379,MDY6Q29tbWl0MjcxOTM3Nzk6NTAxYjRhNTRiZTUxODhlMDYxOTQ1OTcwMTBiNWYxMzA2N2RhMWNhZg==,visionmedia,Ryan Dahl,"Export STATUS_CODES

Express (my framework) uses them as a default
response body when non is present. Others
might use them for something as well.

Beats duplicating the list :D",https://api.github.com/repos/nodejs/node/git/commits/501b4a54be5188e06194597010b5f13067da1caf,2009-12-08,"Others
might use them for something as well"
379,MDY6Q29tbWl0MjcxOTM3Nzk6NTAxYjRhNTRiZTUxODhlMDYxOTQ1OTcwMTBiNWYxMzA2N2RhMWNhZg==,visionmedia,Ryan Dahl,"Export STATUS_CODES

Express (my framework) uses them as a default
response body when non is present. Others
might use them for something as well.

Beats duplicating the list :D",https://api.github.com/repos/nodejs/node/git/commits/501b4a54be5188e06194597010b5f13067da1caf,2009-12-08,Beats duplicating the list :D
380,MDY6Q29tbWl0MjcxOTM3Nzk6ZjhiYTljM2JjOWZiYWI2YjgyMmE4YmI1MzFjN2EzYzA5MDM1MTAwYQ==,Christopher Lenz,Ryan Dahl,"Add http.Client.prototype.request()

Change the http.Client API so that it provides a single request() method
taking an optional parameter to specify the HTTP method (defaulting to
""GET""), instead of the five methods get(), head(), post(), del() and put().",https://api.github.com/repos/nodejs/node/git/commits/f8ba9c3bc9fbab6b822a8bb531c7a3c09035100a,2009-12-02,Add 
380,MDY6Q29tbWl0MjcxOTM3Nzk6ZjhiYTljM2JjOWZiYWI2YjgyMmE4YmI1MzFjN2EzYzA5MDM1MTAwYQ==,Christopher Lenz,Ryan Dahl,"Add http.Client.prototype.request()

Change the http.Client API so that it provides a single request() method
taking an optional parameter to specify the HTTP method (defaulting to
""GET""), instead of the five methods get(), head(), post(), del() and put().",https://api.github.com/repos/nodejs/node/git/commits/f8ba9c3bc9fbab6b822a8bb531c7a3c09035100a,2009-12-02,"Change the API so that it provides a single request() method
taking an optional parameter to specify the HTTP method (defaulting to
""GET""), instead of the five methods get(), head(), post(), del() and put()."
381,MDY6Q29tbWl0MjcxOTM3Nzk6YzVkODIzODBmNDZlZDBjOTkyZmY1NmE5ZTlkZGZlNmFiMjU0MGU2Mg==,Ryan Dahl,Ryan Dahl,"Bugfix: Don't use chunked encoding for 1.0 requests.

http://groups.google.com/group/nodejs/browse_thread/thread/b2edb76691b1848c",https://api.github.com/repos/nodejs/node/git/commits/c5d82380f46ed0c992ff56a9e9ddfe6ab2540e62,2009-12-05,Bugfix: Don't use chunked encoding for 1.0 requests.
381,MDY6Q29tbWl0MjcxOTM3Nzk6YzVkODIzODBmNDZlZDBjOTkyZmY1NmE5ZTlkZGZlNmFiMjU0MGU2Mg==,Ryan Dahl,Ryan Dahl,"Bugfix: Don't use chunked encoding for 1.0 requests.

http://groups.google.com/group/nodejs/browse_thread/thread/b2edb76691b1848c",https://api.github.com/repos/nodejs/node/git/commits/c5d82380f46ed0c992ff56a9e9ddfe6ab2540e62,2009-12-05,http://groups.google.com/group/nodejs/browse_thread/thread/b2edb76691b1848c
382,MDY6Q29tbWl0MjcxOTM3Nzk6NzUzOGU3MDc2NzdiMjliMjc2YTU0M2E0ZTFkYjlkNGMzODkzYzBjNg==,Ryan Dahl,Ryan Dahl,Expose versionMajor versionMinor to http messages,https://api.github.com/repos/nodejs/node/git/commits/7538e707677b29b276a543a4e1db9d4c3893c0c6,2009-12-05,Expose versionMajor versionMinor to messages
382,MDY6Q29tbWl0MjcxOTM3Nzk6NzUzOGU3MDc2NzdiMjliMjc2YTU0M2E0ZTFkYjlkNGMzODkzYzBjNg==,Ryan Dahl,Ryan Dahl,Expose versionMajor versionMinor to http messages,https://api.github.com/repos/nodejs/node/git/commits/7538e707677b29b276a543a4e1db9d4c3893c0c6,2009-12-05,
383,MDY6Q29tbWl0MjcxOTM3Nzk6NDg1ODIzZjNlNDQwMTNjNGM4M2ZjYmJhYmQzYTIzNGY2ODBlYmIzYw==,Michaeljohn Clement,Ryan Dahl,"fixed HTTP duplicated header bug

added test case for HTTP duplicated header bug on keepalive",https://api.github.com/repos/nodejs/node/git/commits/485823f3e44013c4c83fcbbabd3a234f680ebb3c,2009-12-02,fixed HTTP duplicated header bug
383,MDY6Q29tbWl0MjcxOTM3Nzk6NDg1ODIzZjNlNDQwMTNjNGM4M2ZjYmJhYmQzYTIzNGY2ODBlYmIzYw==,Michaeljohn Clement,Ryan Dahl,"fixed HTTP duplicated header bug

added test case for HTTP duplicated header bug on keepalive",https://api.github.com/repos/nodejs/node/git/commits/485823f3e44013c4c83fcbbabd3a234f680ebb3c,2009-12-02,added test case for HTTP duplicated header bug on keepalive
384,MDY6Q29tbWl0MjcxOTM3Nzk6NWIxYTUzNWNkODk2MjRhMDIxYjRiZDE4M2NmYWFjY2VmNWI2M2RkOQ==,Rhys Jones,Ryan Dahl,Add HTTP client TLS support,https://api.github.com/repos/nodejs/node/git/commits/5b1a535cd89624a021b4bd183cfaaccef5b63dd9,2009-11-30,Add HTTP client TLS support
384,MDY6Q29tbWl0MjcxOTM3Nzk6NWIxYTUzNWNkODk2MjRhMDIxYjRiZDE4M2NmYWFjY2VmNWI2M2RkOQ==,Rhys Jones,Ryan Dahl,Add HTTP client TLS support,https://api.github.com/repos/nodejs/node/git/commits/5b1a535cd89624a021b4bd183cfaaccef5b63dd9,2009-11-30,
385,MDY6Q29tbWl0MjcxOTM3Nzk6YTllYTIxZmViNDMxODg5MjJmODIzZGRjOWE3ZjJlNjdiZWE5NWFlYQ==,jed,Ryan Dahl,"fixed check on header type, to check member instead of object.",https://api.github.com/repos/nodejs/node/git/commits/a9ea21feb43188922f823ddc9a7f2e67bea95aea,2009-11-29,"fixed check on header type, to check member instead of object."
385,MDY6Q29tbWl0MjcxOTM3Nzk6YTllYTIxZmViNDMxODg5MjJmODIzZGRjOWE3ZjJlNjdiZWE5NWFlYQ==,jed,Ryan Dahl,"fixed check on header type, to check member instead of object.",https://api.github.com/repos/nodejs/node/git/commits/a9ea21feb43188922f823ddc9a7f2e67bea95aea,2009-11-29,
386,MDY6Q29tbWl0MjcxOTM3Nzk6NzcxOWNlMzNkYjJhNjhmNjVmMWJlZDU4ZmFlY2U4M2EyMzQyYzdjMw==,Ryan Dahl,Ryan Dahl,"New http-parser

No longer based on Ragel, but hand-written.

Had to add HTTPConnection.resetParser() because the parser is stricter and
will error out when you try to give it a message after the previous had
""Connection: close"". The HTTP client was doing that. Thus we reset the
parser manually after each new connection.",https://api.github.com/repos/nodejs/node/git/commits/7719ce33db2a68f65f1bed58faece83a2342c7c3,2009-11-21,New 
386,MDY6Q29tbWl0MjcxOTM3Nzk6NzcxOWNlMzNkYjJhNjhmNjVmMWJlZDU4ZmFlY2U4M2EyMzQyYzdjMw==,Ryan Dahl,Ryan Dahl,"New http-parser

No longer based on Ragel, but hand-written.

Had to add HTTPConnection.resetParser() because the parser is stricter and
will error out when you try to give it a message after the previous had
""Connection: close"". The HTTP client was doing that. Thus we reset the
parser manually after each new connection.",https://api.github.com/repos/nodejs/node/git/commits/7719ce33db2a68f65f1bed58faece83a2342c7c3,2009-11-21,"No longer based on Ragel, but hand-written"
386,MDY6Q29tbWl0MjcxOTM3Nzk6NzcxOWNlMzNkYjJhNjhmNjVmMWJlZDU4ZmFlY2U4M2EyMzQyYzdjMw==,Ryan Dahl,Ryan Dahl,"New http-parser

No longer based on Ragel, but hand-written.

Had to add HTTPConnection.resetParser() because the parser is stricter and
will error out when you try to give it a message after the previous had
""Connection: close"". The HTTP client was doing that. Thus we reset the
parser manually after each new connection.",https://api.github.com/repos/nodejs/node/git/commits/7719ce33db2a68f65f1bed58faece83a2342c7c3,2009-11-21,"Had to add HTTPConnection.resetParser() because the parser is stricter and
will error out when you try to give it a message after the previous had
""Connection: close"""
386,MDY6Q29tbWl0MjcxOTM3Nzk6NzcxOWNlMzNkYjJhNjhmNjVmMWJlZDU4ZmFlY2U4M2EyMzQyYzdjMw==,Ryan Dahl,Ryan Dahl,"New http-parser

No longer based on Ragel, but hand-written.

Had to add HTTPConnection.resetParser() because the parser is stricter and
will error out when you try to give it a message after the previous had
""Connection: close"". The HTTP client was doing that. Thus we reset the
parser manually after each new connection.",https://api.github.com/repos/nodejs/node/git/commits/7719ce33db2a68f65f1bed58faece83a2342c7c3,2009-11-21,The HTTP client was doing that
386,MDY6Q29tbWl0MjcxOTM3Nzk6NzcxOWNlMzNkYjJhNjhmNjVmMWJlZDU4ZmFlY2U4M2EyMzQyYzdjMw==,Ryan Dahl,Ryan Dahl,"New http-parser

No longer based on Ragel, but hand-written.

Had to add HTTPConnection.resetParser() because the parser is stricter and
will error out when you try to give it a message after the previous had
""Connection: close"". The HTTP client was doing that. Thus we reset the
parser manually after each new connection.",https://api.github.com/repos/nodejs/node/git/commits/7719ce33db2a68f65f1bed58faece83a2342c7c3,2009-11-21,"Thus we reset the
parser manually after each new connection."
387,MDY6Q29tbWl0MjcxOTM3Nzk6MWViYTBjYWRjMTViZWIyZjRhNDVmMThjMzFhYjJjN2Q4MGZjMjgwNw==,Ryan Dahl,Ryan Dahl,"Revert ""Normalize HTTP headers.""

This reverts commit f623fd765813bba7d542e9ac9a8e2a8c2c16cba5.
But only the changes made in lib/ they were falsely detecting outgoing
headers.",https://api.github.com/repos/nodejs/node/git/commits/1eba0cadc15beb2f4a45f18c31ab2c7d80fc2807,2009-11-18,"Revert ""Normalize HTTP headers."""
387,MDY6Q29tbWl0MjcxOTM3Nzk6MWViYTBjYWRjMTViZWIyZjRhNDVmMThjMzFhYjJjN2Q4MGZjMjgwNw==,Ryan Dahl,Ryan Dahl,"Revert ""Normalize HTTP headers.""

This reverts commit f623fd765813bba7d542e9ac9a8e2a8c2c16cba5.
But only the changes made in lib/ they were falsely detecting outgoing
headers.",https://api.github.com/repos/nodejs/node/git/commits/1eba0cadc15beb2f4a45f18c31ab2c7d80fc2807,2009-11-18,This reverts commit f623fd765813bba7d542e9ac9a8e2a8c2c16cba5
387,MDY6Q29tbWl0MjcxOTM3Nzk6MWViYTBjYWRjMTViZWIyZjRhNDVmMThjMzFhYjJjN2Q4MGZjMjgwNw==,Ryan Dahl,Ryan Dahl,"Revert ""Normalize HTTP headers.""

This reverts commit f623fd765813bba7d542e9ac9a8e2a8c2c16cba5.
But only the changes made in lib/ they were falsely detecting outgoing
headers.",https://api.github.com/repos/nodejs/node/git/commits/1eba0cadc15beb2f4a45f18c31ab2c7d80fc2807,2009-11-18,"But only the changes made in lib/ they were falsely detecting outgoing
headers."
388,MDY6Q29tbWl0MjcxOTM3Nzk6YmZmZWU1ZWRhNDRiOTg5OTE3NzRkNjY5OThlNzA2NTM1NWFhNDYxZg==,Felix Geisendörfer,Ryan Dahl,"Bugfix for sendBody() and chunked utf8 strings

Http expects chunked byte offsets and ignores the encoding specified in the
header. This patch makes node behave accordingly.

Bug report:
http://groups.google.com/group/nodejs/browse_thread/thread/ab701d49cb059317",https://api.github.com/repos/nodejs/node/git/commits/bffee5eda44b98991774d66998e7065355aa461f,2009-11-11,Bugfix for sendBody() and chunked utf8 strings
388,MDY6Q29tbWl0MjcxOTM3Nzk6YmZmZWU1ZWRhNDRiOTg5OTE3NzRkNjY5OThlNzA2NTM1NWFhNDYxZg==,Felix Geisendörfer,Ryan Dahl,"Bugfix for sendBody() and chunked utf8 strings

Http expects chunked byte offsets and ignores the encoding specified in the
header. This patch makes node behave accordingly.

Bug report:
http://groups.google.com/group/nodejs/browse_thread/thread/ab701d49cb059317",https://api.github.com/repos/nodejs/node/git/commits/bffee5eda44b98991774d66998e7065355aa461f,2009-11-11,"Http expects chunked byte offsets and ignores the encoding specified in the
header"
388,MDY6Q29tbWl0MjcxOTM3Nzk6YmZmZWU1ZWRhNDRiOTg5OTE3NzRkNjY5OThlNzA2NTM1NWFhNDYxZg==,Felix Geisendörfer,Ryan Dahl,"Bugfix for sendBody() and chunked utf8 strings

Http expects chunked byte offsets and ignores the encoding specified in the
header. This patch makes node behave accordingly.

Bug report:
http://groups.google.com/group/nodejs/browse_thread/thread/ab701d49cb059317",https://api.github.com/repos/nodejs/node/git/commits/bffee5eda44b98991774d66998e7065355aa461f,2009-11-11,This patch makes node behave accordingly
388,MDY6Q29tbWl0MjcxOTM3Nzk6YmZmZWU1ZWRhNDRiOTg5OTE3NzRkNjY5OThlNzA2NTM1NWFhNDYxZg==,Felix Geisendörfer,Ryan Dahl,"Bugfix for sendBody() and chunked utf8 strings

Http expects chunked byte offsets and ignores the encoding specified in the
header. This patch makes node behave accordingly.

Bug report:
http://groups.google.com/group/nodejs/browse_thread/thread/ab701d49cb059317",https://api.github.com/repos/nodejs/node/git/commits/bffee5eda44b98991774d66998e7065355aa461f,2009-11-11,Bug report
388,MDY6Q29tbWl0MjcxOTM3Nzk6YmZmZWU1ZWRhNDRiOTg5OTE3NzRkNjY5OThlNzA2NTM1NWFhNDYxZg==,Felix Geisendörfer,Ryan Dahl,"Bugfix for sendBody() and chunked utf8 strings

Http expects chunked byte offsets and ignores the encoding specified in the
header. This patch makes node behave accordingly.

Bug report:
http://groups.google.com/group/nodejs/browse_thread/thread/ab701d49cb059317",https://api.github.com/repos/nodejs/node/git/commits/bffee5eda44b98991774d66998e7065355aa461f,2009-11-11,http://groups.google.com/group/nodejs/browse_thread/thread/ab701d49cb059317
389,MDY6Q29tbWl0MjcxOTM3Nzk6NDMxMjFjMTViZTdmYTZjYTgwYmIxYzA0NDhlOGE2NDNhYjU4M2MwOA==,Ryan Dahl,Ryan Dahl,API: rename process.inherits to sys.inherits,https://api.github.com/repos/nodejs/node/git/commits/43121c15be7fa6ca80bb1c0448e8a643ab583c08,2009-11-07,API: rename process.inherits to sys.inherits
389,MDY6Q29tbWl0MjcxOTM3Nzk6NDMxMjFjMTViZTdmYTZjYTgwYmIxYzA0NDhlOGE2NDNhYjU4M2MwOA==,Ryan Dahl,Ryan Dahl,API: rename process.inherits to sys.inherits,https://api.github.com/repos/nodejs/node/git/commits/43121c15be7fa6ca80bb1c0448e8a643ab583c08,2009-11-07,
390,MDY6Q29tbWl0MjcxOTM3Nzk6NTFjMTUyNmI2YTAwYmQ0NTZkNzE4MDQxYzY0NDU1MjdjODkzNTlmMQ==,Ryan Dahl,Ryan Dahl,"Revert ""Upgrade http parser, change node as needed.""

Something is broken in how keep-alive is working. Reverting until I can fix
it.

This reverts commit b893859c34f05db5c45f416949ebc0eee665cca6.",https://api.github.com/repos/nodejs/node/git/commits/51c1526b6a00bd456d718041c6445527c89359f1,2009-11-06,"Revert ""Upgrade parser, change node as needed."""
390,MDY6Q29tbWl0MjcxOTM3Nzk6NTFjMTUyNmI2YTAwYmQ0NTZkNzE4MDQxYzY0NDU1MjdjODkzNTlmMQ==,Ryan Dahl,Ryan Dahl,"Revert ""Upgrade http parser, change node as needed.""

Something is broken in how keep-alive is working. Reverting until I can fix
it.

This reverts commit b893859c34f05db5c45f416949ebc0eee665cca6.",https://api.github.com/repos/nodejs/node/git/commits/51c1526b6a00bd456d718041c6445527c89359f1,2009-11-06,Something is broken in how keep-alive is working
390,MDY6Q29tbWl0MjcxOTM3Nzk6NTFjMTUyNmI2YTAwYmQ0NTZkNzE4MDQxYzY0NDU1MjdjODkzNTlmMQ==,Ryan Dahl,Ryan Dahl,"Revert ""Upgrade http parser, change node as needed.""

Something is broken in how keep-alive is working. Reverting until I can fix
it.

This reverts commit b893859c34f05db5c45f416949ebc0eee665cca6.",https://api.github.com/repos/nodejs/node/git/commits/51c1526b6a00bd456d718041c6445527c89359f1,2009-11-06,"Reverting until I can fix
This reverts commit b893859c34f05db5c45f416949ebc0eee665cca6."
391,MDY6Q29tbWl0MjcxOTM3Nzk6OGFkNDdjOGRlNzYwOWY2YjhmNzI5ZjFiMjEyMjcxYTM5ZmRkMDNmOQ==,Ryan Dahl,Ryan Dahl,Expose http.IncomingMessage and http.OutgoingMessage,https://api.github.com/repos/nodejs/node/git/commits/8ad47c8de7609f6b8f729f1b212271a39fdd03f9,2009-11-04,Expose and http.OutgoingMessage
391,MDY6Q29tbWl0MjcxOTM3Nzk6OGFkNDdjOGRlNzYwOWY2YjhmNzI5ZjFiMjEyMjcxYTM5ZmRkMDNmOQ==,Ryan Dahl,Ryan Dahl,Expose http.IncomingMessage and http.OutgoingMessage,https://api.github.com/repos/nodejs/node/git/commits/8ad47c8de7609f6b8f729f1b212271a39fdd03f9,2009-11-04,
392,MDY6Q29tbWl0MjcxOTM3Nzk6NjAxMzFmYzg4YzE2NWIzYjU1NmExNmJjMjVmMjQ0YzZkNjNhMDQ4Mg==,Ryan Dahl,Ryan Dahl,Expose http.ClientRequest and http.ServerResponse,https://api.github.com/repos/nodejs/node/git/commits/60131fc88c165b3b556a16bc25f244c6d63a0482,2009-11-04,Expose and http.ServerResponse
392,MDY6Q29tbWl0MjcxOTM3Nzk6NjAxMzFmYzg4YzE2NWIzYjU1NmExNmJjMjVmMjQ0YzZkNjNhMDQ4Mg==,Ryan Dahl,Ryan Dahl,Expose http.ClientRequest and http.ServerResponse,https://api.github.com/repos/nodejs/node/git/commits/60131fc88c165b3b556a16bc25f244c6d63a0482,2009-11-04,
393,MDY6Q29tbWl0MjcxOTM3Nzk6N2EyZTc4NGFkNzM4Njc3MWQxNTI0OWQ0NDZjOTE0ZmJhMTY3NTA2OA==,Ryan Dahl,Ryan Dahl,"Module refactor - almost CommonJS compatible now

API change summary:

  * require(""/sys.js"") becomes require(""sys"")

  * require(""circle.js"") becomes require(""./circle"")

  * process.path.join() becomes require(""path"").join()",https://api.github.com/repos/nodejs/node/git/commits/7a2e784ad7386771d15249d446c914fba1675068,2009-10-31,Module refactor - almost CommonJS compatible now
393,MDY6Q29tbWl0MjcxOTM3Nzk6N2EyZTc4NGFkNzM4Njc3MWQxNTI0OWQ0NDZjOTE0ZmJhMTY3NTA2OA==,Ryan Dahl,Ryan Dahl,"Module refactor - almost CommonJS compatible now

API change summary:

  * require(""/sys.js"") becomes require(""sys"")

  * require(""circle.js"") becomes require(""./circle"")

  * process.path.join() becomes require(""path"").join()",https://api.github.com/repos/nodejs/node/git/commits/7a2e784ad7386771d15249d446c914fba1675068,2009-10-31,API change summary:
394,MDY6Q29tbWl0MjcxOTM3Nzk6YWQwYTRjZWZiOGI0YmY0NjliYjFjYWE2ZTY3MWExMDA5ZTQwYTgxZg==,Ryan Dahl,Ryan Dahl,"Namespace EVERYTHING under process; introduce GLOBAL

http://groups.google.com/group/nodejs/browse_thread/thread/1034fd2ad2cd93e8",https://api.github.com/repos/nodejs/node/git/commits/ad0a4cefb8b4bf469bb1caa6e671a1009e40a81f,2009-10-29,Namespace EVERYTHING under process; introduce GLOBAL
394,MDY6Q29tbWl0MjcxOTM3Nzk6YWQwYTRjZWZiOGI0YmY0NjliYjFjYWE2ZTY3MWExMDA5ZTQwYTgxZg==,Ryan Dahl,Ryan Dahl,"Namespace EVERYTHING under process; introduce GLOBAL

http://groups.google.com/group/nodejs/browse_thread/thread/1034fd2ad2cd93e8",https://api.github.com/repos/nodejs/node/git/commits/ad0a4cefb8b4bf469bb1caa6e671a1009e40a81f,2009-10-29,http://groups.google.com/group/nodejs/browse_thread/thread/1034fd2ad2cd93e8
395,MDY6Q29tbWl0MjcxOTM3Nzk6OTEwYzYyN2ZjNjQ3YmRjNmU1NzQ3YjgxMzVmODllYmZkYzk0ZDQwZQ==,Ryan Dahl,Ryan Dahl,"Revert ""Change HTTP back to a 1.1 client.""

This reverts commit 9a70abbf1378060d1b46240eed0dcd0dffd526ff.",https://api.github.com/repos/nodejs/node/git/commits/910c627fc647bdc6e5747b8135f89ebfdc94d40e,2009-10-28,"Revert ""Change HTTP back to a 1.1 client."""
395,MDY6Q29tbWl0MjcxOTM3Nzk6OTEwYzYyN2ZjNjQ3YmRjNmU1NzQ3YjgxMzVmODllYmZkYzk0ZDQwZQ==,Ryan Dahl,Ryan Dahl,"Revert ""Change HTTP back to a 1.1 client.""

This reverts commit 9a70abbf1378060d1b46240eed0dcd0dffd526ff.",https://api.github.com/repos/nodejs/node/git/commits/910c627fc647bdc6e5747b8135f89ebfdc94d40e,2009-10-28,This reverts commit 9a70abbf1378060d1b46240eed0dcd0dffd526ff.
396,MDY6Q29tbWl0MjcxOTM3Nzk6OWE3MGFiYmYxMzc4MDYwZDFiNDYyNDBlZWQwZGNkMGRmZmQ1MjZmZg==,Ryan Dahl,Ryan Dahl,"Change HTTP back to a 1.1 client.

This was modified in b893859c34f05db5c45f416949ebc0eee665cca6 even though it
wasn't really required. Some users are experiencing problems after changing
to 1.0 - once those are identified the client will returned to 1.0.",https://api.github.com/repos/nodejs/node/git/commits/9a70abbf1378060d1b46240eed0dcd0dffd526ff,2009-10-26,Change HTTP back to a 1.1 client.
396,MDY6Q29tbWl0MjcxOTM3Nzk6OWE3MGFiYmYxMzc4MDYwZDFiNDYyNDBlZWQwZGNkMGRmZmQ1MjZmZg==,Ryan Dahl,Ryan Dahl,"Change HTTP back to a 1.1 client.

This was modified in b893859c34f05db5c45f416949ebc0eee665cca6 even though it
wasn't really required. Some users are experiencing problems after changing
to 1.0 - once those are identified the client will returned to 1.0.",https://api.github.com/repos/nodejs/node/git/commits/9a70abbf1378060d1b46240eed0dcd0dffd526ff,2009-10-26,"This was modified in b893859c34f05db5c45f416949ebc0eee665cca6 even though it
wasn't really required"
396,MDY6Q29tbWl0MjcxOTM3Nzk6OWE3MGFiYmYxMzc4MDYwZDFiNDYyNDBlZWQwZGNkMGRmZmQ1MjZmZg==,Ryan Dahl,Ryan Dahl,"Change HTTP back to a 1.1 client.

This was modified in b893859c34f05db5c45f416949ebc0eee665cca6 even though it
wasn't really required. Some users are experiencing problems after changing
to 1.0 - once those are identified the client will returned to 1.0.",https://api.github.com/repos/nodejs/node/git/commits/9a70abbf1378060d1b46240eed0dcd0dffd526ff,2009-10-26,"Some users are experiencing problems after changing
to 1.0 - once those are identified the client will returned to 1.0."
397,MDY6Q29tbWl0MjcxOTM3Nzk6Yjg5Mzg1OWMzNGYwNWRiNWM0NWY0MTY5NDllYmMwZWVlNjY1Y2NhNg==,Ryan Dahl,Ryan Dahl,"Upgrade http parser, change node as needed.

The latest version of http-parser is a bit more stringent EOF semantics.",https://api.github.com/repos/nodejs/node/git/commits/b893859c34f05db5c45f416949ebc0eee665cca6,2009-10-15,"Upgrade parser, change node as needed."
397,MDY6Q29tbWl0MjcxOTM3Nzk6Yjg5Mzg1OWMzNGYwNWRiNWM0NWY0MTY5NDllYmMwZWVlNjY1Y2NhNg==,Ryan Dahl,Ryan Dahl,"Upgrade http parser, change node as needed.

The latest version of http-parser is a bit more stringent EOF semantics.",https://api.github.com/repos/nodejs/node/git/commits/b893859c34f05db5c45f416949ebc0eee665cca6,2009-10-15,The latest version of is a bit more stringent EOF semantics.
398,MDY6Q29tbWl0MjcxOTM3Nzk6MmI4YWI3ZTI0ZjJhYmM5MjQ3NGY0NGFhZDc5NmIyNjM1ODJhYjVkNA==,Ryan Dahl,Ryan Dahl,utils.js links to sys.js instead of other way around,https://api.github.com/repos/nodejs/node/git/commits/2b8ab7e24f2abc92474f44aad796b263582ab5d4,2009-10-13,utils.js links to sys.js instead of other way around
398,MDY6Q29tbWl0MjcxOTM3Nzk6MmI4YWI3ZTI0ZjJhYmM5MjQ3NGY0NGFhZDc5NmIyNjM1ODJhYjVkNA==,Ryan Dahl,Ryan Dahl,utils.js links to sys.js instead of other way around,https://api.github.com/repos/nodejs/node/git/commits/2b8ab7e24f2abc92474f44aad796b263582ab5d4,2009-10-13,
399,MDY6Q29tbWl0MjcxOTM3Nzk6ZjYyM2ZkNzY1ODEzYmJhN2Q1NDJlOWFjOWE4ZTJhOGMyYzE2Y2JhNQ==,Ryan Dahl,Ryan Dahl,"Normalize HTTP headers.

""Content-Length"" becomes ""content-length"".",https://api.github.com/repos/nodejs/node/git/commits/f623fd765813bba7d542e9ac9a8e2a8c2c16cba5,2009-10-07,Normalize HTTP headers.
399,MDY6Q29tbWl0MjcxOTM3Nzk6ZjYyM2ZkNzY1ODEzYmJhN2Q1NDJlOWFjOWE4ZTJhOGMyYzE2Y2JhNQ==,Ryan Dahl,Ryan Dahl,"Normalize HTTP headers.

""Content-Length"" becomes ""content-length"".",https://api.github.com/repos/nodejs/node/git/commits/f623fd765813bba7d542e9ac9a8e2a8c2c16cba5,2009-10-07,"""Content-Length"" becomes ""content-length""."
400,MDY6Q29tbWl0MjcxOTM3Nzk6NTIyOTA5YmNiZjZmZjU3N2RkZjY2YjhjMDcxNDhjZjU4MTYxNTE1Nw==,Ryan Dahl,Ryan Dahl,Parse queryString into req.uri.params,https://api.github.com/repos/nodejs/node/git/commits/522909bcbf6ff577ddf66b8c07148cf581615157,2009-10-05,Parse queryString into req.uri.params
400,MDY6Q29tbWl0MjcxOTM3Nzk6NTIyOTA5YmNiZjZmZjU3N2RkZjY2YjhjMDcxNDhjZjU4MTYxNTE1Nw==,Ryan Dahl,Ryan Dahl,Parse queryString into req.uri.params,https://api.github.com/repos/nodejs/node/git/commits/522909bcbf6ff577ddf66b8c07148cf581615157,2009-10-05,
401,MDY6Q29tbWl0MjcxOTM3Nzk6ZTJiNzkwMjQ2OTljM2YxMTcxZWYyZjMxMjA2N2IwZjA1MzQ4ZTk2MQ==,Ryan Dahl,Ryan Dahl,"Don't use parseUri for HTTP server

The big parseUri RE was showing up often in profiles - this is simpler and
yields better performance by taking advantage of the C http parser.",https://api.github.com/repos/nodejs/node/git/commits/e2b79024699c3f1171ef2f312067b0f05348e961,2009-10-04,Don't use parseUri for HTTP server
401,MDY6Q29tbWl0MjcxOTM3Nzk6ZTJiNzkwMjQ2OTljM2YxMTcxZWYyZjMxMjA2N2IwZjA1MzQ4ZTk2MQ==,Ryan Dahl,Ryan Dahl,"Don't use parseUri for HTTP server

The big parseUri RE was showing up often in profiles - this is simpler and
yields better performance by taking advantage of the C http parser.",https://api.github.com/repos/nodejs/node/git/commits/e2b79024699c3f1171ef2f312067b0f05348e961,2009-10-04,"The big parseUri RE was showing up often in profiles - this is simpler and
yields better performance by taking advantage of the C parser."
402,MDY6Q29tbWl0MjcxOTM3Nzk6N2IzMzcwOTZjOWQzNzM2MTdkODk4OWM3YWZkNjdhNGY0NTczY2E5Yg==,Ryan Dahl,Ryan Dahl,Add a third argument to http.cat to specify req headers.,https://api.github.com/repos/nodejs/node/git/commits/7b337096c9d373617d8989c7afd67a4f4573ca9b,2009-09-30,Add a third argument to to specify req headers.
402,MDY6Q29tbWl0MjcxOTM3Nzk6N2IzMzcwOTZjOWQzNzM2MTdkODk4OWM3YWZkNjdhNGY0NTczY2E5Yg==,Ryan Dahl,Ryan Dahl,Add a third argument to http.cat to specify req headers.,https://api.github.com/repos/nodejs/node/git/commits/7b337096c9d373617d8989c7afd67a4f4573ca9b,2009-09-30,
403,MDY6Q29tbWl0MjcxOTM3Nzk6NDVmNTQwMjQ0NjYwYWVkMzFkMjZlYmEzOGY4ZWRhNDM1MTk1MjhlMA==,isaacs,isaacs,"Pass the Host header in http.cat calls, if it was specified in the URL passed to http.cat.",https://api.github.com/repos/nodejs/node/git/commits/45f540244660aed31d26eba38f8eda43519528e0,2009-09-29,"Pass the Host header in calls, if it was specified in the URL passed to http.cat."
403,MDY6Q29tbWl0MjcxOTM3Nzk6NDVmNTQwMjQ0NjYwYWVkMzFkMjZlYmEzOGY4ZWRhNDM1MTk1MjhlMA==,isaacs,isaacs,"Pass the Host header in http.cat calls, if it was specified in the URL passed to http.cat.",https://api.github.com/repos/nodejs/node/git/commits/45f540244660aed31d26eba38f8eda43519528e0,2009-09-29,
404,MDY6Q29tbWl0MjcxOTM3Nzk6Y2RhNjU5YThjODQ2MmYxMTJkNDZjNDcwMjllZWZhYWVhZTg4YjliNg==,Ryan Dahl,Ryan Dahl,Camel-case all http events,https://api.github.com/repos/nodejs/node/git/commits/cda659a8c8462f112d46c47029eefaaeae88b9b6,2009-09-29,Camel-case all events
404,MDY6Q29tbWl0MjcxOTM3Nzk6Y2RhNjU5YThjODQ2MmYxMTJkNDZjNDcwMjllZWZhYWVhZTg4YjliNg==,Ryan Dahl,Ryan Dahl,Camel-case all http events,https://api.github.com/repos/nodejs/node/git/commits/cda659a8c8462f112d46c47029eefaaeae88b9b6,2009-09-29,
405,MDY6Q29tbWl0MjcxOTM3Nzk6ZjY2NTdjM2M5ZGQzZTQxZGY3MTQ3YWRjODZlYmM2NDY5NTM4ZTFlZA==,Ryan Dahl,Ryan Dahl,Move http library to /http.js,https://api.github.com/repos/nodejs/node/git/commits/f6657c3c9dd3e41df7147adc86ebc6469538e1ed,2009-09-28,Move library to /http.js
405,MDY6Q29tbWl0MjcxOTM3Nzk6ZjY2NTdjM2M5ZGQzZTQxZGY3MTQ3YWRjODZlYmM2NDY5NTM4ZTFlZA==,Ryan Dahl,Ryan Dahl,Move http library to /http.js,https://api.github.com/repos/nodejs/node/git/commits/f6657c3c9dd3e41df7147adc86ebc6469538e1ed,2009-09-28,
