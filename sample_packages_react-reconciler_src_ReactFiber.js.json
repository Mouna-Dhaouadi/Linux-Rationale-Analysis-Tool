[
    {
        "sha": "94e4acaa1477e65cac02ba86058cde0afe4c8f1f",
        "node_id": "C_kwDOAJy2KtoAKDk0ZTRhY2FhMTQ3N2U2NWNhYzAyYmE4NjA1OGNkZTBhZmU0YzhmMWY",
        "commit": {
            "author": {
                "name": "Sebastian Markb\u00e5ge",
                "email": "sebastian@calyptus.eu",
                "date": "2024-09-13T16:27:00Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2024-09-13T16:27:00Z"
            },
            "message": "[Fiber] Set profiler values to doubles (#30942)\n\nAt some point this trick was added to initialize the value first to NaN\r\nand then replace them with zeros and negative ones.\r\n\r\nThis is to address the issue noted in\r\nhttps://github.com/facebook/react/issues/14365 where these hidden\r\nclasses can be initialized to SMIs at first and then deopt when we\r\nrealize they're actually doubles.\r\n\r\nHowever, this fix has been long broken and has deopted the profiling\r\nbuild for years because closure compiler optimizes out the first write.\r\n\r\nI'm not sure because I haven't A/B-tested this in the JIT yet but I\r\nthink we can use negative zero and -1.1 as the initial values instead\r\nsince they're not simple integers. Negative zero `===` zero (but not\r\nObject.is) so is the same as far as our code is concerned. The negative\r\nvalue is just `< 0` comparisons.",
            "tree": {
                "sha": "17d58ce70920b46fc56e718ca41c180c75ee856d",
                "url": "https://api.github.com/repos/facebook/react/git/trees/17d58ce70920b46fc56e718ca41c180c75ee856d"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/94e4acaa1477e65cac02ba86058cde0afe4c8f1f",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJm5GfUCRC1aQ7uu5UhlAAAgY4QAGfRIJwTcvcFSwdI44zLb7hD\nvXP961BxRJWqDWUkhI0T0PKkFhLUq3zeqiXMwhc0DTgEuuofhzaNoOTs/9xuE/1v\nPxGxrVacoTo2DFITN+Qcnhw65IzTXqAdq2RuoXMGsLJGA4yJlFnlETPyti70cEBz\nnxGCIS09ps8vFyukZoRjFmR5lVSpB1ZRkVDxyb0YAvbxa7fBCDB1ouNQNHzgnmhB\njPnqTAUGPkaCIcudlOUJSX2lpsKTB/oLX0Uq8AickSvldzF/iXLeW2etjwFPbYcF\nM1EyypE+kl5EMuMrtv6PLng6vvSKS7VOG0TP0qSux7wOqpXFs53Gkqn8jjheH4pO\nJ4WJbU5qq0IgQjz1DAuLejFHzlBAROv4CIMHttKMPaDHrQGfnRecMg/GfjDuAM18\nUUB6cn4IUSURhdCv4Yaxz5zC56WdMWKqUEC2unKjK08sEOT26A9gQnVWDEdDtesd\nPuH26ZjwJPg0iKxDsAQ3incV/kjc2hS8uxRTw8pV+3bU7EtsRIZJZRXKstxQotNx\njpQuCUXZIjKTxv27zS3m0GXXR/ElQ9T70Ku8XFctkhzehzBbGSOqZsSdNwraf2YI\nmsv1z2I9sUEqHVKqc99t+hfSHPUmhTs3IQop5+4cHrA9ZbfcUDo8GlPZqXwS03vf\nRXftc++iO6m0F4VcWFDV\n=qTmj\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 17d58ce70920b46fc56e718ca41c180c75ee856d\nparent 206df66e70652e85711c3177ce1a0459609a7771\nauthor Sebastian Markb\u00e5ge <sebastian@calyptus.eu> 1726244820 -0400\ncommitter GitHub <noreply@github.com> 1726244820 -0400\n\n[Fiber] Set profiler values to doubles (#30942)\n\nAt some point this trick was added to initialize the value first to NaN\r\nand then replace them with zeros and negative ones.\r\n\r\nThis is to address the issue noted in\r\nhttps://github.com/facebook/react/issues/14365 where these hidden\r\nclasses can be initialized to SMIs at first and then deopt when we\r\nrealize they're actually doubles.\r\n\r\nHowever, this fix has been long broken and has deopted the profiling\r\nbuild for years because closure compiler optimizes out the first write.\r\n\r\nI'm not sure because I haven't A/B-tested this in the JIT yet but I\r\nthink we can use negative zero and -1.1 as the initial values instead\r\nsince they're not simple integers. Negative zero `===` zero (but not\r\nObject.is) so is the same as far as our code is concerned. The negative\r\nvalue is just `< 0` comparisons."
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/94e4acaa1477e65cac02ba86058cde0afe4c8f1f",
        "html_url": "https://github.com/facebook/react/commit/94e4acaa1477e65cac02ba86058cde0afe4c8f1f",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/94e4acaa1477e65cac02ba86058cde0afe4c8f1f/comments",
        "author": {
            "login": "sebmarkbage",
            "id": 63648,
            "node_id": "MDQ6VXNlcjYzNjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sebmarkbage",
            "html_url": "https://github.com/sebmarkbage",
            "followers_url": "https://api.github.com/users/sebmarkbage/followers",
            "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
            "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
            "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
            "repos_url": "https://api.github.com/users/sebmarkbage/repos",
            "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "206df66e70652e85711c3177ce1a0459609a7771",
                "url": "https://api.github.com/repos/facebook/react/commits/206df66e70652e85711c3177ce1a0459609a7771",
                "html_url": "https://github.com/facebook/react/commit/206df66e70652e85711c3177ce1a0459609a7771"
            }
        ]
    },
    {
        "sha": "8d68da3f7396064614f34b84881fe8833b6039ac",
        "node_id": "C_kwDOAJy2KtoAKDhkNjhkYTNmNzM5NjA2NDYxNGYzNGI4NDg4MWZlODgzM2I2MDM5YWM",
        "commit": {
            "author": {
                "name": "Sebastian Markb\u00e5ge",
                "email": "sebastian@calyptus.eu",
                "date": "2024-09-03T20:04:24Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2024-09-03T20:04:24Z"
            },
            "message": "[Fiber] Stash ThenableState on the Dependencies Object for Use By DevTools (#30866)\n\nThis lets us track what a Component might suspend on from DevTools. We\r\ncould already collect this by replaying a component's Hooks but that\r\nwould be expensive to collect from a whole tree.\r\n\r\nThe thenables themselves might contain useful information but mainly\r\nwe'd want access to the `_debugInfo` on the thenables which might\r\ncontain additional information from the server.\r\n\r\n\r\nhttps://github.com/facebook/react/blob/19bd26beb689e554fceb0b929dc5199be8cba594/packages/shared/ReactTypes.js#L114\r\n\r\nIn a follow up we should really do something similar in Flight to\r\ntransfer `use()` on the debugInfo of that Server Component.",
            "tree": {
                "sha": "6ca09cdc95ea3d42eeb9e505ab1a37b27445eeaf",
                "url": "https://api.github.com/repos/facebook/react/git/trees/6ca09cdc95ea3d42eeb9e505ab1a37b27445eeaf"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/8d68da3f7396064614f34b84881fe8833b6039ac",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJm12vICRC1aQ7uu5UhlAAAvk4QAIPBCQceaPpgHeBXhPTlb6bV\nUTAEqC8NEo9xeGbzhlrGaObhu2oH0aqw0WIvPE6+/rrzOw7ZExqNiPMoUO/lD9Qe\nENaBLKFIUOKQAtONbBIBbOrz0D1sCHQgxj25ooJ1l0KbHZ/7pGPPXYdFdkM2fsTz\nRn3LZebSPBY2cj5riIvmL0YaRTqEvtWWTfL0DOKOqmoOZUEeazHadPEW2OTBNCKa\noj8JMWpvclRsNDe5tF7CuwS8GdHMg271S4X+sOgKtzDY4aM/L/DeGbg8LD5UpLRW\nZumdEWeSv9RKGsIU+tVPKW9f0lJ8x3ofkKEttUfYgFF2NX9Wizj8sbeZ7pSJnkBw\nvyKoc/2yCGrCHL78xP4j0/NtaaZQKu5MEyQ0/Ubr1wynaPwlbDY5T6Qtlvm4DQqJ\nzRtgJN/OM2VIwG5DqR6HI/2bf+CGBzyoMxbkrm8xVUUk72HhUOKtceuNd9msvUlx\nUJVF3OAuqCQEks+WdhOYcl7YfrGdQVsJPk8RdzBBjNFWQm9LDwVCWnn6qzI5Z9LD\nJ8Nw5wK86JoVmUzRuyAA6flqLhp3e0XKPGztMOKtmTaklbRol3WXff09dp8Fckg1\n+suseW/P82sqgPKhnzyQNaTGR+RKUnE9K01MFJIE+F+FzaMWf+xEUdHZHujrUJ3S\nP6/t3+hmbbfVYDWVg0dw\n=gX57\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 6ca09cdc95ea3d42eeb9e505ab1a37b27445eeaf\nparent e0a07e9738b2ec2ea5cf4872406b465d677bfe2c\nauthor Sebastian Markb\u00e5ge <sebastian@calyptus.eu> 1725393864 -0400\ncommitter GitHub <noreply@github.com> 1725393864 -0400\n\n[Fiber] Stash ThenableState on the Dependencies Object for Use By DevTools (#30866)\n\nThis lets us track what a Component might suspend on from DevTools. We\r\ncould already collect this by replaying a component's Hooks but that\r\nwould be expensive to collect from a whole tree.\r\n\r\nThe thenables themselves might contain useful information but mainly\r\nwe'd want access to the `_debugInfo` on the thenables which might\r\ncontain additional information from the server.\r\n\r\n\r\nhttps://github.com/facebook/react/blob/19bd26beb689e554fceb0b929dc5199be8cba594/packages/shared/ReactTypes.js#L114\r\n\r\nIn a follow up we should really do something similar in Flight to\r\ntransfer `use()` on the debugInfo of that Server Component."
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/8d68da3f7396064614f34b84881fe8833b6039ac",
        "html_url": "https://github.com/facebook/react/commit/8d68da3f7396064614f34b84881fe8833b6039ac",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/8d68da3f7396064614f34b84881fe8833b6039ac/comments",
        "author": {
            "login": "sebmarkbage",
            "id": 63648,
            "node_id": "MDQ6VXNlcjYzNjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sebmarkbage",
            "html_url": "https://github.com/sebmarkbage",
            "followers_url": "https://api.github.com/users/sebmarkbage/followers",
            "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
            "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
            "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
            "repos_url": "https://api.github.com/users/sebmarkbage/repos",
            "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "e0a07e9738b2ec2ea5cf4872406b465d677bfe2c",
                "url": "https://api.github.com/repos/facebook/react/commits/e0a07e9738b2ec2ea5cf4872406b465d677bfe2c",
                "html_url": "https://github.com/facebook/react/commit/e0a07e9738b2ec2ea5cf4872406b465d677bfe2c"
            }
        ]
    },
    {
        "sha": "14a4699ff173936a30ec453f7b94d47105bbb252",
        "node_id": "C_kwDOAJy2KtoAKDE0YTQ2OTlmZjE3MzkzNmEzMGVjNDUzZjdiOTRkNDcxMDViYmIyNTI",
        "commit": {
            "author": {
                "name": "Jack Pope",
                "email": "jackpope1@gmail.com",
                "date": "2024-07-25T15:59:50Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2024-07-25T15:59:50Z"
            },
            "message": "Remove allowConcurrentByDefault flag (#30445)\n\nFollowing https://github.com/facebook/react/pull/30436\r\n\r\nConcurrent by default strategy has been unshipped. Here we clean up the\r\n`allowConcurrentByDefault` path and related logic/tests.\r\n\r\nFor now, this keeps the `concurrentUpdatesByDefaultOverride` argument in\r\n`createContainer` and `createHydrationContainer` and ignores the value\r\nto prevent more breaking changes to `react-reconciler` in the RC stage.",
            "tree": {
                "sha": "1422758bde6639f1af40ae1c37aa35dd54f41239",
                "url": "https://api.github.com/repos/facebook/react/git/trees/1422758bde6639f1af40ae1c37aa35dd54f41239"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/14a4699ff173936a30ec453f7b94d47105bbb252",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJmonZ2CRC1aQ7uu5UhlAAAMCEQAHgW/4qnO+J6EyjExspDTuE5\nLUHOJZiaonCCQj3rodaJlckTBK7vyiATFt3U3zUCqYYb1EEJP/QdKiAmYTUFb99f\nmXOmwIGG1JreTM1uruxb5DshpqAAQreZEkzhIeSk4pzjDsqNc4QtCsdwcmlRADXT\nm8oZ4/oqLYZyGhS0mNyEefqr5dDycNBg+JiklBf98cRS0gfobDTT3dtUTjr3Zvbv\nTJEL/8orNxyUnDAr/ElR0QBbC26miHBY3E4ll5ssHxCyBQPOx16veEx7kvQy/01P\nzKihNR/XwpfvMxcPA6HkDaLTvZlIsLT5QQ9sRBGcq9HmwRFnjsFwZjPP7BvF/H0m\n0wgf+4XXFmxQW10mG/JyAGIpsY456Mq5bltlEx2KoFbgo2dQyGxGH5K8wWn2n0OH\n9GIT8zLDX9+e4e9M4CNlTULMBQ/xydVTXTrXDYiZ5VK5zduzxCmEBlkU0knyfnVs\n7mni5ZWuBQLhQR4RPK7a8vukuAWwIi8NCfusNkK35NxGnTRC9sq/tfNh5iPfs+lk\nuS035qVCVWP+35qhayLDUI03blF4MVj0GA8H1i0u3f206AjLYhINXF7JGAQ7D4YY\nbAnxBzZg6qNpNq1X4cy5Yuz9y57OyWMXsA9HC6zpcNUaQIph81S66kTHmSqUD1Ys\neDWMymnLZgvi3iBukWvY\n=4/2C\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 1422758bde6639f1af40ae1c37aa35dd54f41239\nparent c2d103594dfe8c58d31964a1fbaa31276db0cbf4\nauthor Jack Pope <jackpope1@gmail.com> 1721923190 -0400\ncommitter GitHub <noreply@github.com> 1721923190 -0400\n\nRemove allowConcurrentByDefault flag (#30445)\n\nFollowing https://github.com/facebook/react/pull/30436\r\n\r\nConcurrent by default strategy has been unshipped. Here we clean up the\r\n`allowConcurrentByDefault` path and related logic/tests.\r\n\r\nFor now, this keeps the `concurrentUpdatesByDefaultOverride` argument in\r\n`createContainer` and `createHydrationContainer` and ignores the value\r\nto prevent more breaking changes to `react-reconciler` in the RC stage.\r\n"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/14a4699ff173936a30ec453f7b94d47105bbb252",
        "html_url": "https://github.com/facebook/react/commit/14a4699ff173936a30ec453f7b94d47105bbb252",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/14a4699ff173936a30ec453f7b94d47105bbb252/comments",
        "author": {
            "login": "jackpope",
            "id": 8965173,
            "node_id": "MDQ6VXNlcjg5NjUxNzM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8965173?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jackpope",
            "html_url": "https://github.com/jackpope",
            "followers_url": "https://api.github.com/users/jackpope/followers",
            "following_url": "https://api.github.com/users/jackpope/following{/other_user}",
            "gists_url": "https://api.github.com/users/jackpope/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jackpope/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jackpope/subscriptions",
            "organizations_url": "https://api.github.com/users/jackpope/orgs",
            "repos_url": "https://api.github.com/users/jackpope/repos",
            "events_url": "https://api.github.com/users/jackpope/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jackpope/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "c2d103594dfe8c58d31964a1fbaa31276db0cbf4",
                "url": "https://api.github.com/repos/facebook/react/commits/c2d103594dfe8c58d31964a1fbaa31276db0cbf4",
                "html_url": "https://github.com/facebook/react/commit/c2d103594dfe8c58d31964a1fbaa31276db0cbf4"
            }
        ]
    },
    {
        "sha": "e902c45caf7ca67810d3e53748a549bdcc36063b",
        "node_id": "C_kwDOAJy2KtoAKGU5MDJjNDVjYWY3Y2E2NzgxMGQzZTUzNzQ4YTU0OWJkY2MzNjA2M2I",
        "commit": {
            "author": {
                "name": "Jack Pope",
                "email": "jackpope1@gmail.com",
                "date": "2024-07-24T14:17:33Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2024-07-24T14:17:33Z"
            },
            "message": "Remove forceConcurrentByDefaultForTesting flag (#30436)\n\nConcurrent by default has been unshipped! Let's clean it up.\r\n\r\nHere we remove `forceConcurrentByDefaultForTesting`, which allows us to\r\nrun tests against both concurrent strategies. In the next PR, we'll\r\nremove the actual concurrent by default code path.",
            "tree": {
                "sha": "b04833098febf217ac8009cf175f68225c4b3b43",
                "url": "https://api.github.com/repos/facebook/react/git/trees/b04833098febf217ac8009cf175f68225c4b3b43"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/e902c45caf7ca67810d3e53748a549bdcc36063b",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJmoQz9CRC1aQ7uu5UhlAAAnmMQAH9bY7MgGZXvbli4iLIwHVbX\nNRWvD1pThAY+zUrmIMN6VNypJH622yMDDsI3a19ebFEEZ9KuPDzIgobWourqxkXl\nwZSJuNv1PNMCRHMhC7C50qUk69Gl4QGKy2eqh8BCC+JE7+QnOn6jKcBotTQv7dcX\nzdyHBXbvqx/4et1v51UUS5A53PXLAmOxt82RG3TRuBPlPCN5MzarA3st9X3vf+aW\nXvHDSNJtSRipXrD+0yme+KRiExg5dDLwG10RgugoHeULNDdDqYUsMsSqpAF/+Yp3\nC5q6xJJ/e7q4MqGaIeTc2F3GGMh8Bh1Q57eyug6x80xQEYGBTF4M7fH34lnhiYWi\nN/F5cXyulSWMAYjYPD8sypQrtlPf+/2BHExv5OvGijSxVRTZoCqoFC1njfb/MxYt\n1r9r7wQ0Mi8xV8x2TwwjghC9fz5X6WcNg+4TZ0vGqyminGl8wmDkTPNE1N8leAxW\nlvc6behvo2sczcC0EJBdbbxzjN5wKg2APlQnhtwMOm5ESxKZ3YXwXyKiQDIwPrdb\ni2nQK/HnaXScTSdMaum309GyBmOawKkdyHT0rMqh0RjppS6l0ZEG27dvfdoyp+xw\nrs2JQbtJWY8lKui9xNje15bvAXju2j0jURBgk7hXBpoNaqCoW0125Jzq+d1cFbAg\nXV/ddUJwKctXCuq7m9nX\n=XIyl\n-----END PGP SIGNATURE-----\n",
                "payload": "tree b04833098febf217ac8009cf175f68225c4b3b43\nparent b943feba35476196fa674de276f2b87624086896\nauthor Jack Pope <jackpope1@gmail.com> 1721830653 -0400\ncommitter GitHub <noreply@github.com> 1721830653 -0400\n\nRemove forceConcurrentByDefaultForTesting flag (#30436)\n\nConcurrent by default has been unshipped! Let's clean it up.\r\n\r\nHere we remove `forceConcurrentByDefaultForTesting`, which allows us to\r\nrun tests against both concurrent strategies. In the next PR, we'll\r\nremove the actual concurrent by default code path.\r\n"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/e902c45caf7ca67810d3e53748a549bdcc36063b",
        "html_url": "https://github.com/facebook/react/commit/e902c45caf7ca67810d3e53748a549bdcc36063b",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/e902c45caf7ca67810d3e53748a549bdcc36063b/comments",
        "author": {
            "login": "jackpope",
            "id": 8965173,
            "node_id": "MDQ6VXNlcjg5NjUxNzM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8965173?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jackpope",
            "html_url": "https://github.com/jackpope",
            "followers_url": "https://api.github.com/users/jackpope/followers",
            "following_url": "https://api.github.com/users/jackpope/following{/other_user}",
            "gists_url": "https://api.github.com/users/jackpope/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jackpope/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jackpope/subscriptions",
            "organizations_url": "https://api.github.com/users/jackpope/orgs",
            "repos_url": "https://api.github.com/users/jackpope/repos",
            "events_url": "https://api.github.com/users/jackpope/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jackpope/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "b943feba35476196fa674de276f2b87624086896",
                "url": "https://api.github.com/repos/facebook/react/commits/b943feba35476196fa674de276f2b87624086896",
                "html_url": "https://github.com/facebook/react/commit/b943feba35476196fa674de276f2b87624086896"
            }
        ]
    },
    {
        "sha": "b7e7f1a3fab87e8fc19e86a8088a9e0fe4710973",
        "node_id": "C_kwDOAJy2KtoAKGI3ZTdmMWEzZmFiODdlOGZjMTllODZhODA4OGE5ZTBmZTQ3MTA5NzM",
        "commit": {
            "author": {
                "name": "Jan Kassens",
                "email": "jkassens@meta.com",
                "date": "2024-07-22T20:09:01Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2024-07-22T20:09:01Z"
            },
            "message": "[BE] upgrade prettier to 3.3.3 (#30420)\n\nMostly just changes in ternary formatting.",
            "tree": {
                "sha": "745b4877cc9277e4c01a1c7120b0720e095e529d",
                "url": "https://api.github.com/repos/facebook/react/git/trees/745b4877cc9277e4c01a1c7120b0720e095e529d"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/b7e7f1a3fab87e8fc19e86a8088a9e0fe4710973",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJmnrxdCRC1aQ7uu5UhlAAAAPAQAEGklRJmPYDFJApjtN3Q7dNy\nWsdgL3yrTxb+9ymFcHyRN2C75GujB+7BSKIHZ0a7RHYJITY3gNX261oVN+413JYs\neYEBPymNkUgOMCR2ld2jaiyOosXii8Y5pj3jff7WGExiHcUjcuiem8fd2Hu2E5oY\n38Eju78z776uyIgwxmX97+zgGM4aOIuB9dCCwSJaaMFp78sKmIzz5v6eOqaU2mXP\nrThHxoDqtBSlhu5ylRvFLzXcJOXe9Ui69QflVPKV8x5Cr2DktJ3+xB82o2+neYli\nHmyV1bYc3xMAh9KIVSXloIK5C4Bui3Bl+bMSDOutuU3Mzplewlby38QXtOwr52hW\ng6MDpl9JgC1s3y1HkJ2KfuCiNKN0xo9XkVUtjjpCOCR5vIBe3W+kmEQDEChkZVsk\nWhjCEGGP1GvkdDB4mVscAqiX3ZxPOL885HASLgBHCwj+wF4ArByKtX1c1sUTX5LK\nPNe4vAtxUhnnbvDy3y/qfV9OabAOJ+A0WUzhPYKGtt3u88uEzYtWuwlX6VmXy+Ol\n4xExFAwdYUxtMOLclTN7ne2u3tXfMBk/PPI+ZuoABe3bbdzUjR/fZE3D58GPpItl\nufiYuvHuiDxj9J/1MBOzXth5aw1vM+rFqDJuzbRl4pU9lcrDDKEGnTH5xCG96wkG\nOnRwOqeGe/Na0x+B1hzp\n=QFRq\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 745b4877cc9277e4c01a1c7120b0720e095e529d\nparent d7c4334ce91726ddff4b6ba84ff6bd81eb3a91d5\nauthor Jan Kassens <jkassens@meta.com> 1721678941 -0400\ncommitter GitHub <noreply@github.com> 1721678941 -0400\n\n[BE] upgrade prettier to 3.3.3 (#30420)\n\nMostly just changes in ternary formatting."
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/b7e7f1a3fab87e8fc19e86a8088a9e0fe4710973",
        "html_url": "https://github.com/facebook/react/commit/b7e7f1a3fab87e8fc19e86a8088a9e0fe4710973",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/b7e7f1a3fab87e8fc19e86a8088a9e0fe4710973/comments",
        "author": {
            "login": "kassens",
            "id": 11849,
            "node_id": "MDQ6VXNlcjExODQ5",
            "avatar_url": "https://avatars.githubusercontent.com/u/11849?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kassens",
            "html_url": "https://github.com/kassens",
            "followers_url": "https://api.github.com/users/kassens/followers",
            "following_url": "https://api.github.com/users/kassens/following{/other_user}",
            "gists_url": "https://api.github.com/users/kassens/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kassens/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kassens/subscriptions",
            "organizations_url": "https://api.github.com/users/kassens/orgs",
            "repos_url": "https://api.github.com/users/kassens/repos",
            "events_url": "https://api.github.com/users/kassens/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kassens/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "d7c4334ce91726ddff4b6ba84ff6bd81eb3a91d5",
                "url": "https://api.github.com/repos/facebook/react/commits/d7c4334ce91726ddff4b6ba84ff6bd81eb3a91d5",
                "html_url": "https://github.com/facebook/react/commit/d7c4334ce91726ddff4b6ba84ff6bd81eb3a91d5"
            }
        ]
    },
    {
        "sha": "d7c4334ce91726ddff4b6ba84ff6bd81eb3a91d5",
        "node_id": "C_kwDOAJy2KtoAKGQ3YzQzMzRjZTkxNzI2ZGRmZjRiNmJhODRmZjZiZDgxZWIzYTkxZDU",
        "commit": {
            "author": {
                "name": "Jan Kassens",
                "email": "jkassens@meta.com",
                "date": "2024-07-22T18:10:08Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2024-07-22T18:10:08Z"
            },
            "message": "Add _debugStack and _debugTask under enableObjectFiber flag (#30337)",
            "tree": {
                "sha": "e7dabd12d872ec57868bee6b4176a47625ff4439",
                "url": "https://api.github.com/repos/facebook/react/git/trees/e7dabd12d872ec57868bee6b4176a47625ff4439"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/d7c4334ce91726ddff4b6ba84ff6bd81eb3a91d5",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJmnqCACRC1aQ7uu5UhlAAA6Q0QAHE9AVMxckL8EtYIc9nRGE+P\nfcI6iCIeZSs3142XHdi1jxAv9sONCHS1E/Bh7QmhUW2vX7ko7DfbV4bMTxgd5wTf\nF6V/aUZcb11dA+F5Pa1Tvo1uHhu5+OPHHDqM1F4mWL4mSKXeVXSEXOFtY9isBsF/\n4gtVQUbR2Kya6ExKEPBEASrXniNwLC+7yKVYEip5wC9G40hnMuOReYeki3PNPb7o\noObilHpB54ol5f+LDVmTD72DEb4Nf/qR/2dQ5TA0oYiVHiEhVbRWLmjHaNPjiv90\nJ1oExw1Dj9nQaYWyNcctwpizvgZ76cbVcT5hTSPxhMJRoaz7Es2DzmlkekvLrO+j\nFkmyaSLweEOEynRGFm96fBn+BHcsTlT85dOv7DlCrGu1B9lZOmhrzxsKYcmTWIOu\nqJ+152etX+Hgna80kl9Syjed+WovfbAbigvTIRamRxFTU+hZG31bvvL2KEhHmiBj\nFXy7FWKyZNyjEG48Hce4ZH9pbzVY+uOJwgt9urswN4SsSWTHeltd1APUOzwRND+r\nUNbddcTw3rTce3M6udC8r33mZxrww/ZoxjxXUBthNlLmlBgtsZ3/rjr7yTiHMNsF\nh7wb7C9PFvPBbCvjDQdWOPDRE1pWbbZGqHzBi3WlccDbfofQ1gzA/wGDQichY3yH\nhsieyKHVL9GYrsDZc+aP\n=Plrn\n-----END PGP SIGNATURE-----\n",
                "payload": "tree e7dabd12d872ec57868bee6b4176a47625ff4439\nparent d025ddd3b954dfc52ad7e6a036913946a8ca2644\nauthor Jan Kassens <jkassens@meta.com> 1721671808 -0400\ncommitter GitHub <noreply@github.com> 1721671808 -0400\n\nAdd _debugStack and _debugTask under enableObjectFiber flag (#30337)\n\n"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/d7c4334ce91726ddff4b6ba84ff6bd81eb3a91d5",
        "html_url": "https://github.com/facebook/react/commit/d7c4334ce91726ddff4b6ba84ff6bd81eb3a91d5",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/d7c4334ce91726ddff4b6ba84ff6bd81eb3a91d5/comments",
        "author": {
            "login": "kassens",
            "id": 11849,
            "node_id": "MDQ6VXNlcjExODQ5",
            "avatar_url": "https://avatars.githubusercontent.com/u/11849?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kassens",
            "html_url": "https://github.com/kassens",
            "followers_url": "https://api.github.com/users/kassens/followers",
            "following_url": "https://api.github.com/users/kassens/following{/other_user}",
            "gists_url": "https://api.github.com/users/kassens/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kassens/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kassens/subscriptions",
            "organizations_url": "https://api.github.com/users/kassens/orgs",
            "repos_url": "https://api.github.com/users/kassens/repos",
            "events_url": "https://api.github.com/users/kassens/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kassens/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "d025ddd3b954dfc52ad7e6a036913946a8ca2644",
                "url": "https://api.github.com/repos/facebook/react/commits/d025ddd3b954dfc52ad7e6a036913946a8ca2644",
                "html_url": "https://github.com/facebook/react/commit/d025ddd3b954dfc52ad7e6a036913946a8ca2644"
            }
        ]
    },
    {
        "sha": "fe9828954adcc51aa2bd21fe53d969a44dd3c9d2",
        "node_id": "C_kwDOAJy2KtoAKGZlOTgyODk1NGFkY2M1MWFhMmJkMjFmZTUzZDk2OWE0NGRkM2M5ZDI",
        "commit": {
            "author": {
                "name": "Jan Kassens",
                "email": "jkassens@meta.com",
                "date": "2024-07-10T20:42:08Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2024-07-10T20:42:08Z"
            },
            "message": "Experiment with using an object literal for Fiber creation (#28734)\n\nObject literals should be faster at least on React Native with Hermes as\r\nthe JS engine.\r\nIt might also be interesting to confirm the old comments in this file\r\nfrom years ago are even still valid. Creating an object from a literal\r\nshould be a simpler operation.\r\n\r\nIt's a bit unfortunate that this introduces a bunch of copied code, but\r\nsince we rearely update the fields on fibers, this seems like an okay\r\ntradeoff for a hot code path. An alternative would be some sort of macro\r\nsystem, but that doesn't seem worth the extra complexity.",
            "tree": {
                "sha": "660c531e5c67e8cef95d1f38cd538196f242a302",
                "url": "https://api.github.com/repos/facebook/react/git/trees/660c531e5c67e8cef95d1f38cd538196f242a302"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/fe9828954adcc51aa2bd21fe53d969a44dd3c9d2",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJmjvIgCRC1aQ7uu5UhlAAAl5EQABtfANnDU/p8c61rCS8/aGvG\nQ2m5mLEooLZ6TkSlPhCbIn45ycWgrP3H9Y4Jrl5ZCz9ivJ9XoLHKFYRFACzk2v7J\n0NXa0eL8tyAZ5Bk7QfpXQzGCnJTcqvMna9OXf2A8SL4ugnLYWymN27vn5YID7ZV5\nCe2I924LICSa/hEUOQ0HeA1tZxSqNF1t36jrDzuj1u+C46udibzqG2KBaxsTULc+\n5QPwuZan66+lu9jUGf/eJepL0AFKi6HHRVPTf2TjPqBYFKIZ2+mbJYYY8g39ZtXM\nIC1q/LgM9KN5LW/zY4OaOhNW9GmFpoMSHetYSv4jcbbcy+VCAwSwx8rxRfBJwAbM\n1OSoT9VV9+9TN0zZI4mqXJktKxmiheO/nF9ns2g9mOTulPgH42pRcnikm8b1opNG\na9fDLWV2iYm81luxBus7TiwX5ziElPId+KT8rX4x0rs6x02nZB+LjtPggk+aFLrO\nXYLBHf1yGAFHL8GOwWhS5LEan6IVg9Mc7qvxsSnCLGZmqs9mQQP27GR8y7QsZOs9\nTBgnXJZD55pApzdKzlA1GoE5DmH7pnpwhmVPmDELvFC/i7EGnIToWmzLsdt7UsYA\nFMwUxniUBlTfqYwZkN/hFZp3Z4a6MzId2u4cQUPxAfZKvGbn91Orv6EedaENhVfx\n6/AcZta55rTgbfVgSvZD\n=YjCt\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 660c531e5c67e8cef95d1f38cd538196f242a302\nparent 34dccefeb9302c1f4a39a7bde00eb8b1a6a36bdf\nauthor Jan Kassens <jkassens@meta.com> 1720644128 -0400\ncommitter GitHub <noreply@github.com> 1720644128 -0400\n\nExperiment with using an object literal for Fiber creation (#28734)\n\nObject literals should be faster at least on React Native with Hermes as\r\nthe JS engine.\r\nIt might also be interesting to confirm the old comments in this file\r\nfrom years ago are even still valid. Creating an object from a literal\r\nshould be a simpler operation.\r\n\r\nIt's a bit unfortunate that this introduces a bunch of copied code, but\r\nsince we rearely update the fields on fibers, this seems like an okay\r\ntradeoff for a hot code path. An alternative would be some sort of macro\r\nsystem, but that doesn't seem worth the extra complexity."
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/fe9828954adcc51aa2bd21fe53d969a44dd3c9d2",
        "html_url": "https://github.com/facebook/react/commit/fe9828954adcc51aa2bd21fe53d969a44dd3c9d2",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/fe9828954adcc51aa2bd21fe53d969a44dd3c9d2/comments",
        "author": {
            "login": "kassens",
            "id": 11849,
            "node_id": "MDQ6VXNlcjExODQ5",
            "avatar_url": "https://avatars.githubusercontent.com/u/11849?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kassens",
            "html_url": "https://github.com/kassens",
            "followers_url": "https://api.github.com/users/kassens/followers",
            "following_url": "https://api.github.com/users/kassens/following{/other_user}",
            "gists_url": "https://api.github.com/users/kassens/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kassens/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kassens/subscriptions",
            "organizations_url": "https://api.github.com/users/kassens/orgs",
            "repos_url": "https://api.github.com/users/kassens/repos",
            "events_url": "https://api.github.com/users/kassens/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kassens/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "34dccefeb9302c1f4a39a7bde00eb8b1a6a36bdf",
                "url": "https://api.github.com/repos/facebook/react/commits/34dccefeb9302c1f4a39a7bde00eb8b1a6a36bdf",
                "html_url": "https://github.com/facebook/react/commit/34dccefeb9302c1f4a39a7bde00eb8b1a6a36bdf"
            }
        ]
    },
    {
        "sha": "e02baf6c92833a0d45a77fb2e741676f393c24f7",
        "node_id": "C_kwDOAJy2KtoAKGUwMmJhZjZjOTI4MzNhMGQ0NWE3N2ZiMmU3NDE2NzZmMzkzYzI0Zjc",
        "commit": {
            "author": {
                "name": "Sebastian Markb\u00e5ge",
                "email": "sebastian@calyptus.eu",
                "date": "2024-06-27T16:10:09Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2024-06-27T16:10:09Z"
            },
            "message": "Warn for invalid type in renderer with the correct RSC stack (#30102)\n\nThis is all behind the `enableOwnerStacks` flag.\r\n\r\nThis is a follow up to #29088. In that I moved type validation into the\r\nrenderer since that's the one that knows what types are allowed.\r\nHowever, I only removed it from `React.createElement` and not the JSX\r\nwhich was an oversight.\r\n\r\nHowever, I also noticed that for invalid types we don't have the right\r\nstack trace for throws because we're not yet inside the JSX element that\r\nitself is invalid. We should use its stack for the stack trace. That's\r\nthe reason it's enough to just use the throw now because we can get a\r\ngood stack trace from the owner stack. This is fixed by creating a fake\r\nThrow Fiber that gets assigned the right stack.\r\n\r\nAdditionally, I noticed that for certain invalid types like the most\r\ncommon one `undefined` we error in Flight so a missing import in RSC\r\nleads to a generic error. Instead of erroring on the Flight side we\r\nshould just let anything that's not a Server Component through to the\r\nclient and then let the Client renderer determine whether it's a valid\r\ntype or not. Since we now have owner stacks through the server too, this\r\nwill still be able to provide a good stack trace on the client that\r\npoints to the server in that case.\r\n\r\n<img width=\"571\" alt=\"Screenshot 2024-06-25 at 6 46 35\u202fPM\"\r\nsrc=\"https://github.com/facebook/react/assets/63648/6812c24f-e274-4e09-b4de-21deda9ea1d4\">\r\n\r\nTo get the best stack you have to expand the little icon and the regular\r\nstack is noisy [due to this Chrome\r\nbug](https://issues.chromium.org/issues/345248263) which makes it a\r\nlittle harder to find but once that's fixed it might be easier.",
            "tree": {
                "sha": "e12b7a8ebec4c42e5ccb5bf2e1b2c0e82623fadd",
                "url": "https://api.github.com/repos/facebook/react/git/trees/e12b7a8ebec4c42e5ccb5bf2e1b2c0e82623fadd"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/e02baf6c92833a0d45a77fb2e741676f393c24f7",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJmfY7hCRC1aQ7uu5UhlAAAHKcQAHb87NutlEmy4eqzM1wX3SAa\nGkppzBlnhcpU74CHSwUXMmNHT1QDcMTOcc7DZfRyNxbT5Aen8e8beP5hi86g/TUI\nazLddypqFvTYD/GYfOdVFqigQURKSl5o+gcaMUj9Ke7d7V97PWgN62qAQO3pFa6a\n9VfiUzNEJ6HwrHMgyRTvw9oIr4R/uyC0BqGyDQS/Vk2BgstjOTv+u6Cn7U5QWoTf\nA40RRhuV48G1wULJPf+x74Ckie3LXNG7xBgPTJlYV05hjBoQQBsnmxe9cm/KS3Fu\nC06gI6bhrOu5cHxArkxyx9rXm07nr4O89vzSSJatTdev1H3HHh6NEKQKJ5jP7tKU\nOFsPmT3KUOHNCMBZqVvX247OAoHBpcSgcmclCj0SK7ouKhul7TS++8+EFqx8E1HR\nBv+gyC8M/WnsZLgfDTcqJ5atHuOaoIwOc5dQLBh8okx+te/joCR6LuWmBZ2hFs93\nVnDqRk6XCHgzZqC4PogGfTGMjNczlTsKsS5/a8bWXcnR8JLRKtEk0HDppgAL1oH4\n+iWc30yfsxhx0lukWN8lUCIHaQFUNVAgNd/fdtqFL54OZsIjQRAMt32N8iaZfV0/\n0Re8LeDJzUcnNA4BD/FDw3V/ib849V8DX2m389dykw13YSZ3ejokEo0DAVD4b1NI\nZ4lLBn2kc6WRo2p6u19E\n=VDQg\n-----END PGP SIGNATURE-----\n",
                "payload": "tree e12b7a8ebec4c42e5ccb5bf2e1b2c0e82623fadd\nparent ffec9ec5b5c846f61d7b40e92f138e2a7b34f273\nauthor Sebastian Markb\u00e5ge <sebastian@calyptus.eu> 1719504609 +0200\ncommitter GitHub <noreply@github.com> 1719504609 -0400\n\nWarn for invalid type in renderer with the correct RSC stack (#30102)\n\nThis is all behind the `enableOwnerStacks` flag.\r\n\r\nThis is a follow up to #29088. In that I moved type validation into the\r\nrenderer since that's the one that knows what types are allowed.\r\nHowever, I only removed it from `React.createElement` and not the JSX\r\nwhich was an oversight.\r\n\r\nHowever, I also noticed that for invalid types we don't have the right\r\nstack trace for throws because we're not yet inside the JSX element that\r\nitself is invalid. We should use its stack for the stack trace. That's\r\nthe reason it's enough to just use the throw now because we can get a\r\ngood stack trace from the owner stack. This is fixed by creating a fake\r\nThrow Fiber that gets assigned the right stack.\r\n\r\nAdditionally, I noticed that for certain invalid types like the most\r\ncommon one `undefined` we error in Flight so a missing import in RSC\r\nleads to a generic error. Instead of erroring on the Flight side we\r\nshould just let anything that's not a Server Component through to the\r\nclient and then let the Client renderer determine whether it's a valid\r\ntype or not. Since we now have owner stacks through the server too, this\r\nwill still be able to provide a good stack trace on the client that\r\npoints to the server in that case.\r\n\r\n<img width=\"571\" alt=\"Screenshot 2024-06-25 at 6 46 35\u202fPM\"\r\nsrc=\"https://github.com/facebook/react/assets/63648/6812c24f-e274-4e09-b4de-21deda9ea1d4\">\r\n\r\nTo get the best stack you have to expand the little icon and the regular\r\nstack is noisy [due to this Chrome\r\nbug](https://issues.chromium.org/issues/345248263) which makes it a\r\nlittle harder to find but once that's fixed it might be easier."
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/e02baf6c92833a0d45a77fb2e741676f393c24f7",
        "html_url": "https://github.com/facebook/react/commit/e02baf6c92833a0d45a77fb2e741676f393c24f7",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/e02baf6c92833a0d45a77fb2e741676f393c24f7/comments",
        "author": {
            "login": "sebmarkbage",
            "id": 63648,
            "node_id": "MDQ6VXNlcjYzNjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sebmarkbage",
            "html_url": "https://github.com/sebmarkbage",
            "followers_url": "https://api.github.com/users/sebmarkbage/followers",
            "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
            "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
            "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
            "repos_url": "https://api.github.com/users/sebmarkbage/repos",
            "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "ffec9ec5b5c846f61d7b40e92f138e2a7b34f273",
                "url": "https://api.github.com/repos/facebook/react/commits/ffec9ec5b5c846f61d7b40e92f138e2a7b34f273",
                "html_url": "https://github.com/facebook/react/commit/ffec9ec5b5c846f61d7b40e92f138e2a7b34f273"
            }
        ]
    },
    {
        "sha": "b565373afd0cc1988497e1107106e851e8cfb261",
        "node_id": "C_kwDOAJy2KtoAKGI1NjUzNzNhZmQwY2MxOTg4NDk3ZTExMDcxMDZlODUxZThjZmIyNjE",
        "commit": {
            "author": {
                "name": "Jan Kassens",
                "email": "jkassens@meta.com",
                "date": "2024-06-21T16:24:32Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2024-06-21T16:24:32Z"
            },
            "message": "lint: enable reportUnusedDisableDirectives and remove unused suppressions (#28721)\n\nThis enables linting against unused suppressions and removes the ones\r\nthat were unused.",
            "tree": {
                "sha": "b497024103ec6b545684ab3c70d62177c33e9a95",
                "url": "https://api.github.com/repos/facebook/react/git/trees/b497024103ec6b545684ab3c70d62177c33e9a95"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/b565373afd0cc1988497e1107106e851e8cfb261",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJmdalACRC1aQ7uu5UhlAAApBcQAKBIkb5W4II2ji5OMysX93l/\nBIvv5WHE3ApLwihCs2Mdx/3gemmGKZr0uxQ3uHPz/9JaLUnsdHLFqAp1cgjoAUnB\ncGdzMwMi8AEHj8+dm1RpMQM/Ynw2NKN8rUHTyjomuvDJRm5iUgVbQTLAobejjy2T\nEvQfyf6QKQ4xQYa+S26rSOZz3rD2t/6MrH3uPrytycD0O8vVfivUexO47EDK8Ua6\nP/AEVENYZ2dLxNvKuW/UJDIBw0X/JcjX7QcZR2jujVJYqPIPDUZUNnFrHpFY2oM/\nKwGqKS03DpL008/8js1pSbtpbT22S2RdiIMJI76a/zhk7e4V37PjwzlbdZXc3vRP\n19vnrYtIQQaG7y/kaeMhFpxL2djnkeKns+8i3FF9iBiofO67SFLMiS5gcNEmnOzW\nkO4HQQxvKhg78cKnZvtnAaCdH9T+nZdmLmMlibdsKsCfJuQbYEbKNzpwWKlCEyBt\n705dQshHe5rkcQrl/wkb5fdkZb0gpqdRXdoYq3/VXNVF+HCNAtPo/nx80ynJAgBP\nKMrF4brV1s3/iI1/Q2EXCeD09VbjsCliBcTVio19Ek+HYBuhivMbUEwqsvkgrpCv\nVYNk8cfL8yMT2EmoF+Gi0av+DSD2xCeOx5PN2xfrA7vmqFuUMn9Qr/hzQzYSC2cy\nSEWqGxMHmRdJE2gdN7Sg\n=1iZ0\n-----END PGP SIGNATURE-----\n",
                "payload": "tree b497024103ec6b545684ab3c70d62177c33e9a95\nparent 3563387fe3427924304cdb1a45e73f2b564c51e1\nauthor Jan Kassens <jkassens@meta.com> 1718987072 -0400\ncommitter GitHub <noreply@github.com> 1718987072 -0400\n\nlint: enable reportUnusedDisableDirectives and remove unused suppressions (#28721)\n\nThis enables linting against unused suppressions and removes the ones\r\nthat were unused."
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/b565373afd0cc1988497e1107106e851e8cfb261",
        "html_url": "https://github.com/facebook/react/commit/b565373afd0cc1988497e1107106e851e8cfb261",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/b565373afd0cc1988497e1107106e851e8cfb261/comments",
        "author": {
            "login": "kassens",
            "id": 11849,
            "node_id": "MDQ6VXNlcjExODQ5",
            "avatar_url": "https://avatars.githubusercontent.com/u/11849?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kassens",
            "html_url": "https://github.com/kassens",
            "followers_url": "https://api.github.com/users/kassens/followers",
            "following_url": "https://api.github.com/users/kassens/following{/other_user}",
            "gists_url": "https://api.github.com/users/kassens/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kassens/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kassens/subscriptions",
            "organizations_url": "https://api.github.com/users/kassens/orgs",
            "repos_url": "https://api.github.com/users/kassens/repos",
            "events_url": "https://api.github.com/users/kassens/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kassens/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "3563387fe3427924304cdb1a45e73f2b564c51e1",
                "url": "https://api.github.com/repos/facebook/react/commits/3563387fe3427924304cdb1a45e73f2b564c51e1",
                "html_url": "https://github.com/facebook/react/commit/3563387fe3427924304cdb1a45e73f2b564c51e1"
            }
        ]
    },
    {
        "sha": "270229f0c337dc652f07ef27d2254bb922bfaa9e",
        "node_id": "C_kwDOAJy2KtoAKDI3MDIyOWYwYzMzN2RjNjUyZjA3ZWYyN2QyMjU0YmI5MjJiZmFhOWU",
        "commit": {
            "author": {
                "name": "Sebastian Markb\u00e5ge",
                "email": "sebastian@calyptus.eu",
                "date": "2024-06-11T19:57:41Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2024-06-11T19:57:41Z"
            },
            "message": "[Fiber] Create virtual Fiber when an error occurs during reconcilation (#29804)\n\nThis lets us rethrow it in the conceptual place of the child.\r\n\r\nThere's currently a problem when we suspend or throw in the child fiber\r\nreconciliation phase. This work is done by the parent component, so if\r\nit suspends or errors it is as if that component errored or suspended.\r\nHowever, conceptually it's like a child suspended or errored.\r\n\r\nIn theory any thing can throw but it is really mainly due to either\r\n`React.lazy` (both in the element.type position and node position),\r\n`Thenable`s or the `Thenable`s that make up `AsyncIterable`s.\r\n\r\nMainly this happens because a Server Component that errors turns into a\r\n`React.lazy`. In practice this means that if you have a Server Component\r\nas the direct child of an Error Boundary. Errors inside of it won't be\r\ncaught.\r\n\r\nWe used to have the same problem with Thenables and Suspense but because\r\nit's now always nested inside an inner Offscreen boundary that shields\r\nit by being one level nested. However, when we have raw Offscreen\r\n(Activity) boundaries they should also be able to catch the suspense if\r\nit's in a hidden state so the problem returns. This fixes it for thrown\r\npromises but it doesn't fix it for SuspenseException. I'm not sure this\r\nis even the right strategy for Suspense though. It kind of relies on the\r\nnode never actually mounting/committing.\r\n\r\nIt's conceptually a little tricky because the current component can\r\ninspect the children and make decisions based on them. Such as\r\nSuspenseList.\r\n\r\nThe other thing that this PR tries to address is that it sets the\r\nfoundation for dealing with error reporting for Server Components that\r\nerrored. If something client side errors it'll be a stack like Server\r\n(DebugInfo) -> Fiber -> Fiber -> Server -> (DebugInfo) -> Fiber.\r\nHowever, all error reporting relies on it eventually terminating into a\r\nFiber that is responsible for the error. To avoid having to fork too\r\nmuch it would be nice if I could create a Fiber to associate with the\r\nerror so that even a Server component error in this case ultimately\r\nterminates in a Fiber.",
            "tree": {
                "sha": "45a2ae1aa26848d2fecec704ad6844bda1b7e41b",
                "url": "https://api.github.com/repos/facebook/react/git/trees/45a2ae1aa26848d2fecec704ad6844bda1b7e41b"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/270229f0c337dc652f07ef27d2254bb922bfaa9e",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJmaKw1CRC1aQ7uu5UhlAAAgtIQALB8mWpgIKaU4oRscYEzhM2l\nSg6yMote0jJlfxbQFlxVPF4NM/Mj89Jw8bArVpZuUYLjh9mWTCKSEQFdoFZnUGCj\nUQ8uv3aIvVjo1Xj+PCjHFFlbOKNpgiy2R2ldmxgORWhVaVM+XMksMD7Q8LPwF6ax\ncF01+XwQ5Fr201xkiAK5Guj6HuRp6VRr1MBS+3ix1BvzAbGwy8ulsTa+tDZZwZgY\naTczqjL6VM9nXOzc3Nfn4X31lBk3kO+YVyGRlZ/D8jKsZvRf9mKGDJeUZj6jSsfY\n6RWYEsIO8XxqQI6KShbb25tZiGtjRRsjqkEytJ18B26YkMkCAxnmZ0wOkrRTBzKZ\nvNn8gSL8GH55ipbRPxjcPvHUxqdvdCE4WeuU2sADnbSyyOIW+z7iqMq7vPBGzb/5\nVjzhPB3OmWRJIFcJG6GeiKuSesyI3LXzViBh3ZIpyqHPdlyQNUA3EG13cr2PRBEJ\nLyYgMXTioUBjWMCM2Wl3XZWY0psMaBuXNaE8IOdOVkaFszt/+6IM186Cx++1y9hI\nDLiYIL/+QoBJRHn1b18Jdi33ZUlMSBf7FRUqXbTz7LRMv66GjaaOs+TsiXGNB3MR\nm+ghKgXQTpnnV+5q8uB90Is5s3+FgG9Hpal0BBoabxy4BoImLYDy5U/nXIRd6iAc\nRaevC0VvYG4lGch6AvKr\n=6Kcd\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 45a2ae1aa26848d2fecec704ad6844bda1b7e41b\nparent 01a40570c3cd852593c9bc88978b11cb9a2c5720\nauthor Sebastian Markb\u00e5ge <sebastian@calyptus.eu> 1718135861 -0400\ncommitter GitHub <noreply@github.com> 1718135861 -0400\n\n[Fiber] Create virtual Fiber when an error occurs during reconcilation (#29804)\n\nThis lets us rethrow it in the conceptual place of the child.\r\n\r\nThere's currently a problem when we suspend or throw in the child fiber\r\nreconciliation phase. This work is done by the parent component, so if\r\nit suspends or errors it is as if that component errored or suspended.\r\nHowever, conceptually it's like a child suspended or errored.\r\n\r\nIn theory any thing can throw but it is really mainly due to either\r\n`React.lazy` (both in the element.type position and node position),\r\n`Thenable`s or the `Thenable`s that make up `AsyncIterable`s.\r\n\r\nMainly this happens because a Server Component that errors turns into a\r\n`React.lazy`. In practice this means that if you have a Server Component\r\nas the direct child of an Error Boundary. Errors inside of it won't be\r\ncaught.\r\n\r\nWe used to have the same problem with Thenables and Suspense but because\r\nit's now always nested inside an inner Offscreen boundary that shields\r\nit by being one level nested. However, when we have raw Offscreen\r\n(Activity) boundaries they should also be able to catch the suspense if\r\nit's in a hidden state so the problem returns. This fixes it for thrown\r\npromises but it doesn't fix it for SuspenseException. I'm not sure this\r\nis even the right strategy for Suspense though. It kind of relies on the\r\nnode never actually mounting/committing.\r\n\r\nIt's conceptually a little tricky because the current component can\r\ninspect the children and make decisions based on them. Such as\r\nSuspenseList.\r\n\r\nThe other thing that this PR tries to address is that it sets the\r\nfoundation for dealing with error reporting for Server Components that\r\nerrored. If something client side errors it'll be a stack like Server\r\n(DebugInfo) -> Fiber -> Fiber -> Server -> (DebugInfo) -> Fiber.\r\nHowever, all error reporting relies on it eventually terminating into a\r\nFiber that is responsible for the error. To avoid having to fork too\r\nmuch it would be nice if I could create a Fiber to associate with the\r\nerror so that even a Server component error in this case ultimately\r\nterminates in a Fiber."
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/270229f0c337dc652f07ef27d2254bb922bfaa9e",
        "html_url": "https://github.com/facebook/react/commit/270229f0c337dc652f07ef27d2254bb922bfaa9e",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/270229f0c337dc652f07ef27d2254bb922bfaa9e/comments",
        "author": {
            "login": "sebmarkbage",
            "id": 63648,
            "node_id": "MDQ6VXNlcjYzNjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sebmarkbage",
            "html_url": "https://github.com/sebmarkbage",
            "followers_url": "https://api.github.com/users/sebmarkbage/followers",
            "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
            "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
            "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
            "repos_url": "https://api.github.com/users/sebmarkbage/repos",
            "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "01a40570c3cd852593c9bc88978b11cb9a2c5720",
                "url": "https://api.github.com/repos/facebook/react/commits/01a40570c3cd852593c9bc88978b11cb9a2c5720",
                "html_url": "https://github.com/facebook/react/commit/01a40570c3cd852593c9bc88978b11cb9a2c5720"
            }
        ]
    },
    {
        "sha": "d6cfa0f295f4c8b366af15fd20c84e27cdd1fab7",
        "node_id": "C_kwDOAJy2KtoAKGQ2Y2ZhMGYyOTVmNGM4YjM2NmFmMTVmZDIwYzg0ZTI3Y2RkMWZhYjc",
        "commit": {
            "author": {
                "name": "Sebastian Markb\u00e5ge",
                "email": "sebastian@calyptus.eu",
                "date": "2024-05-25T15:58:17Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2024-05-25T15:58:17Z"
            },
            "message": "[Fiber] Use Owner/JSX Stack When Appending Stacks to Console (#29206)\n\nThis one should be fully behind the `enableOwnerStacks` flag.\r\n\r\nInstead of printing the parent Component stack all the way to the root,\r\nthis now prints the owner stack of every JSX callsite. It also includes\r\nintermediate callsites between the Component and the JSX call so it has\r\npotentially more frames. Mainly it provides the line number of the JSX\r\ncallsite. In terms of the number of components is a subset of the parent\r\ncomponent stack so it's less information in that regard. This is usually\r\nbetter since it's more focused on components that might affect the\r\noutput but if it's contextual based on rendering it's still good to have\r\nparent stack. Therefore, I still use the parent stack when printing DOM\r\nnesting warnings but I plan on switching that format to a diff view\r\nformat instead (Next.js already reformats the parent stack like this).\r\n\r\n__Follow ups__\r\n\r\n- Server Components show up in the owner stack for client logs but logs\r\ndone by Server Components don't yet get their owner stack printed as\r\nthey're replayed. They're also not yet printed in the server logs of the\r\nRSC server.\r\n\r\n- Server Component stack frames are formatted as the server and added to\r\nthe end but this might be a different format than the browser. E.g. if\r\nserver is running V8 and browser is running JSC or vice versa. Ideally\r\nwe can reformat them in terms of the client formatting.\r\n\r\n- This doesn't yet update Fizz or DevTools. Those will be follow ups.\r\nFizz still prints parent stacks in the server side logs. The stacks\r\nadded to user space `console.error` calls by DevTools still get the\r\nparent stacks instead.\r\n\r\n- It also doesn't yet expose these to user space so there's no way to\r\nget them inside `onCaughtError` for example or inside a custom\r\n`console.error` override.\r\n\r\n- In another follow up I'll use `console.createTask` instead and\r\ncompletely remove these stacks if it's available.",
            "tree": {
                "sha": "6dfcf3e7a0f240dc2900dad01d624d15a1c7e1da",
                "url": "https://api.github.com/repos/facebook/react/git/trees/6dfcf3e7a0f240dc2900dad01d624d15a1c7e1da"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/d6cfa0f295f4c8b366af15fd20c84e27cdd1fab7",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJmUgqZCRC1aQ7uu5UhlAAAW6IQAKGYae5/fBfl9RNq5dCWhsj9\n0lpid1/XrQMdHYIJi5CBJnp4HVhIVWlE6xOsp3+5lMc3FY//56CdrFIaxgFL9jw2\nb1xfMw48GXnTqP73c20bTbbKwerTs//ZpKt8L7qThoSI6nRSFylAUI17uxZIPi+v\nn/p18uhQyOy3AFvczmAsDEDwIOpAzSvomwuf1QCxfxMWpbQqn4Ec8dOqJtEZxdKb\ncGi6drQ/ZUUir8Ggs9BgBJuU5BWWneFh1DHSHXphELVGh7j7kPM3l9szxJPPFldR\nPcMklIZeS/tEZubHcXzPESANS94CaIG5WqgFSy5N/x3SLQHwBqNf6tIrwNT8VolN\nnimWfr+C7yOzNhM5MhpJ33bWTZoPwdoOqsAgOYWCdsGGq/fjmDh1CtWsZg4svlzT\niGFnyrMsAXy0LbbrtPfZaJBPqupJZINzpN8NfsyjheD+8gOJwGbEdaTL3TLpaCNl\niHzWgWo8HdKbnnTD8TxT4/uLmrhrGhG03XOxGxAHuWL3AGZxaCDPqPSC9FuoyduW\ng0u0ZQAFiJ8dyzxCsUrrd9lQalfMO5uN/I/XaqPySFx1an9tyW8PI0Ouxu02/G8c\nO1ImeQEh2S1ZTsfI0PHOkEuc1zEgJ3O18ta507/xnjxL6JxFOd5xGBodb4D+qZgW\nPsiU9oSuVUli8xXtVEEf\n=R8Jb\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 6dfcf3e7a0f240dc2900dad01d624d15a1c7e1da\nparent 935180c7e060e4d6e7868cef8f2e7c1b77cf8f7f\nauthor Sebastian Markb\u00e5ge <sebastian@calyptus.eu> 1716652697 -0400\ncommitter GitHub <noreply@github.com> 1716652697 -0400\n\n[Fiber] Use Owner/JSX Stack When Appending Stacks to Console (#29206)\n\nThis one should be fully behind the `enableOwnerStacks` flag.\r\n\r\nInstead of printing the parent Component stack all the way to the root,\r\nthis now prints the owner stack of every JSX callsite. It also includes\r\nintermediate callsites between the Component and the JSX call so it has\r\npotentially more frames. Mainly it provides the line number of the JSX\r\ncallsite. In terms of the number of components is a subset of the parent\r\ncomponent stack so it's less information in that regard. This is usually\r\nbetter since it's more focused on components that might affect the\r\noutput but if it's contextual based on rendering it's still good to have\r\nparent stack. Therefore, I still use the parent stack when printing DOM\r\nnesting warnings but I plan on switching that format to a diff view\r\nformat instead (Next.js already reformats the parent stack like this).\r\n\r\n__Follow ups__\r\n\r\n- Server Components show up in the owner stack for client logs but logs\r\ndone by Server Components don't yet get their owner stack printed as\r\nthey're replayed. They're also not yet printed in the server logs of the\r\nRSC server.\r\n\r\n- Server Component stack frames are formatted as the server and added to\r\nthe end but this might be a different format than the browser. E.g. if\r\nserver is running V8 and browser is running JSC or vice versa. Ideally\r\nwe can reformat them in terms of the client formatting.\r\n\r\n- This doesn't yet update Fizz or DevTools. Those will be follow ups.\r\nFizz still prints parent stacks in the server side logs. The stacks\r\nadded to user space `console.error` calls by DevTools still get the\r\nparent stacks instead.\r\n\r\n- It also doesn't yet expose these to user space so there's no way to\r\nget them inside `onCaughtError` for example or inside a custom\r\n`console.error` override.\r\n\r\n- In another follow up I'll use `console.createTask` instead and\r\ncompletely remove these stacks if it's available."
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/d6cfa0f295f4c8b366af15fd20c84e27cdd1fab7",
        "html_url": "https://github.com/facebook/react/commit/d6cfa0f295f4c8b366af15fd20c84e27cdd1fab7",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/d6cfa0f295f4c8b366af15fd20c84e27cdd1fab7/comments",
        "author": {
            "login": "sebmarkbage",
            "id": 63648,
            "node_id": "MDQ6VXNlcjYzNjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sebmarkbage",
            "html_url": "https://github.com/sebmarkbage",
            "followers_url": "https://api.github.com/users/sebmarkbage/followers",
            "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
            "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
            "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
            "repos_url": "https://api.github.com/users/sebmarkbage/repos",
            "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "935180c7e060e4d6e7868cef8f2e7c1b77cf8f7f",
                "url": "https://api.github.com/repos/facebook/react/commits/935180c7e060e4d6e7868cef8f2e7c1b77cf8f7f",
                "html_url": "https://github.com/facebook/react/commit/935180c7e060e4d6e7868cef8f2e7c1b77cf8f7f"
            }
        ]
    },
    {
        "sha": "84239da896fd7395a667ab1e7ef1ef338a32de8f",
        "node_id": "C_kwDOAJy2KtoAKDg0MjM5ZGE4OTZmZDczOTVhNjY3YWIxZTdlZjFlZjMzOGEzMmRlOGY",
        "commit": {
            "author": {
                "name": "Sebastian Markb\u00e5ge",
                "email": "sebastian@calyptus.eu",
                "date": "2024-05-23T16:48:57Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2024-05-23T16:48:57Z"
            },
            "message": "Move createElement/JSX Warnings into the Renderer (#29088)\n\nThis is necessary to simplify the component stack handling to make way\r\nfor owner stacks. It also solves some hacks that we used to have but\r\ndon't quite make sense. It also solves the problem where things like key\r\nwarnings get silenced in RSC because they get deduped. It also surfaces\r\nareas where we were missing key warnings to begin with.\r\n\r\nAlmost every type of warning is issued from the renderer. React Elements\r\nare really not anything special themselves. They're just lazily invoked\r\nfunctions and its really the renderer that determines there semantics.\r\n\r\nWe have three types of warnings that previously fired in\r\nJSX/createElement:\r\n\r\n- Fragment props validation.\r\n- Type validation.\r\n- Key warning.\r\n\r\nIt's nice to be able to do some validation in the JSX/createElement\r\nbecause it has a more specific stack frame at the callsite. However,\r\nthat's the case for every type of component and validation. That's the\r\nwhole point of enableOwnerStacks. It's also not sufficient to do it in\r\nJSX/createElement so we also have validation in the renderers too. So\r\nthis validation is really just an eager validation but also happens\r\nagain later.\r\n\r\nThe problem with these is that we don't really know what types are valid\r\nuntil we get to the renderer. Additionally, by placing it in the\r\nisomorphic code it becomes harder to do deduping of warnings in a way\r\nthat makes sense for that renderer. It also means we can't reuse logic\r\nfor managing stacks etc.\r\n\r\nFragment props validation really should just be part of the renderer\r\nlike any other component type. This also matters once we add Fragment\r\nrefs and other fragment features. So I moved this into Fiber. However,\r\nsince some Fragments don't have Fibers, I do the validation in\r\nChildFiber instead of beginWork where it would normally happen.\r\n\r\nFor `type` validation we already do validation when rendering. By\r\nleaving it to the renderer we don't have to hard code an extra list.\r\nThis list also varies by context. E.g. class components aren't allowed\r\nin RSC but client references are but we don't have an isomorphic way to\r\nidentify client references because they're defined by the host config so\r\nthe current logic is flawed anyway. I kept the early validation for now\r\nwithout the `enableOwnerStacks` since it does provide a nicer stack\r\nframe but with that flag on it'll be handled with nice stacks anyway. I\r\nnormalized some of the errors to ensure tests pass.\r\n\r\nFor `key` validation it's the same principle. The mechanism for the\r\nheuristic is still the same - if it passes statically through a parent\r\nJSX/createElement call then it's considered validated. We already did\r\nprint the error later from the renderer so this also disables the early\r\nlog in the `enableOwnerStacks` flag.\r\n\r\nI also added logging to Fizz so that key warnings can print in SSR logs.\r\n\r\nFlight is a bit more complex. For elements that end up on the client we\r\njust pass the `validated` flag along to the client and let the client\r\nrenderer print the error once rendered. For server components we log the\r\nerror from Flight with the server component as the owner on the stack\r\nwhich will allow us to print the right stack for context. The factoring\r\nof this is a little tricky because we only want to warn if it's in an\r\narray parent but we want to log the error later to get the right debug\r\ninfo.\r\n\r\nFiber/Fizz has a similar factoring problem that causes us to create a\r\nfake Fiber for the owner which means the logs won't be associated with\r\nthe right place in DevTools.",
            "tree": {
                "sha": "485e3911361e9a661b2cb009e843a7bd5b02a2c2",
                "url": "https://api.github.com/repos/facebook/react/git/trees/485e3911361e9a661b2cb009e843a7bd5b02a2c2"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/84239da896fd7395a667ab1e7ef1ef338a32de8f",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJmT3N5CRC1aQ7uu5UhlAAAUYoQABN73BjCJorOrhZaC1GuApof\nm+LpdAc65LWTMiqrWEVgICwUTVwwkm8xHmBtxlLd8wG886DpJjkFY2W2RA+lcsVv\nxOLVY7QiDqr6Hrc0IHfjWdffR3rdHtsOq+S8U+eS2yGLyiceFD1ppOWivWk29lx+\njDjXFAXoYWufJevbvH7WdAB8fch0QFdlPGMpQAdNUk3HeoT3k8JYaq6IfJ3xhM4t\nkbCnLUlK/urd1ePLAs9ZveSgkleQvV7J8Lrkhp/3WHSc4CwoNwP4VhycyAAC8c5g\nC5yPDd6V8NK2extduObg6vv1zfXZU29qxQOSuBhbdiiz5w5djRZuRQbDnWZ1lE+x\n8dppSkCLkB9Q9nk7rskl+rX7OBik556sospCE8J6vcmn51hdsvF+mTcMGXulbQUU\ntS3wpHhOeK0XUmoNwAIKMOTSGzAKlU+rmTLC57hVHrwCjZmEHMNvSeEyMjII1L+K\nP9GweZbXYOcYnUI3RRX9Oq1glwET2WFQ/YTmBwFdwLTOHnyEc6l3V7KzqXuBhq6F\n3hNvylC8pbTb+bN7pucUujvUPZYfWHnGwPtEK7HgRKsVLKu80YJj+sKame49GpX6\nCJnWxX5plKYgDR2WGkTR6wcoAiROja7FYISyBn7Bnk9XkZZAJTBc9/GhgwOLiVQF\nJd50eCNIwzlls0nOnGUh\n=dqsE\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 485e3911361e9a661b2cb009e843a7bd5b02a2c2\nparent 5fe8c0b4ecd09cfd2c0e1422089e2c603d558ff8\nauthor Sebastian Markb\u00e5ge <sebastian@calyptus.eu> 1716482937 -0400\ncommitter GitHub <noreply@github.com> 1716482937 -0400\n\nMove createElement/JSX Warnings into the Renderer (#29088)\n\nThis is necessary to simplify the component stack handling to make way\r\nfor owner stacks. It also solves some hacks that we used to have but\r\ndon't quite make sense. It also solves the problem where things like key\r\nwarnings get silenced in RSC because they get deduped. It also surfaces\r\nareas where we were missing key warnings to begin with.\r\n\r\nAlmost every type of warning is issued from the renderer. React Elements\r\nare really not anything special themselves. They're just lazily invoked\r\nfunctions and its really the renderer that determines there semantics.\r\n\r\nWe have three types of warnings that previously fired in\r\nJSX/createElement:\r\n\r\n- Fragment props validation.\r\n- Type validation.\r\n- Key warning.\r\n\r\nIt's nice to be able to do some validation in the JSX/createElement\r\nbecause it has a more specific stack frame at the callsite. However,\r\nthat's the case for every type of component and validation. That's the\r\nwhole point of enableOwnerStacks. It's also not sufficient to do it in\r\nJSX/createElement so we also have validation in the renderers too. So\r\nthis validation is really just an eager validation but also happens\r\nagain later.\r\n\r\nThe problem with these is that we don't really know what types are valid\r\nuntil we get to the renderer. Additionally, by placing it in the\r\nisomorphic code it becomes harder to do deduping of warnings in a way\r\nthat makes sense for that renderer. It also means we can't reuse logic\r\nfor managing stacks etc.\r\n\r\nFragment props validation really should just be part of the renderer\r\nlike any other component type. This also matters once we add Fragment\r\nrefs and other fragment features. So I moved this into Fiber. However,\r\nsince some Fragments don't have Fibers, I do the validation in\r\nChildFiber instead of beginWork where it would normally happen.\r\n\r\nFor `type` validation we already do validation when rendering. By\r\nleaving it to the renderer we don't have to hard code an extra list.\r\nThis list also varies by context. E.g. class components aren't allowed\r\nin RSC but client references are but we don't have an isomorphic way to\r\nidentify client references because they're defined by the host config so\r\nthe current logic is flawed anyway. I kept the early validation for now\r\nwithout the `enableOwnerStacks` since it does provide a nicer stack\r\nframe but with that flag on it'll be handled with nice stacks anyway. I\r\nnormalized some of the errors to ensure tests pass.\r\n\r\nFor `key` validation it's the same principle. The mechanism for the\r\nheuristic is still the same - if it passes statically through a parent\r\nJSX/createElement call then it's considered validated. We already did\r\nprint the error later from the renderer so this also disables the early\r\nlog in the `enableOwnerStacks` flag.\r\n\r\nI also added logging to Fizz so that key warnings can print in SSR logs.\r\n\r\nFlight is a bit more complex. For elements that end up on the client we\r\njust pass the `validated` flag along to the client and let the client\r\nrenderer print the error once rendered. For server components we log the\r\nerror from Flight with the server component as the owner on the stack\r\nwhich will allow us to print the right stack for context. The factoring\r\nof this is a little tricky because we only want to warn if it's in an\r\narray parent but we want to log the error later to get the right debug\r\ninfo.\r\n\r\nFiber/Fizz has a similar factoring problem that causes us to create a\r\nfake Fiber for the owner which means the logs won't be associated with\r\nthe right place in DevTools."
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/84239da896fd7395a667ab1e7ef1ef338a32de8f",
        "html_url": "https://github.com/facebook/react/commit/84239da896fd7395a667ab1e7ef1ef338a32de8f",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/84239da896fd7395a667ab1e7ef1ef338a32de8f/comments",
        "author": {
            "login": "sebmarkbage",
            "id": 63648,
            "node_id": "MDQ6VXNlcjYzNjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sebmarkbage",
            "html_url": "https://github.com/sebmarkbage",
            "followers_url": "https://api.github.com/users/sebmarkbage/followers",
            "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
            "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
            "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
            "repos_url": "https://api.github.com/users/sebmarkbage/repos",
            "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "5fe8c0b4ecd09cfd2c0e1422089e2c603d558ff8",
                "url": "https://api.github.com/repos/facebook/react/commits/5fe8c0b4ecd09cfd2c0e1422089e2c603d558ff8",
                "html_url": "https://github.com/facebook/react/commit/5fe8c0b4ecd09cfd2c0e1422089e2c603d558ff8"
            }
        ]
    },
    {
        "sha": "f33a6b69c6cb406ea0cc51d07bc4d3fd2d8d8744",
        "node_id": "C_kwDOAJy2KtoAKGYzM2E2YjY5YzZjYjQwNmVhMGNjNTFkMDdiYzRkM2ZkMmQ4ZDg3NDQ",
        "commit": {
            "author": {
                "name": "Sebastian Markb\u00e5ge",
                "email": "sebastian@calyptus.eu",
                "date": "2024-04-05T16:48:52Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2024-04-05T16:48:52Z"
            },
            "message": "Track Owner for Server Components in DEV (#28753)\n\nThis implements the concept of a DEV-only \"owner\" for Server Components.\r\nThe owner concept isn't really super useful. We barely use it anymore,\r\nbut we do have it as a concept in DevTools in a couple of cases so this\r\nadds it for parity. However, this is mainly interesting because it could\r\nbe used to wire up future owner-based stacks.\r\n\r\nI do this by outlining the DebugInfo for a Server Component\r\n(ReactComponentInfo). Then I just rely on Flight deduping to refer to\r\nthat. I refer to the same thing by referential equality so that we can\r\nassociate a Server Component parent in DebugInfo with an owner.\r\n\r\nIf you suspend and replay a Server Component, we have to restore the\r\nsame owner. To do that, I did a little ugly hack and stashed it on the\r\nthenable state object. Felt unnecessarily complicated to add a stateful\r\nwrapper for this one dev-only case.\r\n\r\nThe owner could really be anything since it could be coming from a\r\ndifferent implementation. Because this is the first time we have an\r\nowner other than Fiber, I have to fix up a bunch of places that assumes\r\nFiber. I mainly did the `typeof owner.tag === 'number'` to assume it's a\r\nFiber for now.\r\n\r\nThis also doesn't actually add it to DevTools / RN Inspector yet. I just\r\nignore them there for now.\r\n\r\nBecause Server Components can be async the owner isn't tracked after an\r\nawait. We need per-component AsyncLocalStorage for that. This can be\r\ndone in a follow up.",
            "tree": {
                "sha": "319ca674c49ddfb140b7e237fde19d36ce1b9081",
                "url": "https://api.github.com/repos/facebook/react/git/trees/319ca674c49ddfb140b7e237fde19d36ce1b9081"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/f33a6b69c6cb406ea0cc51d07bc4d3fd2d8d8744",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJmECt0CRC1aQ7uu5UhlAAAiQUQAKQas7j5+NS4ikNcELMZ8g56\n1e6i4INyRXWQ+wCzD4SqNDhTMa7/+vNNtGaNSA6V9RsWydpp7hwTf6fuAsYGbHsb\nh6M/2gv33dOnqbVDlyJCiDgcNjemdgCPP3lM5LCfJ6FL4HpBTEZ2HjqTsIgtYc4e\nukMRBdsT2Dja3cw7k28ihaEenxVD5OkzCVzym0nH6GN6EDnOQGMI0lwm9Jjn6OlT\nA6YFk0gps8pWHit7YAjXwkpuGA2ROGVpRke9sp/ldfGbQ428aLbrd3dgjLqZ2i25\nFdLDbRb+TTT1JD/xfLhxziP0B8omsmADovCTuEfr0jSm4audOXexviZbsbVMQKpx\nNo51eOi+Ojj0OED3c+kztjCC2j4yc8EwGWRRmMpmWBqWlDCPlJuXOk0nW8ZQr9Zo\ngBsSkRlNucwLBORljpv7EE2ETb7QOgFbM+vsvgXuG/fdWS3T4kDn0DYlnZ+gnte5\nmEPNO1FVpzZ1xOyYVwK7hucJ0/izhAeIY5k+6Wi7JI7kPIKD2B7BCrShcATCGxOJ\nrs5rhrLSeurR1dlG0cW9vwJJFhLv9++BCkJae0LNi18C8IJJKFte98ZIfi0DM9yI\nEnwSr62O2T4XoxENEZivd/rpttu9OQYUDWupUwmXRSOc5EpIaHBgeMIW7KLKpiPz\nF+etuxnEHsl+KmVwnE0n\n=na9G\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 319ca674c49ddfb140b7e237fde19d36ce1b9081\nparent e3ebcd54b98a4f8f5a9f7e63982fa75578b648ed\nauthor Sebastian Markb\u00e5ge <sebastian@calyptus.eu> 1712335732 -0400\ncommitter GitHub <noreply@github.com> 1712335732 -0400\n\nTrack Owner for Server Components in DEV (#28753)\n\nThis implements the concept of a DEV-only \"owner\" for Server Components.\r\nThe owner concept isn't really super useful. We barely use it anymore,\r\nbut we do have it as a concept in DevTools in a couple of cases so this\r\nadds it for parity. However, this is mainly interesting because it could\r\nbe used to wire up future owner-based stacks.\r\n\r\nI do this by outlining the DebugInfo for a Server Component\r\n(ReactComponentInfo). Then I just rely on Flight deduping to refer to\r\nthat. I refer to the same thing by referential equality so that we can\r\nassociate a Server Component parent in DebugInfo with an owner.\r\n\r\nIf you suspend and replay a Server Component, we have to restore the\r\nsame owner. To do that, I did a little ugly hack and stashed it on the\r\nthenable state object. Felt unnecessarily complicated to add a stateful\r\nwrapper for this one dev-only case.\r\n\r\nThe owner could really be anything since it could be coming from a\r\ndifferent implementation. Because this is the first time we have an\r\nowner other than Fiber, I have to fix up a bunch of places that assumes\r\nFiber. I mainly did the `typeof owner.tag === 'number'` to assume it's a\r\nFiber for now.\r\n\r\nThis also doesn't actually add it to DevTools / RN Inspector yet. I just\r\nignore them there for now.\r\n\r\nBecause Server Components can be async the owner isn't tracked after an\r\nawait. We need per-component AsyncLocalStorage for that. This can be\r\ndone in a follow up."
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/f33a6b69c6cb406ea0cc51d07bc4d3fd2d8d8744",
        "html_url": "https://github.com/facebook/react/commit/f33a6b69c6cb406ea0cc51d07bc4d3fd2d8d8744",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/f33a6b69c6cb406ea0cc51d07bc4d3fd2d8d8744/comments",
        "author": {
            "login": "sebmarkbage",
            "id": 63648,
            "node_id": "MDQ6VXNlcjYzNjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sebmarkbage",
            "html_url": "https://github.com/sebmarkbage",
            "followers_url": "https://api.github.com/users/sebmarkbage/followers",
            "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
            "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
            "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
            "repos_url": "https://api.github.com/users/sebmarkbage/repos",
            "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "e3ebcd54b98a4f8f5a9f7e63982fa75578b648ed",
                "url": "https://api.github.com/repos/facebook/react/commits/e3ebcd54b98a4f8f5a9f7e63982fa75578b648ed",
                "html_url": "https://github.com/facebook/react/commit/e3ebcd54b98a4f8f5a9f7e63982fa75578b648ed"
            }
        ]
    },
    {
        "sha": "5de8703646cdd3838cb1686f761b10c0692743aa",
        "node_id": "C_kwDOAJy2KtoAKDVkZTg3MDM2NDZjZGQzODM4Y2IxNjg2Zjc2MWIxMGMwNjkyNzQzYWE",
        "commit": {
            "author": {
                "name": "Sebastian Markb\u00e5ge",
                "email": "sebastian@calyptus.eu",
                "date": "2024-04-03T01:07:28Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2024-04-03T01:07:28Z"
            },
            "message": "Use the disableLegacyMode where ever we check the ConcurrentMode mode (#28657)\n\nSaves some bytes and ensures that we're actually disabling it.\r\n\r\nTurns out this flag wasn't disabling React Native/Fabric, React Noop and\r\nReact ART legacy modes so those are updated too.\r\n\r\nShould be rebased on #28681.",
            "tree": {
                "sha": "975e627ce9b7bbfe35991e32ce86e574520ae590",
                "url": "https://api.github.com/repos/facebook/react/git/trees/975e627ce9b7bbfe35991e32ce86e574520ae590"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/5de8703646cdd3838cb1686f761b10c0692743aa",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJmDKvQCRC1aQ7uu5UhlAAAAZkQAAnNqoqUJH1zAf3rqJG7cuXb\n023kM+J8UGtXcant9twqCHVr/5Q4Xc3lHnINfE/zSUV6DbTvjjATl9r6IbH+tM9T\nz0OiWQHpPiueFgO0Qq90LWkgXa8WYoe/oMEWlOEv/S43ul3fdZ+tm4BAWAdgE2OH\nYxuaZKm8gZIdkrB5UcqXVNJIJVWTZAa2Mc72coEH5NPoqrvtzONTW3EWPLHpyZaP\nOwgEkfy4EVsuD6C60VwIW5/XTYvmAs1tUbch4jky8SibLpTRtbiiZ2PQZsxVZ5e9\nsBAswx6/mANrUld15ZiTRE9qdJjQdlzsAsC7sAPrQC4W/FKow+xHRxiP9VbcNTEI\nSgwDEt6wqlnIYxdYht5f5LcpJuniMZGvfco4aZgTz0/0LMjUamm00P8u8QmIdyfz\n0zMofbDQWrQDETJJS0/C7r2z2CYGn3LD16IiV1c+xnoMwkZMiRqw8Pt6C3aKS7Ei\nxNPPNDGK31oHQpqni3ySyEu+SbrKXEeE/oXKBYvjuGdO3RBWawsvvr8BK1HgnyB6\n438asmVaZtc25pQ6CKE+NRLWDdsRr7GLMiLZx1xHQyO0k3mBxz8wkUa+rs59E4+8\nMlJoG3viwCF3sWNv9lBENukqRnnaZAtpkohWCkSdT2Ai1+BNns9c3/Ry6/oyh7ZN\nLs8rSekx5PiZ40SyLNuG\n=Tr3u\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 975e627ce9b7bbfe35991e32ce86e574520ae590\nparent 5998a775194f491afa5d3badd9afe9ceaf12845e\nauthor Sebastian Markb\u00e5ge <sebastian@calyptus.eu> 1712106448 -0400\ncommitter GitHub <noreply@github.com> 1712106448 -0400\n\nUse the disableLegacyMode where ever we check the ConcurrentMode mode (#28657)\n\nSaves some bytes and ensures that we're actually disabling it.\r\n\r\nTurns out this flag wasn't disabling React Native/Fabric, React Noop and\r\nReact ART legacy modes so those are updated too.\r\n\r\nShould be rebased on #28681."
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/5de8703646cdd3838cb1686f761b10c0692743aa",
        "html_url": "https://github.com/facebook/react/commit/5de8703646cdd3838cb1686f761b10c0692743aa",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/5de8703646cdd3838cb1686f761b10c0692743aa/comments",
        "author": {
            "login": "sebmarkbage",
            "id": 63648,
            "node_id": "MDQ6VXNlcjYzNjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sebmarkbage",
            "html_url": "https://github.com/sebmarkbage",
            "followers_url": "https://api.github.com/users/sebmarkbage/followers",
            "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
            "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
            "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
            "repos_url": "https://api.github.com/users/sebmarkbage/repos",
            "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "5998a775194f491afa5d3badd9afe9ceaf12845e",
                "url": "https://api.github.com/repos/facebook/react/commits/5998a775194f491afa5d3badd9afe9ceaf12845e",
                "html_url": "https://github.com/facebook/react/commit/5998a775194f491afa5d3badd9afe9ceaf12845e"
            }
        ]
    },
    {
        "sha": "5998a775194f491afa5d3badd9afe9ceaf12845e",
        "node_id": "C_kwDOAJy2KtoAKDU5OThhNzc1MTk0ZjQ5MWFmYTVkM2JhZGQ5YWZlOWNlYWYxMjg0NWU",
        "commit": {
            "author": {
                "name": "Josh Story",
                "email": "story@hey.com",
                "date": "2024-04-03T00:42:43Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2024-04-03T00:42:43Z"
            },
            "message": "Reland #28672: Remove IndeterminateComponent (#28681)\n\nThis PR relands #28672 on top of the flag removal and the test\r\ndemonstrating a breakage in Suspense for legacy mode.\r\n\r\nReact has deprecated module pattern Function Components for many years\r\nat this point. Supporting this pattern required React to have a concept\r\nof an indeterminate component so that when a component first renders it\r\ncan turn into either a ClassComponent or a FunctionComponent depending\r\non what it returns. While this feature was deprecated and put behind a\r\nflag it is still in stable. This change remvoes the flag, removes the\r\nwarnings, and removes the concept of IndeterminateComponent from the\r\nReact codebase.\r\n\r\nWhile removing IndeterminateComponent type Seb and I discovered that we\r\nneeded a concept of IncompleteFunctionComponent to support Suspense in\r\nlegacy mode. This new work tag is only needed as long as legacy mode is\r\naround and ideally any code that considers this tag will be excludable\r\nfrom OSS builds once we land extra gates using `disableLegacyMode` flag.",
            "tree": {
                "sha": "cbdc3920901e52aae687cf180bdfb4ef8cffb95c",
                "url": "https://api.github.com/repos/facebook/react/git/trees/cbdc3920901e52aae687cf180bdfb4ef8cffb95c"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/5998a775194f491afa5d3badd9afe9ceaf12845e",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJmDKYDCRC1aQ7uu5UhlAAA6OMQAHn8dnwpIRnd/pwSQ02qZBHN\n6GJ7MdF+LtA5AyJo8kosnXiEavFYmTWkgj2nWAjg5HLE0+5PJLMZCED4PvLLBwwj\nUrEc7KacLGXFjIxYMxVtF2S9Mt22Vul+6BjUcKJFaGcdsZx7cCvipJQULsLN/h8L\nzFXiH6Dl3gE//dN5Yu/HLAYID8OWNV1BQaY3h8tlqnDgCbhse+bv/vXurtsZ64c7\n6E7811X+lJ+WvY7pkLMG2Y2ppRfzKYDNjdAC6XReaLxcuErxLpUbKFBAuAY062ij\nc/zSCG9SepzYMMEQ4KH/WrS3S0M5Od4WxXnYj5IPYyj8i+tLXDUD7QbgjUAD+TGC\nfthYbta+fUWQobmQ7Veg8ACi3YaStLf+09rdZvfLsMoErl90ndXyhDnW2t20dKPR\nT5p10ynl2ovnJhHiUnmRTH0oCgqEYCZ+CvCGlTJAqSZ190PQUCA+8okdQhS5DNko\nI48GrqA4MG+zQCXaj3NfiMnllvRkCQ4Y1wYqJpxVH4TsZXM2U8Dvm+e6GLkDpNrw\nc3DG9qHvkJzifqy1/BW855HAOyVUCGqiubJK7nx49z5Qe3zB8sDEjwApIjqvD4x8\nFVnd/pqnHw2bV4yAh4DoY8FQIOGO1FAK445Orc4c0/l6OkPorkxki4K0dfgfNMVK\nW/q2/WdnSPvVUgkOW+Ze\n=FyXK\n-----END PGP SIGNATURE-----\n",
                "payload": "tree cbdc3920901e52aae687cf180bdfb4ef8cffb95c\nparent 5fcaa0a832db9573364cb73738e0a3b4cf2d27f2\nauthor Josh Story <story@hey.com> 1712104963 -0700\ncommitter GitHub <noreply@github.com> 1712104963 -0700\n\nReland #28672: Remove IndeterminateComponent (#28681)\n\nThis PR relands #28672 on top of the flag removal and the test\r\ndemonstrating a breakage in Suspense for legacy mode.\r\n\r\nReact has deprecated module pattern Function Components for many years\r\nat this point. Supporting this pattern required React to have a concept\r\nof an indeterminate component so that when a component first renders it\r\ncan turn into either a ClassComponent or a FunctionComponent depending\r\non what it returns. While this feature was deprecated and put behind a\r\nflag it is still in stable. This change remvoes the flag, removes the\r\nwarnings, and removes the concept of IndeterminateComponent from the\r\nReact codebase.\r\n\r\nWhile removing IndeterminateComponent type Seb and I discovered that we\r\nneeded a concept of IncompleteFunctionComponent to support Suspense in\r\nlegacy mode. This new work tag is only needed as long as legacy mode is\r\naround and ideally any code that considers this tag will be excludable\r\nfrom OSS builds once we land extra gates using `disableLegacyMode` flag."
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/5998a775194f491afa5d3badd9afe9ceaf12845e",
        "html_url": "https://github.com/facebook/react/commit/5998a775194f491afa5d3badd9afe9ceaf12845e",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/5998a775194f491afa5d3badd9afe9ceaf12845e/comments",
        "author": {
            "login": "gnoff",
            "id": 2716369,
            "node_id": "MDQ6VXNlcjI3MTYzNjk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2716369?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gnoff",
            "html_url": "https://github.com/gnoff",
            "followers_url": "https://api.github.com/users/gnoff/followers",
            "following_url": "https://api.github.com/users/gnoff/following{/other_user}",
            "gists_url": "https://api.github.com/users/gnoff/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gnoff/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gnoff/subscriptions",
            "organizations_url": "https://api.github.com/users/gnoff/orgs",
            "repos_url": "https://api.github.com/users/gnoff/repos",
            "events_url": "https://api.github.com/users/gnoff/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gnoff/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "5fcaa0a832db9573364cb73738e0a3b4cf2d27f2",
                "url": "https://api.github.com/repos/facebook/react/commits/5fcaa0a832db9573364cb73738e0a3b4cf2d27f2",
                "html_url": "https://github.com/facebook/react/commit/5fcaa0a832db9573364cb73738e0a3b4cf2d27f2"
            }
        ]
    },
    {
        "sha": "7319c61b18274ee7e7c20bd2e533b93c922d8fe0",
        "node_id": "C_kwDOAJy2KtoAKDczMTljNjFiMTgyNzRlZTdlN2MyMGJkMmU1MzNiOTNjOTIyZDhmZTA",
        "commit": {
            "author": {
                "name": "Joseph Savona",
                "email": "josephsavona@users.noreply.github.com",
                "date": "2024-04-02T14:57:08Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2024-04-02T14:57:08Z"
            },
            "message": "[be] Remove unshipped experimental <Cache> element type (#28698)\n\nRemoves the `<Cache />` element type since we're going with a simpler\r\ncaching strategy.",
            "tree": {
                "sha": "226723a361c563786211142eddbcbd233e7066fd",
                "url": "https://api.github.com/repos/facebook/react/git/trees/226723a361c563786211142eddbcbd233e7066fd"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/7319c61b18274ee7e7c20bd2e533b93c922d8fe0",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJmDBzECRC1aQ7uu5UhlAAAtU8QABaJR1hiEMVW2b/lwkepsbM+\nhq8lz70vDM7LVLPIUnV8LLojKpkSGPNFky5vne6IAL9Ye9quHkbQpbyWmHAgjo9p\n0vGSxeVzFHezWLDermpfAVPusJALY1BD4Nsk3xRY/vFpi26+lbvhHJkXykzOI24E\n9fEw4p9mC9cpmWwA2pCd0vhEfajxTRGKV+h9Qznn2+t67R/ZZ6Di6BbyuwRKXB0S\n5NjX6JUMuf7jvoIowsrVV6JkRzj9Yw6lVVSasgRL0xJAJrveo5yix7uI0ObwX1cp\n40HzcFMSaeocVtH3cWUVLfrpQDrn0elSfwJzCG/VcZpNIPUhI8rknxGagKTmVVcH\n8Esto8hgcstCR0sb0IcgIPOdjyjEYfh2La/sqZATycGnJ/REY4VnD7Z7bgf7jMn3\no0tXqGBlk4JlHUVhddvIZatjugpNl6ixu+llPVGeK4Qf9UhU93mmcb+2Txlv1nG2\nIr/BrfOhvnxRz8SN/rYdud2bQS0IaQ7bYxYFXX0/hcgoHD9Rr9K+ER9wmoEoBp4f\nYXg1X8Ni9ziPEgcNuFiWUlDOLG8BKrkoZ9M4ADYnAHbnN4xcGYc02EzelQr/FsZd\n4VDGQHvSVjjszI1WQnPMKL5imlJHH2R9FUPpJAcpVOExU0nJJCpv+ppjVgUsi0HY\nEoEZrOxrCwEmlvaHpGsI\n=8/eT\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 226723a361c563786211142eddbcbd233e7066fd\nparent c97564d7ac3b8ee344719d78e6a28e81854dd7a2\nauthor Joseph Savona <josephsavona@users.noreply.github.com> 1712069828 -0700\ncommitter GitHub <noreply@github.com> 1712069828 -0700\n\n[be] Remove unshipped experimental <Cache> element type (#28698)\n\nRemoves the `<Cache />` element type since we're going with a simpler\r\ncaching strategy."
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/7319c61b18274ee7e7c20bd2e533b93c922d8fe0",
        "html_url": "https://github.com/facebook/react/commit/7319c61b18274ee7e7c20bd2e533b93c922d8fe0",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/7319c61b18274ee7e7c20bd2e533b93c922d8fe0/comments",
        "author": {
            "login": "josephsavona",
            "id": 6425824,
            "node_id": "MDQ6VXNlcjY0MjU4MjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6425824?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/josephsavona",
            "html_url": "https://github.com/josephsavona",
            "followers_url": "https://api.github.com/users/josephsavona/followers",
            "following_url": "https://api.github.com/users/josephsavona/following{/other_user}",
            "gists_url": "https://api.github.com/users/josephsavona/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/josephsavona/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/josephsavona/subscriptions",
            "organizations_url": "https://api.github.com/users/josephsavona/orgs",
            "repos_url": "https://api.github.com/users/josephsavona/repos",
            "events_url": "https://api.github.com/users/josephsavona/events{/privacy}",
            "received_events_url": "https://api.github.com/users/josephsavona/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "c97564d7ac3b8ee344719d78e6a28e81854dd7a2",
                "url": "https://api.github.com/repos/facebook/react/commits/c97564d7ac3b8ee344719d78e6a28e81854dd7a2",
                "html_url": "https://github.com/facebook/react/commit/c97564d7ac3b8ee344719d78e6a28e81854dd7a2"
            }
        ]
    },
    {
        "sha": "f2690747239533fa266612d2d4dd9ae88ea92fbc",
        "node_id": "C_kwDOAJy2KtoAKGYyNjkwNzQ3MjM5NTMzZmEyNjY2MTJkMmQ0ZGQ5YWU4OGVhOTJmYmM",
        "commit": {
            "author": {
                "name": "Ricky",
                "email": "rickhanlonii@gmail.com",
                "date": "2024-03-29T14:10:11Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2024-03-29T14:10:11Z"
            },
            "message": "Revert \"Remove module pattern function component support\" (#28670)\n\nThis breaks internal tests, so must be something in the refactor. Since\r\nit's the top commit let's revert and split into two PRs, one that\r\nremoves the flag and one that does the refactor, so we can find the bug.",
            "tree": {
                "sha": "3c6db74081285877e97e9f170737e98d9b67f57c",
                "url": "https://api.github.com/repos/facebook/react/git/trees/3c6db74081285877e97e9f170737e98d9b67f57c"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/f2690747239533fa266612d2d4dd9ae88ea92fbc",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJmBsvDCRC1aQ7uu5UhlAAAMbAQAGnsgemZTuVyYOzF8LVTkbac\nzPUnO5G4kZZw8wmKDpUstDTIaK2hXTkIo4MgOPJ7phbJNKx0TxuzLYq1tAK1/d9d\nZ415xGRaAWXNkLKMxdPpfReqZ+VHfrt9NSed6E+TgMo/cnWakz+DdngezrM25HX+\n4DJpA2yTF99RChYDPb+IyUuQCCHclITCCkD6q8U3mIhfHeI5AGfGJMswWijGOSzv\nC4sZGRmFfVdparXaC/VAlRO/NYasCNr9gjJ0dTm7MW5boc7KCZh10y1VXwwJwb4u\nmYWoPtOQd01KrfpKNDluwxP3H5K1mhO96qNNROG1N/AZ/wwoe0oktcR7CbweDrsI\ntQnjQPmkjan8CXacsUMoM/krJIb7GCpSTyhy9x7+CuYesr3YeeMj3N0Q/tLMg+Jh\nN3qTjVl2FeluXbz76WvWqDlEqQjKjqquKFyXtcXvagNX9Zq3J84Z6u0+xMlEmOil\nzfanloTuInE92phb1lsEKXvlx3ExEhnLDot1Ae3PS/3omOSBcSQrIy9bmEPS2/OS\nhmHiJPfwudwwJ4SoCX7Z/9uAqVBouLiMMy2mHDrcJ66a58MXbzpsoCebEfT1WvUZ\nsatEXko2KycDOgzwR1f/mUORyg2t+oD2G6u93DUoGTmm+/zmZJxeSuKdk5iScyfP\nmrkBSk/A7U7ed/GkZp74\n=jXyI\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 3c6db74081285877e97e9f170737e98d9b67f57c\nparent cc56bed38cbe5a5c76dfdc4e9c642fab4884a3fc\nauthor Ricky <rickhanlonii@gmail.com> 1711721411 -0400\ncommitter GitHub <noreply@github.com> 1711721411 -0400\n\nRevert \"Remove module pattern function component support\" (#28670)\n\nThis breaks internal tests, so must be something in the refactor. Since\r\nit's the top commit let's revert and split into two PRs, one that\r\nremoves the flag and one that does the refactor, so we can find the bug."
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/f2690747239533fa266612d2d4dd9ae88ea92fbc",
        "html_url": "https://github.com/facebook/react/commit/f2690747239533fa266612d2d4dd9ae88ea92fbc",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/f2690747239533fa266612d2d4dd9ae88ea92fbc/comments",
        "author": {
            "login": "rickhanlonii",
            "id": 2440089,
            "node_id": "MDQ6VXNlcjI0NDAwODk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2440089?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rickhanlonii",
            "html_url": "https://github.com/rickhanlonii",
            "followers_url": "https://api.github.com/users/rickhanlonii/followers",
            "following_url": "https://api.github.com/users/rickhanlonii/following{/other_user}",
            "gists_url": "https://api.github.com/users/rickhanlonii/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rickhanlonii/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rickhanlonii/subscriptions",
            "organizations_url": "https://api.github.com/users/rickhanlonii/orgs",
            "repos_url": "https://api.github.com/users/rickhanlonii/repos",
            "events_url": "https://api.github.com/users/rickhanlonii/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rickhanlonii/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "cc56bed38cbe5a5c76dfdc4e9c642fab4884a3fc",
                "url": "https://api.github.com/repos/facebook/react/commits/cc56bed38cbe5a5c76dfdc4e9c642fab4884a3fc",
                "html_url": "https://github.com/facebook/react/commit/cc56bed38cbe5a5c76dfdc4e9c642fab4884a3fc"
            }
        ]
    },
    {
        "sha": "cc56bed38cbe5a5c76dfdc4e9c642fab4884a3fc",
        "node_id": "C_kwDOAJy2KtoAKGNjNTZiZWQzOGNiZTVhNWM3NmRmZGM0ZTljNjQyZmFiNDg4NGEzZmM",
        "commit": {
            "author": {
                "name": "Josh Story",
                "email": "story@hey.com",
                "date": "2024-03-28T20:08:08Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2024-03-28T20:08:08Z"
            },
            "message": "Remove module pattern function component support (#27742)\n\nThe module pattern\r\n\r\n```\r\nfunction MyComponent() {\r\n  return {\r\n    render() {\r\n      return this.state.foo\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nhas been deprecated for approximately 5 years now. This PR removes\r\nsupport for this pattern. It also simplifies a number of code paths in\r\nparticular related to the concept of `IndeterminateComponent` types.",
            "tree": {
                "sha": "03b9f3900d12c291347ffb79a1773b62c1ef830e",
                "url": "https://api.github.com/repos/facebook/react/git/trees/03b9f3900d12c291347ffb79a1773b62c1ef830e"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/cc56bed38cbe5a5c76dfdc4e9c642fab4884a3fc",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJmBc4oCRC1aQ7uu5UhlAAASE0QAC0uKUggd6U26rKttUpo5bR0\nugubyhoBLoFUvdOJYsI9zc27uQVBGTHKhLNrklh1LZAuJ2PaM/NLUQfcuX4jvF8K\nu6h/rpNCjtAl1XBv2Qnl/L4yN6jyHfhc1QMuBERN/+SULRG6/zcv+B0j51uLqAZb\nBMvhI/JtQvDKZqg7ug4K1ZD7ilABUgVXEbsoiZrSCtupAcWx0fChkMwka7sOgiCF\nMah65vBOuPMbeZVEFFeoCzyFzOtJj3FRGhhwYSRjgVnAQ4wgxUXa5o7xU1txAUHO\n6bPLHGuuHJmmkfDcPg7rA93VGQ5naqSsrkYg3PDFPvdc9oQOrwJIrnqjpv/DkRMr\nitotzUox3XfdJQ3TEk7BKsqkr/r43X2Eigqncq/OB0IQPowi3lWbJkoY8WPQxSIA\ny9wKhHVRIiKm4ciPgVVyhnYZVAqvBxg03G2Z+YBj8f+l9C7J7DB8gLfXcfAgpF8k\nVFPVkk0rN721D8BNIOhFeEIOYB1Cv+UJcIdbLbiQH+H3egBKyTK5waN/lVujQFgF\nDmwFc20u3+Oxn8D8i9WBWxnIKCSjpu6kh5YxElgXZZjIWCB2jEO22zzPCvgSrI9l\nQ6kcuON5EW0yOnPfXojYCMBpnAD9Df7xnelhAa0HBVNjxKJ9BhHLBe/R0V0zWhLy\nv4nvbsMWMKuquAkBPHXb\n=Q1ZA\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 03b9f3900d12c291347ffb79a1773b62c1ef830e\nparent 63651c49e068a04cdc6ee1e2fa9c6125167987d2\nauthor Josh Story <story@hey.com> 1711656488 -0700\ncommitter GitHub <noreply@github.com> 1711656488 -0700\n\nRemove module pattern function component support (#27742)\n\nThe module pattern\r\n\r\n```\r\nfunction MyComponent() {\r\n  return {\r\n    render() {\r\n      return this.state.foo\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nhas been deprecated for approximately 5 years now. This PR removes\r\nsupport for this pattern. It also simplifies a number of code paths in\r\nparticular related to the concept of `IndeterminateComponent` types."
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/cc56bed38cbe5a5c76dfdc4e9c642fab4884a3fc",
        "html_url": "https://github.com/facebook/react/commit/cc56bed38cbe5a5c76dfdc4e9c642fab4884a3fc",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/cc56bed38cbe5a5c76dfdc4e9c642fab4884a3fc/comments",
        "author": {
            "login": "gnoff",
            "id": 2716369,
            "node_id": "MDQ6VXNlcjI3MTYzNjk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2716369?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gnoff",
            "html_url": "https://github.com/gnoff",
            "followers_url": "https://api.github.com/users/gnoff/followers",
            "following_url": "https://api.github.com/users/gnoff/following{/other_user}",
            "gists_url": "https://api.github.com/users/gnoff/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gnoff/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gnoff/subscriptions",
            "organizations_url": "https://api.github.com/users/gnoff/orgs",
            "repos_url": "https://api.github.com/users/gnoff/repos",
            "events_url": "https://api.github.com/users/gnoff/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gnoff/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "63651c49e068a04cdc6ee1e2fa9c6125167987d2",
                "url": "https://api.github.com/repos/facebook/react/commits/63651c49e068a04cdc6ee1e2fa9c6125167987d2",
                "html_url": "https://github.com/facebook/react/commit/63651c49e068a04cdc6ee1e2fa9c6125167987d2"
            }
        ]
    },
    {
        "sha": "670d61bea23470e980ba13c1c8441e375779b0b8",
        "node_id": "C_kwDOAJy2KtoAKDY3MGQ2MWJlYTIzNDcwZTk4MGJhMTNjMWM4NDQxZTM3NTc3OWIwYjg",
        "commit": {
            "author": {
                "name": "Sebastian Markb\u00e5ge",
                "email": "sebastian@calyptus.eu",
                "date": "2024-03-26T21:41:49Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2024-03-26T21:41:49Z"
            },
            "message": "Remove legacy hydration mode (#28440)\n\nWhile Meta is still using legacy mode and we can't remove completely,\r\nMeta is not using legacy hydration so we should be able to remove that.\r\n\r\nThis is just the first step. Once removed, we can vastly simplify the\r\nDOMConfig for hydration.\r\n\r\nThis will have to be rebased when tests are upgraded.",
            "tree": {
                "sha": "6c23d25fd452699e92e05e009d9745fc95818225",
                "url": "https://api.github.com/repos/facebook/react/git/trees/6c23d25fd452699e92e05e009d9745fc95818225"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/670d61bea23470e980ba13c1c8441e375779b0b8",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJmA0EdCRC1aQ7uu5UhlAAAWRMQAJr/BGfR/M2ppLU8R0RsRuaO\n7vbgITPX/5wD7oSpIuHuM7A+eWO8ZUbhtlBHRY2X0GY+Kl9s5j2yMEKfWbRQ+Nh5\nX4b7mWSqT49bXS6KPtWZslLjsGgVmHxOst/4vPhtWAWd82xLcQ7zwAJOJnxStpyw\nMp0WSC6uYZIJ/7P3JNZuaDJ3hBD5a86K05s5DO30FKvcJQszk80OhXg1NSWUCiXc\nT/Lx3lsYM9I3GL3EZ4/tVqCIrtPsG9Ei/BCRhfG2RotDtY5yfLz+coDuAoRKqbIX\n3OPE64xAUYDG4NXICQCpbt/SVAf4l8FCv130E5L8Td765ACU81OvhnS9A8LTBur1\nkP2SggsFH5wOMa9LoYzekdPBdDvMwHEw9Q6WONlV01qfvxMEN/cxBXcm0Ebm6upQ\nJEQt5Zj/NwB3vxkmJ1gJmeV7OzsEICz+h7DtuicgsJzniYbd+f66X7AX0E8Zm2TH\nA3/QkqfMJkI82XQN/WNm6uLngLYYc15/l/d1UU+7LfvNlYzGasQdczdZwq49JJxE\nXx8ba91JbZTwHQPaI1iNiBoPu7za4mr6JObPdWJNphYHo083Itp07qJUrVfeOi+9\ngja+AScQdLAoJE6RN/qxfdOpUsPGTVU0p72hbZ28a9JGf6BfS4KblynDGxwO0BqC\ns9KtieSleLsQ4BYbpIxX\n=fAOn\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 6c23d25fd452699e92e05e009d9745fc95818225\nparent dbfbfb3312db019183ef92fd2ef110cc7d807e80\nauthor Sebastian Markb\u00e5ge <sebastian@calyptus.eu> 1711489309 -0700\ncommitter GitHub <noreply@github.com> 1711489309 -0400\n\nRemove legacy hydration mode (#28440)\n\nWhile Meta is still using legacy mode and we can't remove completely,\r\nMeta is not using legacy hydration so we should be able to remove that.\r\n\r\nThis is just the first step. Once removed, we can vastly simplify the\r\nDOMConfig for hydration.\r\n\r\nThis will have to be rebased when tests are upgraded."
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/670d61bea23470e980ba13c1c8441e375779b0b8",
        "html_url": "https://github.com/facebook/react/commit/670d61bea23470e980ba13c1c8441e375779b0b8",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/670d61bea23470e980ba13c1c8441e375779b0b8/comments",
        "author": {
            "login": "sebmarkbage",
            "id": 63648,
            "node_id": "MDQ6VXNlcjYzNjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sebmarkbage",
            "html_url": "https://github.com/sebmarkbage",
            "followers_url": "https://api.github.com/users/sebmarkbage/followers",
            "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
            "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
            "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
            "repos_url": "https://api.github.com/users/sebmarkbage/repos",
            "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "dbfbfb3312db019183ef92fd2ef110cc7d807e80",
                "url": "https://api.github.com/repos/facebook/react/commits/dbfbfb3312db019183ef92fd2ef110cc7d807e80",
                "html_url": "https://github.com/facebook/react/commit/dbfbfb3312db019183ef92fd2ef110cc7d807e80"
            }
        ]
    },
    {
        "sha": "208ceeb46ca2838c9bf24cd341435f87b2d50569",
        "node_id": "C_kwDOAJy2KtoAKDIwOGNlZWI0NmNhMjgzOGM5YmYyNGNkMzQxNDM1Zjg3YjJkNTA1Njk",
        "commit": {
            "author": {
                "name": "Jan Kassens",
                "email": "jkassens@meta.com",
                "date": "2024-03-22T16:22:30Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2024-03-22T16:22:30Z"
            },
            "message": "Cleanup enableFloat flag (#28613)\n\nCleanup enableFloat flag",
            "tree": {
                "sha": "17fcbd05223896e657c163f36cb48f1fcb089419",
                "url": "https://api.github.com/repos/facebook/react/git/trees/17fcbd05223896e657c163f36cb48f1fcb089419"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/208ceeb46ca2838c9bf24cd341435f87b2d50569",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJl/bBGCRC1aQ7uu5UhlAAAcpMQALGT3Xabo6G24RQUJ7FpVM+s\n5VgV0rzIiPhOgbzMHNgPKC8SCRMNM9Tjwj6YcmmwKvN/3+XNKK54HXbhw5+Qg0Wr\n6oEV8PjWZcDbbfb2BUHloc6s0GC9wHDnAoU55LGHg8zIEvPmpuQSquOzdZdHtZwZ\nw7Icvg4bm6s6UaX+KHeVtCT5hrLIe/+L5dJrBlj5+Wu/QA2lxJOCwVYa0blIML2k\nWhxZCeVK/Czd8nPyj7F24OETL1DokzeybqS6GFLiawMMhWqgPjQNgULZLotGFHfP\nCIeys8IcrpavIKKKcvVlviJP4n/R1bnTkBjpN/vVh3BhJAfrDgs2ARHA6UULVvC6\n8QnTiUnYmBSDx9vbDXzfnq5qKa8c3u6amARTgBYzNvjg8SEt/VKRs1HKza/F5YEb\nPeyq/AcN6uSD8beJ09AmXuy+EkmhVmjUieiSx5dyScH+SxkxiKnQdt0XycFalkDc\nNZRnsP6eiV0rFFxnt5MwNK8LqnVNEFXMHG4PVUrZxhZyfBhJsAfZ8VdaSJOB1TXV\nVSrxoamEw87rBvWfCu+QcH8taGB9Yo7Ch+X+DpM4KS39KLpnNd5Zd1OD/hbXWJbA\nXRvcPPRlVJVKj5winbZzEzfh7FzdzyMS4XNNfU35DDsZ7XInMM0c+Jq+8Ax470rF\nLSO2Hs9onuVg/JjW3UMi\n=hLxL\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 17fcbd05223896e657c163f36cb48f1fcb089419\nparent 67081159377b438b48e3c2f2278af8e5f56b9f64\nauthor Jan Kassens <jkassens@meta.com> 1711124550 -0400\ncommitter GitHub <noreply@github.com> 1711124550 -0400\n\nCleanup enableFloat flag (#28613)\n\nCleanup enableFloat flag"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/208ceeb46ca2838c9bf24cd341435f87b2d50569",
        "html_url": "https://github.com/facebook/react/commit/208ceeb46ca2838c9bf24cd341435f87b2d50569",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/208ceeb46ca2838c9bf24cd341435f87b2d50569/comments",
        "author": {
            "login": "kassens",
            "id": 11849,
            "node_id": "MDQ6VXNlcjExODQ5",
            "avatar_url": "https://avatars.githubusercontent.com/u/11849?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kassens",
            "html_url": "https://github.com/kassens",
            "followers_url": "https://api.github.com/users/kassens/followers",
            "following_url": "https://api.github.com/users/kassens/following{/other_user}",
            "gists_url": "https://api.github.com/users/kassens/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kassens/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kassens/subscriptions",
            "organizations_url": "https://api.github.com/users/kassens/orgs",
            "repos_url": "https://api.github.com/users/kassens/repos",
            "events_url": "https://api.github.com/users/kassens/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kassens/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "67081159377b438b48e3c2f2278af8e5f56b9f64",
                "url": "https://api.github.com/repos/facebook/react/commits/67081159377b438b48e3c2f2278af8e5f56b9f64",
                "html_url": "https://github.com/facebook/react/commit/67081159377b438b48e3c2f2278af8e5f56b9f64"
            }
        ]
    },
    {
        "sha": "89021fb4ec9aa82194b0788566e736a4cedfc0e4",
        "node_id": "C_kwDOAJy2KtoAKDg5MDIxZmI0ZWM5YWE4MjE5NGIwNzg4NTY2ZTczNmE0Y2VkZmMwZTQ",
        "commit": {
            "author": {
                "name": "Sebastian Markb\u00e5ge",
                "email": "sebastian@calyptus.eu",
                "date": "2024-03-12T00:17:07Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2024-03-12T00:17:07Z"
            },
            "message": "Remove invokeGuardedCallback and replay trick (#28515)\n\nWe broke the ability to \"break on uncaught exceptions\" by adding a\r\ntry/catch higher up in the scheduling. We're giving up on fixing that so\r\nwe can remove the replay trick inside an event handler.\r\n\r\nThe issue with that approach is that we end up double logging a lot of\r\nerrors in DEV since they get reported to the page.\r\n\r\nIt's also a lot of complexity around this feature.",
            "tree": {
                "sha": "383a2a1bd23b268a9d2522f56ad64babf74fefd5",
                "url": "https://api.github.com/repos/facebook/react/git/trees/383a2a1bd23b268a9d2522f56ad64babf74fefd5"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/89021fb4ec9aa82194b0788566e736a4cedfc0e4",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJl758DCRC1aQ7uu5UhlAAA/M8QAFJEjId9NW1b8Px3u7wW3h5n\ni9BK7q4XNYqB/iBk1nZh+uczqGl53nKZtAC+xK/zZ8GAowCPsrzqwNp5mO8SK6OC\nZ3UY75VNRdvhRNnh9i8emF1jN+Cw8XW2zCQefr1SaJbspCjenPHvi6J2QusMSvp7\nb7ff4s9o5yMC7Jrfbe2OqUuHRe3TnXv+/0J5wrWvON0DLRGizVtjgwwpenxFt39x\nTDgQ6uUZHGa3Oate2DX+Cs7/zn8rcrpCeyyMtV39Rf5XFemLtAD44uLLFjArWOkL\nqvpGyrf6vzu038dbuuoRvqRarQUdM+DhDz4nka5lrp/CXYIYiRtrWjxB/y10TCKU\nBWwMJsFkUGsjKT6tL2tgF4urSct5WNWy842s4Frtgt8M3H1S2/iwLCXXhQjb4d1l\nPj1Ju+l3nNB1JIQ0YEVFaQQdOFj1LrQqifYvowVTxlaZCqC3bdYNpi5CDZtVijSJ\nRNyTREljBNZx/ure/n7cI0hRoAMMcNzGjTLD7aB2dIA2XD9r5bjvh4pn93QlqxH8\nVgp0Ot6tmLgWqYvGBAeDy4iB73zLS4obXC/7R+5h25WqJV6wy/DPBXi1mBDz/64S\nRiOjG122f2YRD1O/G6lfoQwuo7HUok7CDMvwJFJ64VKRNevAJy36cBJQlpWMwiJe\n2aO0vT69482yCZE0OKjX\n=IbPA\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 383a2a1bd23b268a9d2522f56ad64babf74fefd5\nparent 7d6f1e3c13686272c1d76813992d4e782fcb84e6\nauthor Sebastian Markb\u00e5ge <sebastian@calyptus.eu> 1710202627 -0700\ncommitter GitHub <noreply@github.com> 1710202627 -0400\n\nRemove invokeGuardedCallback and replay trick (#28515)\n\nWe broke the ability to \"break on uncaught exceptions\" by adding a\r\ntry/catch higher up in the scheduling. We're giving up on fixing that so\r\nwe can remove the replay trick inside an event handler.\r\n\r\nThe issue with that approach is that we end up double logging a lot of\r\nerrors in DEV since they get reported to the page.\r\n\r\nIt's also a lot of complexity around this feature."
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/89021fb4ec9aa82194b0788566e736a4cedfc0e4",
        "html_url": "https://github.com/facebook/react/commit/89021fb4ec9aa82194b0788566e736a4cedfc0e4",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/89021fb4ec9aa82194b0788566e736a4cedfc0e4/comments",
        "author": {
            "login": "sebmarkbage",
            "id": 63648,
            "node_id": "MDQ6VXNlcjYzNjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sebmarkbage",
            "html_url": "https://github.com/sebmarkbage",
            "followers_url": "https://api.github.com/users/sebmarkbage/followers",
            "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
            "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
            "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
            "repos_url": "https://api.github.com/users/sebmarkbage/repos",
            "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "7d6f1e3c13686272c1d76813992d4e782fcb84e6",
                "url": "https://api.github.com/repos/facebook/react/commits/7d6f1e3c13686272c1d76813992d4e782fcb84e6",
                "html_url": "https://github.com/facebook/react/commit/7d6f1e3c13686272c1d76813992d4e782fcb84e6"
            }
        ]
    },
    {
        "sha": "14fd9630ee04387f4361da289393234e2b7d93b6",
        "node_id": "C_kwDOAJy2KtoAKDE0ZmQ5NjMwZWUwNDM4N2Y0MzYxZGEyODkzOTMyMzRlMmI3ZDkzYjY",
        "commit": {
            "author": {
                "name": "dan",
                "email": "dan.abramov@me.com",
                "date": "2024-02-13T15:04:49Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2024-02-13T15:04:49Z"
            },
            "message": "Switch <Context> to mean <Context.Provider> (#28226)\n\nPreviously, `<Context>` was equivalent to `<Context.Consumer>`. However,\r\nsince the introduction of Hooks, the `<Context.Consumer>` API is rarely\r\nused. The goal here is to make the common case cleaner:\r\n\r\n```js\r\nconst ThemeContext = createContext('light')\r\n\r\nfunction App() {\r\n  return (\r\n    <ThemeContext value=\"dark\">\r\n      ...\r\n    </ThemeContext>\r\n  )\r\n}\r\n\r\nfunction Button() {\r\n  const theme = use(ThemeContext)\r\n  // ...\r\n}\r\n```\r\n\r\nThis is technically a breaking change, but we've been warning about\r\nrendering `<Context>` directly for several years by now, so it's\r\nunlikely much code in the wild depends on the old behavior. [Proof that\r\nit warns today (check\r\nconsole).](https://codesandbox.io/p/sandbox/peaceful-nobel-pdxtfl)\r\n\r\n---\r\n\r\n**The relevant commit is 5696782b428a5ace96e66c1857e13249b6c07958.** It\r\nswitches `createContext` implementation so that `Context.Provider ===\r\nContext`.\r\n\r\nThe main assumption that changed is that a Provider's fiber type is now\r\nthe context itself (rather than an intermediate object). Whereas a\r\nConsumer's fiber type is now always an intermediate object (rather than\r\nit being sometimes the context itself and sometimes an intermediate\r\nobject).\r\n\r\nMy methodology was to start with the relevant symbols, work tags, and\r\ntypes, and work my way backwards to all usages.\r\n\r\nThis might break tooling that depends on inspecting React's internal\r\nfields. I've added DevTools support in the second commit. This didn't\r\nneed explicit versioning\u2014the structure tells us enough.",
            "tree": {
                "sha": "ffafb077fccbe4d2882adb7c553df4bd10120673",
                "url": "https://api.github.com/repos/facebook/react/git/trees/ffafb077fccbe4d2882adb7c553df4bd10120673"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/14fd9630ee04387f4361da289393234e2b7d93b6",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJly4URCRC1aQ7uu5UhlAAA1ZsQABxnyjBw2FGu7WG+wy82vozY\nwCK+1pImrXCQqspoHwp9Z/FHCdlfxtrt8aJ+w5lU6VA8rzn7gZJzjbvVMsRFjWRl\n7VciQ4yb3s8+qvp5pmYZbTZWOYttggkJbUv6+8LMDJwDPt4s18SpcCc9tHWlNq/4\nJSjBB4uBid/NY2C+n57zkYw45IIVyvhxNSMPxEo9JuuSQCSykwH0F8Uo6tfvcbSc\nC9W2gzeKu33qBbotNV7axaMCf/+mETKzxmtYgVc7BIPFx2UhYRiee6wY20/wPUMp\n8YI1qgny1ZF5QKSXFEs5cLpZWZI2SfayqCJPFdYf6RTnphSOhsDfShR5YzWp0Srb\n1FY70cNg1fE5+uByEg4wTCr04eWROWeGS9d0LrmMo31S9oYjK+ZJ+QslqEeKpkCP\nP7c8QcQgYaPY5nkkIkwaf7elWCAHX2WmSxEJKoDk2JGlA0DDsPZ41WsuBP0GMAy7\nkxSnTfT3LOfEt8KaByKSt66G/Z8KdGbfjsOTvhf3EiGzT81+tQ24ggEvjnSdhzSL\nPTQo0KeWA4UbKvQu7sx5WTdry5HTProt0CRMeT1UZ2Gan15Y5W0jl2Wj2gvuLcI2\n7KZ/zJVrpJVNy3T7/WIeAn8xwMWBmzEW4U6H+CIqc9UX8kIRmKur2Dfe50bN7pq6\nbvY+tEGdt352BmzlE3so\n=5LUh\n-----END PGP SIGNATURE-----\n",
                "payload": "tree ffafb077fccbe4d2882adb7c553df4bd10120673\nparent 32df74dba67207300511cf9b7c5ef82dd708c0c1\nauthor dan <dan.abramov@me.com> 1707836689 +0000\ncommitter GitHub <noreply@github.com> 1707836689 -0500\n\nSwitch <Context> to mean <Context.Provider> (#28226)\n\nPreviously, `<Context>` was equivalent to `<Context.Consumer>`. However,\r\nsince the introduction of Hooks, the `<Context.Consumer>` API is rarely\r\nused. The goal here is to make the common case cleaner:\r\n\r\n```js\r\nconst ThemeContext = createContext('light')\r\n\r\nfunction App() {\r\n  return (\r\n    <ThemeContext value=\"dark\">\r\n      ...\r\n    </ThemeContext>\r\n  )\r\n}\r\n\r\nfunction Button() {\r\n  const theme = use(ThemeContext)\r\n  // ...\r\n}\r\n```\r\n\r\nThis is technically a breaking change, but we've been warning about\r\nrendering `<Context>` directly for several years by now, so it's\r\nunlikely much code in the wild depends on the old behavior. [Proof that\r\nit warns today (check\r\nconsole).](https://codesandbox.io/p/sandbox/peaceful-nobel-pdxtfl)\r\n\r\n---\r\n\r\n**The relevant commit is 5696782b428a5ace96e66c1857e13249b6c07958.** It\r\nswitches `createContext` implementation so that `Context.Provider ===\r\nContext`.\r\n\r\nThe main assumption that changed is that a Provider's fiber type is now\r\nthe context itself (rather than an intermediate object). Whereas a\r\nConsumer's fiber type is now always an intermediate object (rather than\r\nit being sometimes the context itself and sometimes an intermediate\r\nobject).\r\n\r\nMy methodology was to start with the relevant symbols, work tags, and\r\ntypes, and work my way backwards to all usages.\r\n\r\nThis might break tooling that depends on inspecting React's internal\r\nfields. I've added DevTools support in the second commit. This didn't\r\nneed explicit versioning\u2014the structure tells us enough."
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/14fd9630ee04387f4361da289393234e2b7d93b6",
        "html_url": "https://github.com/facebook/react/commit/14fd9630ee04387f4361da289393234e2b7d93b6",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/14fd9630ee04387f4361da289393234e2b7d93b6/comments",
        "author": {
            "login": "gaearon",
            "id": 810438,
            "node_id": "MDQ6VXNlcjgxMDQzOA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/810438?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gaearon",
            "html_url": "https://github.com/gaearon",
            "followers_url": "https://api.github.com/users/gaearon/followers",
            "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
            "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
            "organizations_url": "https://api.github.com/users/gaearon/orgs",
            "repos_url": "https://api.github.com/users/gaearon/repos",
            "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gaearon/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "32df74dba67207300511cf9b7c5ef82dd708c0c1",
                "url": "https://api.github.com/repos/facebook/react/commits/32df74dba67207300511cf9b7c5ef82dd708c0c1",
                "html_url": "https://github.com/facebook/react/commit/32df74dba67207300511cf9b7c5ef82dd708c0c1"
            }
        ]
    },
    {
        "sha": "3f93ca1c8dec1fd85df4dbb748a2df9438fc699f",
        "node_id": "C_kwDOAJy2KtoAKDNmOTNjYTFjOGRlYzFmZDg1ZGY0ZGJiNzQ4YTJkZjk0MzhmYzY5OWY",
        "commit": {
            "author": {
                "name": "Sebastian Markb\u00e5ge",
                "email": "sebastian@calyptus.eu",
                "date": "2024-02-12T19:56:59Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2024-02-12T19:56:59Z"
            },
            "message": "[Fiber] Transfer `_debugInfo` from Arrays, Lazy, Thenables and Elements to the inner Fibers. (#28286)\n\nThat way we can use it for debug information like component stacks and\r\nDevTools. I used an extra stack argument in Child Fiber to track this as\r\nit's flowing down since it's not just elements where we have this info\r\nreadily available but parent arrays and lazy can merge this into the\r\nFiber too. It's not great that this is a dev-only argument and I could\r\ntrack it globally but seems more likely to make mistakes.\r\n\r\nIt is possible for the same debug info to appear for multiple child\r\nfibers like when it's attached to a fragment or a lazy that resolves to\r\na fragment at the root. The object identity could be used in these\r\nscenarios to infer if that's really one server component that's a parent\r\nof all children or if each child has a server component with the same\r\nname.\r\n\r\nThis is effectively a public API because you can use it to stash\r\ninformation on Promises from a third-party service - not just Server\r\nComponents. I started outline the types for this for some things I was\r\nplanning to add but it's not final.\r\n\r\nI was also planning on storing it from `use(thenable)` for when you\r\nsuspend on a Promise. However, I realized that there's no Hook instance\r\nfor those to stash it on. So it might need a separate data structure to\r\nstash the previous pass over of `use()` that resets each render.\r\n\r\nNo tests yet since I didn't want to test internals but it'll be covered\r\nonce we have debugging features like component stacks.",
            "tree": {
                "sha": "15d844eca6b905bef44c887583df0ee5954d5272",
                "url": "https://api.github.com/repos/facebook/react/git/trees/15d844eca6b905bef44c887583df0ee5954d5272"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/3f93ca1c8dec1fd85df4dbb748a2df9438fc699f",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJlyngLCRC1aQ7uu5UhlAAA/kMQAG18ZTCnkuW0roObl93EVVnp\nNxXe3yEXlmzn5AOTBZa8KA14jt7KClh0zD/L843CtEgK/yqbaaaC7jfD0oZ7cv9W\n/sKeWHAJPBDaNCjQV6joZvYdrflDqHPVz08f2oEYb0ZHkRTlNyJPhlS2FV6/N205\n5cMhTozDSKgYu1wwfBPQ2VLR03muD8D+DiomZ8N0d3FLM0NjhbdKAtrCXorUDEka\nMccs1s/N96dohOiY3+TcXPuNHvB2i54N97cQpPQyA9nZyAjWZSGu+ONwaP5XRosK\ncbzLAYnIitWkCKoK7r3dN5Hld4d5DbUOQUZYBaMYFy8P9akKub2wiD9IoyuPAMb+\nTsLltPplxGXjEqtToXR8rXayEQsCjfu6nLFEwn6nviZVr8yu/qXK7DQTC4k/U/2S\nIiTH6CChcpmXXIqSk1nkyPRp+5tYQid6rgMwRRAd7XD0KauK+keXZD+zmqOp2+1e\nwugZ/NurhOxoBWp2QkRz4ogUwJ0TE0IgI85dZLjiq13fLWH7mWIKSwQVe5WZuV59\naLp0oB0PFn5u4r7oqKPexH1lMaqzHubNVK/VZkJ4iUqLyPvF/SCyUm/PkfwLlyQv\nCnFJP4VAknyrY7vlWwKyklSyWjjO9rN725E3XtfIUKyXn2VwxMfBmNDopnC4bb5s\n+CkMDTBx0CyxjVWScwjg\n=+mMm\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 15d844eca6b905bef44c887583df0ee5954d5272\nparent 9e7944f67c72b9a69a8db092ba6bd99fe9c731e2\nauthor Sebastian Markb\u00e5ge <sebastian@calyptus.eu> 1707767819 -0500\ncommitter GitHub <noreply@github.com> 1707767819 -0500\n\n[Fiber] Transfer `_debugInfo` from Arrays, Lazy, Thenables and Elements to the inner Fibers. (#28286)\n\nThat way we can use it for debug information like component stacks and\r\nDevTools. I used an extra stack argument in Child Fiber to track this as\r\nit's flowing down since it's not just elements where we have this info\r\nreadily available but parent arrays and lazy can merge this into the\r\nFiber too. It's not great that this is a dev-only argument and I could\r\ntrack it globally but seems more likely to make mistakes.\r\n\r\nIt is possible for the same debug info to appear for multiple child\r\nfibers like when it's attached to a fragment or a lazy that resolves to\r\na fragment at the root. The object identity could be used in these\r\nscenarios to infer if that's really one server component that's a parent\r\nof all children or if each child has a server component with the same\r\nname.\r\n\r\nThis is effectively a public API because you can use it to stash\r\ninformation on Promises from a third-party service - not just Server\r\nComponents. I started outline the types for this for some things I was\r\nplanning to add but it's not final.\r\n\r\nI was also planning on storing it from `use(thenable)` for when you\r\nsuspend on a Promise. However, I realized that there's no Hook instance\r\nfor those to stash it on. So it might need a separate data structure to\r\nstash the previous pass over of `use()` that resets each render.\r\n\r\nNo tests yet since I didn't want to test internals but it'll be covered\r\nonce we have debugging features like component stacks."
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/3f93ca1c8dec1fd85df4dbb748a2df9438fc699f",
        "html_url": "https://github.com/facebook/react/commit/3f93ca1c8dec1fd85df4dbb748a2df9438fc699f",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/3f93ca1c8dec1fd85df4dbb748a2df9438fc699f/comments",
        "author": {
            "login": "sebmarkbage",
            "id": 63648,
            "node_id": "MDQ6VXNlcjYzNjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sebmarkbage",
            "html_url": "https://github.com/sebmarkbage",
            "followers_url": "https://api.github.com/users/sebmarkbage/followers",
            "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
            "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
            "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
            "repos_url": "https://api.github.com/users/sebmarkbage/repos",
            "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "9e7944f67c72b9a69a8db092ba6bd99fe9c731e2",
                "url": "https://api.github.com/repos/facebook/react/commits/9e7944f67c72b9a69a8db092ba6bd99fe9c731e2",
                "html_url": "https://github.com/facebook/react/commit/9e7944f67c72b9a69a8db092ba6bd99fe9c731e2"
            }
        ]
    },
    {
        "sha": "37d901e2b81e12d40df7012c6f8681b8272d2555",
        "node_id": "C_kwDOAJy2KtoAKDM3ZDkwMWUyYjgxZTEyZDQwZGY3MDEyYzZmODY4MWI4MjcyZDI1NTU",
        "commit": {
            "author": {
                "name": "Sebastian Markb\u00e5ge",
                "email": "sebastian@calyptus.eu",
                "date": "2024-02-07T21:38:00Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2024-02-07T21:38:00Z"
            },
            "message": "Remove __self and __source location from elements (#28265)\n\nAlong with all the places using it like the `_debugSource` on Fiber.\r\nThis still lets them be passed into `createElement` (and JSX dev\r\nruntime) since those can still be used in existing already compiled code\r\nand we don't want that to start spreading to DOM attributes.\r\n\r\nWe used to have a DEV mode that compiles the source location of JSX into\r\nthe compiled output. This was nice because we could get the actual call\r\nsite of the JSX (instead of just somewhere in the component). It had a\r\nbunch of issues though:\r\n\r\n- It only works with JSX.\r\n- The way this source location is compiled is different in all the\r\npipelines along the way. It relies on this transform being first and the\r\nsource location we want to extract but it doesn't get preserved along\r\nsource maps and don't have a way to be connected to the source hosted by\r\nthe source maps. Ideally it should just use the mechanism other source\r\nmaps use.\r\n- Since it's expensive it only works in DEV so if it's used for\r\ncomponent stacks it would vary between dev and prod.\r\n- It only captures the callsite of the JSX and not the stack between the\r\ncomponent and that callsite. In the happy case it's in the component but\r\nnot always.\r\n\r\nInstead, we have another zero-cost trick to extract the call site of\r\neach component lazily only if it's needed. This ensures that component\r\nstacks are the same in DEV and PROD. At the cost of worse line number\r\ninformation.\r\n\r\nThe better way to get the JSX call site would be to get it from `new\r\nError()` or `console.createTask()` inside the JSX runtime which can\r\ncapture the whole stack in a consistent way with other source mappings.\r\nWe might explore that in the future.\r\n\r\nThis removes source location info from React DevTools and React Native\r\nInspector. The \"jump to source code\" feature or inspection can be made\r\nlazy instead by invoking the lazy component stack frame generation. That\r\nway it can be made to work in prod too. The filtering based on file path\r\nis a bit trickier.\r\n\r\nWhen redesigned this UI should ideally also account for more than one\r\nstack frame.\r\n\r\nWith this change the DEV only Babel transforms are effectively\r\ndeprecated since they're not necessary for anything.",
            "tree": {
                "sha": "6d3d19b4806064d1d1ce50a4c35be07f9148a427",
                "url": "https://api.github.com/repos/facebook/react/git/trees/6d3d19b4806064d1d1ce50a4c35be07f9148a427"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/37d901e2b81e12d40df7012c6f8681b8272d2555",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJlw/g4CRC1aQ7uu5UhlAAALR4QAE48Xpci8EjxmgFNhhHoFr3I\naIo6O98tOOiYdn4Se9G09RWjT5ebtD96cIzALiXU0BqgIm09e1PiBctREHNhMb4u\n4sPbZmMaCZkP00PdWrMqhLqBsfC+8cO9duJyerwiHAbYEHBluTbwhkhB11dvP6QA\n3ImbpxbXYFq0lLc6buVDa5IU9hZjtke1+sbVuUsxx0v9e5F9h/uatKRyPKNNbUVq\nIGlmOICqOsn3lrqEx8uyBnYJE5WEuktQEFdqofjg5D1ZO8/z0w1Gw3PnTIoLfgbl\nN9Z5US5RoZb1eWdMxJ5zwqzXKG+8aselJxm0VLo7CNkoQ8acXP54ho95oazwnO37\nXNbg/3iQNSZ1wU/Raqup4zL6oCFBEwnL8YrK8z07wS6ecep3hIOke+yhTrao/isK\n6o6A8AqiL4DdWX0Nlqz3+xt17kwX0DoLovAtqh2yrtjTMyTTdDHacxdxar1vS4kt\nwgmaLiDBG5I5Qft/HdnVVOQiL68+aG4eTe5I5lZM0KgRRPPbzMW2Lb7lnnLGCaM6\naACE2ZmIAgfoNzDKQcTnngp07uTRHLFJxMUc5yX8ab3oOUN7O5PyxWj2ahsrdwDe\n7FNG7OSY+6jIauU4yToMj+NbUxR3+cGAi3Y6HFP84ZO8xNtP+DzscVBLlzQQcTZ9\nU+c0GyUKfX0/eMATi9SF\n=WZqK\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 6d3d19b4806064d1d1ce50a4c35be07f9148a427\nparent 5c08662301d99d1305e164c701fe8e4da1bc526c\nauthor Sebastian Markb\u00e5ge <sebastian@calyptus.eu> 1707341880 -0800\ncommitter GitHub <noreply@github.com> 1707341880 -0500\n\nRemove __self and __source location from elements (#28265)\n\nAlong with all the places using it like the `_debugSource` on Fiber.\r\nThis still lets them be passed into `createElement` (and JSX dev\r\nruntime) since those can still be used in existing already compiled code\r\nand we don't want that to start spreading to DOM attributes.\r\n\r\nWe used to have a DEV mode that compiles the source location of JSX into\r\nthe compiled output. This was nice because we could get the actual call\r\nsite of the JSX (instead of just somewhere in the component). It had a\r\nbunch of issues though:\r\n\r\n- It only works with JSX.\r\n- The way this source location is compiled is different in all the\r\npipelines along the way. It relies on this transform being first and the\r\nsource location we want to extract but it doesn't get preserved along\r\nsource maps and don't have a way to be connected to the source hosted by\r\nthe source maps. Ideally it should just use the mechanism other source\r\nmaps use.\r\n- Since it's expensive it only works in DEV so if it's used for\r\ncomponent stacks it would vary between dev and prod.\r\n- It only captures the callsite of the JSX and not the stack between the\r\ncomponent and that callsite. In the happy case it's in the component but\r\nnot always.\r\n\r\nInstead, we have another zero-cost trick to extract the call site of\r\neach component lazily only if it's needed. This ensures that component\r\nstacks are the same in DEV and PROD. At the cost of worse line number\r\ninformation.\r\n\r\nThe better way to get the JSX call site would be to get it from `new\r\nError()` or `console.createTask()` inside the JSX runtime which can\r\ncapture the whole stack in a consistent way with other source mappings.\r\nWe might explore that in the future.\r\n\r\nThis removes source location info from React DevTools and React Native\r\nInspector. The \"jump to source code\" feature or inspection can be made\r\nlazy instead by invoking the lazy component stack frame generation. That\r\nway it can be made to work in prod too. The filtering based on file path\r\nis a bit trickier.\r\n\r\nWhen redesigned this UI should ideally also account for more than one\r\nstack frame.\r\n\r\nWith this change the DEV only Babel transforms are effectively\r\ndeprecated since they're not necessary for anything."
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/37d901e2b81e12d40df7012c6f8681b8272d2555",
        "html_url": "https://github.com/facebook/react/commit/37d901e2b81e12d40df7012c6f8681b8272d2555",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/37d901e2b81e12d40df7012c6f8681b8272d2555/comments",
        "author": {
            "login": "sebmarkbage",
            "id": 63648,
            "node_id": "MDQ6VXNlcjYzNjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sebmarkbage",
            "html_url": "https://github.com/sebmarkbage",
            "followers_url": "https://api.github.com/users/sebmarkbage/followers",
            "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
            "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
            "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
            "repos_url": "https://api.github.com/users/sebmarkbage/repos",
            "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "5c08662301d99d1305e164c701fe8e4da1bc526c",
                "url": "https://api.github.com/repos/facebook/react/commits/5c08662301d99d1305e164c701fe8e4da1bc526c",
                "html_url": "https://github.com/facebook/react/commit/5c08662301d99d1305e164c701fe8e4da1bc526c"
            }
        ]
    },
    {
        "sha": "3d1da1f9ab7d54984c096e6a04c8729f3a50fd8a",
        "node_id": "C_kwDOAJy2KtoAKDNkMWRhMWY5YWI3ZDU0OTg0YzA5NmU2YTA0Yzg3MjlmM2E1MGZkOGE",
        "commit": {
            "author": {
                "name": "Ricky",
                "email": "rickhanlonii@gmail.com",
                "date": "2024-02-01T19:54:20Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2024-02-01T19:54:20Z"
            },
            "message": "Remove createRootStrictEffectsByDefault flag (#28102)\n\nThere's no need to separate strict mode from strict effects mode any\r\nmore.\r\n\r\nI didn't clean up the `StrictEffectMode` fiber flag, because it's used\r\nto prevent strict effects in legacy mode. I could replace those checks\r\nwith `LegacyMode` checks, but when we remove legacy mode, we can remove\r\nthat flag and condense them into one StrictMode flag away.",
            "tree": {
                "sha": "cb23c8313116627ffe05a8eda0b44f4742f69900",
                "url": "https://api.github.com/repos/facebook/react/git/trees/cb23c8313116627ffe05a8eda0b44f4742f69900"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/3d1da1f9ab7d54984c096e6a04c8729f3a50fd8a",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJlu/bsCRC1aQ7uu5UhlAAAuGAQAEQA+pmK9jObYvWkXexyj4j1\ncCaAv+ZQD5sc6eq+zQ0oXsB6jqNgKKwHwUQBkZbrbDDHywKpCwk2EM0hY92HUObq\niG8+o7I9KEazPy43sBi97i6Ab4daCUd1lC7+wET3yft6S+AeW1MUKxCF4LpXV8NB\n2LScZYfUJlML/7Anq+1rWa0I+NhsjiZvhhiBmcwgx3/x9d17d+Fn2OdjCzA7lcbU\nbIvssHEAw8HQi/duHHpRGbSI2advc4TatVXxojfMMC14QAavK+vrdTqKmsACqSWt\ntLXneceTEhG5/vNzI6mYka4lQC4fQ+mB5fo+IzxCWlAyvobpYsy2zo86+ckldtDm\ncGIBXSYvDuEctBzZbXTpxTQw8wcBPDxB71NYewsVZS8bkLBXqMcFu6aX3NnsDtM5\nVov2sVRBIg8r2bvm4d0pPCpBAjiMC7nASMvziiieGdFKoQd0zdwesaKKc7vVRB11\nwZIephGd3EEW+gRf/G96ZxaVyDDNbR7AOpynLmlWXeXbI4S9+j+IjnvxrMw1B22y\n2NEdoDysy7KGNLGsM4RP46aAonp0GTun0UHcDg7rNmvNLyBbBR3bhpvrjNPN3aqB\n9TK2ee2T0wQi61xuS2JgnAuBY9zJ4kzSkcm7MAWYYMrEXUP0X5SBtIf/bqozVZ+q\nK+2joGEscuFCQxMjLU9i\n=togp\n-----END PGP SIGNATURE-----\n",
                "payload": "tree cb23c8313116627ffe05a8eda0b44f4742f69900\nparent 4dd475c97799f3fb83bdd2fff2d028e0e30041cf\nauthor Ricky <rickhanlonii@gmail.com> 1706817260 -0500\ncommitter GitHub <noreply@github.com> 1706817260 -0500\n\nRemove createRootStrictEffectsByDefault flag (#28102)\n\nThere's no need to separate strict mode from strict effects mode any\r\nmore.\r\n\r\nI didn't clean up the `StrictEffectMode` fiber flag, because it's used\r\nto prevent strict effects in legacy mode. I could replace those checks\r\nwith `LegacyMode` checks, but when we remove legacy mode, we can remove\r\nthat flag and condense them into one StrictMode flag away."
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/3d1da1f9ab7d54984c096e6a04c8729f3a50fd8a",
        "html_url": "https://github.com/facebook/react/commit/3d1da1f9ab7d54984c096e6a04c8729f3a50fd8a",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/3d1da1f9ab7d54984c096e6a04c8729f3a50fd8a/comments",
        "author": {
            "login": "rickhanlonii",
            "id": 2440089,
            "node_id": "MDQ6VXNlcjI0NDAwODk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2440089?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rickhanlonii",
            "html_url": "https://github.com/rickhanlonii",
            "followers_url": "https://api.github.com/users/rickhanlonii/followers",
            "following_url": "https://api.github.com/users/rickhanlonii/following{/other_user}",
            "gists_url": "https://api.github.com/users/rickhanlonii/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rickhanlonii/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rickhanlonii/subscriptions",
            "organizations_url": "https://api.github.com/users/rickhanlonii/orgs",
            "repos_url": "https://api.github.com/users/rickhanlonii/repos",
            "events_url": "https://api.github.com/users/rickhanlonii/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rickhanlonii/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "4dd475c97799f3fb83bdd2fff2d028e0e30041cf",
                "url": "https://api.github.com/repos/facebook/react/commits/4dd475c97799f3fb83bdd2fff2d028e0e30041cf",
                "html_url": "https://github.com/facebook/react/commit/4dd475c97799f3fb83bdd2fff2d028e0e30041cf"
            }
        ]
    },
    {
        "sha": "1a65d036ef057b07a6b15f5604e399f91bc5ed73",
        "node_id": "C_kwDOAJy2KtoAKDFhNjVkMDM2ZWYwNTdiMDdhNmIxNWY1NjA0ZTM5OWY5MWJjNWVkNzM",
        "commit": {
            "author": {
                "name": "Jan Kassens",
                "email": "jkassens@meta.com",
                "date": "2023-11-16T22:42:03Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2023-11-16T22:42:03Z"
            },
            "message": "[cleanup] remove enableHostSingletons feature flag (#27583)\n\nThe flag is enabled everywhere, I think we can remove it now.",
            "tree": {
                "sha": "610db68df7f39a6fc4979faa71bc5e170e5c5dbd",
                "url": "https://api.github.com/repos/facebook/react/git/trees/610db68df7f39a6fc4979faa71bc5e170e5c5dbd"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/1a65d036ef057b07a6b15f5604e399f91bc5ed73",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJlVpq7CRBK7hj4Ov3rIwAANaEIAD8t6w/7+VGIJnUOlANU5PST\nl9WNgKcqbSFatAqtBg6WmIFazcIUcPAhTbJTWQyqqLISnLDFremZRgD4/bksShtQ\nVv5TOr4IfOi2cx8b0sVL2Xcl5wDd3h9XYqTrEuAqFT1/5pr2E+5B7EFaffNR8wp6\nwtbNZk45va67dHSTOewwlRfnW30tNFVbWip1jmp3wyISOSxwRBJb79jlzNi8fqh/\n8t/Gt46RB5/gdwKos3G6aBTGow4wfUsf3Wuv9bCU7cXprkZWC1ulOUv9IJe8jRa5\noiB4hevdq8oFTLDdLinCn71je2VzjG/Ww6XoCxyZ3Vqo74greU6+n+xHpNwko1I=\n=o813\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 610db68df7f39a6fc4979faa71bc5e170e5c5dbd\nparent 0de5b11485b9edc5aec0f5a95ef886a294c03b2d\nauthor Jan Kassens <jkassens@meta.com> 1700174523 -0500\ncommitter GitHub <noreply@github.com> 1700174523 -0500\n\n[cleanup] remove enableHostSingletons feature flag (#27583)\n\nThe flag is enabled everywhere, I think we can remove it now."
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/1a65d036ef057b07a6b15f5604e399f91bc5ed73",
        "html_url": "https://github.com/facebook/react/commit/1a65d036ef057b07a6b15f5604e399f91bc5ed73",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/1a65d036ef057b07a6b15f5604e399f91bc5ed73/comments",
        "author": {
            "login": "kassens",
            "id": 11849,
            "node_id": "MDQ6VXNlcjExODQ5",
            "avatar_url": "https://avatars.githubusercontent.com/u/11849?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kassens",
            "html_url": "https://github.com/kassens",
            "followers_url": "https://api.github.com/users/kassens/followers",
            "following_url": "https://api.github.com/users/kassens/following{/other_user}",
            "gists_url": "https://api.github.com/users/kassens/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kassens/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kassens/subscriptions",
            "organizations_url": "https://api.github.com/users/kassens/orgs",
            "repos_url": "https://api.github.com/users/kassens/repos",
            "events_url": "https://api.github.com/users/kassens/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kassens/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "0de5b11485b9edc5aec0f5a95ef886a294c03b2d",
                "url": "https://api.github.com/repos/facebook/react/commits/0de5b11485b9edc5aec0f5a95ef886a294c03b2d",
                "html_url": "https://github.com/facebook/react/commit/0de5b11485b9edc5aec0f5a95ef886a294c03b2d"
            }
        ]
    },
    {
        "sha": "ce2bc58a9f6f3b0bfc8c738a0d8e2a5f3a332ff5",
        "node_id": "C_kwDOAJy2KtoAKGNlMmJjNThhOWY2ZjNiMGJmYzhjNzM4YTBkOGUyYTVmM2EzMzJmZjU",
        "commit": {
            "author": {
                "name": "Jan Kassens",
                "email": "jkassens@meta.com",
                "date": "2023-11-02T20:13:21Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2023-11-02T20:13:21Z"
            },
            "message": "[activity] rename unstable_Offscreen to unstable_Activity (#27640)\n\n`Activity` is the current candidate name. This PR starts the rename work\r\nby renaming the exported unstable component name.\r\n\r\nNOTE: downstream consumers need to rename the import when updating to\r\nthis commit.",
            "tree": {
                "sha": "68b0bfc30563c56691978c266afcb4a2500ba5e6",
                "url": "https://api.github.com/repos/facebook/react/git/trees/68b0bfc30563c56691978c266afcb4a2500ba5e6"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/ce2bc58a9f6f3b0bfc8c738a0d8e2a5f3a332ff5",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJlRALhCRBK7hj4Ov3rIwAAc1kIAFYAcTZtkFaiuRodE7jduP7R\n/o1sDsohErNbaCgyF1QVY0BUuzh9DjBJJ56Pou2yPk5iZquOVadqED5M4wt0bc2+\nadFVtBYx/kYIAgN/bkX6u+db8faLC7miLnPtM6qpz+pxj0rVCJ3KYX4wl0Kfgw7K\nmfXrc+ZpCmswJ6Sct7nE6ziJGMT7m/Dmvtd/PFlE9QS2XgBDgmZfBCw2w9N7h1DU\nK2kVlRpDb6++1jx5KsyLGaeqYx4nhd6+/VbRzcQd9TnIGd/R6X1EGQzI2lZfN8IE\nhOLlTBulGjRyfxugD9p2i9QCIyCgV7IPHpROZ7IdbPNfK0HNmdPqVjPJBdiLrTo=\n=M9M/\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 68b0bfc30563c56691978c266afcb4a2500ba5e6\nparent a17467e7e2cd8947c595d1834889b5d184459f12\nauthor Jan Kassens <jkassens@meta.com> 1698956001 -0400\ncommitter GitHub <noreply@github.com> 1698956001 -0400\n\n[activity] rename unstable_Offscreen to unstable_Activity (#27640)\n\n`Activity` is the current candidate name. This PR starts the rename work\r\nby renaming the exported unstable component name.\r\n\r\nNOTE: downstream consumers need to rename the import when updating to\r\nthis commit."
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/ce2bc58a9f6f3b0bfc8c738a0d8e2a5f3a332ff5",
        "html_url": "https://github.com/facebook/react/commit/ce2bc58a9f6f3b0bfc8c738a0d8e2a5f3a332ff5",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/ce2bc58a9f6f3b0bfc8c738a0d8e2a5f3a332ff5/comments",
        "author": {
            "login": "kassens",
            "id": 11849,
            "node_id": "MDQ6VXNlcjExODQ5",
            "avatar_url": "https://avatars.githubusercontent.com/u/11849?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kassens",
            "html_url": "https://github.com/kassens",
            "followers_url": "https://api.github.com/users/kassens/followers",
            "following_url": "https://api.github.com/users/kassens/following{/other_user}",
            "gists_url": "https://api.github.com/users/kassens/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kassens/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kassens/subscriptions",
            "organizations_url": "https://api.github.com/users/kassens/orgs",
            "repos_url": "https://api.github.com/users/kassens/repos",
            "events_url": "https://api.github.com/users/kassens/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kassens/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "a17467e7e2cd8947c595d1834889b5d184459f12",
                "url": "https://api.github.com/repos/facebook/react/commits/a17467e7e2cd8947c595d1834889b5d184459f12",
                "html_url": "https://github.com/facebook/react/commit/a17467e7e2cd8947c595d1834889b5d184459f12"
            }
        ]
    },
    {
        "sha": "eaa696876ee40bb048727aefe995be1bbb7384a8",
        "node_id": "C_kwDOAJy2KtoAKGVhYTY5Njg3NmVlNDBiYjA0ODcyN2FlZmU5OTViZTFiYmI3Mzg0YTg",
        "commit": {
            "author": {
                "name": "idango10",
                "email": "75563024+idango10@users.noreply.github.com",
                "date": "2023-08-29T15:42:35Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2023-08-29T15:42:35Z"
            },
            "message": "fix: devtools source field disappears after component remount (#27297)\n\n## Summary\r\n\r\nFixes: https://github.com/facebook/react/issues/27296\r\n\r\nOn actions that cause a component to change its signature, and therefore\r\nto remount, the `_debugSource` property of the fiber updates in delay\r\nand causes the `devtools` source field to vanish.\r\n\r\nThis issue happens in\r\nhttps://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiberBeginWork.js\r\n\r\n```js\r\nfunction beginWork(\r\n  current: Fiber | null,\r\n  workInProgress: Fiber,\r\n  renderLanes: Lanes,\r\n): Fiber | null {\r\n  if (__DEV__) {\r\n    if (workInProgress._debugNeedsRemount && current !== null) {\r\n      // This will restart the begin phase with a new fiber.\r\n      return remountFiber(\r\n        current,\r\n        workInProgress,\r\n        createFiberFromTypeAndProps(\r\n          workInProgress.type,\r\n          workInProgress.key,\r\n          workInProgress.pendingProps,\r\n          workInProgress._debugOwner || null,\r\n          workInProgress.mode,\r\n          workInProgress.lanes,\r\n        ),\r\n      );\r\n    }\r\n  }\r\n\r\n  // ...\r\n```\r\n\r\n`remountFiber` uses the 3rd parameter as the new fiber\r\n(`createFiberFromTypeAndProps(...)`), but this parameter doesn\u2019t contain\r\na `_debugSource`.\r\n\r\n## How did you test this change?\r\n\r\nTested by monkey patching\r\n`./node_modules/react-dom/cjs/react-dom.development.js`:\r\n<img width=\"1749\" alt=\"image\"\r\nsrc=\"https://github.com/facebook/react/assets/75563024/ccaf7fab-4cc9-4c05-a48b-64db6f55dc23\">\r\n\r\n\r\nhttps://github.com/facebook/react/assets/75563024/0650ae5c-b277-44d1-acbb-a08d98bd38e0",
            "tree": {
                "sha": "1308fe1dc078498c8520c83a9e77e9428feee6ec",
                "url": "https://api.github.com/repos/facebook/react/git/trees/1308fe1dc078498c8520c83a9e77e9428feee6ec"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/eaa696876ee40bb048727aefe995be1bbb7384a8",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJk7hHrCRBK7hj4Ov3rIwAAUbAIAJqMwnatbvzXKatJ/nT3ToXx\nlxyOlArtMdMH8UuZv+75eyLfKeFPqF43v6+jdNnSfrV/X90zNb4QmBQYBlIqZrWf\na8FJGm4en/mQfBb13cP/3tRe+KE8ua/djtAraMpILRKWOe4AmEVI85YcGwVy2/3C\nH72r7HXourlaqpQdr3HBCy3bPf3SPX75KWGasdQzazqeHK4fYBsdXofoIp5q5WNP\n5NbrxQgEBwOJCFuJPkE05zWot8qB6sG1vLuVjrqWRqutGjI9m30y0oj0UZx1Qu1d\nVZvTsJA4PfJaC5Z2yDnUmFp0DNHtHcDntb0Lx/u0VDsCBIz2U2GB5DN0iFmxvDE=\n=i9BO\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 1308fe1dc078498c8520c83a9e77e9428feee6ec\nparent 4129ea8c922b950be3964f98d2bb74ff4a1c5431\nauthor idango10 <75563024+idango10@users.noreply.github.com> 1693323755 +0300\ncommitter GitHub <noreply@github.com> 1693323755 +0100\n\nfix: devtools source field disappears after component remount (#27297)\n\n## Summary\r\n\r\nFixes: https://github.com/facebook/react/issues/27296\r\n\r\nOn actions that cause a component to change its signature, and therefore\r\nto remount, the `_debugSource` property of the fiber updates in delay\r\nand causes the `devtools` source field to vanish.\r\n\r\nThis issue happens in\r\nhttps://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiberBeginWork.js\r\n\r\n```js\r\nfunction beginWork(\r\n  current: Fiber | null,\r\n  workInProgress: Fiber,\r\n  renderLanes: Lanes,\r\n): Fiber | null {\r\n  if (__DEV__) {\r\n    if (workInProgress._debugNeedsRemount && current !== null) {\r\n      // This will restart the begin phase with a new fiber.\r\n      return remountFiber(\r\n        current,\r\n        workInProgress,\r\n        createFiberFromTypeAndProps(\r\n          workInProgress.type,\r\n          workInProgress.key,\r\n          workInProgress.pendingProps,\r\n          workInProgress._debugOwner || null,\r\n          workInProgress.mode,\r\n          workInProgress.lanes,\r\n        ),\r\n      );\r\n    }\r\n  }\r\n\r\n  // ...\r\n```\r\n\r\n`remountFiber` uses the 3rd parameter as the new fiber\r\n(`createFiberFromTypeAndProps(...)`), but this parameter doesn\u2019t contain\r\na `_debugSource`.\r\n\r\n## How did you test this change?\r\n\r\nTested by monkey patching\r\n`./node_modules/react-dom/cjs/react-dom.development.js`:\r\n<img width=\"1749\" alt=\"image\"\r\nsrc=\"https://github.com/facebook/react/assets/75563024/ccaf7fab-4cc9-4c05-a48b-64db6f55dc23\">\r\n\r\n\r\nhttps://github.com/facebook/react/assets/75563024/0650ae5c-b277-44d1-acbb-a08d98bd38e0"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/eaa696876ee40bb048727aefe995be1bbb7384a8",
        "html_url": "https://github.com/facebook/react/commit/eaa696876ee40bb048727aefe995be1bbb7384a8",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/eaa696876ee40bb048727aefe995be1bbb7384a8/comments",
        "author": {
            "login": "idango10",
            "id": 75563024,
            "node_id": "MDQ6VXNlcjc1NTYzMDI0",
            "avatar_url": "https://avatars.githubusercontent.com/u/75563024?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/idango10",
            "html_url": "https://github.com/idango10",
            "followers_url": "https://api.github.com/users/idango10/followers",
            "following_url": "https://api.github.com/users/idango10/following{/other_user}",
            "gists_url": "https://api.github.com/users/idango10/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/idango10/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/idango10/subscriptions",
            "organizations_url": "https://api.github.com/users/idango10/orgs",
            "repos_url": "https://api.github.com/users/idango10/repos",
            "events_url": "https://api.github.com/users/idango10/events{/privacy}",
            "received_events_url": "https://api.github.com/users/idango10/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "4129ea8c922b950be3964f98d2bb74ff4a1c5431",
                "url": "https://api.github.com/repos/facebook/react/commits/4129ea8c922b950be3964f98d2bb74ff4a1c5431",
                "html_url": "https://github.com/facebook/react/commit/4129ea8c922b950be3964f98d2bb74ff4a1c5431"
            }
        ]
    },
    {
        "sha": "70e998a1064cc1e8e8f9103e0c00d37fbbcf71c1",
        "node_id": "C_kwDOAJy2KtoAKDcwZTk5OGExMDY0Y2MxZThlOGY5MTAzZTBjMDBkMzdmYmJjZjcxYzE",
        "commit": {
            "author": {
                "name": "Tianyu Yao",
                "email": "skyyao@fb.com",
                "date": "2023-06-22T20:12:30Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2023-06-22T20:12:30Z"
            },
            "message": "Fix disableStrictPassiveEffect not working under Suspense (#26989)\n\nIn https://github.com/facebook/react/pull/26914 I added an extra logic\r\nto turn off double useEffect if there is an `Offscreen`\r\ntag. But `Suspense` uses `Offscreen` tag internally and that turns off\r\n`disableStrictPassiveEffect` for everything.",
            "tree": {
                "sha": "523b5eba753b4997497b14234d83278321d11fbc",
                "url": "https://api.github.com/repos/facebook/react/git/trees/523b5eba753b4997497b14234d83278321d11fbc"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/70e998a1064cc1e8e8f9103e0c00d37fbbcf71c1",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJklKsuCRBK7hj4Ov3rIwAAdbIIAAoGUxUDK9Kq9FRmHGoNxsGu\nxeOQmgjCuO4IpqxMnohOJeuRtPW8EfTyaj3dnFblMTiauhPjNy+5jxmYkFdgH1EY\nTPMXaQMIcCg45bK7INkPYq08Q72Q4NrtRNFu5dULmJp8zrHQnBBkmwBpELM/ACQt\n/gJzc/uBrBSfXGdPHnYjwIk1AK7Oa31srU1gZAyRBHlHvjSd0aAI0gvpfzO/j5Fz\nGDlZM8am8oLcxBxdSpIVt5AYA77ahlhOkPpi2nh8jwqLTdm/VQrug2vNCxjFilr0\nNSzOqmVlSSwTkR4O1fKuJqM+7wv7fcuRTclzHSsJAEJCrSmkEDr0oNoS+Aw/atM=\n=yg4E\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 523b5eba753b4997497b14234d83278321d11fbc\nparent c8deb5db660f3f6eeca30d29b4bd48d9e82b3792\nauthor Tianyu Yao <skyyao@fb.com> 1687464750 -0700\ncommitter GitHub <noreply@github.com> 1687464750 -0700\n\nFix disableStrictPassiveEffect not working under Suspense (#26989)\n\nIn https://github.com/facebook/react/pull/26914 I added an extra logic\r\nto turn off double useEffect if there is an `Offscreen`\r\ntag. But `Suspense` uses `Offscreen` tag internally and that turns off\r\n`disableStrictPassiveEffect` for everything."
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/70e998a1064cc1e8e8f9103e0c00d37fbbcf71c1",
        "html_url": "https://github.com/facebook/react/commit/70e998a1064cc1e8e8f9103e0c00d37fbbcf71c1",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/70e998a1064cc1e8e8f9103e0c00d37fbbcf71c1/comments",
        "author": {
            "login": "tyao1",
            "id": 5868353,
            "node_id": "MDQ6VXNlcjU4NjgzNTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5868353?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tyao1",
            "html_url": "https://github.com/tyao1",
            "followers_url": "https://api.github.com/users/tyao1/followers",
            "following_url": "https://api.github.com/users/tyao1/following{/other_user}",
            "gists_url": "https://api.github.com/users/tyao1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tyao1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tyao1/subscriptions",
            "organizations_url": "https://api.github.com/users/tyao1/orgs",
            "repos_url": "https://api.github.com/users/tyao1/repos",
            "events_url": "https://api.github.com/users/tyao1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tyao1/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "c8deb5db660f3f6eeca30d29b4bd48d9e82b3792",
                "url": "https://api.github.com/repos/facebook/react/commits/c8deb5db660f3f6eeca30d29b4bd48d9e82b3792",
                "html_url": "https://github.com/facebook/react/commit/c8deb5db660f3f6eeca30d29b4bd48d9e82b3792"
            }
        ]
    },
    {
        "sha": "254cbdbd6d851a30bf3b649a6cb7c52786766fa4",
        "node_id": "C_kwDOAJy2KtoAKDI1NGNiZGJkNmQ4NTFhMzBiZjNiNjQ5YTZjYjdjNTI3ODY3NjZmYTQ",
        "commit": {
            "author": {
                "name": "Tianyu Yao",
                "email": "skyyao@fb.com",
                "date": "2023-06-21T18:14:57Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2023-06-21T18:14:57Z"
            },
            "message": "Add a temporary internal option to disable double useEffect in legacy strict mode (#26914)\n\n<!--\r\n  Thanks for submitting a pull request!\r\nWe appreciate you spending the time to work on these changes. Please\r\nprovide enough information so that others can review your pull request.\r\nThe three fields below are mandatory.\r\n\r\nBefore submitting a pull request, please make sure the following is\r\ndone:\r\n\r\n1. Fork [the repository](https://github.com/facebook/react) and create\r\nyour branch from `main`.\r\n  2. Run `yarn` in the repository root.\r\n3. If you've fixed a bug or added code that should be tested, add tests!\r\n4. Ensure the test suite passes (`yarn test`). Tip: `yarn test --watch\r\nTestName` is helpful in development.\r\n5. Run `yarn test --prod` to test in the production environment. It\r\nsupports the same options as `yarn test`.\r\n6. If you need a debugger, run `yarn test --debug --watch TestName`,\r\nopen `chrome://inspect`, and press \"Inspect\".\r\n7. Format your code with\r\n[prettier](https://github.com/prettier/prettier) (`yarn prettier`).\r\n8. Make sure your code lints (`yarn lint`). Tip: `yarn linc` to only\r\ncheck changed files.\r\n  9. Run the [Flow](https://flowtype.org/) type checks (`yarn flow`).\r\n  10. If you haven't already, complete the CLA.\r\n\r\nLearn more about contributing:\r\nhttps://reactjs.org/docs/how-to-contribute.html\r\n-->\r\n\r\n## Summary\r\n\r\n<!--\r\nExplain the **motivation** for making this change. What existing problem\r\ndoes the pull request solve?\r\n-->\r\nWe are upgrading React 17 codebase to React18, and `StrictMode` has been\r\ngreat for surfacing potential production bugs on React18 for class\r\ncomponents. There are non-trivial number of test failures caused by\r\ndouble `useEffect` in StrictMode. To prioritize surfacing and fixing\r\nissues that will break in production now, we need a flag to turn off\r\ndouble `useEffect` for now in StrictMode temporarily. This is a\r\nMeta-only hack for rolling out `createRoot` and we will fast follow to\r\nremove it and use full strict mode.\r\n\r\n## How did you test this change?\r\n\r\n<!--\r\nDemonstrate the code is solid. Example: The exact commands you ran and\r\ntheir output, screenshots / videos if the pull request changes the user\r\ninterface.\r\nHow exactly did you verify that your PR solves the issue you wanted to\r\nsolve?\r\n  If you leave this empty, your PR will very likely be closed.\r\n-->\r\njest",
            "tree": {
                "sha": "9d1b002bec1332c806a4cbbf9ac536c0577a0ef9",
                "url": "https://api.github.com/repos/facebook/react/git/trees/9d1b002bec1332c806a4cbbf9ac536c0577a0ef9"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/254cbdbd6d851a30bf3b649a6cb7c52786766fa4",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkkz4hCRBK7hj4Ov3rIwAAwGgIAD9tHRquy7LbjLr3SMZUq5si\npnXpmbCbqDjIq1ITCbx0nGA5pzSSBZGnuCOrVTZxWKQ5FVqvuPkSw1NsL7gM7bXZ\nWuLM3zqFrmgzAOWMI2nHv4+snbuU3rSBTKdosw8aPqCa3BUMsHux2Zw16tktrmLb\nxqzTZa3oBUqOj+d0ayClmYKsMkHfKXsbiXK0+gTGToC04k+j6tQYJc1eHJQ8XLxW\nf5sUoRrACYBOFoZvTOKVOD1pB7hZ4oKJpsC+TNFT88CtLecDcS1E8AjFDGBBoj8W\nsbczgH9g20OlrQUm3161kY+5Xz6ZQjPdBfMR8cLfMO0HViPHSJ6GYQAcaMexjCk=\n=aQK/\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 9d1b002bec1332c806a4cbbf9ac536c0577a0ef9\nparent e3fb7c1de1ed375e32397b3502a30b8ae4c2db9f\nauthor Tianyu Yao <skyyao@fb.com> 1687371297 -0700\ncommitter GitHub <noreply@github.com> 1687371297 -0700\n\nAdd a temporary internal option to disable double useEffect in legacy strict mode (#26914)\n\n<!--\r\n  Thanks for submitting a pull request!\r\nWe appreciate you spending the time to work on these changes. Please\r\nprovide enough information so that others can review your pull request.\r\nThe three fields below are mandatory.\r\n\r\nBefore submitting a pull request, please make sure the following is\r\ndone:\r\n\r\n1. Fork [the repository](https://github.com/facebook/react) and create\r\nyour branch from `main`.\r\n  2. Run `yarn` in the repository root.\r\n3. If you've fixed a bug or added code that should be tested, add tests!\r\n4. Ensure the test suite passes (`yarn test`). Tip: `yarn test --watch\r\nTestName` is helpful in development.\r\n5. Run `yarn test --prod` to test in the production environment. It\r\nsupports the same options as `yarn test`.\r\n6. If you need a debugger, run `yarn test --debug --watch TestName`,\r\nopen `chrome://inspect`, and press \"Inspect\".\r\n7. Format your code with\r\n[prettier](https://github.com/prettier/prettier) (`yarn prettier`).\r\n8. Make sure your code lints (`yarn lint`). Tip: `yarn linc` to only\r\ncheck changed files.\r\n  9. Run the [Flow](https://flowtype.org/) type checks (`yarn flow`).\r\n  10. If you haven't already, complete the CLA.\r\n\r\nLearn more about contributing:\r\nhttps://reactjs.org/docs/how-to-contribute.html\r\n-->\r\n\r\n## Summary\r\n\r\n<!--\r\nExplain the **motivation** for making this change. What existing problem\r\ndoes the pull request solve?\r\n-->\r\nWe are upgrading React 17 codebase to React18, and `StrictMode` has been\r\ngreat for surfacing potential production bugs on React18 for class\r\ncomponents. There are non-trivial number of test failures caused by\r\ndouble `useEffect` in StrictMode. To prioritize surfacing and fixing\r\nissues that will break in production now, we need a flag to turn off\r\ndouble `useEffect` for now in StrictMode temporarily. This is a\r\nMeta-only hack for rolling out `createRoot` and we will fast follow to\r\nremove it and use full strict mode.\r\n\r\n## How did you test this change?\r\n\r\n<!--\r\nDemonstrate the code is solid. Example: The exact commands you ran and\r\ntheir output, screenshots / videos if the pull request changes the user\r\ninterface.\r\nHow exactly did you verify that your PR solves the issue you wanted to\r\nsolve?\r\n  If you leave this empty, your PR will very likely be closed.\r\n-->\r\njest"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/254cbdbd6d851a30bf3b649a6cb7c52786766fa4",
        "html_url": "https://github.com/facebook/react/commit/254cbdbd6d851a30bf3b649a6cb7c52786766fa4",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/254cbdbd6d851a30bf3b649a6cb7c52786766fa4/comments",
        "author": {
            "login": "tyao1",
            "id": 5868353,
            "node_id": "MDQ6VXNlcjU4NjgzNTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5868353?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tyao1",
            "html_url": "https://github.com/tyao1",
            "followers_url": "https://api.github.com/users/tyao1/followers",
            "following_url": "https://api.github.com/users/tyao1/following{/other_user}",
            "gists_url": "https://api.github.com/users/tyao1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tyao1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tyao1/subscriptions",
            "organizations_url": "https://api.github.com/users/tyao1/orgs",
            "repos_url": "https://api.github.com/users/tyao1/repos",
            "events_url": "https://api.github.com/users/tyao1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tyao1/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "e3fb7c1de1ed375e32397b3502a30b8ae4c2db9f",
                "url": "https://api.github.com/repos/facebook/react/commits/e3fb7c1de1ed375e32397b3502a30b8ae4c2db9f",
                "html_url": "https://github.com/facebook/react/commit/e3fb7c1de1ed375e32397b3502a30b8ae4c2db9f"
            }
        ]
    },
    {
        "sha": "018c58c9c65452cff25aaf1f38f78a9b90d8e5c1",
        "node_id": "C_kwDOAJy2KtoAKDAxOGM1OGM5YzY1NDUyY2ZmMjVhYWYxZjM4Zjc4YTliOTBkOGU1YzE",
        "commit": {
            "author": {
                "name": "Ricky",
                "email": "rickhanlonii@gmail.com",
                "date": "2023-06-01T13:24:56Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2023-06-01T13:24:56Z"
            },
            "message": "Clean up enableSyncDefaultUpdates flag a bit (#26858)\n\n## Overview\r\n\r\nDoes a few things:\r\n- Renames `enableSyncDefaultUpdates` to\r\n`forceConcurrentByDefaultForTesting`\r\n- Changes the way it's used so it's dead-code eliminated separate from\r\n`allowConcurrentByDefault`\r\n- Deletes a bunch of the gated code\r\n\r\nThe gates that are deleted are unnecessary now. We were keeping them\r\nwhen we originally thought we would come back to being concurrent by\r\ndefault. But we've shifted and now sync-by default is the desired\r\nbehavior long term, so there's no need to keep all these forked tests\r\naround.\r\n\r\nI'll follow up to delete more of the forked behavior if possible.\r\nIdeally we wouldn't need this flag even if we're still using\r\n`allowConcurrentByDefault`.",
            "tree": {
                "sha": "9bcf08313bfaf35e5713cc3b1ebbeb45458211c2",
                "url": "https://api.github.com/repos/facebook/react/git/trees/9bcf08313bfaf35e5713cc3b1ebbeb45458211c2"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/018c58c9c65452cff25aaf1f38f78a9b90d8e5c1",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkeJwoCRBK7hj4Ov3rIwAAZQgIAE0smHU4SrZ4aAzNKCsFtKIc\nAOEq3tuyOQO1vMN3F/aE3F5WpZ7f3ijcjQjqP8vow0PzB5dWmPGh9nadMLxz44wm\nkNInx0rykBhziEmRvpucNAfuUJWOetG2+ZtU6JGU0nE3neRt6YHVT/cs07jxC3WL\nkYVtDy4nBu2MZSmRLF4tPe8yfNRESSdMo35GgyNUSpM7vy68VjaFlIFeBs6UWHFf\nzC+mEzhgZ2/rcb2PVtMcQxDcQ0KdlrgOLyAUktxz71JfhEqfiYiOodQeEEIP3U55\nIHJKJgNvfik1MTZvTV1koTLZEuZaKN4TrCWLB6TFxaRZyTy+Ru10J/yueXtimdY=\n=HVgn\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 9bcf08313bfaf35e5713cc3b1ebbeb45458211c2\nparent ae31d2ea3c3f9f0a87ff2c6193484d5d8786bc5f\nauthor Ricky <rickhanlonii@gmail.com> 1685625896 -0400\ncommitter GitHub <noreply@github.com> 1685625896 -0400\n\nClean up enableSyncDefaultUpdates flag a bit (#26858)\n\n## Overview\r\n\r\nDoes a few things:\r\n- Renames `enableSyncDefaultUpdates` to\r\n`forceConcurrentByDefaultForTesting`\r\n- Changes the way it's used so it's dead-code eliminated separate from\r\n`allowConcurrentByDefault`\r\n- Deletes a bunch of the gated code\r\n\r\nThe gates that are deleted are unnecessary now. We were keeping them\r\nwhen we originally thought we would come back to being concurrent by\r\ndefault. But we've shifted and now sync-by default is the desired\r\nbehavior long term, so there's no need to keep all these forked tests\r\naround.\r\n\r\nI'll follow up to delete more of the forked behavior if possible.\r\nIdeally we wouldn't need this flag even if we're still using\r\n`allowConcurrentByDefault`."
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/018c58c9c65452cff25aaf1f38f78a9b90d8e5c1",
        "html_url": "https://github.com/facebook/react/commit/018c58c9c65452cff25aaf1f38f78a9b90d8e5c1",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/018c58c9c65452cff25aaf1f38f78a9b90d8e5c1/comments",
        "author": {
            "login": "rickhanlonii",
            "id": 2440089,
            "node_id": "MDQ6VXNlcjI0NDAwODk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2440089?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rickhanlonii",
            "html_url": "https://github.com/rickhanlonii",
            "followers_url": "https://api.github.com/users/rickhanlonii/followers",
            "following_url": "https://api.github.com/users/rickhanlonii/following{/other_user}",
            "gists_url": "https://api.github.com/users/rickhanlonii/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rickhanlonii/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rickhanlonii/subscriptions",
            "organizations_url": "https://api.github.com/users/rickhanlonii/orgs",
            "repos_url": "https://api.github.com/users/rickhanlonii/repos",
            "events_url": "https://api.github.com/users/rickhanlonii/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rickhanlonii/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "ae31d2ea3c3f9f0a87ff2c6193484d5d8786bc5f",
                "url": "https://api.github.com/repos/facebook/react/commits/ae31d2ea3c3f9f0a87ff2c6193484d5d8786bc5f",
                "html_url": "https://github.com/facebook/react/commit/ae31d2ea3c3f9f0a87ff2c6193484d5d8786bc5f"
            }
        ]
    },
    {
        "sha": "b55d31955982851284bb437a5187a6c56e366539",
        "node_id": "C_kwDOAJy2KtoAKGI1NWQzMTk1NTk4Mjg1MTI4NGJiNDM3YTUxODdhNmM1NmUzNjY1Mzk",
        "commit": {
            "author": {
                "name": "Josh Story",
                "email": "story@hey.com",
                "date": "2023-04-10T21:58:44Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2023-04-10T21:58:44Z"
            },
            "message": "Rename HostConfig files to FiberConfig to clarify they are configs fo\u2026 (#26592)\n\npart of https://github.com/facebook/react/pull/26571\r\n\r\nmerging separately to improve tracking of files renames in git\r\n\r\nRename HostConfig files to FiberConfig to clarify they are configs for\r\nFiber and not Fizz/Flight. This better conforms to the naming used in\r\nFlight and now Fizz of `ReactFlightServerConfig` and `ReactFizzConfig`",
            "tree": {
                "sha": "8ea432e872375c651f95e3413d0be9c3bf747b22",
                "url": "https://api.github.com/repos/facebook/react/git/trees/8ea432e872375c651f95e3413d0be9c3bf747b22"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/b55d31955982851284bb437a5187a6c56e366539",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkNIaUCRBK7hj4Ov3rIwAAbxoIAFDoo0Bj9rGlUzYnCFpIW533\n7gVEWfUjcx4SnMAdqC9nKASqJvvRke18bMYfuPl5zOuq4HfSml9Owz2/ByjuraCH\n1zEDfKqf4E64GM4V56PdadCA4iT3rHGw3ivh+7QQW4LCVCyiXBz+1I0uZpMOM20K\nzmiGtIwAV/9d/Y7JaoRoSsmApkZ4Spr8Kio+qaDm5PC7gXT1GuSa2zC4EOUk73BA\nGCIRUxwYXYfampIg9Zpl2lqGL2g5KW8O2tmnCwY6xaKxKV3piTSs8m48sZMoHOZu\ntV1d7ddnLo4tLq33nGKsBgfBGmbdn8KovFqAxnOFxWliDmvOgvNEemq68YCALvY=\n=sWal\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 8ea432e872375c651f95e3413d0be9c3bf747b22\nparent ffb8eaca5966fc7733bd0a23f4055e26d2cc59d7\nauthor Josh Story <story@hey.com> 1681163924 -0700\ncommitter GitHub <noreply@github.com> 1681163924 -0700\n\nRename HostConfig files to FiberConfig to clarify they are configs fo\u2026 (#26592)\n\npart of https://github.com/facebook/react/pull/26571\r\n\r\nmerging separately to improve tracking of files renames in git\r\n\r\nRename HostConfig files to FiberConfig to clarify they are configs for\r\nFiber and not Fizz/Flight. This better conforms to the naming used in\r\nFlight and now Fizz of `ReactFlightServerConfig` and `ReactFizzConfig`"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/b55d31955982851284bb437a5187a6c56e366539",
        "html_url": "https://github.com/facebook/react/commit/b55d31955982851284bb437a5187a6c56e366539",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/b55d31955982851284bb437a5187a6c56e366539/comments",
        "author": {
            "login": "gnoff",
            "id": 2716369,
            "node_id": "MDQ6VXNlcjI3MTYzNjk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2716369?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gnoff",
            "html_url": "https://github.com/gnoff",
            "followers_url": "https://api.github.com/users/gnoff/followers",
            "following_url": "https://api.github.com/users/gnoff/following{/other_user}",
            "gists_url": "https://api.github.com/users/gnoff/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gnoff/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gnoff/subscriptions",
            "organizations_url": "https://api.github.com/users/gnoff/orgs",
            "repos_url": "https://api.github.com/users/gnoff/repos",
            "events_url": "https://api.github.com/users/gnoff/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gnoff/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "ffb8eaca5966fc7733bd0a23f4055e26d2cc59d7",
                "url": "https://api.github.com/repos/facebook/react/commits/ffb8eaca5966fc7733bd0a23f4055e26d2cc59d7",
                "html_url": "https://github.com/facebook/react/commit/ffb8eaca5966fc7733bd0a23f4055e26d2cc59d7"
            }
        ]
    },
    {
        "sha": "790ebc962de573a37e4755207eba91b07a0fa172",
        "node_id": "C_kwDOAJy2KtoAKDc5MGViYzk2MmRlNTczYTM3ZTQ3NTUyMDdlYmE5MWIwN2EwZmExNzI",
        "commit": {
            "author": {
                "name": "Sophie Alpert",
                "email": "git@sophiebits.com",
                "date": "2023-04-05T03:08:33Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2023-04-05T03:08:33Z"
            },
            "message": "Remove no-fallthrough lint suppressions (#26553)\n\nThe lint rule already understands a normal comment. Also a bunch of\r\nthese were unnecessary.",
            "tree": {
                "sha": "8fd7ac44ad469460a3a674fd7cc22649da225367",
                "url": "https://api.github.com/repos/facebook/react/git/trees/8fd7ac44ad469460a3a674fd7cc22649da225367"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/790ebc962de573a37e4755207eba91b07a0fa172",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkLOYxCRBK7hj4Ov3rIwAAQr8IABOgKFE2hEV2yQxovGjDlGlL\ndzhB9z6EW9Yq0LJLyGNa3q1K2qM+ctYNuNbUVzyxsz/kaqKNxyknVFgcVhqmy+lm\n+G4jP1APQHaOXafXAVtcPDcff/oXff1ZTddbSrvCB7qAEin4ecY8yMmQ+7ywP+7J\ns7mtiDB0S77Qcmi/s2AqcSyWOdVcxKjtFbcc30P+VOzZ38Lb1CAXNLp6rmayUKLk\n9hgrliSOac8FtDTmvRbgmYDEOzObHnlzG6Xex6lNz3aP+e6426qArFGZhQnc86kb\ncOAMSamWKnklbOSQex1bfQWGevDhEFIeZiAYFoQqs/fKma2PchBLCERu1VL31Fc=\n=KWii\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 8fd7ac44ad469460a3a674fd7cc22649da225367\nparent c15579631ff4d387401d57d9006d849ca1d5cd71\nauthor Sophie Alpert <git@sophiebits.com> 1680664113 -0700\ncommitter GitHub <noreply@github.com> 1680664113 -0700\n\nRemove no-fallthrough lint suppressions (#26553)\n\nThe lint rule already understands a normal comment. Also a bunch of\r\nthese were unnecessary."
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/790ebc962de573a37e4755207eba91b07a0fa172",
        "html_url": "https://github.com/facebook/react/commit/790ebc962de573a37e4755207eba91b07a0fa172",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/790ebc962de573a37e4755207eba91b07a0fa172/comments",
        "author": {
            "login": "sophiebits",
            "id": 6820,
            "node_id": "MDQ6VXNlcjY4MjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6820?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sophiebits",
            "html_url": "https://github.com/sophiebits",
            "followers_url": "https://api.github.com/users/sophiebits/followers",
            "following_url": "https://api.github.com/users/sophiebits/following{/other_user}",
            "gists_url": "https://api.github.com/users/sophiebits/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sophiebits/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sophiebits/subscriptions",
            "organizations_url": "https://api.github.com/users/sophiebits/orgs",
            "repos_url": "https://api.github.com/users/sophiebits/repos",
            "events_url": "https://api.github.com/users/sophiebits/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sophiebits/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "c15579631ff4d387401d57d9006d849ca1d5cd71",
                "url": "https://api.github.com/repos/facebook/react/commits/c15579631ff4d387401d57d9006d849ca1d5cd71",
                "html_url": "https://github.com/facebook/react/commit/c15579631ff4d387401d57d9006d849ca1d5cd71"
            }
        ]
    },
    {
        "sha": "da94e8b24a3f31a3e805f9bf6bba73055aad9d41",
        "node_id": "C_kwDOAJy2KtoAKGRhOTRlOGIyNGEzZjMxYTNlODA1ZjliZjZiYmE3MzA1NWFhZDlkNDE",
        "commit": {
            "author": {
                "name": "Jan Kassens",
                "email": "jkassens@meta.com",
                "date": "2023-04-04T14:08:14Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2023-04-04T14:08:14Z"
            },
            "message": "Revert \"Cleanup enableSyncDefaultUpdate flag (#26236)\" (#26528)\n\nThis reverts commit b2ae9ddb3b497d16a7c27c051da1827d08871138.\r\n\r\nWhile the feature flag is fully rolled out, these tests are also testing\r\nbehavior set with an unstable flag on root, which for now we want to\r\npreserve.\r\n\r\nNot sure if there's a better way then adding a dynamic feature flag to\r\nthe www build?",
            "tree": {
                "sha": "be6f16cf4364da19f1fbc2ecde1b106554582717",
                "url": "https://api.github.com/repos/facebook/react/git/trees/be6f16cf4364da19f1fbc2ecde1b106554582717"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/da94e8b24a3f31a3e805f9bf6bba73055aad9d41",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkLC9OCRBK7hj4Ov3rIwAAulYIAK8hzTHPAjGmkpBrkI+XeduK\nc/PYiH8+bWbu47AldMFBCQYvrwa3E5UF8/7NPWV3zJ1yQ7ECkkvu0czIeMEQ6w3/\nTfpv++ZUrcPBYAWMSbR1CHBAnBZ/kEb2TuKEjgUoFTDk3dh9l56zWgZhTBAdnpVG\nq83vf4SbwvIk19QvMhNUplJCMX3oOqo7wmsUlkOCz7XvazpK7i3hO04cohxrc1Fq\nBXvS3ryGsLveDHDfrjcv6U7jvHaezJy6aRRN7LCkK6RvBlW2f2BYGIaQrnHlXIOa\nqMq3MsykkI4bvuY8Vn4gUsvAkW5IH9Z+Bi7G2buMSBdgSEBuQfCe/8eR7ahS5Cc=\n=xEaD\n-----END PGP SIGNATURE-----\n",
                "payload": "tree be6f16cf4364da19f1fbc2ecde1b106554582717\nparent 0700dd50bda98f5ee86f2e3adfe5e9906ed1e8e3\nauthor Jan Kassens <jkassens@meta.com> 1680617294 -0400\ncommitter GitHub <noreply@github.com> 1680617294 -0400\n\nRevert \"Cleanup enableSyncDefaultUpdate flag (#26236)\" (#26528)\n\nThis reverts commit b2ae9ddb3b497d16a7c27c051da1827d08871138.\r\n\r\nWhile the feature flag is fully rolled out, these tests are also testing\r\nbehavior set with an unstable flag on root, which for now we want to\r\npreserve.\r\n\r\nNot sure if there's a better way then adding a dynamic feature flag to\r\nthe www build?"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/da94e8b24a3f31a3e805f9bf6bba73055aad9d41",
        "html_url": "https://github.com/facebook/react/commit/da94e8b24a3f31a3e805f9bf6bba73055aad9d41",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/da94e8b24a3f31a3e805f9bf6bba73055aad9d41/comments",
        "author": {
            "login": "kassens",
            "id": 11849,
            "node_id": "MDQ6VXNlcjExODQ5",
            "avatar_url": "https://avatars.githubusercontent.com/u/11849?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kassens",
            "html_url": "https://github.com/kassens",
            "followers_url": "https://api.github.com/users/kassens/followers",
            "following_url": "https://api.github.com/users/kassens/following{/other_user}",
            "gists_url": "https://api.github.com/users/kassens/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kassens/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kassens/subscriptions",
            "organizations_url": "https://api.github.com/users/kassens/orgs",
            "repos_url": "https://api.github.com/users/kassens/repos",
            "events_url": "https://api.github.com/users/kassens/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kassens/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "0700dd50bda98f5ee86f2e3adfe5e9906ed1e8e3",
                "url": "https://api.github.com/repos/facebook/react/commits/0700dd50bda98f5ee86f2e3adfe5e9906ed1e8e3",
                "html_url": "https://github.com/facebook/react/commit/0700dd50bda98f5ee86f2e3adfe5e9906ed1e8e3"
            }
        ]
    },
    {
        "sha": "afea1d0c536e0336735b0ea5c74f635527b65785",
        "node_id": "C_kwDOAJy2KtoAKGFmZWExZDBjNTM2ZTAzMzY3MzViMGVhNWM3NGY2MzU1MjdiNjU3ODU",
        "commit": {
            "author": {
                "name": "Jan Kassens",
                "email": "jkassens@meta.com",
                "date": "2023-03-27T11:43:04Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2023-03-27T11:43:04Z"
            },
            "message": "[flow] make Flow suppressions explicit on the error (#26487)\n\nAdded an explicit type to all $FlowFixMe suppressions to reduce\r\nover-suppressions of new errors that might be caused on the same lines.\r\n\r\nAlso removes suppressions that aren't used (e.g. in a `@noflow` file as\r\nthey're purely misleading)\r\n\r\nTest Plan:\r\nyarn flow-ci",
            "tree": {
                "sha": "1ee21a34b28f074192767cbb742dca67337348f2",
                "url": "https://api.github.com/repos/facebook/react/git/trees/1ee21a34b28f074192767cbb742dca67337348f2"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/afea1d0c536e0336735b0ea5c74f635527b65785",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkIYFICRBK7hj4Ov3rIwAAutsIAIYChUoaAQA3VwAAq/gSzgrw\nxYMhjzaR/nbkz4TdFBSPbxT7nAuRuOnYOyGntIzJGZZ5g0/WYgAH/AUKV3Ywpvea\nVQ25JCH771hx5qfcuAgYlt03n6EgJyOjwtYPDnXwMOiwxVET5U9A3OBT6uo3y1hP\n3ZYCulwzv2fQTdgwWFPxRvvOANcQhuW3RomgpVbMLgGvAlre1sPy9tnmFBtFO0T7\nIK9x+4olMwuCdbUbH65j1Ek4Hr5l4EafpQujXoS+XFRAhTG/F4OzHFHavapYRL9k\nmsq9csQy5kB6dH7mvHGJgUFmTaEiadwb1UDDqXMTY62sfFUxD1gglxQLqjZ1g/A=\n=LNFh\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 1ee21a34b28f074192767cbb742dca67337348f2\nparent 768f965de2d4c6be7f688562ef02382478c82e5b\nauthor Jan Kassens <jkassens@meta.com> 1679917384 +0200\ncommitter GitHub <noreply@github.com> 1679917384 +0200\n\n[flow] make Flow suppressions explicit on the error (#26487)\n\nAdded an explicit type to all $FlowFixMe suppressions to reduce\r\nover-suppressions of new errors that might be caused on the same lines.\r\n\r\nAlso removes suppressions that aren't used (e.g. in a `@noflow` file as\r\nthey're purely misleading)\r\n\r\nTest Plan:\r\nyarn flow-ci"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/afea1d0c536e0336735b0ea5c74f635527b65785",
        "html_url": "https://github.com/facebook/react/commit/afea1d0c536e0336735b0ea5c74f635527b65785",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/afea1d0c536e0336735b0ea5c74f635527b65785/comments",
        "author": {
            "login": "kassens",
            "id": 11849,
            "node_id": "MDQ6VXNlcjExODQ5",
            "avatar_url": "https://avatars.githubusercontent.com/u/11849?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kassens",
            "html_url": "https://github.com/kassens",
            "followers_url": "https://api.github.com/users/kassens/followers",
            "following_url": "https://api.github.com/users/kassens/following{/other_user}",
            "gists_url": "https://api.github.com/users/kassens/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kassens/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kassens/subscriptions",
            "organizations_url": "https://api.github.com/users/kassens/orgs",
            "repos_url": "https://api.github.com/users/kassens/repos",
            "events_url": "https://api.github.com/users/kassens/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kassens/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "768f965de2d4c6be7f688562ef02382478c82e5b",
                "url": "https://api.github.com/repos/facebook/react/commits/768f965de2d4c6be7f688562ef02382478c82e5b",
                "html_url": "https://github.com/facebook/react/commit/768f965de2d4c6be7f688562ef02382478c82e5b"
            }
        ]
    },
    {
        "sha": "d310d654a7c7aab6c8213da84ef36dfba82711b0",
        "node_id": "C_kwDOAJy2KtoAKGQzMTBkNjU0YTdjN2FhYjZjODIxM2RhODRlZjM2ZGZiYTgyNzExYjA",
        "commit": {
            "author": {
                "name": "Sebastian Markb\u00e5ge",
                "email": "sebastian@calyptus.eu",
                "date": "2023-03-15T01:00:22Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2023-03-15T01:00:22Z"
            },
            "message": "Avoid meta programming to initialize functions in module scope  (#26388)\n\nI'm trying to get rid of all meta programming in the module scope so\r\nthat closure can do a better job figuring out cyclic dependencies and\r\nability to reorder.\r\n\r\nThis is converting a lot of the patterns that assign functions\r\nconditionally to using function declarations instead.\r\n\r\n```\r\nlet fn;\r\nif (__DEV__) {\r\n  fn = function() {\r\n    ...\r\n  };\r\n}\r\n```\r\n->\r\n```\r\nfunction fn() {\r\n  if (__DEV__) {\r\n    ...\r\n  }\r\n}\r\n```",
            "tree": {
                "sha": "a04ec0a06e9ff42ba95ecd9e815cf6c729e2d053",
                "url": "https://api.github.com/repos/facebook/react/git/trees/a04ec0a06e9ff42ba95ecd9e815cf6c729e2d053"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/d310d654a7c7aab6c8213da84ef36dfba82711b0",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkERimCRBK7hj4Ov3rIwAAGC8IADpurqy2T2UBwoV5Y8E4rD+L\nL4VrUc2+vtgSeyo+qiUYGKQgZu+z0oq4TomIFnuubTRWeo5u7wgYuOgsA16d580I\n2VYaQfe8CuSCnwh2wNERGTzZHmVYU1MDzddM9Wo5ZePnldfpoGtigw9qPSpy3Jjc\nNgXtHSwauhReXWkZi8M2SPf3TViiQopH2vwxfhAtB4TJZBM7D6t9DBwPLAkR2b79\nHJQfSHSC4ilGxiVB/y8KElP9R5IiEjONLYqNKv7yWs+FXQP5v0v6Dm1qzUCi3MB2\nOg3si3DaHxkvEnBBcH7k1QZO9TmJ10mtrudinnwDi1kp/hWuEs6Z6rALwKekezY=\n=smgD\n-----END PGP SIGNATURE-----\n",
                "payload": "tree a04ec0a06e9ff42ba95ecd9e815cf6c729e2d053\nparent 21aee59e454a875f872ca666d6eb2694425e52af\nauthor Sebastian Markb\u00e5ge <sebastian@calyptus.eu> 1678842022 -0400\ncommitter GitHub <noreply@github.com> 1678842022 -0400\n\nAvoid meta programming to initialize functions in module scope  (#26388)\n\nI'm trying to get rid of all meta programming in the module scope so\r\nthat closure can do a better job figuring out cyclic dependencies and\r\nability to reorder.\r\n\r\nThis is converting a lot of the patterns that assign functions\r\nconditionally to using function declarations instead.\r\n\r\n```\r\nlet fn;\r\nif (__DEV__) {\r\n  fn = function() {\r\n    ...\r\n  };\r\n}\r\n```\r\n->\r\n```\r\nfunction fn() {\r\n  if (__DEV__) {\r\n    ...\r\n  }\r\n}\r\n```"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/d310d654a7c7aab6c8213da84ef36dfba82711b0",
        "html_url": "https://github.com/facebook/react/commit/d310d654a7c7aab6c8213da84ef36dfba82711b0",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/d310d654a7c7aab6c8213da84ef36dfba82711b0/comments",
        "author": {
            "login": "sebmarkbage",
            "id": 63648,
            "node_id": "MDQ6VXNlcjYzNjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sebmarkbage",
            "html_url": "https://github.com/sebmarkbage",
            "followers_url": "https://api.github.com/users/sebmarkbage/followers",
            "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
            "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
            "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
            "repos_url": "https://api.github.com/users/sebmarkbage/repos",
            "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "21aee59e454a875f872ca666d6eb2694425e52af",
                "url": "https://api.github.com/repos/facebook/react/commits/21aee59e454a875f872ca666d6eb2694425e52af",
                "html_url": "https://github.com/facebook/react/commit/21aee59e454a875f872ca666d6eb2694425e52af"
            }
        ]
    },
    {
        "sha": "b2ae9ddb3b497d16a7c27c051da1827d08871138",
        "node_id": "C_kwDOAJy2KtoAKGIyYWU5ZGRiM2I0OTdkMTZhN2MyN2MwNTFkYTE4MjdkMDg4NzExMzg",
        "commit": {
            "author": {
                "name": "Jan Kassens",
                "email": "jkassens@meta.com",
                "date": "2023-02-27T19:04:02Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2023-02-27T19:04:02Z"
            },
            "message": "Cleanup enableSyncDefaultUpdate flag (#26236)\n\nThis feature flag is enabled everywhere.",
            "tree": {
                "sha": "f573295b5167d4a548be8ff121590911e0299b4b",
                "url": "https://api.github.com/repos/facebook/react/git/trees/f573295b5167d4a548be8ff121590911e0299b4b"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/b2ae9ddb3b497d16a7c27c051da1827d08871138",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJj/P6iCRBK7hj4Ov3rIwAAUc0IAIhhtRb0LivDybC7dNIfl5tY\nM2msjy25fRLdGkUobb21UHCXiZviqwaeYCt+faHCr+027yoV272L6AuxD6Mfid3+\ny2RQQSA6x6LLA7I0vXMroYg2rw1RwNohzp+HI4UaePxjNwhbKv35rc9kIkOW+Ehh\nB50NnjUo1YwDPuQ3Os3Vbm0mstYrbpkAnBy2gG5UO+ELhkFCa+aBsuSykFoc2E8B\nI/cMBm5+/peOkCBhAFypFofdbM3r3kDPo3tD8YsJ+8QFVc2IOzxPtEjfdPbPVQjh\niv6VpyvCYFPClfKVhVHlpqZ+kK32X3N0OioHvR8xUqPzMS9b9Qd8gVGLtnPkjYM=\n=ra3n\n-----END PGP SIGNATURE-----\n",
                "payload": "tree f573295b5167d4a548be8ff121590911e0299b4b\nparent 6ff1733e63fdb948ae973a713741b4526102c73c\nauthor Jan Kassens <jkassens@meta.com> 1677524642 -0500\ncommitter GitHub <noreply@github.com> 1677524642 -0500\n\nCleanup enableSyncDefaultUpdate flag (#26236)\n\nThis feature flag is enabled everywhere."
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/b2ae9ddb3b497d16a7c27c051da1827d08871138",
        "html_url": "https://github.com/facebook/react/commit/b2ae9ddb3b497d16a7c27c051da1827d08871138",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/b2ae9ddb3b497d16a7c27c051da1827d08871138/comments",
        "author": {
            "login": "kassens",
            "id": 11849,
            "node_id": "MDQ6VXNlcjExODQ5",
            "avatar_url": "https://avatars.githubusercontent.com/u/11849?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kassens",
            "html_url": "https://github.com/kassens",
            "followers_url": "https://api.github.com/users/kassens/followers",
            "following_url": "https://api.github.com/users/kassens/following{/other_user}",
            "gists_url": "https://api.github.com/users/kassens/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kassens/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kassens/subscriptions",
            "organizations_url": "https://api.github.com/users/kassens/orgs",
            "repos_url": "https://api.github.com/users/kassens/repos",
            "events_url": "https://api.github.com/users/kassens/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kassens/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "6ff1733e63fdb948ae973a713741b4526102c73c",
                "url": "https://api.github.com/repos/facebook/react/commits/6ff1733e63fdb948ae973a713741b4526102c73c",
                "html_url": "https://github.com/facebook/react/commit/6ff1733e63fdb948ae973a713741b4526102c73c"
            }
        ]
    },
    {
        "sha": "6396b664118442f3c2eae7bf13732fcb27bda98f",
        "node_id": "C_kwDOAJy2KtoAKDYzOTZiNjY0MTE4NDQyZjNjMmVhZTdiZjEzNzMyZmNiMjdiZGE5OGY",
        "commit": {
            "author": {
                "name": "Josh Story",
                "email": "story@hey.com",
                "date": "2023-02-10T06:59:29Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2023-02-10T06:59:29Z"
            },
            "message": "Model Float on Hoistables semantics (#26106)\n\n## Hoistables\r\n\r\nIn the original implementation of Float, all hoisted elements were\r\ntreated like Resources. They had deduplication semantics and hydrated\r\nbased on a key. This made certain kinds of hoists very challenging such\r\nas sequences of meta tags for `og:image:...` metadata. The reason is\r\neach tag along is not dedupable based on only it's intrinsic properties.\r\ntwo identical tags may need to be included and hoisted together with\r\npreceding meta tags that describe a semantic object with a linear set of\r\nhtml nodes.\r\n\r\nIt was clear that the concept of Browser Resources (stylesheets /\r\nscripts / preloads) did not extend universally to all hositable tags\r\n(title, meta, other links, etc...)\r\n\r\nAdditionally while Resources benefit from deduping they suffer an\r\ninability to update because while we may have multiple rendered elements\r\nthat refer to a single Resource it isn't unambiguous which element owns\r\nthe props on the underlying resource. We could try merging props, but\r\nthat is still really hard to reason about for authors. Instead we\r\nrestrict Resource semantics to freezing the props at the time the\r\nResource is first constructed and warn if you attempt to render the same\r\nResource with different props via another rendered element or by\r\nupdating an existing element for that Resource.\r\n\r\nThis lack of updating restriction is however way more extreme than\r\nnecessary for instances that get hoisted but otherwise do not dedupe;\r\nwhere there is a well defined DOM instance for each rendered element. We\r\nshould be able to update props on these instances.\r\n\r\nHoistable is a generalization of what Float tries to model for hoisting.\r\nInstead of assuming every hoistable element is a Resource we now have\r\ntwo distinct categories, hoistable elements and hoistable resources. As\r\none might guess the former has semantics that match regular Host\r\nComponents except the placement of the node is usually in the <head>.\r\nThe latter continues to behave how the original implementation of\r\nHostResource behaved with the first iteration of Float\r\n\r\n### Hoistable Element\r\nOn the server hoistable elements render just like regular tags except\r\nthe output is stored in special queues that can be emitted in the stream\r\nearlier than they otherwise would be if rendered in place. This also\r\nallow for instance the ability to render a hoistable before even\r\nrendering the <html> tag because the queues for hoistable elements won't\r\nflush until after we have flushed the preamble (`<DOCTYPE\r\nhtml><html><head>`).\r\n\r\nOn the client, hoistable elements largely operate like HostComponents.\r\nThe most notable difference is in the hydration strategy. If we are\r\nhydrating and encounter a hoistable element we will look for all tags in\r\nthe document that could potentially be a match and we check whether the\r\nattributes match the props for this particular instance. We also do this\r\nin the commit phase rather than the render phase. The reason hydration\r\ncan be done for HostComponents in render is the instance will be removed\r\nfrom the document if hydration fails so mutating it in render is safe.\r\nFor hoistables the nodes are not in a hydration boundary (Root or\r\nSuspenseBoundary at time of writing) and thus if hydration fails and we\r\nmay have an instance marked as bound to some Fiber when that Fiber never\r\ncommits. Moving the hydration matching to commit ensures we will always\r\nsucceed in pairing the hoisted DOM instance with a Fiber that has\r\ncommitted.\r\n\r\n### Hoistable Resource\r\nOn the server and client the semantics of Resources are largely the same\r\nthey just don't apply to title, meta, and most link tags anymore.\r\nResources hoist and dedupe via an `href` key and are ref counted. In a\r\nfuture update we will add a garbage collector so we can clean up\r\nResources that no longer have any references\r\n\r\n## `<style>` support\r\nIn earlier implementations there was no support for <style> tags. This\r\nPR adds support for treating `<style href=\"...\"\r\nprecedence=\"...\">...</style>` as a Resource analagous to `<link\r\nrel=\"stylesheet\" href=\"...\" precedence=\"...\" />`\r\n\r\nIt may seem odd at first to require an href to get Resource semantics\r\nfor a style tag. The rationale is that these are for inlining of actual\r\nexternal stylesheets as an optimization and for URI like scoping of\r\ninline styles for css-in-js libraries. The href indicates that the key\r\nspace for `<style>` and `<link rel=\"stylesheet\" />` Resources is shared.\r\nand the precedence is there to allow for interleaving of both kinds of\r\nStyle resources. This is an advanced feature that we do not expect most\r\napp developers to use directly but will be quite handy for various\r\nstyling libraries and for folks who want to inline as much as possible\r\nonce Fizz supports this feature.\r\n\r\n## refactor notes\r\n* HostResource Fiber type is renamed HostHoistable to reflect the\r\ngeneralization of the concept\r\n* The Resource object representation is modified to reduce hidden class\r\nchecks and to use less memory overall\r\n* The thing that distinguishes a resource from an element is whether the\r\nFiber has a memoizedState. If it does, it will use resource semantics,\r\notherwise element semantics\r\n* The time complexity of matching hositable elements for hydration\r\nshould be improved",
            "tree": {
                "sha": "1083b9b48242248f5f9c75bba4ff2aaa48029d81",
                "url": "https://api.github.com/repos/facebook/react/git/trees/1083b9b48242248f5f9c75bba4ff2aaa48029d81"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/6396b664118442f3c2eae7bf13732fcb27bda98f",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJj5etRCRBK7hj4Ov3rIwAAGKcIACmB3QzJgEIEkrwGUpdmkbOq\nA5fmrq1x2rsYMp9bMx+7yni0dhp18kMC662RpHgtvf7QOSSrLReXoLa+etoyE/DK\n/586Plrpi4SFxUei/24ZESR3bIqwmrvcwvd4izKp9ru5cRtjNio/hpPYGlJLpAqi\nsZV3pYLMYgWeXwv5GP8ZM7ldo8OJLSTWzJ94WZ+cHg56v1U8yeH5heGyGNppFQUH\nlv3Zk8YSgNoptTiX8K3sexbp7JlvKCVROA+fBfU94aQQLIt7ww/JXWKR9YMF2Vh0\nhsHhtTDUqT7p15B3RSbybNdxB4GjiqXNitJqV2EiPjgEMABVeabsIVIKWzH1cQI=\n=X8rI\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 1083b9b48242248f5f9c75bba4ff2aaa48029d81\nparent ef9f6e77b8ef968eee659ae797da4bdc07bbbde3\nauthor Josh Story <story@hey.com> 1676012369 -0800\ncommitter GitHub <noreply@github.com> 1676012369 -0800\n\nModel Float on Hoistables semantics (#26106)\n\n## Hoistables\r\n\r\nIn the original implementation of Float, all hoisted elements were\r\ntreated like Resources. They had deduplication semantics and hydrated\r\nbased on a key. This made certain kinds of hoists very challenging such\r\nas sequences of meta tags for `og:image:...` metadata. The reason is\r\neach tag along is not dedupable based on only it's intrinsic properties.\r\ntwo identical tags may need to be included and hoisted together with\r\npreceding meta tags that describe a semantic object with a linear set of\r\nhtml nodes.\r\n\r\nIt was clear that the concept of Browser Resources (stylesheets /\r\nscripts / preloads) did not extend universally to all hositable tags\r\n(title, meta, other links, etc...)\r\n\r\nAdditionally while Resources benefit from deduping they suffer an\r\ninability to update because while we may have multiple rendered elements\r\nthat refer to a single Resource it isn't unambiguous which element owns\r\nthe props on the underlying resource. We could try merging props, but\r\nthat is still really hard to reason about for authors. Instead we\r\nrestrict Resource semantics to freezing the props at the time the\r\nResource is first constructed and warn if you attempt to render the same\r\nResource with different props via another rendered element or by\r\nupdating an existing element for that Resource.\r\n\r\nThis lack of updating restriction is however way more extreme than\r\nnecessary for instances that get hoisted but otherwise do not dedupe;\r\nwhere there is a well defined DOM instance for each rendered element. We\r\nshould be able to update props on these instances.\r\n\r\nHoistable is a generalization of what Float tries to model for hoisting.\r\nInstead of assuming every hoistable element is a Resource we now have\r\ntwo distinct categories, hoistable elements and hoistable resources. As\r\none might guess the former has semantics that match regular Host\r\nComponents except the placement of the node is usually in the <head>.\r\nThe latter continues to behave how the original implementation of\r\nHostResource behaved with the first iteration of Float\r\n\r\n### Hoistable Element\r\nOn the server hoistable elements render just like regular tags except\r\nthe output is stored in special queues that can be emitted in the stream\r\nearlier than they otherwise would be if rendered in place. This also\r\nallow for instance the ability to render a hoistable before even\r\nrendering the <html> tag because the queues for hoistable elements won't\r\nflush until after we have flushed the preamble (`<DOCTYPE\r\nhtml><html><head>`).\r\n\r\nOn the client, hoistable elements largely operate like HostComponents.\r\nThe most notable difference is in the hydration strategy. If we are\r\nhydrating and encounter a hoistable element we will look for all tags in\r\nthe document that could potentially be a match and we check whether the\r\nattributes match the props for this particular instance. We also do this\r\nin the commit phase rather than the render phase. The reason hydration\r\ncan be done for HostComponents in render is the instance will be removed\r\nfrom the document if hydration fails so mutating it in render is safe.\r\nFor hoistables the nodes are not in a hydration boundary (Root or\r\nSuspenseBoundary at time of writing) and thus if hydration fails and we\r\nmay have an instance marked as bound to some Fiber when that Fiber never\r\ncommits. Moving the hydration matching to commit ensures we will always\r\nsucceed in pairing the hoisted DOM instance with a Fiber that has\r\ncommitted.\r\n\r\n### Hoistable Resource\r\nOn the server and client the semantics of Resources are largely the same\r\nthey just don't apply to title, meta, and most link tags anymore.\r\nResources hoist and dedupe via an `href` key and are ref counted. In a\r\nfuture update we will add a garbage collector so we can clean up\r\nResources that no longer have any references\r\n\r\n## `<style>` support\r\nIn earlier implementations there was no support for <style> tags. This\r\nPR adds support for treating `<style href=\"...\"\r\nprecedence=\"...\">...</style>` as a Resource analagous to `<link\r\nrel=\"stylesheet\" href=\"...\" precedence=\"...\" />`\r\n\r\nIt may seem odd at first to require an href to get Resource semantics\r\nfor a style tag. The rationale is that these are for inlining of actual\r\nexternal stylesheets as an optimization and for URI like scoping of\r\ninline styles for css-in-js libraries. The href indicates that the key\r\nspace for `<style>` and `<link rel=\"stylesheet\" />` Resources is shared.\r\nand the precedence is there to allow for interleaving of both kinds of\r\nStyle resources. This is an advanced feature that we do not expect most\r\napp developers to use directly but will be quite handy for various\r\nstyling libraries and for folks who want to inline as much as possible\r\nonce Fizz supports this feature.\r\n\r\n## refactor notes\r\n* HostResource Fiber type is renamed HostHoistable to reflect the\r\ngeneralization of the concept\r\n* The Resource object representation is modified to reduce hidden class\r\nchecks and to use less memory overall\r\n* The thing that distinguishes a resource from an element is whether the\r\nFiber has a memoizedState. If it does, it will use resource semantics,\r\notherwise element semantics\r\n* The time complexity of matching hositable elements for hydration\r\nshould be improved"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/6396b664118442f3c2eae7bf13732fcb27bda98f",
        "html_url": "https://github.com/facebook/react/commit/6396b664118442f3c2eae7bf13732fcb27bda98f",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/6396b664118442f3c2eae7bf13732fcb27bda98f/comments",
        "author": {
            "login": "gnoff",
            "id": 2716369,
            "node_id": "MDQ6VXNlcjI3MTYzNjk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2716369?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gnoff",
            "html_url": "https://github.com/gnoff",
            "followers_url": "https://api.github.com/users/gnoff/followers",
            "following_url": "https://api.github.com/users/gnoff/following{/other_user}",
            "gists_url": "https://api.github.com/users/gnoff/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gnoff/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gnoff/subscriptions",
            "organizations_url": "https://api.github.com/users/gnoff/orgs",
            "repos_url": "https://api.github.com/users/gnoff/repos",
            "events_url": "https://api.github.com/users/gnoff/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gnoff/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "ef9f6e77b8ef968eee659ae797da4bdc07bbbde3",
                "url": "https://api.github.com/repos/facebook/react/commits/ef9f6e77b8ef968eee659ae797da4bdc07bbbde3",
                "html_url": "https://github.com/facebook/react/commit/ef9f6e77b8ef968eee659ae797da4bdc07bbbde3"
            }
        ]
    },
    {
        "sha": "6b3083266686f62b29462d32de75c6e71f7ba3e3",
        "node_id": "C_kwDOAJy2KtoAKDZiMzA4MzI2NjY4NmY2MmIyOTQ2MmQzMmRlNzVjNmU3MWY3YmEzZTM",
        "commit": {
            "author": {
                "name": "Jan Kassens",
                "email": "jkassens@meta.com",
                "date": "2023-01-31T13:25:05Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2023-01-31T13:25:05Z"
            },
            "message": "Upgrade prettier (#26081)\n\nThe old version of prettier we were using didn't support the Flow syntax\r\nto access properties in a type using `SomeType['prop']`. This updates\r\n`prettier` and `rollup-plugin-prettier` to the latest versions.\r\n\r\nI added the prettier config `arrowParens: \"avoid\"` to reduce the diff\r\nsize as the default has changed in Prettier 2.0. The largest amount of\r\nchanges comes from function expressions now having a space. This doesn't\r\nhave an option to preserve the old behavior, so we have to update this.",
            "tree": {
                "sha": "7dc47a4b08da2c7ad8cc3dd28d4a5685853fb08a",
                "url": "https://api.github.com/repos/facebook/react/git/trees/7dc47a4b08da2c7ad8cc3dd28d4a5685853fb08a"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/6b3083266686f62b29462d32de75c6e71f7ba3e3",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJj2RaxCRBK7hj4Ov3rIwAAP9EIAAkR8v0Ca1SqDXyt7VOI3D9y\nYfSiWgXymi4x81mq5Q1gmUz2T5tBqM/LeUznlDwwDDCE853z3iCxP75btPn5937G\nOnp7S9AGW/ExF0bWcfb4MKnUHm42XGBMWZ1jPwaPgdgRmww0gFinfladZyZJL5Xt\nVKbHJI4yGx4MqrMrE3MXb8ApStId1j11BOZ+kZB0r6rx2S8zfbNcV/k9l2Ytoeve\nFEwMTsWoXf5gTXBL5OPe2HxMZZ5reh1GEFTNYAFmpEgapWu2sLP3MccEgZ4liII7\nEIu81LsuAkmvGY9YaF+EKw30STfb5vMWACN/22qZMjIIzx/mj5Ux3Tr3HpeJ8sM=\n=TIE7\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 7dc47a4b08da2c7ad8cc3dd28d4a5685853fb08a\nparent 1f5ce59dd7b6869b1a17ede65aa301002ef31d4b\nauthor Jan Kassens <jkassens@meta.com> 1675171505 -0500\ncommitter GitHub <noreply@github.com> 1675171505 -0500\n\nUpgrade prettier (#26081)\n\nThe old version of prettier we were using didn't support the Flow syntax\r\nto access properties in a type using `SomeType['prop']`. This updates\r\n`prettier` and `rollup-plugin-prettier` to the latest versions.\r\n\r\nI added the prettier config `arrowParens: \"avoid\"` to reduce the diff\r\nsize as the default has changed in Prettier 2.0. The largest amount of\r\nchanges comes from function expressions now having a space. This doesn't\r\nhave an option to preserve the old behavior, so we have to update this."
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/6b3083266686f62b29462d32de75c6e71f7ba3e3",
        "html_url": "https://github.com/facebook/react/commit/6b3083266686f62b29462d32de75c6e71f7ba3e3",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/6b3083266686f62b29462d32de75c6e71f7ba3e3/comments",
        "author": {
            "login": "kassens",
            "id": 11849,
            "node_id": "MDQ6VXNlcjExODQ5",
            "avatar_url": "https://avatars.githubusercontent.com/u/11849?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kassens",
            "html_url": "https://github.com/kassens",
            "followers_url": "https://api.github.com/users/kassens/followers",
            "following_url": "https://api.github.com/users/kassens/following{/other_user}",
            "gists_url": "https://api.github.com/users/kassens/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kassens/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kassens/subscriptions",
            "organizations_url": "https://api.github.com/users/kassens/orgs",
            "repos_url": "https://api.github.com/users/kassens/repos",
            "events_url": "https://api.github.com/users/kassens/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kassens/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "1f5ce59dd7b6869b1a17ede65aa301002ef31d4b",
                "url": "https://api.github.com/repos/facebook/react/commits/1f5ce59dd7b6869b1a17ede65aa301002ef31d4b",
                "html_url": "https://github.com/facebook/react/commit/1f5ce59dd7b6869b1a17ede65aa301002ef31d4b"
            }
        ]
    },
    {
        "sha": "0b4f443020af386f2b48c47c074cb504ed672dc8",
        "node_id": "C_kwDOAJy2KtoAKDBiNGY0NDMwMjBhZjM4NmYyYjQ4YzQ3YzA3NGNiNTA0ZWQ2NzJkYzg",
        "commit": {
            "author": {
                "name": "Jan Kassens",
                "email": "jkassens@meta.com",
                "date": "2023-01-09T20:46:48Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2023-01-09T20:46:48Z"
            },
            "message": "[flow] enable enforce_local_inference_annotations (#25921)\n\nThis setting is an incremental path to the next Flow version enforcing\r\ntype annotations on most functions (except some inline callbacks).\r\n\r\nUsed\r\n```\r\nnode_modules/.bin/flow codemod annotate-functions-and-classes --write .\r\n```\r\nto add a majority of the types with some hand cleanup when for large\r\ninferred objects that should just be `Fiber` or weird constructs\r\nincluding `any`.\r\n\r\nSuppressed the remaining issues.\r\n\r\nBuilds on #25918",
            "tree": {
                "sha": "933097243c01894d3320162b5d950ce032785dfc",
                "url": "https://api.github.com/repos/facebook/react/git/trees/933097243c01894d3320162b5d950ce032785dfc"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/0b4f443020af386f2b48c47c074cb504ed672dc8",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjvH04CRBK7hj4Ov3rIwAAXrMIAD6vvQQxlwXtV1V8Jy/pPbZI\n31loyEkVrWVJWWk6N2jLZJGHUNrNw8lXPIEORDpXZ8jd8ZoRliQORW6xMIVqU7Od\nF0n6mJ7Ti2WlkzMuYUSgAN/oY07J6ycEubQNfeGE3kaMYw7YyaxRV/P6XhKJF+eK\nzne7OSGf/Jm5FIlcTYfXbvkKM8L+BANttbup6aKLuAxlT4cNwuATlYxhg9HftjAU\nXtgKo+41dh07DWKMt7XE+iHUR42inKtvR3eVAGYHbPy/H/aASKyLIoU8ecODkRdL\nVgONeo6HnYKvW/FUd4ce1ZQ5FoTreBEf3Sk/EQAncSRO9yut9zuSXsyvCiVyE2c=\n=zVuP\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 933097243c01894d3320162b5d950ce032785dfc\nparent 0b974418c9a56f6c560298560265dcf4b65784bc\nauthor Jan Kassens <jkassens@meta.com> 1673297208 -0500\ncommitter GitHub <noreply@github.com> 1673297208 -0500\n\n[flow] enable enforce_local_inference_annotations (#25921)\n\nThis setting is an incremental path to the next Flow version enforcing\r\ntype annotations on most functions (except some inline callbacks).\r\n\r\nUsed\r\n```\r\nnode_modules/.bin/flow codemod annotate-functions-and-classes --write .\r\n```\r\nto add a majority of the types with some hand cleanup when for large\r\ninferred objects that should just be `Fiber` or weird constructs\r\nincluding `any`.\r\n\r\nSuppressed the remaining issues.\r\n\r\nBuilds on #25918"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/0b4f443020af386f2b48c47c074cb504ed672dc8",
        "html_url": "https://github.com/facebook/react/commit/0b4f443020af386f2b48c47c074cb504ed672dc8",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/0b4f443020af386f2b48c47c074cb504ed672dc8/comments",
        "author": {
            "login": "kassens",
            "id": 11849,
            "node_id": "MDQ6VXNlcjExODQ5",
            "avatar_url": "https://avatars.githubusercontent.com/u/11849?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kassens",
            "html_url": "https://github.com/kassens",
            "followers_url": "https://api.github.com/users/kassens/followers",
            "following_url": "https://api.github.com/users/kassens/following{/other_user}",
            "gists_url": "https://api.github.com/users/kassens/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kassens/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kassens/subscriptions",
            "organizations_url": "https://api.github.com/users/kassens/orgs",
            "repos_url": "https://api.github.com/users/kassens/repos",
            "events_url": "https://api.github.com/users/kassens/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kassens/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "0b974418c9a56f6c560298560265dcf4b65784bc",
                "url": "https://api.github.com/repos/facebook/react/commits/0b974418c9a56f6c560298560265dcf4b65784bc",
                "html_url": "https://github.com/facebook/react/commit/0b974418c9a56f6c560298560265dcf4b65784bc"
            }
        ]
    },
    {
        "sha": "996e4c0d56dabab382ca932cd5b8517e63020999",
        "node_id": "C_kwDOAJy2KtoAKDk5NmU0YzBkNTZkYWJhYjM4MmNhOTMyY2Q1Yjg1MTdlNjMwMjA5OTk",
        "commit": {
            "author": {
                "name": "Samuel Susla",
                "email": "samuel.susla@gmail.com",
                "date": "2022-12-12T14:00:16Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2022-12-12T14:00:16Z"
            },
            "message": "Offscreen add attach (#25603)\n\n`Offscreen.attach` is imperative API to signal to Offscreen that its\r\nupdates should be high priority and effects should be mounted. Coupled\r\nwith `Offscreen.detach` it gives ability to manually control Offscreen.\r\nUnlike with mode `visible` and `hidden`, it is developers job to make\r\nsure contents of Offscreen are not visible to users.\r\n`Offscreen.attach` only works if mode is `manual`.\r\n\r\nExample uses:\r\n```jsx\r\nlet offscreenRef = useRef(null);\r\n<Offscreen mode={'manual'} ref={offscreenRef)}>\r\n  <Child />\r\n</Offscreen>\r\n\r\n// ------\r\n\r\n// Offscreen is attached by default. \r\n// For example user scrolls away and Offscreen subtree is not visible anymore.\r\noffscreenRef.current.detach();\r\n\r\n\r\n// User scrolls back and Offscreen subtree is visible again.\r\noffscreenRef.current.attach();\r\n```\r\n\r\nCo-authored-by: Andrew Clark <git@andrewclark.io>",
            "tree": {
                "sha": "7f0a932c61ee4d314bbd0fac5528429826e8bf9a",
                "url": "https://api.github.com/repos/facebook/react/git/trees/7f0a932c61ee4d314bbd0fac5528429826e8bf9a"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/996e4c0d56dabab382ca932cd5b8517e63020999",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjlzPwCRBK7hj4Ov3rIwAAH7gIAEgz4C0exZ+8i/bDHQQ2AvJx\neze1mXZLdnRdBYsUzfxEldTt2GIb4QdDfkwBsCUmdEtDnLYncsSp1TMqWvoQ7wyd\nRZipFvhZ4ux/zBNnMImVsdJqy/RyTv/ABMg6fg3NLBes34kvYKHezxjjzmA+cjmZ\nCTbCrP6qXj63cGiIlqnSzMCCSLKmrbDC87sHRRvuPm7eKQxjwD5i28djzOfqKvpp\nrvkyFvsqWv4LB9Nitoz07Ll2ZybJYQuSydMR+vz66FY4ILRNO2geCHUQiueyQQN3\ncFcx+DV821OcVxHUSKyIaiMeHBvg+hxnYkK2YS7Xn7dEihEnewhgUdHmXRcEJTk=\n=W7rY\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 7f0a932c61ee4d314bbd0fac5528429826e8bf9a\nparent b14d7fa4b88dad5f0017d084e462952c700aa2ad\nauthor Samuel Susla <samuel.susla@gmail.com> 1670853616 +0000\ncommitter GitHub <noreply@github.com> 1670853616 +0000\n\nOffscreen add attach (#25603)\n\n`Offscreen.attach` is imperative API to signal to Offscreen that its\r\nupdates should be high priority and effects should be mounted. Coupled\r\nwith `Offscreen.detach` it gives ability to manually control Offscreen.\r\nUnlike with mode `visible` and `hidden`, it is developers job to make\r\nsure contents of Offscreen are not visible to users.\r\n`Offscreen.attach` only works if mode is `manual`.\r\n\r\nExample uses:\r\n```jsx\r\nlet offscreenRef = useRef(null);\r\n<Offscreen mode={'manual'} ref={offscreenRef)}>\r\n  <Child />\r\n</Offscreen>\r\n\r\n// ------\r\n\r\n// Offscreen is attached by default. \r\n// For example user scrolls away and Offscreen subtree is not visible anymore.\r\noffscreenRef.current.detach();\r\n\r\n\r\n// User scrolls back and Offscreen subtree is visible again.\r\noffscreenRef.current.attach();\r\n```\r\n\r\nCo-authored-by: Andrew Clark <git@andrewclark.io>"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/996e4c0d56dabab382ca932cd5b8517e63020999",
        "html_url": "https://github.com/facebook/react/commit/996e4c0d56dabab382ca932cd5b8517e63020999",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/996e4c0d56dabab382ca932cd5b8517e63020999/comments",
        "author": {
            "login": "sammy-SC",
            "id": 1733610,
            "node_id": "MDQ6VXNlcjE3MzM2MTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1733610?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sammy-SC",
            "html_url": "https://github.com/sammy-SC",
            "followers_url": "https://api.github.com/users/sammy-SC/followers",
            "following_url": "https://api.github.com/users/sammy-SC/following{/other_user}",
            "gists_url": "https://api.github.com/users/sammy-SC/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sammy-SC/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sammy-SC/subscriptions",
            "organizations_url": "https://api.github.com/users/sammy-SC/orgs",
            "repos_url": "https://api.github.com/users/sammy-SC/repos",
            "events_url": "https://api.github.com/users/sammy-SC/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sammy-SC/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "b14d7fa4b88dad5f0017d084e462952c700aa2ad",
                "url": "https://api.github.com/repos/facebook/react/commits/b14d7fa4b88dad5f0017d084e462952c700aa2ad",
                "html_url": "https://github.com/facebook/react/commit/b14d7fa4b88dad5f0017d084e462952c700aa2ad"
            }
        ]
    },
    {
        "sha": "f101c2d0d3a6cb5a788a3d91faef48462e45f515",
        "node_id": "C_kwDOAJy2KtoAKGYxMDFjMmQwZDNhNmNiNWE3ODhhM2Q5MWZhZWY0ODQ2MmU0NWY1MTU",
        "commit": {
            "author": {
                "name": "Jan Kassens",
                "email": "jkassens@meta.com",
                "date": "2022-12-02T04:19:13Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2022-12-02T04:19:13Z"
            },
            "message": "Remove Reconciler fork (2/2) (#25775)\n\nWe've heard from multiple contributors that the Reconciler forking\r\nmechanism was confusing and/or annoying to deal with. Since it's\r\ncurrently unused and there's no immediate plans to start using it again,\r\nthis removes the forking.\r\n\r\nFully removing the fork is split into 2 steps to preserve file history:\r\n\r\n**#25774 previous PR that did the bulk of the work:**\r\n- remove `enableNewReconciler` feature flag.\r\n- remove `unstable_isNewReconciler` export\r\n- remove eslint rules for cross fork imports\r\n- remove `*.new.js` files and update imports\r\n- merge non-suffixed files into `*.old` files where both exist\r\n(sometimes types were defined there)\r\n\r\n**This PR**\r\n- rename `*.old` files",
            "tree": {
                "sha": "0020fa39f7a24c9e5d3dd16041be7ed1166327d2",
                "url": "https://api.github.com/repos/facebook/react/git/trees/0020fa39f7a24c9e5d3dd16041be7ed1166327d2"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/f101c2d0d3a6cb5a788a3d91faef48462e45f515",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjiXzBCRBK7hj4Ov3rIwAAZ8UIAJ0JHSyv1SoqlA92UHNKUh8w\nsw0RGtjKxdq0RZ2GN6phB6nE5TF6Nu2JGRR0wscNZuUYPybG9VZ9i0mIZ3Zsj+ke\n8AMmQoi+c8+YXG73K4vWp8aJvsogAGSL60I9rCNIDAax/0SaqcBegvxvVMbAh3eZ\n1zhkYMaEVb6TI0fZgX/MMLhz1+aQkdonvCiForMpDx8KVj0LSvzC8uSghX8jz1qO\nrgIBUCaK9rjsMnXD7nYnjAUwR07K7OWRaiVgm2ukgnsrtFi7yA2g+ziQKgLG7iko\ncVIMwEgwKrCPGxPIT5HqFs7GXGRXKdyrjR9VFJq5KSy2pWQP1Am0v5oMhNRQdhg=\n=JZlp\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 0020fa39f7a24c9e5d3dd16041be7ed1166327d2\nparent 420f0b7fa1fcc609fc7b438c4599d0f76fab4bc0\nauthor Jan Kassens <jkassens@meta.com> 1669954753 -0500\ncommitter GitHub <noreply@github.com> 1669954753 -0500\n\nRemove Reconciler fork (2/2) (#25775)\n\nWe've heard from multiple contributors that the Reconciler forking\r\nmechanism was confusing and/or annoying to deal with. Since it's\r\ncurrently unused and there's no immediate plans to start using it again,\r\nthis removes the forking.\r\n\r\nFully removing the fork is split into 2 steps to preserve file history:\r\n\r\n**#25774 previous PR that did the bulk of the work:**\r\n- remove `enableNewReconciler` feature flag.\r\n- remove `unstable_isNewReconciler` export\r\n- remove eslint rules for cross fork imports\r\n- remove `*.new.js` files and update imports\r\n- merge non-suffixed files into `*.old` files where both exist\r\n(sometimes types were defined there)\r\n\r\n**This PR**\r\n- rename `*.old` files"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/f101c2d0d3a6cb5a788a3d91faef48462e45f515",
        "html_url": "https://github.com/facebook/react/commit/f101c2d0d3a6cb5a788a3d91faef48462e45f515",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/f101c2d0d3a6cb5a788a3d91faef48462e45f515/comments",
        "author": {
            "login": "kassens",
            "id": 11849,
            "node_id": "MDQ6VXNlcjExODQ5",
            "avatar_url": "https://avatars.githubusercontent.com/u/11849?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kassens",
            "html_url": "https://github.com/kassens",
            "followers_url": "https://api.github.com/users/kassens/followers",
            "following_url": "https://api.github.com/users/kassens/following{/other_user}",
            "gists_url": "https://api.github.com/users/kassens/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kassens/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kassens/subscriptions",
            "organizations_url": "https://api.github.com/users/kassens/orgs",
            "repos_url": "https://api.github.com/users/kassens/repos",
            "events_url": "https://api.github.com/users/kassens/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kassens/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "420f0b7fa1fcc609fc7b438c4599d0f76fab4bc0",
                "url": "https://api.github.com/repos/facebook/react/commits/420f0b7fa1fcc609fc7b438c4599d0f76fab4bc0",
                "html_url": "https://github.com/facebook/react/commit/420f0b7fa1fcc609fc7b438c4599d0f76fab4bc0"
            }
        ]
    },
    {
        "sha": "d686f3f16a796025ce32cfb431b70eef6de1934e",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6ZDY4NmYzZjE2YTc5NjAyNWNlMzJjZmI0MzFiNzBlZWY2ZGUxOTM0ZQ==",
        "commit": {
            "author": {
                "name": "Andrew Clark",
                "email": "git@andrewclark.io",
                "date": "2020-04-09T02:44:52Z"
            },
            "committer": {
                "name": "Andrew Clark",
                "email": "git@andrewclark.io",
                "date": "2020-04-09T06:49:19Z"
            },
            "message": "Add `.old` prefix to reconciler modules",
            "tree": {
                "sha": "3227a639924652e16ac2521205ba14de1f61dec1",
                "url": "https://api.github.com/repos/facebook/react/git/trees/3227a639924652e16ac2521205ba14de1f61dec1"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/d686f3f16a796025ce32cfb431b70eef6de1934e",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/d686f3f16a796025ce32cfb431b70eef6de1934e",
        "html_url": "https://github.com/facebook/react/commit/d686f3f16a796025ce32cfb431b70eef6de1934e",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/d686f3f16a796025ce32cfb431b70eef6de1934e/comments",
        "author": {
            "login": "acdlite",
            "id": 3624098,
            "node_id": "MDQ6VXNlcjM2MjQwOTg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3624098?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/acdlite",
            "html_url": "https://github.com/acdlite",
            "followers_url": "https://api.github.com/users/acdlite/followers",
            "following_url": "https://api.github.com/users/acdlite/following{/other_user}",
            "gists_url": "https://api.github.com/users/acdlite/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/acdlite/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/acdlite/subscriptions",
            "organizations_url": "https://api.github.com/users/acdlite/orgs",
            "repos_url": "https://api.github.com/users/acdlite/repos",
            "events_url": "https://api.github.com/users/acdlite/events{/privacy}",
            "received_events_url": "https://api.github.com/users/acdlite/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "acdlite",
            "id": 3624098,
            "node_id": "MDQ6VXNlcjM2MjQwOTg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3624098?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/acdlite",
            "html_url": "https://github.com/acdlite",
            "followers_url": "https://api.github.com/users/acdlite/followers",
            "following_url": "https://api.github.com/users/acdlite/following{/other_user}",
            "gists_url": "https://api.github.com/users/acdlite/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/acdlite/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/acdlite/subscriptions",
            "organizations_url": "https://api.github.com/users/acdlite/orgs",
            "repos_url": "https://api.github.com/users/acdlite/repos",
            "events_url": "https://api.github.com/users/acdlite/events{/privacy}",
            "received_events_url": "https://api.github.com/users/acdlite/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "147bdef11bbeb8f4aef18c56d53ec1591fce8653",
                "url": "https://api.github.com/repos/facebook/react/commits/147bdef11bbeb8f4aef18c56d53ec1591fce8653",
                "html_url": "https://github.com/facebook/react/commit/147bdef11bbeb8f4aef18c56d53ec1591fce8653"
            }
        ]
    },
    {
        "sha": "3e94bce765d355d74f6a60feb4addb6d196e3482",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6M2U5NGJjZTc2NWQzNTVkNzRmNmE2MGZlYjRhZGRiNmQxOTZlMzQ4Mg==",
        "commit": {
            "author": {
                "name": "Sebastian Markb\u00e5ge",
                "email": "sema@fb.com",
                "date": "2020-04-01T19:35:52Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2020-04-01T19:35:52Z"
            },
            "message": "Enable prefer-const lint rules (#18451)\n\n* Enable prefer-const rule\r\n\r\nStylistically I don't like this but Closure Compiler takes advantage of\r\nthis information.\r\n\r\n* Auto-fix lints\r\n\r\n* Manually fix the remaining callsites",
            "tree": {
                "sha": "7169cc423150404524c5d70de195d1f7599d71af",
                "url": "https://api.github.com/repos/facebook/react/git/trees/7169cc423150404524c5d70de195d1f7599d71af"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/3e94bce765d355d74f6a60feb4addb6d196e3482",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJehO0YCRBK7hj4Ov3rIwAAdHIIAE02Ma2+YDdAjxCGG5L0Iw9V\nee/9xjv4hrcNQXvdIlD5W57Xg4m7rqwDPCVNcWhiMpm9wSAXpbVPOQ85cQJiy769\noSc9ZK7P6vTM6QsOQiDGgEoNU9l86D+h+ZFBIx6vrLFktpDqu0JexsMZpO2foByt\nmmnNdAQ5rWlrnB2ytxYKjf9x/ZrqRQVyZAq5/vA80jPdvWlrqj/YfTbB4wzwIbV+\ne/ZDoYQZkZnmci+3/icQx5ahP2UjMa0VPREKlqXhwLi8Je6VN0tESXlDrH/3z4HW\nJDuT0GY0JWlrJYpVgcs/vSyIVS33i9T7thkxCaFXs8ARrNxfsgBctSOdXYRpsbk=\n=rTW2\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 7169cc423150404524c5d70de195d1f7599d71af\nparent e6ea3d387335a37c23a4e5e2a84d726b78a3c9c0\nauthor Sebastian Markb\u00e5ge <sema@fb.com> 1585769752 -0700\ncommitter GitHub <noreply@github.com> 1585769752 -0700\n\nEnable prefer-const lint rules (#18451)\n\n* Enable prefer-const rule\r\n\r\nStylistically I don't like this but Closure Compiler takes advantage of\r\nthis information.\r\n\r\n* Auto-fix lints\r\n\r\n* Manually fix the remaining callsites"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/3e94bce765d355d74f6a60feb4addb6d196e3482",
        "html_url": "https://github.com/facebook/react/commit/3e94bce765d355d74f6a60feb4addb6d196e3482",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/3e94bce765d355d74f6a60feb4addb6d196e3482/comments",
        "author": {
            "login": "sebmarkbage",
            "id": 63648,
            "node_id": "MDQ6VXNlcjYzNjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sebmarkbage",
            "html_url": "https://github.com/sebmarkbage",
            "followers_url": "https://api.github.com/users/sebmarkbage/followers",
            "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
            "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
            "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
            "repos_url": "https://api.github.com/users/sebmarkbage/repos",
            "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "e6ea3d387335a37c23a4e5e2a84d726b78a3c9c0",
                "url": "https://api.github.com/repos/facebook/react/commits/e6ea3d387335a37c23a4e5e2a84d726b78a3c9c0",
                "html_url": "https://github.com/facebook/react/commit/e6ea3d387335a37c23a4e5e2a84d726b78a3c9c0"
            }
        ]
    },
    {
        "sha": "e2c6702fcaaee35ca08957be7645820192d0daf3",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6ZTJjNjcwMmZjYWFlZTM1Y2EwODk1N2JlNzY0NTgyMDE5MmQwZGFmMw==",
        "commit": {
            "author": {
                "name": "Sebastian Markb\u00e5ge",
                "email": "sema@fb.com",
                "date": "2020-04-01T17:18:52Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2020-04-01T17:18:52Z"
            },
            "message": "Remove ConcurrentMode and AsyncMode symbols (#18450)\n\nThis API was never released.",
            "tree": {
                "sha": "cd286d14cff003934e1dfec7d43996d713ba0732",
                "url": "https://api.github.com/repos/facebook/react/git/trees/cd286d14cff003934e1dfec7d43996d713ba0732"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/e2c6702fcaaee35ca08957be7645820192d0daf3",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJehMz8CRBK7hj4Ov3rIwAAdHIIAFoeQe54raVCwS1dEeMRk5b3\nLZW6GWQ6O/r9211oBOrglMyAl1McEdWKPEeEcQdDwQ61A26fUG0Xsy8RYJ6PWz95\nmI5o21EL0hvdpBjKh583DLMsxJpQQCdz+L6kqdYVJz5UXRgjwL7Knj2VAsIUVjrQ\nicnzi5TYNZdjvvFHVNE1lqhlfPTIGIIpW7PXtqUFbwq2YZzy+/U8aouCD2SPOsf9\nZDPupZo3cM3mFMswbVNtUIMHgOAqk9nmcB+8Xwhy/cpI0z2h7BdU8WeDucS8F3sy\nyWXfsK+ys/n/2AlrHtcy3AQVWWkF6/NExBU2wVFY4kN0K0aU8KKgmf2GFgVFlnI=\n=efy9\n-----END PGP SIGNATURE-----\n",
                "payload": "tree cd286d14cff003934e1dfec7d43996d713ba0732\nparent d6d5f5aabef12386e45acfd13bbd0e8a1043bd4c\nauthor Sebastian Markb\u00e5ge <sema@fb.com> 1585761532 -0700\ncommitter GitHub <noreply@github.com> 1585761532 -0700\n\nRemove ConcurrentMode and AsyncMode symbols (#18450)\n\nThis API was never released."
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/e2c6702fcaaee35ca08957be7645820192d0daf3",
        "html_url": "https://github.com/facebook/react/commit/e2c6702fcaaee35ca08957be7645820192d0daf3",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/e2c6702fcaaee35ca08957be7645820192d0daf3/comments",
        "author": {
            "login": "sebmarkbage",
            "id": 63648,
            "node_id": "MDQ6VXNlcjYzNjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sebmarkbage",
            "html_url": "https://github.com/sebmarkbage",
            "followers_url": "https://api.github.com/users/sebmarkbage/followers",
            "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
            "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
            "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
            "repos_url": "https://api.github.com/users/sebmarkbage/repos",
            "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "d6d5f5aabef12386e45acfd13bbd0e8a1043bd4c",
                "url": "https://api.github.com/repos/facebook/react/commits/d6d5f5aabef12386e45acfd13bbd0e8a1043bd4c",
                "html_url": "https://github.com/facebook/react/commit/d6d5f5aabef12386e45acfd13bbd0e8a1043bd4c"
            }
        ]
    },
    {
        "sha": "0f334553c9558a56037b481fedc9b9fcad3643e7",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6MGYzMzQ1NTNjOTU1OGE1NjAzN2I0ODFmZWRjOWI5ZmNhZDM2NDNlNw==",
        "commit": {
            "author": {
                "name": "Sebastian Markb\u00e5ge",
                "email": "sema@fb.com",
                "date": "2020-04-01T04:14:59Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2020-04-01T04:14:59Z"
            },
            "message": "Reset stateNode in resetWorkInProgress (#18448)\n\n* test(SuspenseList): Add failing test for class component\r\n\r\n* Reset stateNode when resetWorkInProgress\r\n\r\nThis is supposed to put the Fiber into the same state as if it was just\r\ncreated by child fiber reconciliation. For newly created fibers, that means\r\nthat stateNode is null.\r\n\r\nCo-authored-by: Sebastian Silbermann <silbermann.sebastian@gmail.com>",
            "tree": {
                "sha": "2212ebdc0944d248f844f63d1507f9f34dc575b4",
                "url": "https://api.github.com/repos/facebook/react/git/trees/2212ebdc0944d248f844f63d1507f9f34dc575b4"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/0f334553c9558a56037b481fedc9b9fcad3643e7",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJehBVDCRBK7hj4Ov3rIwAAdHIIAITgqNihJGssvYNXK9rWC7BQ\nxLSYo/Pzd0a8fO1cIK8WbVTSpuynS3K+bDkaDybN48GXpoPyMI11sMjIAQtki0lJ\noKlOlue0cnRDuDtkmKzCuPb2uPGdlJqcekC/XIRyzpv5ZvsGDxBg/Z7Wvp0UZQmi\noiPLIHRNFP91+HQ2iXhwJvDkFacGnnLeSE3/OjXnJRjmobuNheFLDzX066kidnvn\nAHoXv4lJ+DzCyEOooYWj1OMXe3+91gwUtJYyUmWqS5Nf2aWpVSU9EibKmcBYizWv\nzS3j8wre6M87OVsYHu/d7ReCL6ZU3lilaksAsj4JE7jmPyfw+AOBqASQ0IY5Pog=\n=EDMm\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 2212ebdc0944d248f844f63d1507f9f34dc575b4\nparent 153b5c305da2e042a886e0c15798bc01f45993c7\nauthor Sebastian Markb\u00e5ge <sema@fb.com> 1585714499 -0700\ncommitter GitHub <noreply@github.com> 1585714499 -0700\n\nReset stateNode in resetWorkInProgress (#18448)\n\n* test(SuspenseList): Add failing test for class component\r\n\r\n* Reset stateNode when resetWorkInProgress\r\n\r\nThis is supposed to put the Fiber into the same state as if it was just\r\ncreated by child fiber reconciliation. For newly created fibers, that means\r\nthat stateNode is null.\r\n\r\nCo-authored-by: Sebastian Silbermann <silbermann.sebastian@gmail.com>"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/0f334553c9558a56037b481fedc9b9fcad3643e7",
        "html_url": "https://github.com/facebook/react/commit/0f334553c9558a56037b481fedc9b9fcad3643e7",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/0f334553c9558a56037b481fedc9b9fcad3643e7/comments",
        "author": {
            "login": "sebmarkbage",
            "id": 63648,
            "node_id": "MDQ6VXNlcjYzNjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sebmarkbage",
            "html_url": "https://github.com/sebmarkbage",
            "followers_url": "https://api.github.com/users/sebmarkbage/followers",
            "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
            "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
            "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
            "repos_url": "https://api.github.com/users/sebmarkbage/repos",
            "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "153b5c305da2e042a886e0c15798bc01f45993c7",
                "url": "https://api.github.com/repos/facebook/react/commits/153b5c305da2e042a886e0c15798bc01f45993c7",
                "html_url": "https://github.com/facebook/react/commit/153b5c305da2e042a886e0c15798bc01f45993c7"
            }
        ]
    },
    {
        "sha": "bf30e370a503cc5787a0b20e9d50ece6a148d6c9",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6YmYzMGUzNzBhNTAzY2M1Nzg3YTBiMjBlOWQ1MGVjZTZhMTQ4ZDZjOQ==",
        "commit": {
            "author": {
                "name": "Dan Abramov",
                "email": "dan.abramov@gmail.com",
                "date": "2020-03-30T23:29:53Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2020-03-30T23:29:53Z"
            },
            "message": "Remove User Timings (#18417)",
            "tree": {
                "sha": "caa0c5a1a4e72881fde342eb1a283efb19b16aa2",
                "url": "https://api.github.com/repos/facebook/react/git/trees/caa0c5a1a4e72881fde342eb1a283efb19b16aa2"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/bf30e370a503cc5787a0b20e9d50ece6a148d6c9",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJegoDxCRBK7hj4Ov3rIwAAdHIIAJcE417YXMB97ZN4vIDVcDCu\nKAuTE/FMKiCGDy/QPREQ3sAtvDrJub75R6qRstM6MUC6L+BAzZ12a5IqKKp6x/yn\nq1OOuaLRwzH0d7rtAcEYL7A1/Nc8JPxhzg3s78uvXhpAVbdLQi4aIaE29yxZoS4T\n/dtkVaiXsvJPay450L9YrmtmuyqRzb/+jMGBVnrzwQiKcuuxIGZwDBfo38TOBttw\nhiC7Cfl65YjnyN2AcnHkgDf4ule0c+cxUanj9O9/kE5beyw1M2Z+t19fQvtJBGAV\nVo2zEYLPgC/kEr873IxuoLIXgX6DfB+XcWPnIBS9clERsxyGR4Yl/6Mi8RS1YYk=\n=2xkt\n-----END PGP SIGNATURE-----\n",
                "payload": "tree caa0c5a1a4e72881fde342eb1a283efb19b16aa2\nparent dd7e5e4f5ac2ffac3171ef61daee2cb1edc69635\nauthor Dan Abramov <dan.abramov@gmail.com> 1585610993 +0100\ncommitter GitHub <noreply@github.com> 1585610993 +0100\n\nRemove User Timings (#18417)\n\n"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/bf30e370a503cc5787a0b20e9d50ece6a148d6c9",
        "html_url": "https://github.com/facebook/react/commit/bf30e370a503cc5787a0b20e9d50ece6a148d6c9",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/bf30e370a503cc5787a0b20e9d50ece6a148d6c9/comments",
        "author": {
            "login": "gaearon",
            "id": 810438,
            "node_id": "MDQ6VXNlcjgxMDQzOA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/810438?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gaearon",
            "html_url": "https://github.com/gaearon",
            "followers_url": "https://api.github.com/users/gaearon/followers",
            "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
            "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
            "organizations_url": "https://api.github.com/users/gaearon/orgs",
            "repos_url": "https://api.github.com/users/gaearon/repos",
            "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gaearon/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "dd7e5e4f5ac2ffac3171ef61daee2cb1edc69635",
                "url": "https://api.github.com/repos/facebook/react/commits/dd7e5e4f5ac2ffac3171ef61daee2cb1edc69635",
                "html_url": "https://github.com/facebook/react/commit/dd7e5e4f5ac2ffac3171ef61daee2cb1edc69635"
            }
        ]
    },
    {
        "sha": "31a9e391f757d374ce0065da6735f08137151507",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6MzFhOWUzOTFmNzU3ZDM3NGNlMDA2NWRhNjczNWYwODEzNzE1MTUwNw==",
        "commit": {
            "author": {
                "name": "Mohammad Aziz",
                "email": "mdaziz067@gmail.com",
                "date": "2020-03-22T14:52:59Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2020-03-22T14:52:59Z"
            },
            "message": "Remove unnecessary lines for `hasBadMapPolyfill` issue for rollup (#16231)",
            "tree": {
                "sha": "5d2276a8ab8415202e2996afcc0656bfa6c6adfb",
                "url": "https://api.github.com/repos/facebook/react/git/trees/5d2276a8ab8415202e2996afcc0656bfa6c6adfb"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/31a9e391f757d374ce0065da6735f08137151507",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJed3vLCRBK7hj4Ov3rIwAAdHIIAEp000jKCb5bSXbwy9UEcEYx\nEIz847rvtRXZgTG+AIzFZZZT2lKuDhpQYR+aIc1aD/DvJCxcvaN8KF/3cLKF2Z62\nQAQ6Vwguld/0tBR6z2TCMT4Tpskn9CwmMIQvOIxJm9CrA1SlACKpbcYmaP275Y+i\n7SBDo57PQEFWh17lyJ/WPk95WzmFcRKGU4CcAhiQgsmnr5m/avgHig0vuwjqsHlS\nxBS2n1x5UGw7ZN/pDUddFZfQa2vUXCgAk3hYDfUkO1+aE3GG0wvdXqshB/PMKzXr\npVQ+2QFwc3j5SnDO1+/sKQStVQmbiD5B/+c9jYDk9fj05pwZagmOSL9aGLdrOag=\n=Wjck\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 5d2276a8ab8415202e2996afcc0656bfa6c6adfb\nparent c0cd1be908c9e2123fa41fb784780dde9babb002\nauthor Mohammad Aziz <mdaziz067@gmail.com> 1584888779 +0530\ncommitter GitHub <noreply@github.com> 1584888779 +0000\n\nRemove unnecessary lines for `hasBadMapPolyfill` issue for rollup (#16231)\n\n"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/31a9e391f757d374ce0065da6735f08137151507",
        "html_url": "https://github.com/facebook/react/commit/31a9e391f757d374ce0065da6735f08137151507",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/31a9e391f757d374ce0065da6735f08137151507/comments",
        "author": {
            "login": "iAziz786",
            "id": 17024120,
            "node_id": "MDQ6VXNlcjE3MDI0MTIw",
            "avatar_url": "https://avatars.githubusercontent.com/u/17024120?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/iAziz786",
            "html_url": "https://github.com/iAziz786",
            "followers_url": "https://api.github.com/users/iAziz786/followers",
            "following_url": "https://api.github.com/users/iAziz786/following{/other_user}",
            "gists_url": "https://api.github.com/users/iAziz786/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/iAziz786/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/iAziz786/subscriptions",
            "organizations_url": "https://api.github.com/users/iAziz786/orgs",
            "repos_url": "https://api.github.com/users/iAziz786/repos",
            "events_url": "https://api.github.com/users/iAziz786/events{/privacy}",
            "received_events_url": "https://api.github.com/users/iAziz786/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "c0cd1be908c9e2123fa41fb784780dde9babb002",
                "url": "https://api.github.com/repos/facebook/react/commits/c0cd1be908c9e2123fa41fb784780dde9babb002",
                "html_url": "https://github.com/facebook/react/commit/c0cd1be908c9e2123fa41fb784780dde9babb002"
            }
        ]
    },
    {
        "sha": "c5d2fc7127654e43de59fff865b74765a103c4a5",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6YzVkMmZjNzEyNzY1NGU0M2RlNTlmZmY4NjViNzQ3NjVhMTAzYzRhNQ==",
        "commit": {
            "author": {
                "name": "Sebastian Markb\u00e5ge",
                "email": "sema@fb.com",
                "date": "2020-03-21T22:22:01Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2020-03-21T22:22:01Z"
            },
            "message": "Move some files out of /shared and rename to upper case (#18363)\n\n* Rename lower case isomorphic default exports modules to upper case named exports\r\n\r\nWe're somewhat inconsistent here between e.g. ReactLazy and memo.\r\n\r\nLet's pick one.\r\n\r\nThis also moves the responder, fundamental, scope creators from shared\r\nsince they're isomorphic and same as the other creators.\r\n\r\n* Move some files that are specific to the react-reconciler from shared\r\n\r\nIndividual renderers are allowed to deep require into the reconciler.\r\n\r\n* Move files specific to react-dom from shared\r\n\r\nreact-interactions is right now dom specific (it wasn't before) so we can\r\ntype check it together with other dom stuff. Avoids the need for\r\na shared ReactDOMTypes to be checked by RN for example.\r\n\r\n* Move ReactWorkTags to the reconciler\r\n\r\n* Move createPortal to export from reconciler\r\n\r\nOtherwise Noop can't access it since it's not allowed deep requires.",
            "tree": {
                "sha": "61fb0d07317c7c4bea5a23fb55fe1ea904c7a79b",
                "url": "https://api.github.com/repos/facebook/react/git/trees/61fb0d07317c7c4bea5a23fb55fe1ea904c7a79b"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/c5d2fc7127654e43de59fff865b74765a103c4a5",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJedpOJCRBK7hj4Ov3rIwAAdHIIADNkUTQQ3zXXxGXBd4mDFTyI\n++NqWs/J+VpSD7VuwaDYheHfZJSrmaVlxN8L3QBJZw83ZBnpJo39kCv7CRCnHgKb\ngSvr3Q+3lnlqVcOluI84Qu9LZbE/mbKNN1DBozZQYRb0nQyWc8BoyQlVEikKG4PA\nlilK6jE8oiavWm+V2QygSZryDQnaWJYf818TiqoFeOHrwnXz0lbSaj8YtdUt1twQ\nBO2mJlvZx7M23hkcKvJSnLp8p0qMa3WnJ8KcDPzXmL43hWSoKfgOUHBcd/ei90Rt\n8DKFaSr+LZy/UetbNK33D2zwzjKZDCdUFL6ciA/DCWEAgh8kvCLgyRTuHcpS2SM=\n=sab+\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 61fb0d07317c7c4bea5a23fb55fe1ea904c7a79b\nparent a600408b284e92ed3d801d7f4e37d10b5da06b10\nauthor Sebastian Markb\u00e5ge <sema@fb.com> 1584829321 -0700\ncommitter GitHub <noreply@github.com> 1584829321 -0700\n\nMove some files out of /shared and rename to upper case (#18363)\n\n* Rename lower case isomorphic default exports modules to upper case named exports\r\n\r\nWe're somewhat inconsistent here between e.g. ReactLazy and memo.\r\n\r\nLet's pick one.\r\n\r\nThis also moves the responder, fundamental, scope creators from shared\r\nsince they're isomorphic and same as the other creators.\r\n\r\n* Move some files that are specific to the react-reconciler from shared\r\n\r\nIndividual renderers are allowed to deep require into the reconciler.\r\n\r\n* Move files specific to react-dom from shared\r\n\r\nreact-interactions is right now dom specific (it wasn't before) so we can\r\ntype check it together with other dom stuff. Avoids the need for\r\na shared ReactDOMTypes to be checked by RN for example.\r\n\r\n* Move ReactWorkTags to the reconciler\r\n\r\n* Move createPortal to export from reconciler\r\n\r\nOtherwise Noop can't access it since it's not allowed deep requires."
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/c5d2fc7127654e43de59fff865b74765a103c4a5",
        "html_url": "https://github.com/facebook/react/commit/c5d2fc7127654e43de59fff865b74765a103c4a5",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/c5d2fc7127654e43de59fff865b74765a103c4a5/comments",
        "author": {
            "login": "sebmarkbage",
            "id": 63648,
            "node_id": "MDQ6VXNlcjYzNjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sebmarkbage",
            "html_url": "https://github.com/sebmarkbage",
            "followers_url": "https://api.github.com/users/sebmarkbage/followers",
            "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
            "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
            "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
            "repos_url": "https://api.github.com/users/sebmarkbage/repos",
            "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "a600408b284e92ed3d801d7f4e37d10b5da06b10",
                "url": "https://api.github.com/repos/facebook/react/commits/a600408b284e92ed3d801d7f4e37d10b5da06b10",
                "html_url": "https://github.com/facebook/react/commit/a600408b284e92ed3d801d7f4e37d10b5da06b10"
            }
        ]
    },
    {
        "sha": "115cd12d9bbb2bff303e52feb1394e3a2cef20ca",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6MTE1Y2QxMmQ5YmJiMmJmZjMwM2U1MmZlYjEzOTRlM2EyY2VmMjBjYQ==",
        "commit": {
            "author": {
                "name": "Andrew Clark",
                "email": "git@andrewclark.io",
                "date": "2020-03-06T17:29:05Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2020-03-06T17:29:05Z"
            },
            "message": "Add test run that uses www feature flags (#18234)\n\nIn CI, we run our test suite against multiple build configurations. For\r\nexample, we run our tests in both dev and prod, and in both the\r\nexperimental and stable release channels. This is to prevent accidental\r\ndeviations in behavior between the different builds. If there's an\r\nintentional deviation in behavior, the test author must account\r\nfor them.\r\n\r\nHowever, we currently don't run tests against the www builds. That's\r\na problem, because it's common for features to land in www before they\r\nland anywhere else, including the experimental release channel.\r\nTypically we do this so we can gradually roll out the feature behind\r\na flag before deciding to enable it.\r\n\r\nThe way we test those features today is by mutating the\r\n`shared/ReactFeatureFlags` module. There are a few downsides to this\r\napproach, though. The flag is only overridden for the specific tests or\r\ntest suites where you apply the override. But usually what you want is\r\nto run *all* tests with the flag enabled, to protect against unexpected\r\nregressions.\r\n\r\nAlso, mutating the feature flags module only works when running the\r\ntests against source, not against the final build artifacts, because the\r\nReactFeatureFlags module is inlined by the build script.\r\n\r\nInstead, we should run the test suite against the www configuration,\r\njust like we do for prod, experimental, and so on. I've added a new\r\ncommand, `yarn test-www`. It automatically runs in CI.\r\n\r\nSome of the www feature flags are dynamic; that is, they depend on\r\na runtime condition (i.e. a GK). These flags are imported from an\r\nexternal module that lives in www. Those flags will be enabled for some\r\nclients and disabled for others, so we should run the tests against\r\n*both* modes.\r\n\r\nSo I've added a new global `__VARIANT__`, and a new test command `yarn\r\ntest-www-variant`. `__VARIANT__` is set to false by default; when\r\nrunning `test-www-variant`, it's set to true.\r\n\r\nIf we were going for *really* comprehensive coverage, we would run the\r\ntests against every possible configuration of feature flags: 2 ^\r\nnumberOfFlags total combinations. That's not practical, though, so\r\ninstead we only run against two combinations: once with `__VARIANT__`\r\nset to `true`, and once with it set to `false`. We generally assume that\r\nflags can be toggled independently, so in practice this should\r\nbe enough.\r\n\r\nYou can also refer to `__VARIANT__` in tests to detect which mode you're\r\nrunning in. Or, you can import `shared/ReactFeatureFlags` and read the\r\nspecific flag you can about. However, we should stop mutating that\r\nmodule going forward. Treat it as read-only.\r\n\r\nIn this commit, I have only setup the www tests to run against source.\r\nI'll leave running against build for a follow up.\r\n\r\nMany of our tests currently assume they run only in the default\r\nconfiguration, and break when certain flags are toggled. Rather than fix\r\nthese all up front, I've hard-coded the relevant flags to the default\r\nvalues. We can incrementally migrate those tests later.",
            "tree": {
                "sha": "c0c6818371a4647f31196742aecaa86441aa3095",
                "url": "https://api.github.com/repos/facebook/react/git/trees/c0c6818371a4647f31196742aecaa86441aa3095"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/115cd12d9bbb2bff303e52feb1394e3a2cef20ca",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeYohhCRBK7hj4Ov3rIwAAdHIIABerJinUcn1lDi3YuMS+Rjla\ndSg4FehDg9DsjXmRXWIiC26bnrne6Mqy1WBdd/J9mNlwYDt48DnpqXpp0LHXbB92\nVXME+PwIIUvS3p8HuogQbuP9WPMm76DXGyPk/fH5ozdWIK4IoiIB23kGno/utdxa\np4TTC5mBRKzbawpFoMYSuzInau6CBtwfxSaGxlbxN987GSVUTrdj2w8oNZbkrrpL\n1idfddZjtI4Cc5z3pIvivW5+yc1smYJfnUhkmfsYK6E9M3u13yPblfutssLJkctf\nrjFAhGn/7mtGsZY8MIFTwKCC616Uo5uap3vg0WjliGKCTqogf3caQ1u8FKrIWsc=\n=rpSB\n-----END PGP SIGNATURE-----\n",
                "payload": "tree c0c6818371a4647f31196742aecaa86441aa3095\nparent 4027f2a3b82ecc325224f7827fc2c8e71a284279\nauthor Andrew Clark <git@andrewclark.io> 1583515745 -0800\ncommitter GitHub <noreply@github.com> 1583515745 -0800\n\nAdd test run that uses www feature flags (#18234)\n\nIn CI, we run our test suite against multiple build configurations. For\r\nexample, we run our tests in both dev and prod, and in both the\r\nexperimental and stable release channels. This is to prevent accidental\r\ndeviations in behavior between the different builds. If there's an\r\nintentional deviation in behavior, the test author must account\r\nfor them.\r\n\r\nHowever, we currently don't run tests against the www builds. That's\r\na problem, because it's common for features to land in www before they\r\nland anywhere else, including the experimental release channel.\r\nTypically we do this so we can gradually roll out the feature behind\r\na flag before deciding to enable it.\r\n\r\nThe way we test those features today is by mutating the\r\n`shared/ReactFeatureFlags` module. There are a few downsides to this\r\napproach, though. The flag is only overridden for the specific tests or\r\ntest suites where you apply the override. But usually what you want is\r\nto run *all* tests with the flag enabled, to protect against unexpected\r\nregressions.\r\n\r\nAlso, mutating the feature flags module only works when running the\r\ntests against source, not against the final build artifacts, because the\r\nReactFeatureFlags module is inlined by the build script.\r\n\r\nInstead, we should run the test suite against the www configuration,\r\njust like we do for prod, experimental, and so on. I've added a new\r\ncommand, `yarn test-www`. It automatically runs in CI.\r\n\r\nSome of the www feature flags are dynamic; that is, they depend on\r\na runtime condition (i.e. a GK). These flags are imported from an\r\nexternal module that lives in www. Those flags will be enabled for some\r\nclients and disabled for others, so we should run the tests against\r\n*both* modes.\r\n\r\nSo I've added a new global `__VARIANT__`, and a new test command `yarn\r\ntest-www-variant`. `__VARIANT__` is set to false by default; when\r\nrunning `test-www-variant`, it's set to true.\r\n\r\nIf we were going for *really* comprehensive coverage, we would run the\r\ntests against every possible configuration of feature flags: 2 ^\r\nnumberOfFlags total combinations. That's not practical, though, so\r\ninstead we only run against two combinations: once with `__VARIANT__`\r\nset to `true`, and once with it set to `false`. We generally assume that\r\nflags can be toggled independently, so in practice this should\r\nbe enough.\r\n\r\nYou can also refer to `__VARIANT__` in tests to detect which mode you're\r\nrunning in. Or, you can import `shared/ReactFeatureFlags` and read the\r\nspecific flag you can about. However, we should stop mutating that\r\nmodule going forward. Treat it as read-only.\r\n\r\nIn this commit, I have only setup the www tests to run against source.\r\nI'll leave running against build for a follow up.\r\n\r\nMany of our tests currently assume they run only in the default\r\nconfiguration, and break when certain flags are toggled. Rather than fix\r\nthese all up front, I've hard-coded the relevant flags to the default\r\nvalues. We can incrementally migrate those tests later."
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/115cd12d9bbb2bff303e52feb1394e3a2cef20ca",
        "html_url": "https://github.com/facebook/react/commit/115cd12d9bbb2bff303e52feb1394e3a2cef20ca",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/115cd12d9bbb2bff303e52feb1394e3a2cef20ca/comments",
        "author": {
            "login": "acdlite",
            "id": 3624098,
            "node_id": "MDQ6VXNlcjM2MjQwOTg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3624098?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/acdlite",
            "html_url": "https://github.com/acdlite",
            "followers_url": "https://api.github.com/users/acdlite/followers",
            "following_url": "https://api.github.com/users/acdlite/following{/other_user}",
            "gists_url": "https://api.github.com/users/acdlite/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/acdlite/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/acdlite/subscriptions",
            "organizations_url": "https://api.github.com/users/acdlite/orgs",
            "repos_url": "https://api.github.com/users/acdlite/repos",
            "events_url": "https://api.github.com/users/acdlite/events{/privacy}",
            "received_events_url": "https://api.github.com/users/acdlite/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "4027f2a3b82ecc325224f7827fc2c8e71a284279",
                "url": "https://api.github.com/repos/facebook/react/commits/4027f2a3b82ecc325224f7827fc2c8e71a284279",
                "html_url": "https://github.com/facebook/react/commit/4027f2a3b82ecc325224f7827fc2c8e71a284279"
            }
        ]
    },
    {
        "sha": "024a764310e64ef38963df16970364b9942a60cd",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6MDI0YTc2NDMxMGU2NGVmMzg5NjNkZjE2OTcwMzY0Yjk5NDJhNjBjZA==",
        "commit": {
            "author": {
                "name": "Brian Vaughn",
                "email": "bvaughn@fb.com",
                "date": "2020-03-05T19:02:00Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2020-03-05T19:02:00Z"
            },
            "message": "Implemented Profiler onCommit() and onPostCommit() hooks (#17910)\n\n* Implemented Profiler onCommit() and onPostCommit() hooks\r\n* Added enableProfilerCommitHooks feature flag for commit hooks\r\n* Moved onCommit and onPassiveCommit behind separate feature flag",
            "tree": {
                "sha": "c945085becd8d025566483ad8c3951b608d76f39",
                "url": "https://api.github.com/repos/facebook/react/git/trees/c945085becd8d025566483ad8c3951b608d76f39"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/024a764310e64ef38963df16970364b9942a60cd",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeYUyoCRBK7hj4Ov3rIwAAdHIIAJOXq15f87WJ/K+0mMOvhbUB\nk07P6A463anMf9jGP7a0sihOe4bDDur3QBaGlVvCPYAZhHreXqU/ZxwcBZsLP8oV\nCw7r/IaCUk2r4HTi76mGSVxO+gwcfehAH7RpGr3sLEIfDERiRViy1uFBWnet3/6E\nz16+7dZ96AjDTDf89qNAYygnUAOEp6P7IKgGWoM/vulG6GOfcdEgdvi7GqvQytTN\npEfdUy4usGfE3LqoflcDVDZXvjEP6FATg4Md880roVbG+CgKt3711DNfp9OI4lnB\nW2g0eU2GFBLxaeOI1ADn1WgWfGN9q3LJ3NcOK+J9sHL3WdLWvKklkLXX6WiDIl4=\n=bkKB\n-----END PGP SIGNATURE-----\n",
                "payload": "tree c945085becd8d025566483ad8c3951b608d76f39\nparent d35f8a58184d1495ff54f4ad80c702e9468c89ee\nauthor Brian Vaughn <bvaughn@fb.com> 1583434920 -0800\ncommitter GitHub <noreply@github.com> 1583434920 -0800\n\nImplemented Profiler onCommit() and onPostCommit() hooks (#17910)\n\n* Implemented Profiler onCommit() and onPostCommit() hooks\r\n* Added enableProfilerCommitHooks feature flag for commit hooks\r\n* Moved onCommit and onPassiveCommit behind separate feature flag\r\n"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/024a764310e64ef38963df16970364b9942a60cd",
        "html_url": "https://github.com/facebook/react/commit/024a764310e64ef38963df16970364b9942a60cd",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/024a764310e64ef38963df16970364b9942a60cd/comments",
        "author": null,
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "d35f8a58184d1495ff54f4ad80c702e9468c89ee",
                "url": "https://api.github.com/repos/facebook/react/commits/d35f8a58184d1495ff54f4ad80c702e9468c89ee",
                "html_url": "https://github.com/facebook/react/commit/d35f8a58184d1495ff54f4ad80c702e9468c89ee"
            }
        ]
    },
    {
        "sha": "4ee592e95a5f78daed575a047d47f74f046940f3",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6NGVlNTkyZTk1YTVmNzhkYWVkNTc1YTA0N2Q0N2Y3NGYwNDY5NDBmMw==",
        "commit": {
            "author": {
                "name": "Dan Abramov",
                "email": "dan.abramov@gmail.com",
                "date": "2020-02-28T11:56:36Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2020-02-28T11:56:36Z"
            },
            "message": "Add an early invariant to debug a mystery crash (#18159)",
            "tree": {
                "sha": "071b785c90caf30adb59cb760d064c9c4f9749a5",
                "url": "https://api.github.com/repos/facebook/react/git/trees/071b785c90caf30adb59cb760d064c9c4f9749a5"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/4ee592e95a5f78daed575a047d47f74f046940f3",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeWP/0CRBK7hj4Ov3rIwAAdHIIAGAjuFEygPktDsM72odFt/ny\n+Jhj587i61O2XcbWkohnYAA1vCfAPVP+sF6unHjAPR2Ztb3+cQUET61RMa7sYmPR\nIqEf09MhtuCT1JU7deqqjZ/AuCusn6i4JUa4vUFVu8kjD698HVu21zPgtQYDPN8i\n1+ZAPHfEp2ATqs8DyHFHwpl/th9IWfuSotGunKIlMqS4LHEzZ+ckkrIp2CnTkAvI\nHNnDpyXsFy8KlG4/bsFKixVplI48Hrb5OYtcGNqcdWQ17NXAhHk8iX16n4HL5D3O\n5X0JYt02mdaVI1l0aw6Df7uAy4FKRLyYivBsx8QuLqMSm3kYyHY6WgNvAujKizA=\n=xzvR\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 071b785c90caf30adb59cb760d064c9c4f9749a5\nparent 7ea4e4111f0615d465d2750b4fefd8b98b22ef1d\nauthor Dan Abramov <dan.abramov@gmail.com> 1582890996 +0000\ncommitter GitHub <noreply@github.com> 1582890996 +0000\n\nAdd an early invariant to debug a mystery crash (#18159)\n\n"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/4ee592e95a5f78daed575a047d47f74f046940f3",
        "html_url": "https://github.com/facebook/react/commit/4ee592e95a5f78daed575a047d47f74f046940f3",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/4ee592e95a5f78daed575a047d47f74f046940f3/comments",
        "author": {
            "login": "gaearon",
            "id": 810438,
            "node_id": "MDQ6VXNlcjgxMDQzOA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/810438?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gaearon",
            "html_url": "https://github.com/gaearon",
            "followers_url": "https://api.github.com/users/gaearon/followers",
            "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
            "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
            "organizations_url": "https://api.github.com/users/gaearon/orgs",
            "repos_url": "https://api.github.com/users/gaearon/repos",
            "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gaearon/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "7ea4e4111f0615d465d2750b4fefd8b98b22ef1d",
                "url": "https://api.github.com/repos/facebook/react/commits/7ea4e4111f0615d465d2750b4fefd8b98b22ef1d",
                "html_url": "https://github.com/facebook/react/commit/7ea4e4111f0615d465d2750b4fefd8b98b22ef1d"
            }
        ]
    },
    {
        "sha": "65bbda7f169394005252b46a5992ece5a2ffadad",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6NjViYmRhN2YxNjkzOTQwMDUyNTJiNDZhNTk5MmVjZTVhMmZmYWRhZA==",
        "commit": {
            "author": {
                "name": "Sebastian Markb\u00e5ge",
                "email": "sema@fb.com",
                "date": "2020-02-21T07:56:40Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2020-02-21T07:56:40Z"
            },
            "message": "Rename Chunks API to Blocks (#18086)\n\nSounds like this is the name we're going with. This also helps us\r\ndistinguish it from other \"chunking\" implementation details.",
            "tree": {
                "sha": "99dad3ea7bff2d7803ff45a58ff58b2a34eb8562",
                "url": "https://api.github.com/repos/facebook/react/git/trees/99dad3ea7bff2d7803ff45a58ff58b2a34eb8562"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/65bbda7f169394005252b46a5992ece5a2ffadad",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeT404CRBK7hj4Ov3rIwAAdHIIAFNpHp2TvFPsHiO6I7pQ3sNv\n7xt+nTM5FY950BVR4KPD/u9kEw+TrmZJu46QiNuHWBj9ofQUVpXBZWq+7tEqUlcX\nNYQCUyjlLtO0XnXg25imPJPk5/3yrQ2jRIgtRPCg1THGjpAHGj3ga4bPLUT6UuuY\naPlYA084JOZGnvFXMIhMyeyQQkA0U1UGyw3adHhNN7zIS3kaTDZfVqI3BERWd5aM\nOCeTIgtF6l6kJicrQHCAipqZzmOqDizVllLQfBKqZMggWTGrC+Oa+BQHbPjGSc9e\nXDTgpAKIQk0GwpBp5FA6of26YX9CkZCUbyRMMMp1P4B9ejUmpd2Ukw7XqziTDrg=\n=ICeM\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 99dad3ea7bff2d7803ff45a58ff58b2a34eb8562\nparent 8b596e00a4fffd6bb5e6990f4dd59e40e80a5ea0\nauthor Sebastian Markb\u00e5ge <sema@fb.com> 1582271800 -0800\ncommitter GitHub <noreply@github.com> 1582271800 -0800\n\nRename Chunks API to Blocks (#18086)\n\nSounds like this is the name we're going with. This also helps us\r\ndistinguish it from other \"chunking\" implementation details."
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/65bbda7f169394005252b46a5992ece5a2ffadad",
        "html_url": "https://github.com/facebook/react/commit/65bbda7f169394005252b46a5992ece5a2ffadad",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/65bbda7f169394005252b46a5992ece5a2ffadad/comments",
        "author": {
            "login": "sebmarkbage",
            "id": 63648,
            "node_id": "MDQ6VXNlcjYzNjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sebmarkbage",
            "html_url": "https://github.com/sebmarkbage",
            "followers_url": "https://api.github.com/users/sebmarkbage/followers",
            "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
            "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
            "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
            "repos_url": "https://api.github.com/users/sebmarkbage/repos",
            "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "8b596e00a4fffd6bb5e6990f4dd59e40e80a5ea0",
                "url": "https://api.github.com/repos/facebook/react/commits/8b596e00a4fffd6bb5e6990f4dd59e40e80a5ea0",
                "html_url": "https://github.com/facebook/react/commit/8b596e00a4fffd6bb5e6990f4dd59e40e80a5ea0"
            }
        ]
    },
    {
        "sha": "8b596e00a4fffd6bb5e6990f4dd59e40e80a5ea0",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6OGI1OTZlMDBhNGZmZmQ2YmI1ZTY5OTBmNGRkNTllNDBlODBhNWVhMA==",
        "commit": {
            "author": {
                "name": "Dan Abramov",
                "email": "dan.abramov@gmail.com",
                "date": "2020-02-21T02:26:19Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2020-02-21T02:26:19Z"
            },
            "message": "Remove unused arguments in the reconciler (#18092)",
            "tree": {
                "sha": "f74328fcc9f534f304b3d15b824e590fd316fafc",
                "url": "https://api.github.com/repos/facebook/react/git/trees/f74328fcc9f534f304b3d15b824e590fd316fafc"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/8b596e00a4fffd6bb5e6990f4dd59e40e80a5ea0",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeTz/LCRBK7hj4Ov3rIwAAdHIIAKzjwHPsG1g0dYOKYkle3Lji\n29EdIduBBntA/EHg9RPmmY3NOoh5h4uhvcSQClxjvRb50PuJadtkPxhFO3UdRPWQ\ndTIjejC23FEZ9BWhy0V+9KksFuxydM1GjIZdAh1k50SRke6pobG/8b/zMupEc2Bk\nprBDp60f3t/lTVPMZeOQEBwqfPnhduWCRQTvGbA1EQb8IlarLlS+tCLnP5j5VKax\nTeBpFDvCV8a2NXhjOyuwNCSUl870lw+/JFD5+TCeldTnh6MDX4ESaZL752DPp8P6\nfZr7eIfa0TT50e+WG8l9JqzMMhJYgiNec2pR+JTcPaJZVHTBdLVUm82K6hs3Zgg=\n=4Bhn\n-----END PGP SIGNATURE-----\n",
                "payload": "tree f74328fcc9f534f304b3d15b824e590fd316fafc\nparent 5de5b61507d44c158fc0223728c5834fbd224ec5\nauthor Dan Abramov <dan.abramov@gmail.com> 1582251979 +0000\ncommitter GitHub <noreply@github.com> 1582251979 +0000\n\nRemove unused arguments in the reconciler (#18092)\n\n"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/8b596e00a4fffd6bb5e6990f4dd59e40e80a5ea0",
        "html_url": "https://github.com/facebook/react/commit/8b596e00a4fffd6bb5e6990f4dd59e40e80a5ea0",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/8b596e00a4fffd6bb5e6990f4dd59e40e80a5ea0/comments",
        "author": {
            "login": "gaearon",
            "id": 810438,
            "node_id": "MDQ6VXNlcjgxMDQzOA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/810438?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gaearon",
            "html_url": "https://github.com/gaearon",
            "followers_url": "https://api.github.com/users/gaearon/followers",
            "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
            "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
            "organizations_url": "https://api.github.com/users/gaearon/orgs",
            "repos_url": "https://api.github.com/users/gaearon/repos",
            "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gaearon/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "5de5b61507d44c158fc0223728c5834fbd224ec5",
                "url": "https://api.github.com/repos/facebook/react/commits/5de5b61507d44c158fc0223728c5834fbd224ec5",
                "html_url": "https://github.com/facebook/react/commit/5de5b61507d44c158fc0223728c5834fbd224ec5"
            }
        ]
    },
    {
        "sha": "8777b44e982e7ddedda62aee02f1fd370795db44",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6ODc3N2I0NGU5ODJlN2RkZWRkYTYyYWVlMDJmMWZkMzcwNzk1ZGI0NA==",
        "commit": {
            "author": {
                "name": "Dan Abramov",
                "email": "dan.abramov@gmail.com",
                "date": "2020-02-13T20:33:53Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2020-02-13T20:33:53Z"
            },
            "message": "Add Modern WWW build (#18028)\n\n* Build both stable and experimental WWW builds\r\n\r\n* Flip already experimental WWW flags to true\r\n\r\n* Remove FB-specific internals from modern FB builds\r\n\r\nWe think we're not going to need these.\r\n\r\n* Disable classic features in modern WWW builds\r\n\r\n* Disable legacy ReactDOM API for modern WWW build\r\n\r\n* Don\u2019t include user timing in prod\r\n\r\n* Fix bad copy paste and add missing flags to test renderer\r\n\r\n* Add testing WWW feature flag file\r\n\r\nWe need it because WWW has a different meaning of experimental now.",
            "tree": {
                "sha": "69a9a169420264cad80bd3797dd289c80d625830",
                "url": "https://api.github.com/repos/facebook/react/git/trees/69a9a169420264cad80bd3797dd289c80d625830"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/8777b44e982e7ddedda62aee02f1fd370795db44",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeRbKxCRBK7hj4Ov3rIwAAdHIIAKulZLLv/C05vondziLuXt0H\nvoYbh9RJI8xruTw7lPTWm2v45tXWmOQOWIA2aBVdnLEUpZSdbz5EsGy/0+6eVjQ4\nsEmJR1g/XOMLjr+cPO0LBgWvgcY8rEiN3OIXCvTqZIJKB7yEbed+MQBchK4Cwyyr\nP9axZ4rc13XLH3XkoMEwG0BIzGwL3UKJcCalxlEvPvH13LYEe5XdlMnw9uJ+omDz\n6rdnCf93zuyJihQ4+9uP7m2GXIe6DHro6fZ8WNVWIXlRzpj07d1nyb+doXPMZ8p3\n5ZWRo7mgiBbHL1aEDkRJbMuNUB9s41m9XCYgAzbdraJ+8vVIrmERnTiNNXvYrTc=\n=HPmz\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 69a9a169420264cad80bd3797dd289c80d625830\nparent 58b8797b7372c9296e65e08ce8297e4a394b7972\nauthor Dan Abramov <dan.abramov@gmail.com> 1581626033 +0000\ncommitter GitHub <noreply@github.com> 1581626033 +0000\n\nAdd Modern WWW build (#18028)\n\n* Build both stable and experimental WWW builds\r\n\r\n* Flip already experimental WWW flags to true\r\n\r\n* Remove FB-specific internals from modern FB builds\r\n\r\nWe think we're not going to need these.\r\n\r\n* Disable classic features in modern WWW builds\r\n\r\n* Disable legacy ReactDOM API for modern WWW build\r\n\r\n* Don\u2019t include user timing in prod\r\n\r\n* Fix bad copy paste and add missing flags to test renderer\r\n\r\n* Add testing WWW feature flag file\r\n\r\nWe need it because WWW has a different meaning of experimental now.\r\n"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/8777b44e982e7ddedda62aee02f1fd370795db44",
        "html_url": "https://github.com/facebook/react/commit/8777b44e982e7ddedda62aee02f1fd370795db44",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/8777b44e982e7ddedda62aee02f1fd370795db44/comments",
        "author": {
            "login": "gaearon",
            "id": 810438,
            "node_id": "MDQ6VXNlcjgxMDQzOA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/810438?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gaearon",
            "html_url": "https://github.com/gaearon",
            "followers_url": "https://api.github.com/users/gaearon/followers",
            "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
            "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
            "organizations_url": "https://api.github.com/users/gaearon/orgs",
            "repos_url": "https://api.github.com/users/gaearon/repos",
            "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gaearon/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "58b8797b7372c9296e65e08ce8297e4a394b7972",
                "url": "https://api.github.com/repos/facebook/react/commits/58b8797b7372c9296e65e08ce8297e4a394b7972",
                "html_url": "https://github.com/facebook/react/commit/58b8797b7372c9296e65e08ce8297e4a394b7972"
            }
        ]
    },
    {
        "sha": "e706721490e50d0bd6af2cd933dbf857fd8b61ed",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6ZTcwNjcyMTQ5MGU1MGQwYmQ2YWYyY2Q5MzNkYmY4NTdmZDhiNjFlZA==",
        "commit": {
            "author": {
                "name": "Dan Abramov",
                "email": "dan.abramov@gmail.com",
                "date": "2020-01-09T14:50:44Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2020-01-09T14:50:44Z"
            },
            "message": "Update Flow to 0.84 (#17805)\n\n* Update Flow to 0.84\r\n\r\n* Fix violations\r\n\r\n* Use inexact object syntax in files from fbsource\r\n\r\n* Fix warning extraction to use a modern parser\r\n\r\n* Codemod inexact objects to new syntax\r\n\r\n* Tighten types that can be exact\r\n\r\n* Revert unintentional formatting changes from codemod",
            "tree": {
                "sha": "3b9cecceba40d3a12c817bdc01ce0780ea73cb9f",
                "url": "https://api.github.com/repos/facebook/react/git/trees/3b9cecceba40d3a12c817bdc01ce0780ea73cb9f"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/e706721490e50d0bd6af2cd933dbf857fd8b61ed",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeFz3ECRBK7hj4Ov3rIwAAdHIIAJhSbfkMvEzYhIoF6RdSgcSt\nPmPxnmb1kfgfxnms/sZyDREfYedR2PU1ahfKahTV0kW2aa0gQKg73l016QKh1oQZ\nRdxJSUTQGXIlh0Ideknt8LPqfxl4npyujdG+uhFuzNVQuYdeDXLd6oHMkRYQqf3E\nT9FAQVISON+2DOW1YE9FCHGKa5FdzbXng6rAWdxVLlKaKCX7oavb5Qzw1maqBBMs\nZECUIiKfApMNP5JYt6qkF7mQj/Ys/5vTFXtcDn3ExsqRgixLkxzTMdzs8yZFWGAU\n6AE5mjTihPi0EzRdl8qkAAAOvOBekwJ2GGbzXE/szlxSetYsOGTS7Al8NPHCCdA=\n=ML/V\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 3b9cecceba40d3a12c817bdc01ce0780ea73cb9f\nparent b979db4e7215957f03c4221622f0b115a868439a\nauthor Dan Abramov <dan.abramov@gmail.com> 1578581444 +0000\ncommitter GitHub <noreply@github.com> 1578581444 +0000\n\nUpdate Flow to 0.84 (#17805)\n\n* Update Flow to 0.84\r\n\r\n* Fix violations\r\n\r\n* Use inexact object syntax in files from fbsource\r\n\r\n* Fix warning extraction to use a modern parser\r\n\r\n* Codemod inexact objects to new syntax\r\n\r\n* Tighten types that can be exact\r\n\r\n* Revert unintentional formatting changes from codemod\r\n"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/e706721490e50d0bd6af2cd933dbf857fd8b61ed",
        "html_url": "https://github.com/facebook/react/commit/e706721490e50d0bd6af2cd933dbf857fd8b61ed",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/e706721490e50d0bd6af2cd933dbf857fd8b61ed/comments",
        "author": {
            "login": "gaearon",
            "id": 810438,
            "node_id": "MDQ6VXNlcjgxMDQzOA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/810438?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gaearon",
            "html_url": "https://github.com/gaearon",
            "followers_url": "https://api.github.com/users/gaearon/followers",
            "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
            "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
            "organizations_url": "https://api.github.com/users/gaearon/orgs",
            "repos_url": "https://api.github.com/users/gaearon/repos",
            "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gaearon/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "b979db4e7215957f03c4221622f0b115a868439a",
                "url": "https://api.github.com/repos/facebook/react/commits/b979db4e7215957f03c4221622f0b115a868439a",
                "html_url": "https://github.com/facebook/react/commit/b979db4e7215957f03c4221622f0b115a868439a"
            }
        ]
    },
    {
        "sha": "7dc9745427046d462506e9788878ba389e176b8a",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6N2RjOTc0NTQyNzA0NmQ0NjI1MDZlOTc4ODg3OGJhMzg5ZTE3NmI4YQ==",
        "commit": {
            "author": {
                "name": "Sebastian Markb\u00e5ge",
                "email": "sema@fb.com",
                "date": "2019-12-18T18:25:43Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2019-12-18T18:25:43Z"
            },
            "message": "[Flight] Chunks API (#17398)\n\n* Add feature flags\r\n\r\n* Add Chunk type and constructor\r\n\r\n* Wire up Chunk support in the reconciler\r\n\r\n* Update reconciler to reconcile Chunks against the render method\r\n\r\nThis allows the query and args to be updated.\r\n\r\n* Drop the ref. Chunks cannot have refs anyway.\r\n\r\n* Add Chunk checks in more missing cases\r\n\r\n* Rename secondArg\r\n\r\n* Add test and fix lazy chunks\r\n\r\nNot really a supported use case but for consistency I guess.\r\n\r\n* Fix fragment test",
            "tree": {
                "sha": "212404e2e59377ba8b058bc525e317334d214019",
                "url": "https://api.github.com/repos/facebook/react/git/trees/212404e2e59377ba8b058bc525e317334d214019"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/7dc9745427046d462506e9788878ba389e176b8a",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJd+m8nCRBK7hj4Ov3rIwAAdHIIAFjG0ZF2sU5xdfZQ0yZ3Sc9m\nXBA+S4XX/sjW4yGQWAw+sBZzsIZcYnXdlqcsEuiIL2lqWNbR738AvL1A635SE7lh\nuIuwlBn3yWyeXJLd4k6XBnl20z1J1b0fJpAfS9PME+FdRaM++9dPwluRwlUDeYFr\nvnKCbH0KBQAWOb2ttUd9T/ohzqGAfael4B31q0V1Le/UCTYncPimSxHjj7itYKrP\nokJqZcWvoHdl6CRbOSCqWK6THkg3UpYfmSqMCpo7TC9/tgdLXjxNg84AW57/f+hf\nqEGmupBgEHbBzyr/jVsyDFWMbZ303DqaKsYEBNfii9dnwrY3UkN8D2F0/pJKkf8=\n=VgOa\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 212404e2e59377ba8b058bc525e317334d214019\nparent 9354dd2752239b72b3c183c75256a7830d2938c0\nauthor Sebastian Markb\u00e5ge <sema@fb.com> 1576693543 +0000\ncommitter GitHub <noreply@github.com> 1576693543 +0000\n\n[Flight] Chunks API (#17398)\n\n* Add feature flags\r\n\r\n* Add Chunk type and constructor\r\n\r\n* Wire up Chunk support in the reconciler\r\n\r\n* Update reconciler to reconcile Chunks against the render method\r\n\r\nThis allows the query and args to be updated.\r\n\r\n* Drop the ref. Chunks cannot have refs anyway.\r\n\r\n* Add Chunk checks in more missing cases\r\n\r\n* Rename secondArg\r\n\r\n* Add test and fix lazy chunks\r\n\r\nNot really a supported use case but for consistency I guess.\r\n\r\n* Fix fragment test\r\n"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/7dc9745427046d462506e9788878ba389e176b8a",
        "html_url": "https://github.com/facebook/react/commit/7dc9745427046d462506e9788878ba389e176b8a",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/7dc9745427046d462506e9788878ba389e176b8a/comments",
        "author": {
            "login": "sebmarkbage",
            "id": 63648,
            "node_id": "MDQ6VXNlcjYzNjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sebmarkbage",
            "html_url": "https://github.com/sebmarkbage",
            "followers_url": "https://api.github.com/users/sebmarkbage/followers",
            "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
            "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
            "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
            "repos_url": "https://api.github.com/users/sebmarkbage/repos",
            "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "9354dd2752239b72b3c183c75256a7830d2938c0",
                "url": "https://api.github.com/repos/facebook/react/commits/9354dd2752239b72b3c183c75256a7830d2938c0",
                "html_url": "https://github.com/facebook/react/commit/9354dd2752239b72b3c183c75256a7830d2938c0"
            }
        ]
    },
    {
        "sha": "0cf22a56a18790ef34c71bef14f64695c0498619",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6MGNmMjJhNTZhMTg3OTBlZjM0YzcxYmVmMTRmNjQ2OTVjMDQ5ODYxOQ==",
        "commit": {
            "author": {
                "name": "Dan Abramov",
                "email": "dan.abramov@gmail.com",
                "date": "2019-12-14T18:09:25Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2019-12-14T18:09:25Z"
            },
            "message": "Use console directly instead of warning() modules (#17599)\n\n* Replace all warning/lowPriWarning with console calls\r\n\r\n* Replace console.warn/error with a custom wrapper at build time\r\n\r\n* Fail the build for console.error/warn() where we can't read the stack",
            "tree": {
                "sha": "2eaa59914e54d92e1e3c7d3ee25ad5a6dd85e480",
                "url": "https://api.github.com/repos/facebook/react/git/trees/2eaa59914e54d92e1e3c7d3ee25ad5a6dd85e480"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/0cf22a56a18790ef34c71bef14f64695c0498619",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJd9SVVCRBK7hj4Ov3rIwAAdHIIAHHHiJmqowDUm9O2MiN+jghO\nV7VoWHbuSRk9rC3ssHSBqBsVXPTyxRh14iT3Xt+wLZt7kj/7zaef6o4RyRzpM+EF\npe97wCgFCa23uotY5klzC0z/bJe/RdtVMyOrufJWSsSAjXZegiGWGF0nosYAw+dq\nmlsBgPeTPSB5280sBhmiphY5eNv6RA53m6OcXSmd0i2EaC9OhnevXdekJyE1zAgb\nCEdfmGm7ufD/jEo68Lt2BXU2r/+TNJLVDtdCEDNvMFHTDBVS0N6Hmbytv3ZkbRcf\nII/wT/Z/GIqWmz54z+JvXTSQyG0SwHam7Y6YwOi6U4wzcJoq5PzDyE+AzKqDvgU=\n=lGMw\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 2eaa59914e54d92e1e3c7d3ee25ad5a6dd85e480\nparent b6c423daadaa35da3f34048628df9635505eecb1\nauthor Dan Abramov <dan.abramov@gmail.com> 1576346965 +0000\ncommitter GitHub <noreply@github.com> 1576346965 +0000\n\nUse console directly instead of warning() modules (#17599)\n\n* Replace all warning/lowPriWarning with console calls\r\n\r\n* Replace console.warn/error with a custom wrapper at build time\r\n\r\n* Fail the build for console.error/warn() where we can't read the stack\r\n"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/0cf22a56a18790ef34c71bef14f64695c0498619",
        "html_url": "https://github.com/facebook/react/commit/0cf22a56a18790ef34c71bef14f64695c0498619",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/0cf22a56a18790ef34c71bef14f64695c0498619/comments",
        "author": {
            "login": "gaearon",
            "id": 810438,
            "node_id": "MDQ6VXNlcjgxMDQzOA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/810438?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gaearon",
            "html_url": "https://github.com/gaearon",
            "followers_url": "https://api.github.com/users/gaearon/followers",
            "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
            "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
            "organizations_url": "https://api.github.com/users/gaearon/orgs",
            "repos_url": "https://api.github.com/users/gaearon/repos",
            "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gaearon/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "b6c423daadaa35da3f34048628df9635505eecb1",
                "url": "https://api.github.com/repos/facebook/react/commits/b6c423daadaa35da3f34048628df9635505eecb1",
                "html_url": "https://github.com/facebook/react/commit/b6c423daadaa35da3f34048628df9635505eecb1"
            }
        ]
    },
    {
        "sha": "b15bf36750ca4c4a5a09f2de76c5315ded1258d0",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6YjE1YmYzNjc1MGNhNGM0YTVhMDlmMmRlNzZjNTMxNWRlZDEyNThkMA==",
        "commit": {
            "author": {
                "name": "Dan Abramov",
                "email": "dan.abramov@gmail.com",
                "date": "2019-12-12T23:47:55Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2019-12-12T23:47:55Z"
            },
            "message": "Add component stacks to (almost) all warnings (#17586)",
            "tree": {
                "sha": "0cbff58fb1f2082233601c4ef8e6b00faf7e77d6",
                "url": "https://api.github.com/repos/facebook/react/git/trees/0cbff58fb1f2082233601c4ef8e6b00faf7e77d6"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/b15bf36750ca4c4a5a09f2de76c5315ded1258d0",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJd8tGrCRBK7hj4Ov3rIwAAdHIIAHww0po1RKo49KaFPan+hv9n\nZgsb9685FFL/a8P2lb7jLBQYuPlubmfrJGJZmb2rkW2kncLhOZgUnLUYMc+kWCcL\n5H9jU1w3ExcxbVGVsZI7bOYJhmMdmx5f8UnR0uLglEDFtiKEPV4SaNH1QXYdom9v\nbRxZnyUVck+ereYWAaK3NpXjYEcm4HdqMXVK1UTj3HSeB0/uppbzBNUCAdh3SPgL\n5Lfb6Kz7kCi7/jFKHLiMupqJdqtjcURWbuhJ+TxsfMl/hA/Dw3THthnkWJZFDWGm\nEelUMn9GfEwLRLC9YMmNFT5s2E6omCDX/yNEJsciccgUvg3Cpd0JcmaOSzgZ+mE=\n=xtJE\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 0cbff58fb1f2082233601c4ef8e6b00faf7e77d6\nparent 612a76812fce2354aa37e8cbcc1b39bba3e9a97b\nauthor Dan Abramov <dan.abramov@gmail.com> 1576194475 +0000\ncommitter GitHub <noreply@github.com> 1576194475 +0000\n\nAdd component stacks to (almost) all warnings (#17586)\n\n"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/b15bf36750ca4c4a5a09f2de76c5315ded1258d0",
        "html_url": "https://github.com/facebook/react/commit/b15bf36750ca4c4a5a09f2de76c5315ded1258d0",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/b15bf36750ca4c4a5a09f2de76c5315ded1258d0/comments",
        "author": {
            "login": "gaearon",
            "id": 810438,
            "node_id": "MDQ6VXNlcjgxMDQzOA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/810438?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gaearon",
            "html_url": "https://github.com/gaearon",
            "followers_url": "https://api.github.com/users/gaearon/followers",
            "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
            "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
            "organizations_url": "https://api.github.com/users/gaearon/orgs",
            "repos_url": "https://api.github.com/users/gaearon/repos",
            "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gaearon/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "612a76812fce2354aa37e8cbcc1b39bba3e9a97b",
                "url": "https://api.github.com/repos/facebook/react/commits/612a76812fce2354aa37e8cbcc1b39bba3e9a97b",
                "html_url": "https://github.com/facebook/react/commit/612a76812fce2354aa37e8cbcc1b39bba3e9a97b"
            }
        ]
    },
    {
        "sha": "9ac42dd074c42b66ecc0334b75200b1d2989f892",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6OWFjNDJkZDA3NGM0MmI2NmVjYzAzMzRiNzUyMDBiMWQyOTg5Zjg5Mg==",
        "commit": {
            "author": {
                "name": "Laura buns",
                "email": "walaura@fb.com",
                "date": "2019-12-11T03:28:14Z"
            },
            "committer": {
                "name": "Dan Abramov",
                "email": "dan.abramov@gmail.com",
                "date": "2019-12-11T03:28:14Z"
            },
            "message": "Remove the condition argument from warning() (#17568)\n\n* prep for codemod\r\n\r\n* prep warnings\r\n\r\n* rename lint rules\r\n\r\n* codemod for ifs\r\n\r\n* shim www functions\r\n\r\n* Handle more cases in the transform\r\n\r\n* Thanks De Morgan\r\n\r\n* Run the codemod\r\n\r\n* Delete the transform\r\n\r\n* Fix up confusing conditions manually\r\n\r\n* Fix up www shims to match expected API\r\n\r\n* Also check for low-pri warning in the lint rule",
            "tree": {
                "sha": "7f89c79d9b05d34f554e5496b023846d1382d968",
                "url": "https://api.github.com/repos/facebook/react/git/trees/7f89c79d9b05d34f554e5496b023846d1382d968"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/9ac42dd074c42b66ecc0334b75200b1d2989f892",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/9ac42dd074c42b66ecc0334b75200b1d2989f892",
        "html_url": "https://github.com/facebook/react/commit/9ac42dd074c42b66ecc0334b75200b1d2989f892",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/9ac42dd074c42b66ecc0334b75200b1d2989f892/comments",
        "author": {
            "login": "walaura",
            "id": 11539094,
            "node_id": "MDQ6VXNlcjExNTM5MDk0",
            "avatar_url": "https://avatars.githubusercontent.com/u/11539094?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/walaura",
            "html_url": "https://github.com/walaura",
            "followers_url": "https://api.github.com/users/walaura/followers",
            "following_url": "https://api.github.com/users/walaura/following{/other_user}",
            "gists_url": "https://api.github.com/users/walaura/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/walaura/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/walaura/subscriptions",
            "organizations_url": "https://api.github.com/users/walaura/orgs",
            "repos_url": "https://api.github.com/users/walaura/repos",
            "events_url": "https://api.github.com/users/walaura/events{/privacy}",
            "received_events_url": "https://api.github.com/users/walaura/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "gaearon",
            "id": 810438,
            "node_id": "MDQ6VXNlcjgxMDQzOA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/810438?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gaearon",
            "html_url": "https://github.com/gaearon",
            "followers_url": "https://api.github.com/users/gaearon/followers",
            "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
            "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
            "organizations_url": "https://api.github.com/users/gaearon/orgs",
            "repos_url": "https://api.github.com/users/gaearon/repos",
            "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gaearon/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "7bf40e1cfdb780788700a41bf30163fdb8d105a3",
                "url": "https://api.github.com/repos/facebook/react/commits/7bf40e1cfdb780788700a41bf30163fdb8d105a3",
                "html_url": "https://github.com/facebook/react/commit/7bf40e1cfdb780788700a41bf30163fdb8d105a3"
            }
        ]
    },
    {
        "sha": "b8f8258775211d2d3b1b144cc6c75148ecd4b8d8",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6YjhmODI1ODc3NTIxMWQyZDNiMWIxNDRjYzZjNzUxNDhlY2Q0YjhkOA==",
        "commit": {
            "author": {
                "name": "Dan Abramov",
                "email": "dan.abramov@gmail.com",
                "date": "2019-11-10T13:43:29Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2019-11-10T13:43:29Z"
            },
            "message": "Split ReactDOM entry point (#17331)\n\n* Split ReactDOM entry point\r\n\r\n* BatchedRoot -> BlockingRoot",
            "tree": {
                "sha": "bf4cabefb36b090531f635f40662e4f3e18411b3",
                "url": "https://api.github.com/repos/facebook/react/git/trees/bf4cabefb36b090531f635f40662e4f3e18411b3"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/b8f8258775211d2d3b1b144cc6c75148ecd4b8d8",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdyBQBCRBK7hj4Ov3rIwAAdHIIADgxlZV3JXlEDl5RpH0DS3U2\nWQ+13zhL9A4HJKATnTY/Ey7MetvTR6ovHi8U7rQ8md6FWc643awKoffO3PmMZtUO\nD70097KmPAngEtOFltiBueYRYlvisXMsaWNiX9P8HIpDblRXgkGc+SD/VWKIfLu8\naMPG1ICPNP82O9W9iZZG1mfYRqluxnwPpmdYP66RU9INjNMPmzzOlkmEFsLZU3nP\npdVOR5bEiz/HE5ntpojmkGezREMWbSe+uMfIwG6PiffRCkGBngrfuYo6q/SpWYH3\n/R7sw6JThEkMo240SHybldvakp5EJptoictM4K+7cFmtXJsmrsrvsAXFuMCCPhc=\n=7E91\n-----END PGP SIGNATURE-----\n",
                "payload": "tree bf4cabefb36b090531f635f40662e4f3e18411b3\nparent a7b4d51a20a00f0f60b113c3a02326ccf69aef82\nauthor Dan Abramov <dan.abramov@gmail.com> 1573393409 +0000\ncommitter GitHub <noreply@github.com> 1573393409 +0000\n\nSplit ReactDOM entry point (#17331)\n\n* Split ReactDOM entry point\r\n\r\n* BatchedRoot -> BlockingRoot\r\n"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/b8f8258775211d2d3b1b144cc6c75148ecd4b8d8",
        "html_url": "https://github.com/facebook/react/commit/b8f8258775211d2d3b1b144cc6c75148ecd4b8d8",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/b8f8258775211d2d3b1b144cc6c75148ecd4b8d8/comments",
        "author": {
            "login": "gaearon",
            "id": 810438,
            "node_id": "MDQ6VXNlcjgxMDQzOA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/810438?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gaearon",
            "html_url": "https://github.com/gaearon",
            "followers_url": "https://api.github.com/users/gaearon/followers",
            "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
            "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
            "organizations_url": "https://api.github.com/users/gaearon/orgs",
            "repos_url": "https://api.github.com/users/gaearon/repos",
            "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gaearon/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "a7b4d51a20a00f0f60b113c3a02326ccf69aef82",
                "url": "https://api.github.com/repos/facebook/react/commits/a7b4d51a20a00f0f60b113c3a02326ccf69aef82",
                "html_url": "https://github.com/facebook/react/commit/a7b4d51a20a00f0f60b113c3a02326ccf69aef82"
            }
        ]
    },
    {
        "sha": "f6b8d31a76cbbcbbeb2f1d59074dfe72e0c82806",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6ZjZiOGQzMWE3NmNiYmNiYmViMmYxZDU5MDc0ZGZlNzJlMGM4MjgwNg==",
        "commit": {
            "author": {
                "name": "Dan Abramov",
                "email": "dan.abramov@gmail.com",
                "date": "2019-10-23T22:04:39Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2019-10-23T22:04:39Z"
            },
            "message": "Rename createSyncRoot to createBlockingRoot (#17165)\n\n* Rename createSyncRoot to createBlockingRoot\r\n\r\n* Fix up",
            "tree": {
                "sha": "0702e140ca05d822b47d857976c5d1283241d3e0",
                "url": "https://api.github.com/repos/facebook/react/git/trees/0702e140ca05d822b47d857976c5d1283241d3e0"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/f6b8d31a76cbbcbbeb2f1d59074dfe72e0c82806",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdsM53CRBK7hj4Ov3rIwAAdHIIAG9JpNE78ESDachGOBzoCAxw\n9FsHCLQZqoERxZ+jPyx8aEc46LYBAFwwP9MEJaDMuDQ8C35/SJXDT+aWqAclh4Ka\n4dasdECpgYw4FO2HKf6mpmLhQ/7Xi+iOxZgUpyZc+guPBhVuLbbCF7Wj2hk8qVvZ\nWXrdHvhIicQN5RapfP9TGtRpat04srIYf/zvWzZQZhRU3az+5CnXC0cgucXR46Oe\ntJtcHUcpq/vLsTPtu8DufYB2U749kXcQBiid/5qiMMpo28+9z01NzlilRcB6SXUV\nFFgYYk59Y26L0iN3SB5SOfCuffUR27rpPNWhSUCnHPYB9cNPRI/oh2+TGLy8jY8=\n=e5Vi\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 0702e140ca05d822b47d857976c5d1283241d3e0\nparent 9c02d26549054090042403c2284f30bd916df30d\nauthor Dan Abramov <dan.abramov@gmail.com> 1571868279 -0700\ncommitter GitHub <noreply@github.com> 1571868279 -0700\n\nRename createSyncRoot to createBlockingRoot (#17165)\n\n* Rename createSyncRoot to createBlockingRoot\r\n\r\n* Fix up\r\n"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/f6b8d31a76cbbcbbeb2f1d59074dfe72e0c82806",
        "html_url": "https://github.com/facebook/react/commit/f6b8d31a76cbbcbbeb2f1d59074dfe72e0c82806",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/f6b8d31a76cbbcbbeb2f1d59074dfe72e0c82806/comments",
        "author": {
            "login": "gaearon",
            "id": 810438,
            "node_id": "MDQ6VXNlcjgxMDQzOA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/810438?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gaearon",
            "html_url": "https://github.com/gaearon",
            "followers_url": "https://api.github.com/users/gaearon/followers",
            "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
            "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
            "organizations_url": "https://api.github.com/users/gaearon/orgs",
            "repos_url": "https://api.github.com/users/gaearon/repos",
            "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gaearon/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "9c02d26549054090042403c2284f30bd916df30d",
                "url": "https://api.github.com/repos/facebook/react/commits/9c02d26549054090042403c2284f30bd916df30d",
                "html_url": "https://github.com/facebook/react/commit/9c02d26549054090042403c2284f30bd916df30d"
            }
        ]
    },
    {
        "sha": "70754f10d4119a999ac9a46b6ea8c11a12a1a72d",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6NzA3NTRmMTBkNDExOWE5OTlhYzlhNDZiNmVhOGMxMWExMmExYTcyZA==",
        "commit": {
            "author": {
                "name": "Dominic Gannaway",
                "email": "trueadm@users.noreply.github.com",
                "date": "2019-09-23T14:39:43Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2019-09-23T14:39:43Z"
            },
            "message": "[react-interaction] Tweak Focus Table component (#16862)",
            "tree": {
                "sha": "766c3ef72b7fc26f0f48d125341d207f64a90e8d",
                "url": "https://api.github.com/repos/facebook/react/git/trees/766c3ef72b7fc26f0f48d125341d207f64a90e8d"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/70754f10d4119a999ac9a46b6ea8c11a12a1a72d",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdiNkwCRBK7hj4Ov3rIwAAdHIIAA7EB7h2BvuDnTPF1NExRNJ1\n/tpC+glLHvCmx5hu9sxY4L7np41tYaIwpeSeCA7OFLdWYHaJbLRVXs0IV1MOVSay\naCRaZU9BR+BHhkg6iMXZvfcUg2OWrSHGQfF3lh+hpHEfFSfo3wBaJCquqacpGUgV\nAte4tddQnI89vBY3WYDhU2Ae63Zn7LxZU4QdmmRWN0ujASCpkFE921acnQ/vpp6N\nGNaO2+qh1luuF7eZidvwSuYAD0dXrV8hECfIheQdQBLVkLoMWII/e3fJ7A97k5AL\nkeXrVfrLwDpIOaiKiwZscGKcrt40EM5hVKRyPQogYzB302KarED50xO8udr61tA=\n=WhSW\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 766c3ef72b7fc26f0f48d125341d207f64a90e8d\nparent d7f6dd5a80827aea76fc42f07c77d05abb7180b2\nauthor Dominic Gannaway <trueadm@users.noreply.github.com> 1569249583 +0200\ncommitter GitHub <noreply@github.com> 1569249583 +0200\n\n[react-interaction] Tweak Focus Table component (#16862)\n\n"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/70754f10d4119a999ac9a46b6ea8c11a12a1a72d",
        "html_url": "https://github.com/facebook/react/commit/70754f10d4119a999ac9a46b6ea8c11a12a1a72d",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/70754f10d4119a999ac9a46b6ea8c11a12a1a72d/comments",
        "author": {
            "login": "trueadm",
            "id": 1519870,
            "node_id": "MDQ6VXNlcjE1MTk4NzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1519870?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/trueadm",
            "html_url": "https://github.com/trueadm",
            "followers_url": "https://api.github.com/users/trueadm/followers",
            "following_url": "https://api.github.com/users/trueadm/following{/other_user}",
            "gists_url": "https://api.github.com/users/trueadm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/trueadm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/trueadm/subscriptions",
            "organizations_url": "https://api.github.com/users/trueadm/orgs",
            "repos_url": "https://api.github.com/users/trueadm/repos",
            "events_url": "https://api.github.com/users/trueadm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/trueadm/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "d7f6dd5a80827aea76fc42f07c77d05abb7180b2",
                "url": "https://api.github.com/repos/facebook/react/commits/d7f6dd5a80827aea76fc42f07c77d05abb7180b2",
                "html_url": "https://github.com/facebook/react/commit/d7f6dd5a80827aea76fc42f07c77d05abb7180b2"
            }
        ]
    },
    {
        "sha": "bd79be9b687156067416ffe5219e49a11bd0f1e7",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6YmQ3OWJlOWI2ODcxNTYwNjc0MTZmZmU1MjE5ZTQ5YTExYmQwZjFlNw==",
        "commit": {
            "author": {
                "name": "Dominic Gannaway",
                "email": "trueadm@users.noreply.github.com",
                "date": "2019-08-29T11:06:51Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2019-08-29T11:06:51Z"
            },
            "message": "[react-core] Add experimental React Scope component API (#16587)",
            "tree": {
                "sha": "94ca4aa5471bb0cb9d226a0d566a9b52c97fdea0",
                "url": "https://api.github.com/repos/facebook/react/git/trees/94ca4aa5471bb0cb9d226a0d566a9b52c97fdea0"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/bd79be9b687156067416ffe5219e49a11bd0f1e7",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdZ7HLCRBK7hj4Ov3rIwAAdHIIAI9+noqVUseIzODgIvXSeaRH\nLK1B4jsocmUT5v2abmug+9xUiTF7GoBYLAEuzxVpCf1UUg9icd1hfxZod7hXAgVM\nx2pJhBRb4Fu64xDVAAjrGT+CzguncT+h0S8tBupUvzYcUnrtbpw1pxNjShLXfJvV\nQaZpa3JYshO7nCG3eIbU19MxyBjtsOraqO7yilQbw3BVlvc8mAQBK0pQaWn32Iin\notXo5cRNOxlBtAdJrjivJZIcF+ZO47/dZvQTSMNCMYeHqjYJxImZVLAXmPK6M46k\no2Z3bjqHIGkp1aeiFgozVPZckjfLITVGFe4lpNw9U6Ay61me4DuJNUEWuVmLBq4=\n=ob9d\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 94ca4aa5471bb0cb9d226a0d566a9b52c97fdea0\nparent 996acf9036b8fcf39cca8dc63102d677d529afe2\nauthor Dominic Gannaway <trueadm@users.noreply.github.com> 1567076811 +0100\ncommitter GitHub <noreply@github.com> 1567076811 +0100\n\n[react-core] Add experimental React Scope component API (#16587)\n\n"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/bd79be9b687156067416ffe5219e49a11bd0f1e7",
        "html_url": "https://github.com/facebook/react/commit/bd79be9b687156067416ffe5219e49a11bd0f1e7",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/bd79be9b687156067416ffe5219e49a11bd0f1e7/comments",
        "author": {
            "login": "trueadm",
            "id": 1519870,
            "node_id": "MDQ6VXNlcjE1MTk4NzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1519870?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/trueadm",
            "html_url": "https://github.com/trueadm",
            "followers_url": "https://api.github.com/users/trueadm/followers",
            "following_url": "https://api.github.com/users/trueadm/following{/other_user}",
            "gists_url": "https://api.github.com/users/trueadm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/trueadm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/trueadm/subscriptions",
            "organizations_url": "https://api.github.com/users/trueadm/orgs",
            "repos_url": "https://api.github.com/users/trueadm/repos",
            "events_url": "https://api.github.com/users/trueadm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/trueadm/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "996acf9036b8fcf39cca8dc63102d677d529afe2",
                "url": "https://api.github.com/repos/facebook/react/commits/996acf9036b8fcf39cca8dc63102d677d529afe2",
                "html_url": "https://github.com/facebook/react/commit/996acf9036b8fcf39cca8dc63102d677d529afe2"
            }
        ]
    },
    {
        "sha": "1fd3906e92ea231848c5b50a99303d4ac3dc7977",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6MWZkMzkwNmU5MmVhMjMxODQ4YzViNTBhOTkzMDNkNGFjM2RjNzk3Nw==",
        "commit": {
            "author": {
                "name": "Dan Abramov",
                "email": "dan.abramov@gmail.com",
                "date": "2019-08-13T21:03:29Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2019-08-13T21:03:29Z"
            },
            "message": "Remove \"Waiting for async callback\" User Timing measurement (#16379)\n\n* Remove \"Waiting for async callback\" User Timing measurement\r\n\r\n* Fix User Timing in PROD mode",
            "tree": {
                "sha": "260380450aaaee9385d2b016834c6032c7b674c5",
                "url": "https://api.github.com/repos/facebook/react/git/trees/260380450aaaee9385d2b016834c6032c7b674c5"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/1fd3906e92ea231848c5b50a99303d4ac3dc7977",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdUyWhCRBK7hj4Ov3rIwAAdHIIACTbraxMahsxHRs4nM8cBnEm\ntBBlfmGh3HezbmdMdEy+of/0Ex8ajSh9zE7i6VXCmibaVupexsYzHToH3konp6qh\n2sYWffPmg7Vd6XkyoaMVpEj+vAh3nEEJNG1YKETzPrFE6LFqLh3wQU+npQvKJFVt\nfgyKaD3VkcTwiv5sCdJ8uCOTcCqnjvq3ZRAhKkXnaWyiJmk7+APsEXyCowN8QxmB\nPNFonqFkEolSmEqAxi5WtQ2/JCRwz+phdcNzdglvIRPKFIx7QzWmmsYZHQqgosQ9\nn6TUBpqBt6MwUltx29gPUlw7Ra5+w/pwZKqaQ3WGSX99Q+UElJpC/A+LxdJPdHE=\n=rHne\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 260380450aaaee9385d2b016834c6032c7b674c5\nparent 89bbffed6e84246f12332f40a2557c4f05070d3b\nauthor Dan Abramov <dan.abramov@gmail.com> 1565730209 +0100\ncommitter GitHub <noreply@github.com> 1565730209 +0100\n\nRemove \"Waiting for async callback\" User Timing measurement (#16379)\n\n* Remove \"Waiting for async callback\" User Timing measurement\r\n\r\n* Fix User Timing in PROD mode\r\n"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/1fd3906e92ea231848c5b50a99303d4ac3dc7977",
        "html_url": "https://github.com/facebook/react/commit/1fd3906e92ea231848c5b50a99303d4ac3dc7977",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/1fd3906e92ea231848c5b50a99303d4ac3dc7977/comments",
        "author": {
            "login": "gaearon",
            "id": 810438,
            "node_id": "MDQ6VXNlcjgxMDQzOA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/810438?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gaearon",
            "html_url": "https://github.com/gaearon",
            "followers_url": "https://api.github.com/users/gaearon/followers",
            "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
            "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
            "organizations_url": "https://api.github.com/users/gaearon/orgs",
            "repos_url": "https://api.github.com/users/gaearon/repos",
            "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gaearon/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "89bbffed6e84246f12332f40a2557c4f05070d3b",
                "url": "https://api.github.com/repos/facebook/react/commits/89bbffed6e84246f12332f40a2557c4f05070d3b",
                "html_url": "https://github.com/facebook/react/commit/89bbffed6e84246f12332f40a2557c4f05070d3b"
            }
        ]
    },
    {
        "sha": "50addf4c0e411e351de7290c8c60ec775c25c8c4",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6NTBhZGRmNGMwZTQxMWUzNTFkZTcyOTBjOGM2MGVjNzc1YzI1YzhjNA==",
        "commit": {
            "author": {
                "name": "Sebastian Markb\u00e5ge",
                "email": "sema@fb.com",
                "date": "2019-08-12T22:58:38Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2019-08-12T22:58:38Z"
            },
            "message": "Refactor Partial Hydration (#16346)\n\n* Move dehydrated to be child of regular SuspenseComponent\r\n\r\nWe now store the comment node on SuspenseState instead and that indicates\r\nthat this SuspenseComponent is still dehydrated.\r\n\r\nWe also store a child but that is only used to represent the DOM node for\r\ndeletions and getNextHostSibling.\r\n\r\n* Move logic from DehydratedSuspenseComponent to SuspenseComponent\r\n\r\nForked based on SuspenseState.dehydrated instead.\r\n\r\n* Retry logic for dehydrated boundary\r\n\r\nWe can now simplify the logic for retrying dehydrated boundaries without\r\nhydrating. This is becomes simply a reconciliation against the dehydrated\r\nfragment which gets deleted, and the new children gets inserted.\r\n\r\n* Remove dehydrated from throw\r\n\r\nInstead we use the regular Suspense path. To save code, we attach retry\r\nlisteners in the commit phase even though technically we don't have to.\r\n\r\n* Pop to nearest Suspense\r\n\r\nI think this is right...?\r\n\r\n* Popping hydration state should skip past the dehydrated instance\r\n\r\n* Split mount from update and special case suspended second pass\r\n\r\nThe DidCapture flag isn't used consistently in the same way. We need\r\nfurther refactor for this.\r\n\r\n* Reorganize update path\r\n\r\nIf we remove the dehydration status in the first pass and then do a second\r\npass because we suspended, then we need to continue as if it didn't\r\npreviously suspend. Since there is no fragment child etc.\r\n\r\nHowever, we must readd the deletion.\r\n\r\n* Schedule context work on the boundary and not the child\r\n\r\n* Warn for Suspense hydration in legacy mode\r\n\r\nIt does a two pass render that client renders the content.\r\n\r\n* Rename DehydratedSuspenseComponent -> DehydratedFragment\r\n\r\nThis now doesn't represent a suspense boundary itself. Its parent does.\r\n\r\nThis Fiber represents the fragment around the dehydrated content.\r\n\r\n* Refactor returns\r\n\r\nAvoids the temporary mutable variables. I kept losing track of them.\r\n\r\n* Add a comment explaining the type.\r\n\r\nPlacing it in the type since that's the central point as opposed to spread\r\nout.",
            "tree": {
                "sha": "9b2e1b9576a27e7e726b2ff46c0544a571c5cdb0",
                "url": "https://api.github.com/repos/facebook/react/git/trees/9b2e1b9576a27e7e726b2ff46c0544a571c5cdb0"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/50addf4c0e411e351de7290c8c60ec775c25c8c4",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdUe8eCRBK7hj4Ov3rIwAAdHIIAIEt7eyxXWfI5y2eikzztkrH\naw6VblZ/tgHrR+xZAkS01W2PukGz+sWZzl5i57lEvrCn8dpPcV7uZICQ2Egs2kUG\nCtiHsbyfU7+9FP8ohTsY4UQODH4YplDOsgrbDYUdThgCel3KOH0PZz3JdEMu9xDW\nmKkH1qN1/p9SDD2vhtahGzXlMX6RXOa1bfc3B6Ii2caX/dRKKgVzXceRk2VVlnBD\n5GcaLNobtUq/muaPrHRfVbka9MgA+4+36fHfCDi5M9RsBcBhg+3yosIp0PyHVEau\nPbd63f319gAbiVoWBes3xeT7bveBboy9f/SEPD0gGF+9rAQ5HnjdN3Z3wzNROJU=\n=dVkr\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 9b2e1b9576a27e7e726b2ff46c0544a571c5cdb0\nparent c2034716a5bff586ab68c41a14139a535cbd788e\nauthor Sebastian Markb\u00e5ge <sema@fb.com> 1565650718 -0700\ncommitter GitHub <noreply@github.com> 1565650718 -0700\n\nRefactor Partial Hydration (#16346)\n\n* Move dehydrated to be child of regular SuspenseComponent\r\n\r\nWe now store the comment node on SuspenseState instead and that indicates\r\nthat this SuspenseComponent is still dehydrated.\r\n\r\nWe also store a child but that is only used to represent the DOM node for\r\ndeletions and getNextHostSibling.\r\n\r\n* Move logic from DehydratedSuspenseComponent to SuspenseComponent\r\n\r\nForked based on SuspenseState.dehydrated instead.\r\n\r\n* Retry logic for dehydrated boundary\r\n\r\nWe can now simplify the logic for retrying dehydrated boundaries without\r\nhydrating. This is becomes simply a reconciliation against the dehydrated\r\nfragment which gets deleted, and the new children gets inserted.\r\n\r\n* Remove dehydrated from throw\r\n\r\nInstead we use the regular Suspense path. To save code, we attach retry\r\nlisteners in the commit phase even though technically we don't have to.\r\n\r\n* Pop to nearest Suspense\r\n\r\nI think this is right...?\r\n\r\n* Popping hydration state should skip past the dehydrated instance\r\n\r\n* Split mount from update and special case suspended second pass\r\n\r\nThe DidCapture flag isn't used consistently in the same way. We need\r\nfurther refactor for this.\r\n\r\n* Reorganize update path\r\n\r\nIf we remove the dehydration status in the first pass and then do a second\r\npass because we suspended, then we need to continue as if it didn't\r\npreviously suspend. Since there is no fragment child etc.\r\n\r\nHowever, we must readd the deletion.\r\n\r\n* Schedule context work on the boundary and not the child\r\n\r\n* Warn for Suspense hydration in legacy mode\r\n\r\nIt does a two pass render that client renders the content.\r\n\r\n* Rename DehydratedSuspenseComponent -> DehydratedFragment\r\n\r\nThis now doesn't represent a suspense boundary itself. Its parent does.\r\n\r\nThis Fiber represents the fragment around the dehydrated content.\r\n\r\n* Refactor returns\r\n\r\nAvoids the temporary mutable variables. I kept losing track of them.\r\n\r\n* Add a comment explaining the type.\r\n\r\nPlacing it in the type since that's the central point as opposed to spread\r\nout.\r\n"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/50addf4c0e411e351de7290c8c60ec775c25c8c4",
        "html_url": "https://github.com/facebook/react/commit/50addf4c0e411e351de7290c8c60ec775c25c8c4",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/50addf4c0e411e351de7290c8c60ec775c25c8c4/comments",
        "author": {
            "login": "sebmarkbage",
            "id": 63648,
            "node_id": "MDQ6VXNlcjYzNjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sebmarkbage",
            "html_url": "https://github.com/sebmarkbage",
            "followers_url": "https://api.github.com/users/sebmarkbage/followers",
            "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
            "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
            "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
            "repos_url": "https://api.github.com/users/sebmarkbage/repos",
            "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "c2034716a5bff586ab68c41a14139a535cbd788e",
                "url": "https://api.github.com/repos/facebook/react/commits/c2034716a5bff586ab68c41a14139a535cbd788e",
                "html_url": "https://github.com/facebook/react/commit/c2034716a5bff586ab68c41a14139a535cbd788e"
            }
        ]
    },
    {
        "sha": "42794557ca44a8c05c71aab698d44d1294236538",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6NDI3OTQ1NTdjYTQ0YThjMDVjNzFhYWI2OThkNDRkMTI5NDIzNjUzOA==",
        "commit": {
            "author": {
                "name": "Dominic Gannaway",
                "email": "trueadm@users.noreply.github.com",
                "date": "2019-08-01T18:08:54Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2019-08-01T18:08:54Z"
            },
            "message": "[Flare] Tweaks to Flare system design and API (#16264)",
            "tree": {
                "sha": "a0c3ea5132e1d977340f30124d6548680cabb2ee",
                "url": "https://api.github.com/repos/facebook/react/git/trees/a0c3ea5132e1d977340f30124d6548680cabb2ee"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/42794557ca44a8c05c71aab698d44d1294236538",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdQyq2CRBK7hj4Ov3rIwAAdHIIAJzeeQUz01+agvs3Kgwz/KYW\nVn0nqi9drfZjAIWYNdKkh/ju9qSITGw+iH4x1ncpM0FLcRld/Hu7hIkjxBd6ynxL\nU+Tgpt8N9qWSpK2mDFvkWC6quzZbKmFyF3T5SCWuHbELo8/n5i4s9qze5a/+JIC9\nidC9BwuasqD+UKBdorLS0/EuhoaDaif+GLsfbfyk3SnqjjZyadAP1rees+V1Jj41\nf/apZXr/X6Hk9km33iFH0hlSpjxoChZNv+FVlsZ/K0QR2HVwaRHk1M6H2hU+Oqhe\nTzfLVg6bczddLkv+YJoWlxLxkg0KJz6c9WEEXqmlHrvS/TF+m4biqlAaxT0MISA=\n=pa0W\n-----END PGP SIGNATURE-----\n",
                "payload": "tree a0c3ea5132e1d977340f30124d6548680cabb2ee\nparent b5af4fe3c64e1ac254e8fd101fec2f8e414aabf6\nauthor Dominic Gannaway <trueadm@users.noreply.github.com> 1564682934 +0100\ncommitter GitHub <noreply@github.com> 1564682934 +0100\n\n[Flare] Tweaks to Flare system design and API (#16264)\n\n"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/42794557ca44a8c05c71aab698d44d1294236538",
        "html_url": "https://github.com/facebook/react/commit/42794557ca44a8c05c71aab698d44d1294236538",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/42794557ca44a8c05c71aab698d44d1294236538/comments",
        "author": {
            "login": "trueadm",
            "id": 1519870,
            "node_id": "MDQ6VXNlcjE1MTk4NzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1519870?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/trueadm",
            "html_url": "https://github.com/trueadm",
            "followers_url": "https://api.github.com/users/trueadm/followers",
            "following_url": "https://api.github.com/users/trueadm/following{/other_user}",
            "gists_url": "https://api.github.com/users/trueadm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/trueadm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/trueadm/subscriptions",
            "organizations_url": "https://api.github.com/users/trueadm/orgs",
            "repos_url": "https://api.github.com/users/trueadm/repos",
            "events_url": "https://api.github.com/users/trueadm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/trueadm/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "b5af4fe3c64e1ac254e8fd101fec2f8e414aabf6",
                "url": "https://api.github.com/repos/facebook/react/commits/b5af4fe3c64e1ac254e8fd101fec2f8e414aabf6",
                "html_url": "https://github.com/facebook/react/commit/b5af4fe3c64e1ac254e8fd101fec2f8e414aabf6"
            }
        ]
    },
    {
        "sha": "509889119360ed83ca6ef3f83bcf01e5aa7dcd81",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6NTA5ODg5MTE5MzYwZWQ4M2NhNmVmM2Y4M2JjZjAxZTVhYTdkY2Q4MQ==",
        "commit": {
            "author": {
                "name": "Dominic Gannaway",
                "email": "trueadm@users.noreply.github.com",
                "date": "2019-07-23T22:46:44Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2019-07-23T22:46:44Z"
            },
            "message": "[Flare] Redesign core event system (#16163)",
            "tree": {
                "sha": "c1aeffd6741dfba4b18ca68ae1fcbb98f5b9c8bf",
                "url": "https://api.github.com/repos/facebook/react/git/trees/c1aeffd6741dfba4b18ca68ae1fcbb98f5b9c8bf"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/509889119360ed83ca6ef3f83bcf01e5aa7dcd81",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdN45UCRBK7hj4Ov3rIwAAdHIIAKYNKVNr5RiYLsLOhGy5sIpA\nFBwkFPwryqVJveSL6mNzFKF2ybpGTu3aT1ajAyCzL5DsS5gd7+gx/6ymVpf+kpT5\nGNUYELFlPhySWIbMN0e3OC5hQXK0Vx2yBJVQB5XRMY6Jt4uXucSWfvAlyey18zvc\nS3ljtHqhoYgSQMvyiZK7fV/SIv/ESk2mxAKcxvsrIKjrV9dzw83yjdu6cIQ7MWq2\nyJFIdwXdV7OSI8r9RAhqyzIKqYbO4nd8sQDaEE4+fVsPdqoF8dWrtfXTnyYErlx1\nX3LNXWhDNj8/5ch4uO90Ctx4zEUmTu5oUUe4AJvbaz8c+IYc0bMN8MpTEILWRvg=\n=hiTj\n-----END PGP SIGNATURE-----\n",
                "payload": "tree c1aeffd6741dfba4b18ca68ae1fcbb98f5b9c8bf\nparent 19354db511e74d96a1c8b6d8b589a72f025da498\nauthor Dominic Gannaway <trueadm@users.noreply.github.com> 1563922004 +0100\ncommitter GitHub <noreply@github.com> 1563922004 +0100\n\n[Flare] Redesign core event system (#16163)\n\n"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/509889119360ed83ca6ef3f83bcf01e5aa7dcd81",
        "html_url": "https://github.com/facebook/react/commit/509889119360ed83ca6ef3f83bcf01e5aa7dcd81",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/509889119360ed83ca6ef3f83bcf01e5aa7dcd81/comments",
        "author": {
            "login": "trueadm",
            "id": 1519870,
            "node_id": "MDQ6VXNlcjE1MTk4NzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1519870?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/trueadm",
            "html_url": "https://github.com/trueadm",
            "followers_url": "https://api.github.com/users/trueadm/followers",
            "following_url": "https://api.github.com/users/trueadm/following{/other_user}",
            "gists_url": "https://api.github.com/users/trueadm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/trueadm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/trueadm/subscriptions",
            "organizations_url": "https://api.github.com/users/trueadm/orgs",
            "repos_url": "https://api.github.com/users/trueadm/repos",
            "events_url": "https://api.github.com/users/trueadm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/trueadm/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "19354db511e74d96a1c8b6d8b589a72f025da498",
                "url": "https://api.github.com/repos/facebook/react/commits/19354db511e74d96a1c8b6d8b589a72f025da498",
                "html_url": "https://github.com/facebook/react/commit/19354db511e74d96a1c8b6d8b589a72f025da498"
            }
        ]
    },
    {
        "sha": "2c4d61e1022ae383dd11fe237f6df8451e6f0310",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6MmM0ZDYxZTEwMjJhZTM4M2RkMTFmZTIzN2Y2ZGY4NDUxZTZmMDMxMA==",
        "commit": {
            "author": {
                "name": "Dominic Gannaway",
                "email": "trueadm@users.noreply.github.com",
                "date": "2019-07-19T21:20:28Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2019-07-19T21:20:28Z"
            },
            "message": "Adds experimental fundamental interface (#16049)",
            "tree": {
                "sha": "2494d721c5cca15883793b771d52b37dc693bf38",
                "url": "https://api.github.com/repos/facebook/react/git/trees/2494d721c5cca15883793b771d52b37dc693bf38"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/2c4d61e1022ae383dd11fe237f6df8451e6f0310",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdMjQcCRBK7hj4Ov3rIwAAdHIIABcZwrYlSukPNnsci60sl9uU\nX0fEg3kxcqYl/bIePH/Tsqwums/6ISVI2qGWU/1i9M+ik9L+oIkQ7yfM/XbjAaXW\nVCOvdf0xLxkGhrOh3ko9hlyoOqE3uYTRw3f2QXAXrR3KOzbhvBVOIYQ4L52TDmEM\np2Dlg3BYXasDZ1IaAqr1MAFw51XVag0NW79/szCRe20t2Sg+2y/DgEJBt9RSe4bh\n6xfaL87szGibGmVw333JF8drCRxqciS0Pj56hRpdkRup9EmYHJ6UkztH8GrsuCmO\nFuB3jfUdv1khQzFewmRCNJg0uLAoK9PX/ZEiEYKGZsLkoqtOLdo6ncSJTmrSJUc=\n=51IN\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 2494d721c5cca15883793b771d52b37dc693bf38\nparent b4178af81b02dfa0e898670ce564c4649fd8947f\nauthor Dominic Gannaway <trueadm@users.noreply.github.com> 1563571228 +0100\ncommitter GitHub <noreply@github.com> 1563571228 +0100\n\nAdds experimental fundamental interface (#16049)\n\n"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/2c4d61e1022ae383dd11fe237f6df8451e6f0310",
        "html_url": "https://github.com/facebook/react/commit/2c4d61e1022ae383dd11fe237f6df8451e6f0310",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/2c4d61e1022ae383dd11fe237f6df8451e6f0310/comments",
        "author": {
            "login": "trueadm",
            "id": 1519870,
            "node_id": "MDQ6VXNlcjE1MTk4NzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1519870?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/trueadm",
            "html_url": "https://github.com/trueadm",
            "followers_url": "https://api.github.com/users/trueadm/followers",
            "following_url": "https://api.github.com/users/trueadm/following{/other_user}",
            "gists_url": "https://api.github.com/users/trueadm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/trueadm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/trueadm/subscriptions",
            "organizations_url": "https://api.github.com/users/trueadm/orgs",
            "repos_url": "https://api.github.com/users/trueadm/repos",
            "events_url": "https://api.github.com/users/trueadm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/trueadm/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "b4178af81b02dfa0e898670ce564c4649fd8947f",
                "url": "https://api.github.com/repos/facebook/react/commits/b4178af81b02dfa0e898670ce564c4649fd8947f",
                "html_url": "https://github.com/facebook/react/commit/b4178af81b02dfa0e898670ce564c4649fd8947f"
            }
        ]
    },
    {
        "sha": "fcff9c57bc41f58e8802016b4dbc0a7b72cc63ad",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6ZmNmZjljNTdiYzQxZjU4ZTg4MDIwMTZiNGRiYzBhN2I3MmNjNjNhZA==",
        "commit": {
            "author": {
                "name": "Sebastian Markb\u00e5ge",
                "email": "sema@fb.com",
                "date": "2019-07-12T22:55:47Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2019-07-12T22:55:47Z"
            },
            "message": "Add tail=\"hidden\" option to SuspenseList (#16024)\n\n* Move misaligned comment\r\n\r\n* Add tail=\"hidden\" option\r\n\r\n* isShowingAnyFallbacks -> findFirstSuspended\r\n\r\n* We can't reset Placement tags or we'll forget to insert them\r\n\r\n* Delete hasSuspendedChildrenAndNewContent optimization",
            "tree": {
                "sha": "3f6b53d76ab6ef62997aa87466cd383c62db7d1a",
                "url": "https://api.github.com/repos/facebook/react/git/trees/3f6b53d76ab6ef62997aa87466cd383c62db7d1a"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/fcff9c57bc41f58e8802016b4dbc0a7b72cc63ad",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdKQ/zCRBK7hj4Ov3rIwAAdHIIAFimEUsFdWQSHbDE28K+EIWy\n10CNBAzLPX/uFKvds6w92DwbNjYstVVfXC0ujn+NQPGqNXLb2G4OdvmQkVem74Cm\nUo5N0BLnYdFNrvk6rPwLL1SNpv62FCidjaMImSOPUzHH2YoJ5MxF4iqcotm2Noq+\ncxXsmL+xgqH/UvQ/6HkaxuXwrB8LUrArCp6on+yx7hcUWdRWsVwU4wkpvK9lX+k6\nlSQOMaE1OP6eWxN29FNUbAxdQr+SiZ+yRp2b2PRulJbLm2HiK6KFUyUCMV+tUMc3\n84ga0uh1wyixROFyTIF7YosMC+NW1Eni29iy8lpeQP+UchIzEW+x9ML4Tx4SO1Q=\n=GhbR\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 3f6b53d76ab6ef62997aa87466cd383c62db7d1a\nparent 8d413bf2c3679befe8c6b56733b7c6f6e467ec07\nauthor Sebastian Markb\u00e5ge <sema@fb.com> 1562972147 -0700\ncommitter GitHub <noreply@github.com> 1562972147 -0700\n\nAdd tail=\"hidden\" option to SuspenseList (#16024)\n\n* Move misaligned comment\r\n\r\n* Add tail=\"hidden\" option\r\n\r\n* isShowingAnyFallbacks -> findFirstSuspended\r\n\r\n* We can't reset Placement tags or we'll forget to insert them\r\n\r\n* Delete hasSuspendedChildrenAndNewContent optimization\r\n"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/fcff9c57bc41f58e8802016b4dbc0a7b72cc63ad",
        "html_url": "https://github.com/facebook/react/commit/fcff9c57bc41f58e8802016b4dbc0a7b72cc63ad",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/fcff9c57bc41f58e8802016b4dbc0a7b72cc63ad/comments",
        "author": {
            "login": "sebmarkbage",
            "id": 63648,
            "node_id": "MDQ6VXNlcjYzNjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sebmarkbage",
            "html_url": "https://github.com/sebmarkbage",
            "followers_url": "https://api.github.com/users/sebmarkbage/followers",
            "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
            "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
            "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
            "repos_url": "https://api.github.com/users/sebmarkbage/repos",
            "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "8d413bf2c3679befe8c6b56733b7c6f6e467ec07",
                "url": "https://api.github.com/repos/facebook/react/commits/8d413bf2c3679befe8c6b56733b7c6f6e467ec07",
                "html_url": "https://github.com/facebook/react/commit/8d413bf2c3679befe8c6b56733b7c6f6e467ec07"
            }
        ]
    },
    {
        "sha": "67e3f3fb6e342f95f00215c84d5d013d7b0e1b33",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6NjdlM2YzZmI2ZTM0MmY5NWYwMDIxNWM4NGQ1ZDAxM2Q3YjBlMWIzMw==",
        "commit": {
            "author": {
                "name": "Dominic Gannaway",
                "email": "trueadm@users.noreply.github.com",
                "date": "2019-07-08T13:35:59Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2019-07-08T13:35:59Z"
            },
            "message": "[Flare] Revise responder event types (#16081)",
            "tree": {
                "sha": "8fb4cf9b50fab0cef275fe237b6409960e6b2e65",
                "url": "https://api.github.com/repos/facebook/react/git/trees/8fb4cf9b50fab0cef275fe237b6409960e6b2e65"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/67e3f3fb6e342f95f00215c84d5d013d7b0e1b33",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdI0a/CRBK7hj4Ov3rIwAAdHIIABrrL527EXvvOXG4RJ2L0VX2\nkcX85xc8Z+uM+T4wGN7rnm866tt7+XJt3033C/VdicE8Cg3Z0vawP/aCBzA/UtFs\ngfwjS6NXgsdYdMhs+YPIHOGBLmBs6WdCvaDnFPOtgOeo49lAmmUJadAmhioxPC2M\n0XhdZocCfNqDd9gFVeaporZNW3eGtnkShv93noY4uTqax4eoW8G6JXWCRIOaa/gG\nUhTK5D20Nr+HNyfbNc2okd6TWFMx1smyVWESkWi/2+Wlt0ubXyJ002RTp0wrsQIJ\nnDkPSLUHFFxEsKA66vqFtNskKMkBqyGiUL3AxMgqeaarUOtBDubK6Bfk73y09zk=\n=J6tI\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 8fb4cf9b50fab0cef275fe237b6409960e6b2e65\nparent 2a0f6390ed657fa8e2c14c1cf6d9faa2f7b42525\nauthor Dominic Gannaway <trueadm@users.noreply.github.com> 1562592959 +0100\ncommitter GitHub <noreply@github.com> 1562592959 +0100\n\n[Flare] Revise responder event types (#16081)\n\n"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/67e3f3fb6e342f95f00215c84d5d013d7b0e1b33",
        "html_url": "https://github.com/facebook/react/commit/67e3f3fb6e342f95f00215c84d5d013d7b0e1b33",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/67e3f3fb6e342f95f00215c84d5d013d7b0e1b33/comments",
        "author": {
            "login": "trueadm",
            "id": 1519870,
            "node_id": "MDQ6VXNlcjE1MTk4NzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1519870?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/trueadm",
            "html_url": "https://github.com/trueadm",
            "followers_url": "https://api.github.com/users/trueadm/followers",
            "following_url": "https://api.github.com/users/trueadm/following{/other_user}",
            "gists_url": "https://api.github.com/users/trueadm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/trueadm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/trueadm/subscriptions",
            "organizations_url": "https://api.github.com/users/trueadm/orgs",
            "repos_url": "https://api.github.com/users/trueadm/repos",
            "events_url": "https://api.github.com/users/trueadm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/trueadm/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "2a0f6390ed657fa8e2c14c1cf6d9faa2f7b42525",
                "url": "https://api.github.com/repos/facebook/react/commits/2a0f6390ed657fa8e2c14c1cf6d9faa2f7b42525",
                "html_url": "https://github.com/facebook/react/commit/2a0f6390ed657fa8e2c14c1cf6d9faa2f7b42525"
            }
        ]
    },
    {
        "sha": "2a0f6390ed657fa8e2c14c1cf6d9faa2f7b42525",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6MmEwZjYzOTBlZDY1N2ZhOGUyYzE0YzFjZjZkOWZhYTJmN2I0MjUyNQ==",
        "commit": {
            "author": {
                "name": "Min ho Kim",
                "email": "minho42@gmail.com",
                "date": "2019-07-08T10:51:29Z"
            },
            "committer": {
                "name": "Sunil Pai",
                "email": "threepointone@fb.com",
                "date": "2019-07-08T10:51:29Z"
            },
            "message": "Fix typos (#16076)",
            "tree": {
                "sha": "7a64b687c74a1c7f9b21af059a99d6f6db96e928",
                "url": "https://api.github.com/repos/facebook/react/git/trees/7a64b687c74a1c7f9b21af059a99d6f6db96e928"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/2a0f6390ed657fa8e2c14c1cf6d9faa2f7b42525",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/2a0f6390ed657fa8e2c14c1cf6d9faa2f7b42525",
        "html_url": "https://github.com/facebook/react/commit/2a0f6390ed657fa8e2c14c1cf6d9faa2f7b42525",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/2a0f6390ed657fa8e2c14c1cf6d9faa2f7b42525/comments",
        "author": {
            "login": "minho42",
            "id": 15278512,
            "node_id": "MDQ6VXNlcjE1Mjc4NTEy",
            "avatar_url": "https://avatars.githubusercontent.com/u/15278512?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/minho42",
            "html_url": "https://github.com/minho42",
            "followers_url": "https://api.github.com/users/minho42/followers",
            "following_url": "https://api.github.com/users/minho42/following{/other_user}",
            "gists_url": "https://api.github.com/users/minho42/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/minho42/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/minho42/subscriptions",
            "organizations_url": "https://api.github.com/users/minho42/orgs",
            "repos_url": "https://api.github.com/users/minho42/repos",
            "events_url": "https://api.github.com/users/minho42/events{/privacy}",
            "received_events_url": "https://api.github.com/users/minho42/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": null,
        "parents": [
            {
                "sha": "aa519c17cc10c071906d06abeade9e1bd0ed3dc1",
                "url": "https://api.github.com/repos/facebook/react/commits/aa519c17cc10c071906d06abeade9e1bd0ed3dc1",
                "html_url": "https://github.com/facebook/react/commit/aa519c17cc10c071906d06abeade9e1bd0ed3dc1"
            }
        ]
    },
    {
        "sha": "933c664ad6173adda1021ee1cc2d9233c3c13e22",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6OTMzYzY2NGFkNjE3M2FkZGExMDIxZWUxY2MyZDkyMzNjM2MxM2UyMg==",
        "commit": {
            "author": {
                "name": "Sebastian Markb\u00e5ge",
                "email": "sema@fb.com",
                "date": "2019-07-01T21:25:07Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2019-07-01T21:25:07Z"
            },
            "message": "SuspenseList Optimizations (#16005)\n\n* Add a bunch of optimizations to SuspenseList\r\n\r\nWe now are able to bail out of reconciliation and splitting out the tail\r\nduring deep updates that hasn't changed the child props. This only\r\nworks while the list wasn't suspended before.\r\n\r\nI also moved the second render of the \"head\" to the complete phase. This\r\ncleans it up a bit for the tail collapsing PR.\r\n\r\nFor this second pass I also use a new technique of resetting the child\r\nFibers for the second pass. This is effectively a fast path to avoid\r\nreconciling the children against props again.\r\n\r\n* Move to didSuspend from SuspenseListState to the effectTag\r\n\r\nThe effectTag now tracks whether the previous commit was suspended.\r\n\r\nThis frees up SuspenseListState to be render-phase only state.\r\n\r\nWe use null to mean the default \"independent\" mode.\r\n\r\n* Rename to SuspenseListState to SuspenseListRenderState\r\n\r\n* Reuse SuspenseListRenderState across render passes\r\n\r\n* Add optimization to bail out of scanning children if they can't be suspended\r\n\r\nThis optimized the deep update case or initial render without anything\r\nsuspending.\r\n\r\nWe have some information available to us that tell us if nothing has\r\nsuspended in the past and nothing has suspended this render pass.\r\n\r\nThis also fixes a bug where we didn't tag the previous render as having\r\nsuspended boundaries if we didn't need to force a rerender.\r\n\r\n* rm printChildren\r\n\r\noops",
            "tree": {
                "sha": "08ecd624f37a6d0e886911390dc5f17cbf5ce084",
                "url": "https://api.github.com/repos/facebook/react/git/trees/08ecd624f37a6d0e886911390dc5f17cbf5ce084"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/933c664ad6173adda1021ee1cc2d9233c3c13e22",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdGnozCRBK7hj4Ov3rIwAAdHIIAKh2Vd4kfXsw7QKlf7vGC7oi\nnbTlQxqNWOhvNpImPyL3z0SVEzA7ySn+n9nqTmbIg5kCm4ppIs8LPAZT8Glwd/lo\nx7/MsWs1I9bmOFf34uNnJhlyJroVBzqSEa+Vj6zvnxsQbXZ/GgkZjWfT/UQfuDwP\n/FuoJeMzmEwDz2l0cSZplIA47GgqtVGDSb1inFuqyIlGCySEpbbp1lX1IATGWbtX\nY27ML485hUsP5sNl45jwjlRIt09CrR9B4iEks6XCvSvsk9/mIpN6FY1ePms2Yopw\nMc8ci58/XbD6kDtkhexQyFENIWGAy8zxPspNdo1aUso2l0JLlFFgP0fBhIc/6nA=\n=0a+E\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 08ecd624f37a6d0e886911390dc5f17cbf5ce084\nparent fbbbea16e11e849d2a75e0b0d66e38266783a01c\nauthor Sebastian Markb\u00e5ge <sema@fb.com> 1562016307 -0700\ncommitter GitHub <noreply@github.com> 1562016307 -0700\n\nSuspenseList Optimizations (#16005)\n\n* Add a bunch of optimizations to SuspenseList\r\n\r\nWe now are able to bail out of reconciliation and splitting out the tail\r\nduring deep updates that hasn't changed the child props. This only\r\nworks while the list wasn't suspended before.\r\n\r\nI also moved the second render of the \"head\" to the complete phase. This\r\ncleans it up a bit for the tail collapsing PR.\r\n\r\nFor this second pass I also use a new technique of resetting the child\r\nFibers for the second pass. This is effectively a fast path to avoid\r\nreconciling the children against props again.\r\n\r\n* Move to didSuspend from SuspenseListState to the effectTag\r\n\r\nThe effectTag now tracks whether the previous commit was suspended.\r\n\r\nThis frees up SuspenseListState to be render-phase only state.\r\n\r\nWe use null to mean the default \"independent\" mode.\r\n\r\n* Rename to SuspenseListState to SuspenseListRenderState\r\n\r\n* Reuse SuspenseListRenderState across render passes\r\n\r\n* Add optimization to bail out of scanning children if they can't be suspended\r\n\r\nThis optimized the deep update case or initial render without anything\r\nsuspending.\r\n\r\nWe have some information available to us that tell us if nothing has\r\nsuspended in the past and nothing has suspended this render pass.\r\n\r\nThis also fixes a bug where we didn't tag the previous render as having\r\nsuspended boundaries if we didn't need to force a rerender.\r\n\r\n* rm printChildren\r\n\r\noops\r\n"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/933c664ad6173adda1021ee1cc2d9233c3c13e22",
        "html_url": "https://github.com/facebook/react/commit/933c664ad6173adda1021ee1cc2d9233c3c13e22",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/933c664ad6173adda1021ee1cc2d9233c3c13e22/comments",
        "author": {
            "login": "sebmarkbage",
            "id": 63648,
            "node_id": "MDQ6VXNlcjYzNjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sebmarkbage",
            "html_url": "https://github.com/sebmarkbage",
            "followers_url": "https://api.github.com/users/sebmarkbage/followers",
            "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
            "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
            "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
            "repos_url": "https://api.github.com/users/sebmarkbage/repos",
            "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "fbbbea16e11e849d2a75e0b0d66e38266783a01c",
                "url": "https://api.github.com/repos/facebook/react/commits/fbbbea16e11e849d2a75e0b0d66e38266783a01c",
                "html_url": "https://github.com/facebook/react/commit/fbbbea16e11e849d2a75e0b0d66e38266783a01c"
            }
        ]
    },
    {
        "sha": "9b0bd43550206e04bfe9ca695e5981eff0e2d03f",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6OWIwYmQ0MzU1MDIwNmUwNGJmZTljYTY5NWU1OTgxZWZmMGUyZDAzZg==",
        "commit": {
            "author": {
                "name": "Dominic Gannaway",
                "email": "trueadm@users.noreply.github.com",
                "date": "2019-06-28T00:11:11Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2019-06-28T00:11:11Z"
            },
            "message": "[Flare] Re-label Flare flag (#16014)",
            "tree": {
                "sha": "4f5cf40372540706f25f7816a7419e561ea68784",
                "url": "https://api.github.com/repos/facebook/react/git/trees/4f5cf40372540706f25f7816a7419e561ea68784"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/9b0bd43550206e04bfe9ca695e5981eff0e2d03f",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdFVsfCRBK7hj4Ov3rIwAAdHIIACFR9hA8jdbub5xF2CdGCU8u\ngy7cAYnmdjOE4zK/hVLiPpExDpvSSr3DKSBI/v6dW1r8STgl41/xtpicdeCo/MPO\newx5TdtUye9HRisLO4T4C8ZezZ6vvpy16Ji4YUB+Xp0KpXcFaVmN+PcJuUuh61yO\n6PJLHU7RMFMuXx0Uy1fP3WWNsvQtd83lxNSk+omCU1YziAFxjeKkLDRTyudiowhF\n9qfuo2f2Lp/Ko6B+/qoKBzyHP4cdcy37BxO9ZCGArpGVy+5R+t6AqVV60ZyITGyW\nRcmT4etO/FeNUKTQifjTpDNT/ATiobeM720o6L6AePHLCWuM9+D3Dt90uBwvOwQ=\n=JUzW\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 4f5cf40372540706f25f7816a7419e561ea68784\nparent 8b88ac2592c5f555f315f9440cbb665dd1e7457a\nauthor Dominic Gannaway <trueadm@users.noreply.github.com> 1561680671 +0100\ncommitter GitHub <noreply@github.com> 1561680671 +0100\n\n[Flare] Re-label Flare flag (#16014)\n\n"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/9b0bd43550206e04bfe9ca695e5981eff0e2d03f",
        "html_url": "https://github.com/facebook/react/commit/9b0bd43550206e04bfe9ca695e5981eff0e2d03f",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/9b0bd43550206e04bfe9ca695e5981eff0e2d03f/comments",
        "author": {
            "login": "trueadm",
            "id": 1519870,
            "node_id": "MDQ6VXNlcjE1MTk4NzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1519870?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/trueadm",
            "html_url": "https://github.com/trueadm",
            "followers_url": "https://api.github.com/users/trueadm/followers",
            "following_url": "https://api.github.com/users/trueadm/following{/other_user}",
            "gists_url": "https://api.github.com/users/trueadm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/trueadm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/trueadm/subscriptions",
            "organizations_url": "https://api.github.com/users/trueadm/orgs",
            "repos_url": "https://api.github.com/users/trueadm/repos",
            "events_url": "https://api.github.com/users/trueadm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/trueadm/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "8b88ac2592c5f555f315f9440cbb665dd1e7457a",
                "url": "https://api.github.com/repos/facebook/react/commits/8b88ac2592c5f555f315f9440cbb665dd1e7457a",
                "html_url": "https://github.com/facebook/react/commit/8b88ac2592c5f555f315f9440cbb665dd1e7457a"
            }
        ]
    },
    {
        "sha": "8b88ac2592c5f555f315f9440cbb665dd1e7457a",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6OGI4OGFjMjU5MmM1ZjU1NWYzMTVmOTQ0MGNiYjY2NWRkMWU3NDU3YQ==",
        "commit": {
            "author": {
                "name": "Dominic Gannaway",
                "email": "trueadm@users.noreply.github.com",
                "date": "2019-06-27T22:58:48Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2019-06-27T22:58:48Z"
            },
            "message": "[Flare] Remove event targets including TouchHitTarget (#16011)",
            "tree": {
                "sha": "0e3cbf49becad7886fa75beb339b6039b54f2bdd",
                "url": "https://api.github.com/repos/facebook/react/git/trees/0e3cbf49becad7886fa75beb339b6039b54f2bdd"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/8b88ac2592c5f555f315f9440cbb665dd1e7457a",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdFUooCRBK7hj4Ov3rIwAAdHIIAE55tuBh/slWMUP0V7et69WS\nvJwjO1bmEmAvDXsdckT6yZ87CRLpKCFkqFfvfvNPZULcZeiFm5Ax0bVoD/6Go7Cx\n4iWYc1BiuqIY3GaxiXC5JkJhBwVl59Z/XLSr0FvfobypEnvdma02zBO+63pGeN6O\n+hBfNc8ob1XZyTyf3jj1WxWbnIcfwV8WxFMaWgWAmyZSHQrCYDiSLV0Vrn3ssTIN\npynqBnjB9jVLZ7Veplli6xgJbb6tdotiQ8pBKlwrhKRITwAkHKh185VrZcbO0+/n\n4mhUdvXA1mfeL83LGoT6+iWPM7EbjSMZ9sw35ox8G7N60f/TS7YoUrim5n7PDhg=\n=E5C7\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 0e3cbf49becad7886fa75beb339b6039b54f2bdd\nparent f11540926d2b28ec1f227a79ec9e95b75708c2e3\nauthor Dominic Gannaway <trueadm@users.noreply.github.com> 1561676328 +0100\ncommitter GitHub <noreply@github.com> 1561676328 +0100\n\n[Flare] Remove event targets including TouchHitTarget (#16011)\n\n"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/8b88ac2592c5f555f315f9440cbb665dd1e7457a",
        "html_url": "https://github.com/facebook/react/commit/8b88ac2592c5f555f315f9440cbb665dd1e7457a",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/8b88ac2592c5f555f315f9440cbb665dd1e7457a/comments",
        "author": {
            "login": "trueadm",
            "id": 1519870,
            "node_id": "MDQ6VXNlcjE1MTk4NzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1519870?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/trueadm",
            "html_url": "https://github.com/trueadm",
            "followers_url": "https://api.github.com/users/trueadm/followers",
            "following_url": "https://api.github.com/users/trueadm/following{/other_user}",
            "gists_url": "https://api.github.com/users/trueadm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/trueadm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/trueadm/subscriptions",
            "organizations_url": "https://api.github.com/users/trueadm/orgs",
            "repos_url": "https://api.github.com/users/trueadm/repos",
            "events_url": "https://api.github.com/users/trueadm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/trueadm/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "f11540926d2b28ec1f227a79ec9e95b75708c2e3",
                "url": "https://api.github.com/repos/facebook/react/commits/f11540926d2b28ec1f227a79ec9e95b75708c2e3",
                "html_url": "https://github.com/facebook/react/commit/f11540926d2b28ec1f227a79ec9e95b75708c2e3"
            }
        ]
    },
    {
        "sha": "34ce57ae751e0952fd12ab532a3e5694445897ea",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6MzRjZTU3YWU3NTFlMDk1MmZkMTJhYjUzMmEzZTU2OTQ0NDU4OTdlYQ==",
        "commit": {
            "author": {
                "name": "Dominic Gannaway",
                "email": "trueadm@users.noreply.github.com",
                "date": "2019-06-21T11:32:43Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2019-06-21T11:32:43Z"
            },
            "message": "[Flare] Refine flow type annotations (#15950)",
            "tree": {
                "sha": "c341e4c31b24534ed8a9958b1481058d718f6026",
                "url": "https://api.github.com/repos/facebook/react/git/trees/c341e4c31b24534ed8a9958b1481058d718f6026"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/34ce57ae751e0952fd12ab532a3e5694445897ea",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdDMBbCRBK7hj4Ov3rIwAAdHIIAIEACsk2jllbHuiqN9TaroKj\nJfhdamrXF0i0C/4OmymgJx7XZbjCrFGBf8WbenPPoreYUSq4hAwOeapOllA3M1Ex\nd8FmKXz7mHGQGsE2fyFl6ZC/KwkRcv3GU/cBPPIHuJrKIjSbqtjvNSrs5eQG8sdY\nMXUUA6aexptYsg3144z+2cGTXY6JLboji42FpOy0WxZzjH4u9OIJDqjBjwyAcuyc\ngMMg7MJ9olLRKJ7eUBrRb3+GPQfCKiichRpD+ISAfWUd6UqzT3OcB0ePKyQijKbs\nIOyX4k2LNP3bgOuFiZN4FuG8KVOc/kT1WT21FmJRyYfJNGzkbRE7F18fzV7Okek=\n=3heW\n-----END PGP SIGNATURE-----\n",
                "payload": "tree c341e4c31b24534ed8a9958b1481058d718f6026\nparent 4f92fbce5cc409436ec7625ac08d3a709a4d8f31\nauthor Dominic Gannaway <trueadm@users.noreply.github.com> 1561116763 +0100\ncommitter GitHub <noreply@github.com> 1561116763 +0100\n\n[Flare] Refine flow type annotations (#15950)\n\n"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/34ce57ae751e0952fd12ab532a3e5694445897ea",
        "html_url": "https://github.com/facebook/react/commit/34ce57ae751e0952fd12ab532a3e5694445897ea",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/34ce57ae751e0952fd12ab532a3e5694445897ea/comments",
        "author": {
            "login": "trueadm",
            "id": 1519870,
            "node_id": "MDQ6VXNlcjE1MTk4NzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1519870?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/trueadm",
            "html_url": "https://github.com/trueadm",
            "followers_url": "https://api.github.com/users/trueadm/followers",
            "following_url": "https://api.github.com/users/trueadm/following{/other_user}",
            "gists_url": "https://api.github.com/users/trueadm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/trueadm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/trueadm/subscriptions",
            "organizations_url": "https://api.github.com/users/trueadm/orgs",
            "repos_url": "https://api.github.com/users/trueadm/repos",
            "events_url": "https://api.github.com/users/trueadm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/trueadm/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "4f92fbce5cc409436ec7625ac08d3a709a4d8f31",
                "url": "https://api.github.com/repos/facebook/react/commits/4f92fbce5cc409436ec7625ac08d3a709a4d8f31",
                "html_url": "https://github.com/facebook/react/commit/4f92fbce5cc409436ec7625ac08d3a709a4d8f31"
            }
        ]
    },
    {
        "sha": "175111de723979161b73c2751c3396d22f405dfa",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6MTc1MTExZGU3MjM5NzkxNjFiNzNjMjc1MWMzMzk2ZDIyZjQwNWRmYQ==",
        "commit": {
            "author": {
                "name": "Andrew Clark",
                "email": "git@andrewclark.io",
                "date": "2019-06-21T03:12:22Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2019-06-21T03:12:22Z"
            },
            "message": "Lazily initialize dependencies object (#15944)\n\nMost fibers do not have events or context, so we save memory lazily\r\ninitializing this container node.\r\n\r\nFollow-up from #15927",
            "tree": {
                "sha": "42b092baf929455dfbe95b3aef3f280a097b771c",
                "url": "https://api.github.com/repos/facebook/react/git/trees/42b092baf929455dfbe95b3aef3f280a097b771c"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/175111de723979161b73c2751c3396d22f405dfa",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdDEsWCRBK7hj4Ov3rIwAAdHIIAFFjfIfLkrNqS5vK2wrWXCx0\nv6x/UKq7mfLXlzop5U0gWq5Kh82UFROnUcAvqcyJkoBQUFBDxPBHnOWymm1SzFL3\ng4dsEsDEq7ALJVdGmFpGuX5nYWdFpXv0MaARx3jYQ2CUqx+QajHcPOAMBgQigsK1\nkB7MeZcwsbThshi4h64medRCk2LaTpm+TuynOGkqJNnIAlRF9cfLwsoYHucqSxi4\nZDLSZHSiXRFuKcZMTi44tsL+1iBm+8mLcnh0d8QAmpxbpwhKfUoYdUl46QXo+NVq\n1hSttcvRkK8fLySzbwflc0WmFzyYKK+rEelo4PfBjCjNCjWYbFIAoHePNFDPT3g=\n=oAi4\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 42b092baf929455dfbe95b3aef3f280a097b771c\nparent 720db4cbe675e80820ec81abab499492309b9252\nauthor Andrew Clark <git@andrewclark.io> 1561086742 -0700\ncommitter GitHub <noreply@github.com> 1561086742 -0700\n\nLazily initialize dependencies object (#15944)\n\nMost fibers do not have events or context, so we save memory lazily\r\ninitializing this container node.\r\n\r\nFollow-up from #15927"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/175111de723979161b73c2751c3396d22f405dfa",
        "html_url": "https://github.com/facebook/react/commit/175111de723979161b73c2751c3396d22f405dfa",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/175111de723979161b73c2751c3396d22f405dfa/comments",
        "author": {
            "login": "acdlite",
            "id": 3624098,
            "node_id": "MDQ6VXNlcjM2MjQwOTg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3624098?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/acdlite",
            "html_url": "https://github.com/acdlite",
            "followers_url": "https://api.github.com/users/acdlite/followers",
            "following_url": "https://api.github.com/users/acdlite/following{/other_user}",
            "gists_url": "https://api.github.com/users/acdlite/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/acdlite/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/acdlite/subscriptions",
            "organizations_url": "https://api.github.com/users/acdlite/orgs",
            "repos_url": "https://api.github.com/users/acdlite/repos",
            "events_url": "https://api.github.com/users/acdlite/events{/privacy}",
            "received_events_url": "https://api.github.com/users/acdlite/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "720db4cbe675e80820ec81abab499492309b9252",
                "url": "https://api.github.com/repos/facebook/react/commits/720db4cbe675e80820ec81abab499492309b9252",
                "html_url": "https://github.com/facebook/react/commit/720db4cbe675e80820ec81abab499492309b9252"
            }
        ]
    },
    {
        "sha": "720db4cbe675e80820ec81abab499492309b9252",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6NzIwZGI0Y2JlNjc1ZTgwODIwZWM4MWFiYWI0OTk0OTIzMDliOTI1Mg==",
        "commit": {
            "author": {
                "name": "Dominic Gannaway",
                "email": "trueadm@users.noreply.github.com",
                "date": "2019-06-21T02:12:40Z"
            },
            "committer": {
                "name": "Andrew Clark",
                "email": "git@andrewclark.io",
                "date": "2019-06-21T02:12:40Z"
            },
            "message": "[Flare] Add useEvent hook implementation (#15927)\n\n* [Flare] Add useEvent hook implementation\r\n\r\nValidate hooks have decendent event components\r\n\r\nFew fixes and displayName changes\r\n\r\nFix more responder bugs\r\n\r\nUpdate error codes\r\n\r\n* Add another test\r\n\r\n* Address feedback",
            "tree": {
                "sha": "53ef7e8659b55b0c2bcfb357881d1927cd90bc25",
                "url": "https://api.github.com/repos/facebook/react/git/trees/53ef7e8659b55b0c2bcfb357881d1927cd90bc25"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/720db4cbe675e80820ec81abab499492309b9252",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/720db4cbe675e80820ec81abab499492309b9252",
        "html_url": "https://github.com/facebook/react/commit/720db4cbe675e80820ec81abab499492309b9252",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/720db4cbe675e80820ec81abab499492309b9252/comments",
        "author": {
            "login": "trueadm",
            "id": 1519870,
            "node_id": "MDQ6VXNlcjE1MTk4NzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1519870?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/trueadm",
            "html_url": "https://github.com/trueadm",
            "followers_url": "https://api.github.com/users/trueadm/followers",
            "following_url": "https://api.github.com/users/trueadm/following{/other_user}",
            "gists_url": "https://api.github.com/users/trueadm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/trueadm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/trueadm/subscriptions",
            "organizations_url": "https://api.github.com/users/trueadm/orgs",
            "repos_url": "https://api.github.com/users/trueadm/repos",
            "events_url": "https://api.github.com/users/trueadm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/trueadm/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "acdlite",
            "id": 3624098,
            "node_id": "MDQ6VXNlcjM2MjQwOTg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3624098?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/acdlite",
            "html_url": "https://github.com/acdlite",
            "followers_url": "https://api.github.com/users/acdlite/followers",
            "following_url": "https://api.github.com/users/acdlite/following{/other_user}",
            "gists_url": "https://api.github.com/users/acdlite/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/acdlite/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/acdlite/subscriptions",
            "organizations_url": "https://api.github.com/users/acdlite/orgs",
            "repos_url": "https://api.github.com/users/acdlite/repos",
            "events_url": "https://api.github.com/users/acdlite/events{/privacy}",
            "received_events_url": "https://api.github.com/users/acdlite/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "6ff4c9de1c1c8f47148b68651a9f8ab72b5d31f8",
                "url": "https://api.github.com/repos/facebook/react/commits/6ff4c9de1c1c8f47148b68651a9f8ab72b5d31f8",
                "html_url": "https://github.com/facebook/react/commit/6ff4c9de1c1c8f47148b68651a9f8ab72b5d31f8"
            }
        ]
    },
    {
        "sha": "76864f7ff729f8293e8e772da7ad8416d7def6b3",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6NzY4NjRmN2ZmNzI5ZjgyOTNlOGU3NzJkYTdhZDg0MTZkN2RlZjZiMw==",
        "commit": {
            "author": {
                "name": "Sebastian Markb\u00e5ge",
                "email": "sema@fb.com",
                "date": "2019-06-20T02:34:28Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2019-06-20T02:34:28Z"
            },
            "message": "Add SuspenseList Component (#15902)\n\n* Add SuspenseList component type\r\n\r\n* Push SuspenseContext for SuspenseList\r\n\r\n* Force Suspense boundaries into their fallback state\r\n\r\nIn the \"together\" mode, we do a second render pass that forces the\r\nfallbacks to stay in place, if not all can unsuspend at once.\r\n\r\n* Add test\r\n\r\n* Transfer thennables to the SuspenseList\r\n\r\nThis way, we end up retrying the SuspenseList in case the nested boundary\r\nthat just suspended doesn't actually get mounted with this set of\r\nthennables. This happens when the second pass renders the fallback\r\ndirectly without first attempting to render the content.\r\n\r\n* Add warning for unsupported displayOrder\r\n\r\n* Add tests for nested sibling boundaries and nested lists\r\n\r\n* Fix nested SuspenseList forwarding thennables\r\n\r\n* Rename displayOrder to revealOrder\r\n\r\nDisplay order has some \"display list\" connotations making it sound like\r\na z-index thing.\r\n\r\nReveal indicates that this isn't really about when something gets rendered\r\nor is ready to be rendered. It's about when content that is already there\r\ngets to be revealed.\r\n\r\n* Add test for avoided boundaries\r\n\r\n* Make SuspenseList a noop in legacy mode\r\n\r\n* Use an explicit suspense list state object\r\n\r\nThis will be used for more things in the directional case.",
            "tree": {
                "sha": "c8b7e582a1af511a2e00b6dbc7e2799de8fe3b38",
                "url": "https://api.github.com/repos/facebook/react/git/trees/c8b7e582a1af511a2e00b6dbc7e2799de8fe3b38"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/76864f7ff729f8293e8e772da7ad8416d7def6b3",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdCvC0CRBK7hj4Ov3rIwAAdHIIAKv601ePhVZmGkUZ4K3XB/ff\nDoR0G5pwBjmj+MikuhBx8nuPOVsX6C5b64EzNeYME5wNd5oOLXAcfWiKCjvM+8YQ\nn3KtugQOackdq5itMGiZDkWbuzbJ5mNCJH25Xpf2cn4IW5j9SuFaiLOGjLviQBxI\nGIgJCcJ6sU5uud1Ks6eRa+0lDn/P+xEuI4Y+aZgxViCgKyuvL9GU8KGA8zIMSCjS\n/n5lGgkZFMLcE5xZQ9IMGq2GSGA0W2Yh5gyJy+yq/RkVbjFWCvNrv/sMGRcKVcig\nQSq3lNgUEfrbpK4RZktrb37RWnlZRhA3V3eh88tNSdhDdPhAqKU9U5J4wfLMALM=\n=YnKx\n-----END PGP SIGNATURE-----\n",
                "payload": "tree c8b7e582a1af511a2e00b6dbc7e2799de8fe3b38\nparent e9d0a3ff252ea72b1aa5e8df969304ff5c9aa0a4\nauthor Sebastian Markb\u00e5ge <sema@fb.com> 1560998068 -0700\ncommitter GitHub <noreply@github.com> 1560998068 -0700\n\nAdd SuspenseList Component (#15902)\n\n* Add SuspenseList component type\r\n\r\n* Push SuspenseContext for SuspenseList\r\n\r\n* Force Suspense boundaries into their fallback state\r\n\r\nIn the \"together\" mode, we do a second render pass that forces the\r\nfallbacks to stay in place, if not all can unsuspend at once.\r\n\r\n* Add test\r\n\r\n* Transfer thennables to the SuspenseList\r\n\r\nThis way, we end up retrying the SuspenseList in case the nested boundary\r\nthat just suspended doesn't actually get mounted with this set of\r\nthennables. This happens when the second pass renders the fallback\r\ndirectly without first attempting to render the content.\r\n\r\n* Add warning for unsupported displayOrder\r\n\r\n* Add tests for nested sibling boundaries and nested lists\r\n\r\n* Fix nested SuspenseList forwarding thennables\r\n\r\n* Rename displayOrder to revealOrder\r\n\r\nDisplay order has some \"display list\" connotations making it sound like\r\na z-index thing.\r\n\r\nReveal indicates that this isn't really about when something gets rendered\r\nor is ready to be rendered. It's about when content that is already there\r\ngets to be revealed.\r\n\r\n* Add test for avoided boundaries\r\n\r\n* Make SuspenseList a noop in legacy mode\r\n\r\n* Use an explicit suspense list state object\r\n\r\nThis will be used for more things in the directional case.\r\n"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/76864f7ff729f8293e8e772da7ad8416d7def6b3",
        "html_url": "https://github.com/facebook/react/commit/76864f7ff729f8293e8e772da7ad8416d7def6b3",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/76864f7ff729f8293e8e772da7ad8416d7def6b3/comments",
        "author": {
            "login": "sebmarkbage",
            "id": 63648,
            "node_id": "MDQ6VXNlcjYzNjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sebmarkbage",
            "html_url": "https://github.com/sebmarkbage",
            "followers_url": "https://api.github.com/users/sebmarkbage/followers",
            "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
            "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
            "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
            "repos_url": "https://api.github.com/users/sebmarkbage/repos",
            "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "e9d0a3ff252ea72b1aa5e8df969304ff5c9aa0a4",
                "url": "https://api.github.com/repos/facebook/react/commits/e9d0a3ff252ea72b1aa5e8df969304ff5c9aa0a4",
                "html_url": "https://github.com/facebook/react/commit/e9d0a3ff252ea72b1aa5e8df969304ff5c9aa0a4"
            }
        ]
    },
    {
        "sha": "d0e041aee83b50e54176d2dc957d86c0f571257e",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6ZDBlMDQxYWVlODNiNTBlNTQxNzZkMmRjOTU3ZDg2YzBmNTcxMjU3ZQ==",
        "commit": {
            "author": {
                "name": "Dan Abramov",
                "email": "dan.abramov@gmail.com",
                "date": "2019-06-05T23:13:42Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2019-06-05T23:13:42Z"
            },
            "message": "[Fresh] Support classes by force-remounting them on edit (#15801)\n\n* Remount classes during hot reload\r\n\r\n* Fix a crash when Hook isn't in scope inside the signature\r\n\r\n* Minor tweaks\r\n\r\n* Support a comment annotation to force state reset\r\n\r\n* Refactoring: pass a function instead of WeakMap\r\n\r\nThis hides the implementation a little bit and reduces how much React knows about the underlying mechanism.\r\n\r\n* Refactor: use forceReset to remount unknown Hooks\r\n\r\nWe already have the logic to reset a component, so let's just reuse it instead of that special case.",
            "tree": {
                "sha": "e172d7198bebb88f2a34bfda45873a7115d21710",
                "url": "https://api.github.com/repos/facebook/react/git/trees/e172d7198bebb88f2a34bfda45873a7115d21710"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/d0e041aee83b50e54176d2dc957d86c0f571257e",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJc+EynCRBK7hj4Ov3rIwAAdHIIADoERipBUtVml6Bj/BHPfRGK\nY1/MHH5vnz1AahLoucxa4GVAySjtYo0kKWNCO2z9MrcJIAHILK0OqDt0PL97Rk+9\nkLXz2QwwjqvJbpavBI2n/ACM+OMWclfhuBkwtgnRynQjyKNnFol4C0yBncam+LZQ\nzCbrYBMZqH1qq71ysxMvk3TE+Y54XhFHu8FF7ikpRsktEdgyy6xZtH2sOMYSqEK2\neMp6U1suUBKyf174A0eAq5l0lncy3iz/ykWZeWcJxKpxvq2uX3OYJBLuxRE006Kn\nixFZqzj4oJI/N4vjnOGwdo5gWBm3l/gfeDfhBoxPrD9VLWy/rrakKDKsPg3hvYc=\n=Y189\n-----END PGP SIGNATURE-----\n",
                "payload": "tree e172d7198bebb88f2a34bfda45873a7115d21710\nparent 73c27d8b4987aecc9e960f29b329c3ac8f46cff3\nauthor Dan Abramov <dan.abramov@gmail.com> 1559776422 -0700\ncommitter GitHub <noreply@github.com> 1559776422 -0700\n\n[Fresh] Support classes by force-remounting them on edit (#15801)\n\n* Remount classes during hot reload\r\n\r\n* Fix a crash when Hook isn't in scope inside the signature\r\n\r\n* Minor tweaks\r\n\r\n* Support a comment annotation to force state reset\r\n\r\n* Refactoring: pass a function instead of WeakMap\r\n\r\nThis hides the implementation a little bit and reduces how much React knows about the underlying mechanism.\r\n\r\n* Refactor: use forceReset to remount unknown Hooks\r\n\r\nWe already have the logic to reset a component, so let's just reuse it instead of that special case.\r\n"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/d0e041aee83b50e54176d2dc957d86c0f571257e",
        "html_url": "https://github.com/facebook/react/commit/d0e041aee83b50e54176d2dc957d86c0f571257e",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/d0e041aee83b50e54176d2dc957d86c0f571257e/comments",
        "author": {
            "login": "gaearon",
            "id": 810438,
            "node_id": "MDQ6VXNlcjgxMDQzOA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/810438?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gaearon",
            "html_url": "https://github.com/gaearon",
            "followers_url": "https://api.github.com/users/gaearon/followers",
            "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
            "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
            "organizations_url": "https://api.github.com/users/gaearon/orgs",
            "repos_url": "https://api.github.com/users/gaearon/repos",
            "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gaearon/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "73c27d8b4987aecc9e960f29b329c3ac8f46cff3",
                "url": "https://api.github.com/repos/facebook/react/commits/73c27d8b4987aecc9e960f29b329c3ac8f46cff3",
                "html_url": "https://github.com/facebook/react/commit/73c27d8b4987aecc9e960f29b329c3ac8f46cff3"
            }
        ]
    },
    {
        "sha": "31487dd82e82ef62243806b2e76b23a6fb21d0bc",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6MzE0ODdkZDgyZTgyZWY2MjI0MzgwNmIyZTc2YjIzYTZmYjIxZDBiYw==",
        "commit": {
            "author": {
                "name": "Dan Abramov",
                "email": "dan.abramov@gmail.com",
                "date": "2019-05-18T00:38:13Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2019-05-18T00:38:13Z"
            },
            "message": "[Fresh] Set up initial scaffolding (#15619)\n\n* Add a minimal failing test for hot reload\r\n\r\n* Set up scaffolding for React Fresh\r\n\r\n* Consider type family when comparing elementType\r\n\r\nRendering an element with stale type should not cause it to remount.\r\n\r\nWe only do this for FunctionComponent tag since checking is unnecessary for classes or host components.\r\n\r\n* Add support for forwardRef()\r\n\r\nInitially I thought I would compare families of inner .render functions.\r\n\r\nHowever, there is a corner case where this can create false positives. Such as when you forwardRef(X) the same X twice. Those are supposed to be distinct. But if we compare .render functions, we wouldn't be able to distinguish them after first reload.\r\n\r\nIt seems safer to rely on explicit registration for those. This should be easy when forwardRef() call is in the same file, and usually it would be. For cases like HOCs and style.div`...` factories that return forwardRef(), we could have the __register__ helper itself \"dig deeper\" and register the inner function.\r\n\r\n* Show how forwardRef inner identity can be inferred\r\n\r\nThe __register__ implementation can read the inner identity itself.\r\n\r\n* Add missing __DEV__ to tests\r\n\r\n* Add support for memo() (without fixing bailouts)\r\n\r\nThis adds rudimentary support for memo components. However, we don't actually skip bailouts yet, so this is not very useful by itself alone. Tests have TODOs that we need to remove after bailout skipping is done.\r\n\r\n* Refactor type comparison for clarity\r\n\r\n* Hot update shouldn't re-render ancestor components unnecessarily\r\n\r\nMy code had a bug where it checked for a wrong thing in a wrong set, leading us to always re-render.\r\n\r\nThis fixes the checks so that we only schedule updates for things that were actually edited.\r\n\r\n* Add test coverage for memo(fn, areEqual)\r\n\r\n* Explicitly skip bailouts for hot reloading fibers\r\n\r\nThis forces even memo() with shallow comparison to re-render on hot update.\r\n\r\n* Refactor scheduling update to reduce duplication\r\n\r\n* Remove unused variable in test\r\n\r\n* Don't check presence in a set while not hot reloading\r\n\r\n* Make scheduleHotUpdate() take named arguments\r\n\r\n* Don't keep unedited component types in the type => family map\r\n\r\nIt's unnecessary because if they haven't been edited, there's no special reconciliation logic.\r\n\r\n* Add signatures that force remounting\r\n\r\nSignatures let us force a remount of a type even if from React's point of view, type is the same.\r\n\r\nA type has one current signature. If that signature changes during next hot update, all Fibers with that type should be deleted and remounted.\r\n\r\nWe do this by mutating elementType scheduling a parent.\r\n\r\nThis will be handy to force remount of mismatching Hooks, as well as failed error boundaries.\r\n\r\nFor this to fully work, we'll need to add a way to skip built-in bailouts for all Fiber types. This will be the most invasive and annoying change. I did it for HostRoot in this PR but there's more. I'll add an automated test case that catches the missing bailout bailouts.\r\n\r\n* Support forced remounting for all component types\r\n\r\nThis teaches all parent component types to remount their child if necessary.\r\n\r\nIt also adds tests for them.\r\n\r\n* Remount effects while preserving state for hot reloaded components\r\n\r\nThis makes sure that changes to *code* always propagate.\r\n\r\nIt can break components that aren't resilient to useEffect over-firing, but that seems like a good constraint since you might need to add a dependency later anyway, and this helps avoid coding yourself into the corner.\r\n\r\n* Add missing __DEV__ blocks to tests\r\n\r\n* Fix unused variables in tests\r\n\r\n* Remove outdated TODO\r\n\r\n* Expose scheduleHotUpdate directly\r\n\r\n* Inline isCompatibleType\r\n\r\n* Run one check per component for invalidating deps\r\n\r\nThis also makes the bailouts more targeted--no need to remount useEffect for a parent component of remounted fiber.\r\n\r\n* Resolve .type early\r\n\r\nThis moves resolving to set up the right .type early instead of doing this before render.\r\nA bit more future-proof in case we want to restructure the begin phase later.\r\n\r\nForwardRef is special because its type is a wrapper but it can be hot reloaded by itself.\r\nSo we have a special overload for it that reconstucts the wrapper type if needed.\r\n\r\n* Add a Suspense todo\r\n\r\n* Use current.type !== workInProgress.type for ignoring deps\r\n\r\nThis gets rid of one of the sets.\r\n\r\n* Use workInProgress.type !== current.type check for force re-render\r\n\r\nWe still use a set for forced remount though.\r\n\r\n* Use wip.type !== current.type check in more places\r\n\r\nThis also disables the remounting tests. They need a separate approach.\r\n\r\n* Use a dedicated remount mechanism\r\n\r\n* Add a test for offscreen trees\r\n\r\nIt has a TODO because it seems like offscreen updates are incorrectly applied too soon.\r\n\r\n* Enable offscreen test now that it is fixed\r\n\r\n* Fix corner cases in the new remounting mechanism\r\n\r\n* Remount failed error boundaries on hot reload\r\n\r\n* Fix test now that act() flushes\r\n\r\nThis test is manual so I don't actually want act here.\r\n\r\n* Nits\r\n\r\n* Add comments",
            "tree": {
                "sha": "c7c27a4fe038d9447bba5aca5c89574f05c5c545",
                "url": "https://api.github.com/repos/facebook/react/git/trees/c7c27a4fe038d9447bba5aca5c89574f05c5c545"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/31487dd82e82ef62243806b2e76b23a6fb21d0bc",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJc31P1CRBK7hj4Ov3rIwAAdHIIAJCofpeBtbL4s8KgWuFbgISX\nfTxoXKcrWHGh3coGCuBZ45dMrfNB1n1JTjknTPAYqK5d8vdGzsoUUYGlCbD93L/F\nkECt1iowAyWt5ffjQh/HfytT2I+DRnoDeNEWhLIhb9t4EMFoW61P9BUgHCrT89SS\ncsCfHvhBRhlFnX3yj83tCAWIdnsLIGlxZ5AVXcCmFQNxfRAFE7f11LaVUQab1Hj/\n22FjQZkNrn5tUFwGdAbJp8f0RmSGVI0PEGi6+bdOEBQ2yDX6whBcbotRf9hw0Lnp\n11QG6UGrM6LiZAQxSkwuuJYI4eSOzZ2PVjTC6YrRNg7rytXKdlBTEX3KgcmRPoI=\n=BmPr\n-----END PGP SIGNATURE-----\n",
                "payload": "tree c7c27a4fe038d9447bba5aca5c89574f05c5c545\nparent 9c6de716d028f17736d0892d8a3d8f3ac2cb62bd\nauthor Dan Abramov <dan.abramov@gmail.com> 1558139893 +0100\ncommitter GitHub <noreply@github.com> 1558139893 +0100\n\n[Fresh] Set up initial scaffolding (#15619)\n\n* Add a minimal failing test for hot reload\r\n\r\n* Set up scaffolding for React Fresh\r\n\r\n* Consider type family when comparing elementType\r\n\r\nRendering an element with stale type should not cause it to remount.\r\n\r\nWe only do this for FunctionComponent tag since checking is unnecessary for classes or host components.\r\n\r\n* Add support for forwardRef()\r\n\r\nInitially I thought I would compare families of inner .render functions.\r\n\r\nHowever, there is a corner case where this can create false positives. Such as when you forwardRef(X) the same X twice. Those are supposed to be distinct. But if we compare .render functions, we wouldn't be able to distinguish them after first reload.\r\n\r\nIt seems safer to rely on explicit registration for those. This should be easy when forwardRef() call is in the same file, and usually it would be. For cases like HOCs and style.div`...` factories that return forwardRef(), we could have the __register__ helper itself \"dig deeper\" and register the inner function.\r\n\r\n* Show how forwardRef inner identity can be inferred\r\n\r\nThe __register__ implementation can read the inner identity itself.\r\n\r\n* Add missing __DEV__ to tests\r\n\r\n* Add support for memo() (without fixing bailouts)\r\n\r\nThis adds rudimentary support for memo components. However, we don't actually skip bailouts yet, so this is not very useful by itself alone. Tests have TODOs that we need to remove after bailout skipping is done.\r\n\r\n* Refactor type comparison for clarity\r\n\r\n* Hot update shouldn't re-render ancestor components unnecessarily\r\n\r\nMy code had a bug where it checked for a wrong thing in a wrong set, leading us to always re-render.\r\n\r\nThis fixes the checks so that we only schedule updates for things that were actually edited.\r\n\r\n* Add test coverage for memo(fn, areEqual)\r\n\r\n* Explicitly skip bailouts for hot reloading fibers\r\n\r\nThis forces even memo() with shallow comparison to re-render on hot update.\r\n\r\n* Refactor scheduling update to reduce duplication\r\n\r\n* Remove unused variable in test\r\n\r\n* Don't check presence in a set while not hot reloading\r\n\r\n* Make scheduleHotUpdate() take named arguments\r\n\r\n* Don't keep unedited component types in the type => family map\r\n\r\nIt's unnecessary because if they haven't been edited, there's no special reconciliation logic.\r\n\r\n* Add signatures that force remounting\r\n\r\nSignatures let us force a remount of a type even if from React's point of view, type is the same.\r\n\r\nA type has one current signature. If that signature changes during next hot update, all Fibers with that type should be deleted and remounted.\r\n\r\nWe do this by mutating elementType scheduling a parent.\r\n\r\nThis will be handy to force remount of mismatching Hooks, as well as failed error boundaries.\r\n\r\nFor this to fully work, we'll need to add a way to skip built-in bailouts for all Fiber types. This will be the most invasive and annoying change. I did it for HostRoot in this PR but there's more. I'll add an automated test case that catches the missing bailout bailouts.\r\n\r\n* Support forced remounting for all component types\r\n\r\nThis teaches all parent component types to remount their child if necessary.\r\n\r\nIt also adds tests for them.\r\n\r\n* Remount effects while preserving state for hot reloaded components\r\n\r\nThis makes sure that changes to *code* always propagate.\r\n\r\nIt can break components that aren't resilient to useEffect over-firing, but that seems like a good constraint since you might need to add a dependency later anyway, and this helps avoid coding yourself into the corner.\r\n\r\n* Add missing __DEV__ blocks to tests\r\n\r\n* Fix unused variables in tests\r\n\r\n* Remove outdated TODO\r\n\r\n* Expose scheduleHotUpdate directly\r\n\r\n* Inline isCompatibleType\r\n\r\n* Run one check per component for invalidating deps\r\n\r\nThis also makes the bailouts more targeted--no need to remount useEffect for a parent component of remounted fiber.\r\n\r\n* Resolve .type early\r\n\r\nThis moves resolving to set up the right .type early instead of doing this before render.\r\nA bit more future-proof in case we want to restructure the begin phase later.\r\n\r\nForwardRef is special because its type is a wrapper but it can be hot reloaded by itself.\r\nSo we have a special overload for it that reconstucts the wrapper type if needed.\r\n\r\n* Add a Suspense todo\r\n\r\n* Use current.type !== workInProgress.type for ignoring deps\r\n\r\nThis gets rid of one of the sets.\r\n\r\n* Use workInProgress.type !== current.type check for force re-render\r\n\r\nWe still use a set for forced remount though.\r\n\r\n* Use wip.type !== current.type check in more places\r\n\r\nThis also disables the remounting tests. They need a separate approach.\r\n\r\n* Use a dedicated remount mechanism\r\n\r\n* Add a test for offscreen trees\r\n\r\nIt has a TODO because it seems like offscreen updates are incorrectly applied too soon.\r\n\r\n* Enable offscreen test now that it is fixed\r\n\r\n* Fix corner cases in the new remounting mechanism\r\n\r\n* Remount failed error boundaries on hot reload\r\n\r\n* Fix test now that act() flushes\r\n\r\nThis test is manual so I don't actually want act here.\r\n\r\n* Nits\r\n\r\n* Add comments\r\n"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/31487dd82e82ef62243806b2e76b23a6fb21d0bc",
        "html_url": "https://github.com/facebook/react/commit/31487dd82e82ef62243806b2e76b23a6fb21d0bc",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/31487dd82e82ef62243806b2e76b23a6fb21d0bc/comments",
        "author": {
            "login": "gaearon",
            "id": 810438,
            "node_id": "MDQ6VXNlcjgxMDQzOA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/810438?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gaearon",
            "html_url": "https://github.com/gaearon",
            "followers_url": "https://api.github.com/users/gaearon/followers",
            "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
            "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
            "organizations_url": "https://api.github.com/users/gaearon/orgs",
            "repos_url": "https://api.github.com/users/gaearon/repos",
            "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gaearon/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "9c6de716d028f17736d0892d8a3d8f3ac2cb62bd",
                "url": "https://api.github.com/repos/facebook/react/commits/9c6de716d028f17736d0892d8a3d8f3ac2cb62bd",
                "html_url": "https://github.com/facebook/react/commit/9c6de716d028f17736d0892d8a3d8f3ac2cb62bd"
            }
        ]
    },
    {
        "sha": "862f499facfba9635f21c25b17368cb980b17c7e",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6ODYyZjQ5OWZhY2ZiYTk2MzVmMjFjMjViMTczNjhjYjk4MGIxN2M3ZQ==",
        "commit": {
            "author": {
                "name": "Andrew Clark",
                "email": "git@andrewclark.io",
                "date": "2019-05-13T21:30:39Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2019-05-13T21:30:39Z"
            },
            "message": "Add Batched Mode (#15502)\n\n* Add Batched Mode\r\n\r\nReact has an unfortunate quirk where updates are sometimes synchronous\r\n-- where React starts rendering immediately within the call stack of\r\n`setState` \u2014 and sometimes batched, where updates are flushed at the\r\nend of the current event. Any update that originates within the call\r\nstack of the React event system is batched. This encompasses most\r\nupdates, since most updates originate from an event handler like\r\n`onClick` or `onChange`. It also includes updates triggered by lifecycle\r\nmethods or effects. But there are also updates that originate outside\r\nReact's event system, like timer events, network events, and microtasks\r\n(promise resolution handlers). These are not batched, which results in\r\nboth worse performance (multiple render passes instead of single one)\r\nand confusing semantics.\r\n\r\nIdeally all updates would be batched by default. Unfortunately, it's\r\neasy for components to accidentally rely on this behavior, so changing\r\nit could break existing apps in subtle ways.\r\n\r\nOne way to move to a batched-by-default model is to opt into Concurrent\r\nMode (still experimental). But Concurrent Mode introduces additional\r\nsemantic changes that apps may not be ready to adopt.\r\n\r\nThis commit introduces an additional mode called Batched Mode. Batched\r\nMode enables a batched-by-default model that defers all updates to the\r\nnext React event. Once it begins rendering, React will not yield to\r\nthe browser until the entire render is finished.\r\n\r\nBatched Mode is superset of Strict Mode. It fires all the same warnings.\r\nIt also drops the forked Suspense behavior used by Legacy Mode, in favor\r\nof the proper semantics used by Concurrent Mode.\r\n\r\nI have not added any public APIs that expose the new mode yet. I'll do\r\nthat in subsequent commits.\r\n\r\n* Suspense in Batched Mode\r\n\r\nShould have same semantics as Concurrent Mode.\r\n\r\n* Use RootTag field to configure type of root\r\n\r\nThere are three types of roots: Legacy, Batched, and Concurrent.\r\n\r\n* flushSync should not flush batched work\r\n\r\nTreat Sync and Batched expiration times separately. Only Sync updates\r\nare pushed to our internal queue of synchronous callbacks.\r\n\r\nRenamed `flushImmediateQueue` to `flushSyncCallbackQueue` for clarity.",
            "tree": {
                "sha": "0a7fcd8c1c9c3866f218c7c1147e543c84e26ee7",
                "url": "https://api.github.com/repos/facebook/react/git/trees/0a7fcd8c1c9c3866f218c7c1147e543c84e26ee7"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/862f499facfba9635f21c25b17368cb980b17c7e",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJc2eH/CRBK7hj4Ov3rIwAAdHIIAHiWXRfwPOxxDTCBuv8QuNVj\nO6ikVxETZpVn+cis3VLyCSt0ZCvAjmUzZIcQW0SWbBRYNqBaktKERL2RHySXl/Bg\nZt+nxpv3lVwb0ahSiMlFlQe2b2J/pOOyuRdw0KI97emyjv0H1Q1P411RGVaDfEkv\nRZNteTFXJKBWdqhYf+O0JxJBOvPmCYGMocD1BJ2tWOf4SsR8IdnceiXtJb1yGXLl\nD4q8M136kVjMvTKQwHYXswEgPa+zpGwmhb9Wwjz9LwQT+nYiqr8ZOnIk7cBuQqZz\nSNTYKwyxdU7TV0FjZQhB541jBHqL0sTgYHbF1lM4iB5uCiN2K/Z42FF4pd8LYak=\n=b7UB\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 0a7fcd8c1c9c3866f218c7c1147e543c84e26ee7\nparent fec74f99daebd07c38a647941afa6bf0e0b2306e\nauthor Andrew Clark <git@andrewclark.io> 1557783039 -0700\ncommitter GitHub <noreply@github.com> 1557783039 -0700\n\nAdd Batched Mode (#15502)\n\n* Add Batched Mode\r\n\r\nReact has an unfortunate quirk where updates are sometimes synchronous\r\n-- where React starts rendering immediately within the call stack of\r\n`setState` \u2014 and sometimes batched, where updates are flushed at the\r\nend of the current event. Any update that originates within the call\r\nstack of the React event system is batched. This encompasses most\r\nupdates, since most updates originate from an event handler like\r\n`onClick` or `onChange`. It also includes updates triggered by lifecycle\r\nmethods or effects. But there are also updates that originate outside\r\nReact's event system, like timer events, network events, and microtasks\r\n(promise resolution handlers). These are not batched, which results in\r\nboth worse performance (multiple render passes instead of single one)\r\nand confusing semantics.\r\n\r\nIdeally all updates would be batched by default. Unfortunately, it's\r\neasy for components to accidentally rely on this behavior, so changing\r\nit could break existing apps in subtle ways.\r\n\r\nOne way to move to a batched-by-default model is to opt into Concurrent\r\nMode (still experimental). But Concurrent Mode introduces additional\r\nsemantic changes that apps may not be ready to adopt.\r\n\r\nThis commit introduces an additional mode called Batched Mode. Batched\r\nMode enables a batched-by-default model that defers all updates to the\r\nnext React event. Once it begins rendering, React will not yield to\r\nthe browser until the entire render is finished.\r\n\r\nBatched Mode is superset of Strict Mode. It fires all the same warnings.\r\nIt also drops the forked Suspense behavior used by Legacy Mode, in favor\r\nof the proper semantics used by Concurrent Mode.\r\n\r\nI have not added any public APIs that expose the new mode yet. I'll do\r\nthat in subsequent commits.\r\n\r\n* Suspense in Batched Mode\r\n\r\nShould have same semantics as Concurrent Mode.\r\n\r\n* Use RootTag field to configure type of root\r\n\r\nThere are three types of roots: Legacy, Batched, and Concurrent.\r\n\r\n* flushSync should not flush batched work\r\n\r\nTreat Sync and Batched expiration times separately. Only Sync updates\r\nare pushed to our internal queue of synchronous callbacks.\r\n\r\nRenamed `flushImmediateQueue` to `flushSyncCallbackQueue` for clarity.\r\n"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/862f499facfba9635f21c25b17368cb980b17c7e",
        "html_url": "https://github.com/facebook/react/commit/862f499facfba9635f21c25b17368cb980b17c7e",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/862f499facfba9635f21c25b17368cb980b17c7e/comments",
        "author": {
            "login": "acdlite",
            "id": 3624098,
            "node_id": "MDQ6VXNlcjM2MjQwOTg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3624098?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/acdlite",
            "html_url": "https://github.com/acdlite",
            "followers_url": "https://api.github.com/users/acdlite/followers",
            "following_url": "https://api.github.com/users/acdlite/following{/other_user}",
            "gists_url": "https://api.github.com/users/acdlite/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/acdlite/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/acdlite/subscriptions",
            "organizations_url": "https://api.github.com/users/acdlite/orgs",
            "repos_url": "https://api.github.com/users/acdlite/repos",
            "events_url": "https://api.github.com/users/acdlite/events{/privacy}",
            "received_events_url": "https://api.github.com/users/acdlite/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "fec74f99daebd07c38a647941afa6bf0e0b2306e",
                "url": "https://api.github.com/repos/facebook/react/commits/fec74f99daebd07c38a647941afa6bf0e0b2306e",
                "html_url": "https://github.com/facebook/react/commit/fec74f99daebd07c38a647941afa6bf0e0b2306e"
            }
        ]
    },
    {
        "sha": "dd9cef9fc001e174e177bac47d88fd28ff8de316",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6ZGQ5Y2VmOWZjMDAxZTE3NGUxNzdiYWM0N2Q4OGZkMjhmZjhkZTMxNg==",
        "commit": {
            "author": {
                "name": "Dominic Gannaway",
                "email": "trueadm@users.noreply.github.com",
                "date": "2019-04-10T17:52:34Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2019-04-10T17:52:34Z"
            },
            "message": "Experimental Event API: Add targets and responder utility method for finding targets (#15372)",
            "tree": {
                "sha": "925f0096f448c7b20727c5c5bb7d3586df67ed1f",
                "url": "https://api.github.com/repos/facebook/react/git/trees/925f0096f448c7b20727c5c5bb7d3586df67ed1f"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/dd9cef9fc001e174e177bac47d88fd28ff8de316",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcri1iCRBK7hj4Ov3rIwAAdHIIAFu4czkKopPeSUUHiL5APKvY\nuTP6IeMvHdOp00IiblpFSrckzelfP62tsIAKrzf5/cWsLfk3lsVeNb1gawrlHdD9\nFUeF8w8BLEtaqfcxE6vIztglOvOLGM+/2trYCelO5A5kWv0UzeHw32duBLLnZQk3\niC6A79ew9TNr6CpxmGwSlFkRfdh1mAsTfT5LbRZLBi6QVaN6mnAqDhW//gjMm3Ls\nvyzcrasgGg8z+z48mUdAukhnf2lM46hZ1RXLu3LQzQ7Be4ljU0qM//BQVxk7WZcX\nOuGIxOkjShGojrevAFAUXJqg2upRxxBNGeJ9Cg4mA1WBB5ycmetoPOfvq/v7WHQ=\n=GrFR\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 925f0096f448c7b20727c5c5bb7d3586df67ed1f\nparent c64b330032cef887ac5f787ac4a50bb4eeca4e1d\nauthor Dominic Gannaway <trueadm@users.noreply.github.com> 1554918754 +0100\ncommitter GitHub <noreply@github.com> 1554918754 +0100\n\nExperimental Event API: Add targets and responder utility method for finding targets (#15372)\n\n"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/dd9cef9fc001e174e177bac47d88fd28ff8de316",
        "html_url": "https://github.com/facebook/react/commit/dd9cef9fc001e174e177bac47d88fd28ff8de316",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/dd9cef9fc001e174e177bac47d88fd28ff8de316/comments",
        "author": {
            "login": "trueadm",
            "id": 1519870,
            "node_id": "MDQ6VXNlcjE1MTk4NzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1519870?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/trueadm",
            "html_url": "https://github.com/trueadm",
            "followers_url": "https://api.github.com/users/trueadm/followers",
            "following_url": "https://api.github.com/users/trueadm/following{/other_user}",
            "gists_url": "https://api.github.com/users/trueadm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/trueadm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/trueadm/subscriptions",
            "organizations_url": "https://api.github.com/users/trueadm/orgs",
            "repos_url": "https://api.github.com/users/trueadm/repos",
            "events_url": "https://api.github.com/users/trueadm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/trueadm/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "c64b330032cef887ac5f787ac4a50bb4eeca4e1d",
                "url": "https://api.github.com/repos/facebook/react/commits/c64b330032cef887ac5f787ac4a50bb4eeca4e1d",
                "html_url": "https://github.com/facebook/react/commit/c64b330032cef887ac5f787ac4a50bb4eeca4e1d"
            }
        ]
    },
    {
        "sha": "aece8119cf82a6eff02d9ad819758b7ac2c9b329",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6YWVjZTgxMTljZjgyYTZlZmYwMmQ5YWQ4MTk3NThiN2FjMmM5YjMyOQ==",
        "commit": {
            "author": {
                "name": "Dominic Gannaway",
                "email": "trueadm@users.noreply.github.com",
                "date": "2019-04-09T11:47:32Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2019-04-09T11:47:32Z"
            },
            "message": "Refactor EventComponent logic + add onOwnershipChange callback (#15354)",
            "tree": {
                "sha": "f0ce9ae0d14e8cc25260c74cf222669e6818a77c",
                "url": "https://api.github.com/repos/facebook/react/git/trees/f0ce9ae0d14e8cc25260c74cf222669e6818a77c"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/aece8119cf82a6eff02d9ad819758b7ac2c9b329",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcrIZUCRBK7hj4Ov3rIwAAdHIIABa25zWY1rCd4rbU2hXLBcOu\nRagCVHSd19IU1vG06xU175fOncc6Id4BC9KAY97yED9G8+VCULaJnVPMFzgQkLu8\n7w7SeVAoi0Ca8zMmVJz/QDaax8CYmN4Zk4QzkKjmK79CCmkeCr2CmiH/5q6yLLmv\nTU9da52tT+ZXr2ONUYPP2xal8NzCXrF32TJl0/YQQuKS8w67+tB4nP9agFUNVqvK\nlU48mjy5iFuequ6zHbmBTd48lg7a4HpvOfoEPuwwd0XZKDdi8eVYrHzJqdTqoYra\nV2aPBz7mNYWfqsxgJ4zgRicTr8AR6W+lXoqcoY/Uod4iiu8tjoeUFT4GKndj1UE=\n=uZ+z\n-----END PGP SIGNATURE-----\n",
                "payload": "tree f0ce9ae0d14e8cc25260c74cf222669e6818a77c\nparent 183d1f42edecb9e303c05d1a4303d17ecffb0cc0\nauthor Dominic Gannaway <trueadm@users.noreply.github.com> 1554810452 +0100\ncommitter GitHub <noreply@github.com> 1554810452 +0100\n\nRefactor EventComponent logic + add onOwnershipChange callback (#15354)\n\n\r\n"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/aece8119cf82a6eff02d9ad819758b7ac2c9b329",
        "html_url": "https://github.com/facebook/react/commit/aece8119cf82a6eff02d9ad819758b7ac2c9b329",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/aece8119cf82a6eff02d9ad819758b7ac2c9b329/comments",
        "author": {
            "login": "trueadm",
            "id": 1519870,
            "node_id": "MDQ6VXNlcjE1MTk4NzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1519870?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/trueadm",
            "html_url": "https://github.com/trueadm",
            "followers_url": "https://api.github.com/users/trueadm/followers",
            "following_url": "https://api.github.com/users/trueadm/following{/other_user}",
            "gists_url": "https://api.github.com/users/trueadm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/trueadm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/trueadm/subscriptions",
            "organizations_url": "https://api.github.com/users/trueadm/orgs",
            "repos_url": "https://api.github.com/users/trueadm/repos",
            "events_url": "https://api.github.com/users/trueadm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/trueadm/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "183d1f42edecb9e303c05d1a4303d17ecffb0cc0",
                "url": "https://api.github.com/repos/facebook/react/commits/183d1f42edecb9e303c05d1a4303d17ecffb0cc0",
                "html_url": "https://github.com/facebook/react/commit/183d1f42edecb9e303c05d1a4303d17ecffb0cc0"
            }
        ]
    },
    {
        "sha": "4064ea9fa6387c92a985b52bfc66746f81ccd4fd",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6NDA2NGVhOWZhNjM4N2M5MmE5ODViNTJiZmM2Njc0NmY4MWNjZDRmZA==",
        "commit": {
            "author": {
                "name": "Dominic Gannaway",
                "email": "trueadm@users.noreply.github.com",
                "date": "2019-04-06T07:16:57Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2019-04-06T07:16:57Z"
            },
            "message": "Experimental event API: Support EventComponent onUnmount responder callback (#15335)",
            "tree": {
                "sha": "ef16cbd7498a5631d617ee95735e828b0877f88b",
                "url": "https://api.github.com/repos/facebook/react/git/trees/ef16cbd7498a5631d617ee95735e828b0877f88b"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/4064ea9fa6387c92a985b52bfc66746f81ccd4fd",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcqFJpCRBK7hj4Ov3rIwAAdHIIAFMtO3AinWTMn18JB2GZrTI3\nTinQEF72RDGAnPD3QUKNeWggFkN9MRoYBs/dPZoDOz7By5TLJdF0QEcE60+UEqLl\n1fWJ0CmRcYLMGgiLR+A9YaZV8zubx863Mfg2yOnzgW+mT4UgsnSxDl5/YskLLXWt\noYrqjl6UYBIcGZzzK0z8czGsVCgmjjjkgXLQYiZX4LjAvwQvFhmcjWNaCx/la3Hs\nqBy11hLxvrrFrkyZ4ujoNUkA1DnYqqUCy2Q5tgz20DiNIneaZl2yqGn2xP7obhWb\nvFm9CUAolw6DjpHiYsW7z984ieeTwaIE3faM7anzrHht8xEIsu+uxRwYX3D+fT4=\n=Mzig\n-----END PGP SIGNATURE-----\n",
                "payload": "tree ef16cbd7498a5631d617ee95735e828b0877f88b\nparent 4fbbae8afa62b61c84cf1ca0cd7a1f5a413f59df\nauthor Dominic Gannaway <trueadm@users.noreply.github.com> 1554535017 +0100\ncommitter GitHub <noreply@github.com> 1554535017 +0100\n\nExperimental event API: Support EventComponent onUnmount responder callback (#15335)\n\n\r\n"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/4064ea9fa6387c92a985b52bfc66746f81ccd4fd",
        "html_url": "https://github.com/facebook/react/commit/4064ea9fa6387c92a985b52bfc66746f81ccd4fd",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/4064ea9fa6387c92a985b52bfc66746f81ccd4fd/comments",
        "author": {
            "login": "trueadm",
            "id": 1519870,
            "node_id": "MDQ6VXNlcjE1MTk4NzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1519870?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/trueadm",
            "html_url": "https://github.com/trueadm",
            "followers_url": "https://api.github.com/users/trueadm/followers",
            "following_url": "https://api.github.com/users/trueadm/following{/other_user}",
            "gists_url": "https://api.github.com/users/trueadm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/trueadm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/trueadm/subscriptions",
            "organizations_url": "https://api.github.com/users/trueadm/orgs",
            "repos_url": "https://api.github.com/users/trueadm/repos",
            "events_url": "https://api.github.com/users/trueadm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/trueadm/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "4fbbae8afa62b61c84cf1ca0cd7a1f5a413f59df",
                "url": "https://api.github.com/repos/facebook/react/commits/4fbbae8afa62b61c84cf1ca0cd7a1f5a413f59df",
                "html_url": "https://github.com/facebook/react/commit/4fbbae8afa62b61c84cf1ca0cd7a1f5a413f59df"
            }
        ]
    },
    {
        "sha": "b93a8a9bb8460a3d582072d3b252ecc15c6ea0f5",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6YjkzYThhOWJiODQ2MGEzZDU4MjA3MmQzYjI1MmVjYzE1YzZlYTBmNQ==",
        "commit": {
            "author": {
                "name": "Dominic Gannaway",
                "email": "trueadm@users.noreply.github.com",
                "date": "2019-04-04T22:28:23Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2019-04-04T22:28:23Z"
            },
            "message": "Experimental event API: refactor responder modules for lifecycle inclusion (#15322)",
            "tree": {
                "sha": "0467ccc464666f64d09215a05ec1c2e96d147d52",
                "url": "https://api.github.com/repos/facebook/react/git/trees/0467ccc464666f64d09215a05ec1c2e96d147d52"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/b93a8a9bb8460a3d582072d3b252ecc15c6ea0f5",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcpoUHCRBK7hj4Ov3rIwAAdHIIACeZgxEvMtsHxPYSJDlVV4Sq\nMzxD9yK5vV24mPKvTh8EXZSERw/RnT6mGE8cbtsDTY6d9hg+wJnfbDlQ5ZboD1YE\nh3ZmwHtntXfyXo7NkgS27/ZkRum1RfxexIJQIafPZdpP/26frkdA0/nmUD7DYHoW\nUjhYqtKj41/8VaLHNxgTqOPMBLuBmB87/emQ7uUttUyufBycNL1pKZm6fwXfRYPs\nGCUTXGbbDPgNCTYmt+lHgurvHpmG5+IQxaQJCRET/8Dj3OVaPqbV7Rnuca+39W6C\nIJ0xIkZ2EpESEYlybP/tUwRr3prWbgR9TIoZMDj3BwmVEv5oxVTxJ3oVrWKgdt4=\n=1GvB\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 0467ccc464666f64d09215a05ec1c2e96d147d52\nparent 937d262f557fd3332576be0da60adf5f94c545d9\nauthor Dominic Gannaway <trueadm@users.noreply.github.com> 1554416903 +0100\ncommitter GitHub <noreply@github.com> 1554416903 +0100\n\nExperimental event API: refactor responder modules for lifecycle inclusion (#15322)\n\n"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/b93a8a9bb8460a3d582072d3b252ecc15c6ea0f5",
        "html_url": "https://github.com/facebook/react/commit/b93a8a9bb8460a3d582072d3b252ecc15c6ea0f5",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/b93a8a9bb8460a3d582072d3b252ecc15c6ea0f5/comments",
        "author": {
            "login": "trueadm",
            "id": 1519870,
            "node_id": "MDQ6VXNlcjE1MTk4NzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1519870?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/trueadm",
            "html_url": "https://github.com/trueadm",
            "followers_url": "https://api.github.com/users/trueadm/followers",
            "following_url": "https://api.github.com/users/trueadm/following{/other_user}",
            "gists_url": "https://api.github.com/users/trueadm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/trueadm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/trueadm/subscriptions",
            "organizations_url": "https://api.github.com/users/trueadm/orgs",
            "repos_url": "https://api.github.com/users/trueadm/repos",
            "events_url": "https://api.github.com/users/trueadm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/trueadm/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "937d262f557fd3332576be0da60adf5f94c545d9",
                "url": "https://api.github.com/repos/facebook/react/commits/937d262f557fd3332576be0da60adf5f94c545d9",
                "html_url": "https://github.com/facebook/react/commit/937d262f557fd3332576be0da60adf5f94c545d9"
            }
        ]
    },
    {
        "sha": "80f8b0d5123981969997e07c071bdc6e3884ef58",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6ODBmOGIwZDUxMjM5ODE5Njk5OTdlMDdjMDcxYmRjNmUzODg0ZWY1OA==",
        "commit": {
            "author": {
                "name": "Dominic Gannaway",
                "email": "trueadm@users.noreply.github.com",
                "date": "2019-03-26T23:55:25Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2019-03-26T23:55:25Z"
            },
            "message": "Add part of the event responder system for experimental event API (#15179)\n\n* Add part of the event responder system",
            "tree": {
                "sha": "bc4eb95af9c78076bb6ea1f7bf69cd29a1ab3d82",
                "url": "https://api.github.com/repos/facebook/react/git/trees/bc4eb95af9c78076bb6ea1f7bf69cd29a1ab3d82"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/80f8b0d5123981969997e07c071bdc6e3884ef58",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcmrvtCRBK7hj4Ov3rIwAAdHIIAEE9CkpXmi9K+NC7VXYY+ydY\no/EGy2qiOESfNInh6VQLQ9HJ35QUcPy68gS4k4xl9lggEfDRBe9TpL1u7F2zwxOL\np7de8lj0N7nXrLYo2DIzt/okJUt8TAUa0TQIUlnxRLa55Vxua3T5craSA7NpIb+j\nbyX8zReL+R/R9BmEL/h/7ctjduS8R5Wsx85KxXx0oVSg48YxVm7aj6GYKhDP2Cx+\nvM3QYM2tGiRT8AOEK60+bKio0yNQPfAo/wZbiA1UHTbhAI5yts7d4iVcJfZz2pkn\nwwjE5cC6WJdCSGlNSyYE4swHZn/6M0hIV1+Q6G8fxdD170EJIJ0aY2Ct/UQg184=\n=LuNM\n-----END PGP SIGNATURE-----\n",
                "payload": "tree bc4eb95af9c78076bb6ea1f7bf69cd29a1ab3d82\nparent d03ac4b231da8952d2648f73147f9673de46a6ed\nauthor Dominic Gannaway <trueadm@users.noreply.github.com> 1553644525 -0700\ncommitter GitHub <noreply@github.com> 1553644525 -0700\n\nAdd part of the event responder system for experimental event API (#15179)\n\n* Add part of the event responder system"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/80f8b0d5123981969997e07c071bdc6e3884ef58",
        "html_url": "https://github.com/facebook/react/commit/80f8b0d5123981969997e07c071bdc6e3884ef58",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/80f8b0d5123981969997e07c071bdc6e3884ef58/comments",
        "author": {
            "login": "trueadm",
            "id": 1519870,
            "node_id": "MDQ6VXNlcjE1MTk4NzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1519870?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/trueadm",
            "html_url": "https://github.com/trueadm",
            "followers_url": "https://api.github.com/users/trueadm/followers",
            "following_url": "https://api.github.com/users/trueadm/following{/other_user}",
            "gists_url": "https://api.github.com/users/trueadm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/trueadm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/trueadm/subscriptions",
            "organizations_url": "https://api.github.com/users/trueadm/orgs",
            "repos_url": "https://api.github.com/users/trueadm/repos",
            "events_url": "https://api.github.com/users/trueadm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/trueadm/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "d03ac4b231da8952d2648f73147f9673de46a6ed",
                "url": "https://api.github.com/repos/facebook/react/commits/d03ac4b231da8952d2648f73147f9673de46a6ed",
                "html_url": "https://github.com/facebook/react/commit/d03ac4b231da8952d2648f73147f9673de46a6ed"
            }
        ]
    },
    {
        "sha": "b83e01cade6f86b9a127bdfdda60f625fd14fdcd",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6YjgzZTAxY2FkZTZmODZiOWExMjdiZGZkZGE2MGY2MjVmZDE0ZmRjZA==",
        "commit": {
            "author": {
                "name": "Dominic Gannaway",
                "email": "trueadm@users.noreply.github.com",
                "date": "2019-03-20T11:20:17Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2019-03-20T11:20:17Z"
            },
            "message": "Adds more scaffolding for experimental event API (#15112)\n\n* Adds more scaffolding for experimental event API",
            "tree": {
                "sha": "fe35402a6c34f0c34e3e850f8401e44bcedec0a8",
                "url": "https://api.github.com/repos/facebook/react/git/trees/fe35402a6c34f0c34e3e850f8401e44bcedec0a8"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/b83e01cade6f86b9a127bdfdda60f625fd14fdcd",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJckiHxCRBK7hj4Ov3rIwAAdHIIAKUvLCLve0eYylwLEdWrVAzh\nkPs9hM1H38UzzuQuZ3GhN3Zs33OeMxKW1NqQdHqcS+KtiLuRg7QhS8/aqzG1sepA\nHLEOfSmOKi/aQLjOFyKLxgF16gF6kPLJ72SpXHFXrk72M+fvj7b63KQMKjzQ+cmW\nHuTM4mtyy5Vfb+eZCiZaR+hWMZP+L5Xj2J5SO8sXjQ8/9EQYJNdPl89ZiHAv9C73\n8iL4VsV2nc6U5zv9RNLxBtmoYPx3vfPILZSP3Zbw8Mfka30C0vyLwlo2pBUgegtB\nlHCmpCyNSpJeirU9hIgI+iFgIER8pKpWPvIFKcuW7/6OyqE8uzz7IZutz/cd55k=\n=6Thm\n-----END PGP SIGNATURE-----\n",
                "payload": "tree fe35402a6c34f0c34e3e850f8401e44bcedec0a8\nparent daeda44d8f5abdb7354742bb69a967302d34d7f9\nauthor Dominic Gannaway <trueadm@users.noreply.github.com> 1553080817 +0000\ncommitter GitHub <noreply@github.com> 1553080817 +0000\n\nAdds more scaffolding for experimental event API (#15112)\n\n* Adds more scaffolding for experimental event API"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/b83e01cade6f86b9a127bdfdda60f625fd14fdcd",
        "html_url": "https://github.com/facebook/react/commit/b83e01cade6f86b9a127bdfdda60f625fd14fdcd",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/b83e01cade6f86b9a127bdfdda60f625fd14fdcd/comments",
        "author": {
            "login": "trueadm",
            "id": 1519870,
            "node_id": "MDQ6VXNlcjE1MTk4NzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1519870?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/trueadm",
            "html_url": "https://github.com/trueadm",
            "followers_url": "https://api.github.com/users/trueadm/followers",
            "following_url": "https://api.github.com/users/trueadm/following{/other_user}",
            "gists_url": "https://api.github.com/users/trueadm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/trueadm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/trueadm/subscriptions",
            "organizations_url": "https://api.github.com/users/trueadm/orgs",
            "repos_url": "https://api.github.com/users/trueadm/repos",
            "events_url": "https://api.github.com/users/trueadm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/trueadm/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "daeda44d8f5abdb7354742bb69a967302d34d7f9",
                "url": "https://api.github.com/repos/facebook/react/commits/daeda44d8f5abdb7354742bb69a967302d34d7f9",
                "html_url": "https://github.com/facebook/react/commit/daeda44d8f5abdb7354742bb69a967302d34d7f9"
            }
        ]
    },
    {
        "sha": "4186952a6f3558eb4fae9f6c5f669bd898dc1d97",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6NDE4Njk1MmE2ZjM1NThlYjRmYWU5ZjZjNWY2NjliZDg5OGRjMWQ5Nw==",
        "commit": {
            "author": {
                "name": "Brian Vaughn",
                "email": "brian.david.vaughn@gmail.com",
                "date": "2019-02-26T22:24:52Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2019-02-26T22:24:52Z"
            },
            "message": "Fixed incompatibility between react-debug-tools and useContext() (#14940)\n\n* Refactor hook ordering check to use DEV-only data structure. This enables us to warn about more cases (e.g. useContext, useDebugValue) withou the need to add any overhead to production bundles.",
            "tree": {
                "sha": "6fc415f3199c690a8286bc7257e52bf7483c2704",
                "url": "https://api.github.com/repos/facebook/react/git/trees/6fc415f3199c690a8286bc7257e52bf7483c2704"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/4186952a6f3558eb4fae9f6c5f669bd898dc1d97",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcdby0CRBK7hj4Ov3rIwAAdHIIADgMmysPr7V3jX2OLqttg/aD\nRaCyBa6/UTquFX3e0s7liujuZwFm3UnampV7inndopLklpdxh9n5p3dUKyAq/F3g\npHuSi+66U0qD9QOnpgY2P86Dh111YiqEgFR8MSJ3ZWEsxgz3rcPAXYGIhpuIM7FF\nM6BqCC6IirbHbZYsNheiEgz4ZY+trX1sN3TWX+kUGYKiRpRNj9VZ3bBzPDZaakeZ\n02rNCm895TcCG6bFH+Lm0OuPjJJhTzBXce2HluWS95vm6DTM23yC/3sU8GqsUuhx\nkQ0yOoCu5+PUrOlgEGGgDd1S5D52cVcPSNORf7rv/tjEt97yJsTRSJTbhs1bMoo=\n=cFKe\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 6fc415f3199c690a8286bc7257e52bf7483c2704\nparent 0b8efb229c0b8e4b0919d855e926c7528e2246f0\nauthor Brian Vaughn <brian.david.vaughn@gmail.com> 1551219892 -0800\ncommitter GitHub <noreply@github.com> 1551219892 -0800\n\nFixed incompatibility between react-debug-tools and useContext() (#14940)\n\n* Refactor hook ordering check to use DEV-only data structure. This enables us to warn about more cases (e.g. useContext, useDebugValue) withou the need to add any overhead to production bundles.\r\n"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/4186952a6f3558eb4fae9f6c5f669bd898dc1d97",
        "html_url": "https://github.com/facebook/react/commit/4186952a6f3558eb4fae9f6c5f669bd898dc1d97",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/4186952a6f3558eb4fae9f6c5f669bd898dc1d97/comments",
        "author": {
            "login": "bvaughn",
            "id": 29597,
            "node_id": "MDQ6VXNlcjI5NTk3",
            "avatar_url": "https://avatars.githubusercontent.com/u/29597?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bvaughn",
            "html_url": "https://github.com/bvaughn",
            "followers_url": "https://api.github.com/users/bvaughn/followers",
            "following_url": "https://api.github.com/users/bvaughn/following{/other_user}",
            "gists_url": "https://api.github.com/users/bvaughn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bvaughn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bvaughn/subscriptions",
            "organizations_url": "https://api.github.com/users/bvaughn/orgs",
            "repos_url": "https://api.github.com/users/bvaughn/repos",
            "events_url": "https://api.github.com/users/bvaughn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bvaughn/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "0b8efb229c0b8e4b0919d855e926c7528e2246f0",
                "url": "https://api.github.com/repos/facebook/react/commits/0b8efb229c0b8e4b0919d855e926c7528e2246f0",
                "html_url": "https://github.com/facebook/react/commit/0b8efb229c0b8e4b0919d855e926c7528e2246f0"
            }
        ]
    },
    {
        "sha": "790c8ef04195f0fc11ca3fb08e63f870f81483ac",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6NzkwYzhlZjA0MTk1ZjBmYzExY2EzZmIwOGU2M2Y4NzBmODE0ODNhYw==",
        "commit": {
            "author": {
                "name": "Andrew Clark",
                "email": "git@andrewclark.io",
                "date": "2019-01-17T01:23:35Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2019-01-17T01:23:35Z"
            },
            "message": "Allow useReducer to bail out of rendering by returning previous state (#14569)\n\n* Allow useReducer to bail out of rendering by returning previous state\r\n\r\nThis is conceptually similar to `shouldComponentUpdate`, except because\r\nthere could be multiple useReducer (or useState) Hooks in a single\r\ncomponent, we can only bail out if none of the Hooks produce a new\r\nvalue. We also can't bail out if any the other types of inputs \u2014 state\r\nand context \u2014 have changed.\r\n\r\nThese optimizations rely on the constraint that components are pure\r\nfunctions of props, state, and context.\r\n\r\nIn some cases, we can bail out without entering the render phase by\r\neagerly computing the next state and comparing it to the current one.\r\nThis only works if we are absolutely certain that the queue is empty at\r\nthe time of the update. In concurrent mode, this is difficult to\r\ndetermine, because there could be multiple copies of the queue and we\r\ndon't know which one is current without doing lots of extra work, which\r\nwould defeat the purpose of the optimization. However, in our\r\nimplementation, there are at most only two copies of the queue, and if\r\n*both* are empty then we know that the current queue must be.\r\n\r\n* Add test for context consumers inside hidden subtree\r\n\r\nShould not bail out during subsequent update. (This isn't directly\r\nrelated to this PR because we should have had this test, anyway.)\r\n\r\n* Refactor to use module-level variable instead of effect bit\r\n\r\n* Add test combining state bailout and props bailout (memo)",
            "tree": {
                "sha": "3e985facdc0e62ecbe009e766d4c7014bf8338c6",
                "url": "https://api.github.com/repos/facebook/react/git/trees/3e985facdc0e62ecbe009e766d4c7014bf8338c6"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/790c8ef04195f0fc11ca3fb08e63f870f81483ac",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcP9kXCRBK7hj4Ov3rIwAAdHIIAFYoUzrQcb3HKh2qkuDvO3G+\nnpHQ5U2rwoUKYG6BhPBt0V1SKI27boWY6n+esktnVOrXZ2OOrwyzR06cJLT4dG9g\nBkWMAfHSkGuZsybZQyWA2IJEJLQ7FkP2GW2w6C8sCRLQlJmTnGN3DNthTE5CCysw\nSXnyAheQT0P8OtKSqQvPQmE7E2GOS1ZtI2TVzSqKjm8MTjcEIE6lO4puL4iWjGCf\nHNdB/HtHIqpTeJO1JXvGZ+FOOhRAv0elsiLwY4h1LBDNmXzJVukxIrBfBImf0w/v\neQe+nMxNukx6jl86Gpgjqjtn14ljkgqanJ25hNuOponNfI3b2swY7a6ELYwPagE=\n=f5r1\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 3e985facdc0e62ecbe009e766d4c7014bf8338c6\nparent 8a120095bfba170dd0b5fa5dfc5fd89ed471ccbc\nauthor Andrew Clark <git@andrewclark.io> 1547688215 -0800\ncommitter GitHub <noreply@github.com> 1547688215 -0800\n\nAllow useReducer to bail out of rendering by returning previous state (#14569)\n\n* Allow useReducer to bail out of rendering by returning previous state\r\n\r\nThis is conceptually similar to `shouldComponentUpdate`, except because\r\nthere could be multiple useReducer (or useState) Hooks in a single\r\ncomponent, we can only bail out if none of the Hooks produce a new\r\nvalue. We also can't bail out if any the other types of inputs \u2014 state\r\nand context \u2014 have changed.\r\n\r\nThese optimizations rely on the constraint that components are pure\r\nfunctions of props, state, and context.\r\n\r\nIn some cases, we can bail out without entering the render phase by\r\neagerly computing the next state and comparing it to the current one.\r\nThis only works if we are absolutely certain that the queue is empty at\r\nthe time of the update. In concurrent mode, this is difficult to\r\ndetermine, because there could be multiple copies of the queue and we\r\ndon't know which one is current without doing lots of extra work, which\r\nwould defeat the purpose of the optimization. However, in our\r\nimplementation, there are at most only two copies of the queue, and if\r\n*both* are empty then we know that the current queue must be.\r\n\r\n* Add test for context consumers inside hidden subtree\r\n\r\nShould not bail out during subsequent update. (This isn't directly\r\nrelated to this PR because we should have had this test, anyway.)\r\n\r\n* Refactor to use module-level variable instead of effect bit\r\n\r\n* Add test combining state bailout and props bailout (memo)\r\n"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/790c8ef04195f0fc11ca3fb08e63f870f81483ac",
        "html_url": "https://github.com/facebook/react/commit/790c8ef04195f0fc11ca3fb08e63f870f81483ac",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/790c8ef04195f0fc11ca3fb08e63f870f81483ac/comments",
        "author": {
            "login": "acdlite",
            "id": 3624098,
            "node_id": "MDQ6VXNlcjM2MjQwOTg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3624098?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/acdlite",
            "html_url": "https://github.com/acdlite",
            "followers_url": "https://api.github.com/users/acdlite/followers",
            "following_url": "https://api.github.com/users/acdlite/following{/other_user}",
            "gists_url": "https://api.github.com/users/acdlite/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/acdlite/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/acdlite/subscriptions",
            "organizations_url": "https://api.github.com/users/acdlite/orgs",
            "repos_url": "https://api.github.com/users/acdlite/repos",
            "events_url": "https://api.github.com/users/acdlite/events{/privacy}",
            "received_events_url": "https://api.github.com/users/acdlite/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "8a120095bfba170dd0b5fa5dfc5fd89ed471ccbc",
                "url": "https://api.github.com/repos/facebook/react/commits/8a120095bfba170dd0b5fa5dfc5fd89ed471ccbc",
                "html_url": "https://github.com/facebook/react/commit/8a120095bfba170dd0b5fa5dfc5fd89ed471ccbc"
            }
        ]
    },
    {
        "sha": "1dc108e5829bb8d84ffd39e2e932d798edd7ca8b",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6MWRjMTA4ZTU4MjliYjhkODRmZmQzOWUyZTkzMmQ3OThlZGQ3Y2E4Yg==",
        "commit": {
            "author": {
                "name": "Brian Vaughn",
                "email": "bvaughn@fb.com",
                "date": "2018-12-04T15:49:33Z"
            },
            "committer": {
                "name": "Brian Vaughn",
                "email": "bvaughn@fb.com",
                "date": "2018-12-04T15:49:33Z"
            },
            "message": "Tweaked wording for v8 \"performance cliff\" issue",
            "tree": {
                "sha": "f10873555f69d09bed4376532e5283b822a28825",
                "url": "https://api.github.com/repos/facebook/react/git/trees/f10873555f69d09bed4376532e5283b822a28825"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/1dc108e5829bb8d84ffd39e2e932d798edd7ca8b",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/1dc108e5829bb8d84ffd39e2e932d798edd7ca8b",
        "html_url": "https://github.com/facebook/react/commit/1dc108e5829bb8d84ffd39e2e932d798edd7ca8b",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/1dc108e5829bb8d84ffd39e2e932d798edd7ca8b/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "d9871729c8fd0c072d5416317557219eb48da765",
                "url": "https://api.github.com/repos/facebook/react/commits/d9871729c8fd0c072d5416317557219eb48da765",
                "html_url": "https://github.com/facebook/react/commit/d9871729c8fd0c072d5416317557219eb48da765"
            }
        ]
    },
    {
        "sha": "7a48c900b7d8c97580d62adfa3625a7b7567c998",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6N2E0OGM5MDBiN2Q4Yzk3NTgwZDYyYWRmYTM2MjVhN2I3NTY3Yzk5OA==",
        "commit": {
            "author": {
                "name": "Brian Vaughn",
                "email": "brian.david.vaughn@gmail.com",
                "date": "2018-12-03T17:22:46Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2018-12-03T17:22:46Z"
            },
            "message": "Prevent a v8 deopt when profiling (#14383)",
            "tree": {
                "sha": "81cc6af408658d6ef3c8f1b131fb467c80b3d9f6",
                "url": "https://api.github.com/repos/facebook/react/git/trees/81cc6af408658d6ef3c8f1b131fb467c80b3d9f6"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/7a48c900b7d8c97580d62adfa3625a7b7567c998",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcBWZmCRBK7hj4Ov3rIwAAdHIIABBhlaOQv6G3FwUSN2FmmAkb\nNDRd1n9l7a703hQd8c3XmV8aG1uOokNQEFEbrX/ZWQ8LHhiM5o4bYYw1I3fApKWV\nkjgJVxe8vAkWtx3folEBLhdAQF4ai+U2L18v/oTiTyyoc69FpSuv+Yv4I768em6+\nUO+ShOX9bVJX+ae2XZGPMFaRqJepQJVCea4MpLJqCqoz17/8wB/Q9cf7etY8ZiUP\nwbNhgfhql/eD2OkCrG9MZtZ/f40QfJ6ro6X6WzaCBK4FD7PKTYdHS5LsOiDSAPv2\nJopCMD1FdvgvW+hlSru0BR0P0M7/E1QO+V7EsxOomNPufsbn+0HisQJTbJxPl9A=\n=Humb\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 81cc6af408658d6ef3c8f1b131fb467c80b3d9f6\nparent e382b0ba954688f1bc37e3fc776ceece2c04afd3\nauthor Brian Vaughn <brian.david.vaughn@gmail.com> 1543857766 -0800\ncommitter GitHub <noreply@github.com> 1543857766 -0800\n\nPrevent a v8 deopt when profiling (#14383)\n\n"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/7a48c900b7d8c97580d62adfa3625a7b7567c998",
        "html_url": "https://github.com/facebook/react/commit/7a48c900b7d8c97580d62adfa3625a7b7567c998",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/7a48c900b7d8c97580d62adfa3625a7b7567c998/comments",
        "author": {
            "login": "bvaughn",
            "id": 29597,
            "node_id": "MDQ6VXNlcjI5NTk3",
            "avatar_url": "https://avatars.githubusercontent.com/u/29597?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bvaughn",
            "html_url": "https://github.com/bvaughn",
            "followers_url": "https://api.github.com/users/bvaughn/followers",
            "following_url": "https://api.github.com/users/bvaughn/following{/other_user}",
            "gists_url": "https://api.github.com/users/bvaughn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bvaughn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bvaughn/subscriptions",
            "organizations_url": "https://api.github.com/users/bvaughn/orgs",
            "repos_url": "https://api.github.com/users/bvaughn/repos",
            "events_url": "https://api.github.com/users/bvaughn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bvaughn/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "e382b0ba954688f1bc37e3fc776ceece2c04afd3",
                "url": "https://api.github.com/repos/facebook/react/commits/e382b0ba954688f1bc37e3fc776ceece2c04afd3",
                "html_url": "https://github.com/facebook/react/commit/e382b0ba954688f1bc37e3fc776ceece2c04afd3"
            }
        ]
    },
    {
        "sha": "769b1f270e1251d9dbdce0fcbd9e92e502d059b8",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6NzY5YjFmMjcwZTEyNTFkOWRiZGNlMGZjYmQ5ZTkyZTUwMmQwNTliOA==",
        "commit": {
            "author": {
                "name": "Dan Abramov",
                "email": "dan.abramov@gmail.com",
                "date": "2018-10-20T16:46:23Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2018-10-20T16:46:23Z"
            },
            "message": "pure -> memo (#13905)",
            "tree": {
                "sha": "64d7c67e52fb47e075e9336169af8c7649f9fc80",
                "url": "https://api.github.com/repos/facebook/react/git/trees/64d7c67e52fb47e075e9336169af8c7649f9fc80"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/769b1f270e1251d9dbdce0fcbd9e92e502d059b8",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJby1vfCRBK7hj4Ov3rIwAAdHIIAHzM6wVTwMKFS/762Sb4rqIv\nwpx3frqlnkgz76vVpvJPRraYOMSUps3j1W7boW3YyitW5ARzKBKbbRoX3pbg6Ejx\nhBdfRcOOuCzXVKs2L6jt6hHo/x2eV9+UGGAKNSTDbGl+ctfSVsrdNv20s6ZYaCMd\nWPVgywCkTvgS348hEczEixVeyW/faToxKQhWkOZ2sS6IKOBfyEVpy48liGgQFP7s\npmwA+LkLHYVmOCsCtYGRmJOJcNt/rVD6uLtmAEwlYi7LLfiq3M/GLV3S3XTG6Mbn\nP6gp8hwEiv/3baSsIIaWJwkOkJQBkeKvqYh2vYy862QLJVxNjTPx9IQJ520/aMk=\n=8iF+\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 64d7c67e52fb47e075e9336169af8c7649f9fc80\nparent 8ecd4bd4f07ea41baa934e6748649e447c999231\nauthor Dan Abramov <dan.abramov@gmail.com> 1540053983 -0400\ncommitter GitHub <noreply@github.com> 1540053983 -0400\n\npure -> memo (#13905)\n\n"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/769b1f270e1251d9dbdce0fcbd9e92e502d059b8",
        "html_url": "https://github.com/facebook/react/commit/769b1f270e1251d9dbdce0fcbd9e92e502d059b8",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/769b1f270e1251d9dbdce0fcbd9e92e502d059b8/comments",
        "author": {
            "login": "gaearon",
            "id": 810438,
            "node_id": "MDQ6VXNlcjgxMDQzOA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/810438?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gaearon",
            "html_url": "https://github.com/gaearon",
            "followers_url": "https://api.github.com/users/gaearon/followers",
            "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
            "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
            "organizations_url": "https://api.github.com/users/gaearon/orgs",
            "repos_url": "https://api.github.com/users/gaearon/repos",
            "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gaearon/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "8ecd4bd4f07ea41baa934e6748649e447c999231",
                "url": "https://api.github.com/repos/facebook/react/commits/8ecd4bd4f07ea41baa934e6748649e447c999231",
                "html_url": "https://github.com/facebook/react/commit/8ecd4bd4f07ea41baa934e6748649e447c999231"
            }
        ]
    },
    {
        "sha": "15b11d23f960c158a7e99679bf62041ce16aed7e",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6MTViMTFkMjNmOTYwYzE1OGE3ZTk5Njc5YmY2MjA0MWNlMTZhZWQ3ZQ==",
        "commit": {
            "author": {
                "name": "Sebastian Markb\u00e5ge",
                "email": "sebastian@calyptus.eu",
                "date": "2018-10-20T07:32:16Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2018-10-20T07:32:16Z"
            },
            "message": "Allow arbitrary types to be wrapped in pure (#13903)\n\n* Allow arbitrary types to be wrapped in pure\r\n\r\nThis creates an outer fiber that container the pure check and an inner\r\nfiber that represents which ever type of component.\r\n\r\n* Add optimized fast path for simple pure function components\r\n\r\nSpecial cased when there are no defaultProps and it's a simple function\r\ncomponent instead of class. This doesn't require an extra fiber.\r\n\r\nWe could make it so that this also works with custom comparer but that\r\nmeans we have to go through one extra indirection to get to it.\r\nMaybe it's worth it, donno.",
            "tree": {
                "sha": "5a03ef278ca37032eb90e5aa9dcec67341811b7a",
                "url": "https://api.github.com/repos/facebook/react/git/trees/5a03ef278ca37032eb90e5aa9dcec67341811b7a"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/15b11d23f960c158a7e99679bf62041ce16aed7e",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbytoACRBK7hj4Ov3rIwAAdHIIAGGJBgj14oJAk8aAbPgEW7h9\nscMmIQahfnAoP1BGSW+kBOtYkPMd2q2pqtV0eBJ7UmX59gwzVsruRzsDviWxJhcF\nH44UQFCWcScNwJ44x2bo4QqZ5qXtSecAzGfboxDR9W8I09ScVs+es3zB1CQJUPPp\nps/dTmWJz8gzTorbmAEdLS1hwkwGJ8HbFuUoLZVe5qtXCBSWxBd4Tg4DYnKFbjVh\no1Kh8WQQBuYgz2yOQjDGHj7j1lYkvUrc5qNRIOZrSkUDVEvqTh8JrgvSjjgCOhHC\nMC4oRWgFeFJukYnyd1k4o4AYglDatVbWFfwuyHCEJGoGGYWwaRsakAAfJNVoYGo=\n=G8F3\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 5a03ef278ca37032eb90e5aa9dcec67341811b7a\nparent e770af7a3a0921afb658cdc69fc9da8fdc3194ff\nauthor Sebastian Markb\u00e5ge <sebastian@calyptus.eu> 1540020736 -0700\ncommitter GitHub <noreply@github.com> 1540020736 -0700\n\nAllow arbitrary types to be wrapped in pure (#13903)\n\n* Allow arbitrary types to be wrapped in pure\r\n\r\nThis creates an outer fiber that container the pure check and an inner\r\nfiber that represents which ever type of component.\r\n\r\n* Add optimized fast path for simple pure function components\r\n\r\nSpecial cased when there are no defaultProps and it's a simple function\r\ncomponent instead of class. This doesn't require an extra fiber.\r\n\r\nWe could make it so that this also works with custom comparer but that\r\nmeans we have to go through one extra indirection to get to it.\r\nMaybe it's worth it, donno.\r\n"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/15b11d23f960c158a7e99679bf62041ce16aed7e",
        "html_url": "https://github.com/facebook/react/commit/15b11d23f960c158a7e99679bf62041ce16aed7e",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/15b11d23f960c158a7e99679bf62041ce16aed7e/comments",
        "author": {
            "login": "sebmarkbage",
            "id": 63648,
            "node_id": "MDQ6VXNlcjYzNjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sebmarkbage",
            "html_url": "https://github.com/sebmarkbage",
            "followers_url": "https://api.github.com/users/sebmarkbage/followers",
            "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
            "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
            "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
            "repos_url": "https://api.github.com/users/sebmarkbage/repos",
            "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "e770af7a3a0921afb658cdc69fc9da8fdc3194ff",
                "url": "https://api.github.com/repos/facebook/react/commits/e770af7a3a0921afb658cdc69fc9da8fdc3194ff",
                "html_url": "https://github.com/facebook/react/commit/e770af7a3a0921afb658cdc69fc9da8fdc3194ff"
            }
        ]
    },
    {
        "sha": "95a313ec0b957f71798a69d8e83408f40e76765b",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6OTVhMzEzZWMwYjk1N2Y3MTc5OGE2OWQ4ZTgzNDA4ZjQwZTc2NzY1Yg==",
        "commit": {
            "author": {
                "name": "Sebastian Markb\u00e5ge",
                "email": "sebastian@calyptus.eu",
                "date": "2018-10-20T05:22:45Z"
            },
            "committer": {
                "name": "Andrew Clark",
                "email": "github@andrewclark.io",
                "date": "2018-10-20T05:22:45Z"
            },
            "message": "Unfork Lazy Component Branches (#13902)\n\n* Introduce elementType field\r\n\r\nThis will be used to store the wrapped type of an element. E.g. pure and\r\nlazy.\r\n\r\nThe existing type field will be used for the unwrapped type within them.\r\n\r\n* Store the unwrapped type on the type field of lazy components\r\n\r\n* Use the raw tags for lazy components\r\n\r\nInstead, we check if the elementType and type are equal to test if\r\nwe need to resolve props. This is slightly slower in the normal case\r\nbut will yield less code and branching.\r\n\r\n* Clean up lazy branches\r\n\r\n* Collapse work tag numbering\r\n\r\n* Split IndeterminateComponent out from Lazy\r\n\r\nThis way we don't have to check the type in a hacky way in the\r\nindeterminate path. Also, lets us deal with lazy that resolves to\r\nindeterminate and such.\r\n\r\n* Missing clean up in rebase",
            "tree": {
                "sha": "dc89689a72cf9109792b49a1d82c593136f7718a",
                "url": "https://api.github.com/repos/facebook/react/git/trees/dc89689a72cf9109792b49a1d82c593136f7718a"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/95a313ec0b957f71798a69d8e83408f40e76765b",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/95a313ec0b957f71798a69d8e83408f40e76765b",
        "html_url": "https://github.com/facebook/react/commit/95a313ec0b957f71798a69d8e83408f40e76765b",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/95a313ec0b957f71798a69d8e83408f40e76765b/comments",
        "author": {
            "login": "sebmarkbage",
            "id": 63648,
            "node_id": "MDQ6VXNlcjYzNjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sebmarkbage",
            "html_url": "https://github.com/sebmarkbage",
            "followers_url": "https://api.github.com/users/sebmarkbage/followers",
            "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
            "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
            "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
            "repos_url": "https://api.github.com/users/sebmarkbage/repos",
            "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": null,
        "parents": [
            {
                "sha": "e16cdd5b178a82db09f51349fe6c636a5072516f",
                "url": "https://api.github.com/repos/facebook/react/commits/e16cdd5b178a82db09f51349fe6c636a5072516f",
                "html_url": "https://github.com/facebook/react/commit/e16cdd5b178a82db09f51349fe6c636a5072516f"
            }
        ]
    },
    {
        "sha": "d9659e499eba3089b098c32cf112b7a067bdddf1",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6ZDk2NTllNDk5ZWJhMzA4OWIwOThjMzJjZjExMmI3YTA2N2JkZGRmMQ==",
        "commit": {
            "author": {
                "name": "Andrew Clark",
                "email": "github@andrewclark.io",
                "date": "2018-10-19T02:57:12Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2018-10-19T02:57:12Z"
            },
            "message": "Lazy components must use React.lazy (#13885)\n\nRemoves support for using arbitrary promises as the type of a React\r\nelement. Instead, promises must be wrapped in React.lazy. This gives us\r\nflexibility later if we need to change the protocol.\r\n\r\nThe reason is that promises do not provide a way to call their\r\nconstructor multiple times. For example:\r\n\r\nconst promiseForA = new Promise(resolve => {\r\n  fetchA(a => resolve(a));\r\n});\r\n\r\nGiven a reference to `promiseForA`, there's no way to call `fetchA`\r\nagain. Calling `then` on the promise doesn't run the constructor again;\r\nit only attaches another listener.\r\n\r\nIn the future we will likely introduce an API like `React.eager` that\r\nis similar to `lazy` but eagerly calls the constructor. That gives us\r\nthe ability to call the constructor multiple times. E.g. to increase\r\nthe priority, or to retry if the first operation failed.",
            "tree": {
                "sha": "605cb87fff6ac8f382cc30f3e92a8b93ba9efd80",
                "url": "https://api.github.com/repos/facebook/react/git/trees/605cb87fff6ac8f382cc30f3e92a8b93ba9efd80"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/d9659e499eba3089b098c32cf112b7a067bdddf1",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbyUgICRBK7hj4Ov3rIwAAdHIIAK9zuMqTinfwybxWz9Tl1/gg\nJMCT7cHIbdlmfZ+sr6eBMUuevUT5UcwFcjYcVD5RY//LlRCTjOWifJSTLuqm2PlS\nOAuSuD5aNojPohR6oO3HOUY/IDO/T0tisnR0JX6Mjdbo33ycjEfU78tVVCXaqGIZ\nuwk1wIgxbiPzY9eGIEqeG9/NJLVj0YAqzUSBWS9UqugkaO0r0Zsvr2z295gQ+Yg4\nWEP2i0gE5MUxWwIEO7x8+tLw+O6nnvmRQ8TQ3BPz6+X+WuPkXCyG1dzKszTj524z\nVKIig1aL3dSEv7JrGIYbrYw73Y+W7cK22kQRtQxjTt8AeFIzfVS6JSGH7NRSI+g=\n=7IxF\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 605cb87fff6ac8f382cc30f3e92a8b93ba9efd80\nparent 0648ca618d712c6c47425b62412ae2aaab19c438\nauthor Andrew Clark <github@andrewclark.io> 1539917832 -0700\ncommitter GitHub <noreply@github.com> 1539917832 -0700\n\nLazy components must use React.lazy (#13885)\n\nRemoves support for using arbitrary promises as the type of a React\r\nelement. Instead, promises must be wrapped in React.lazy. This gives us\r\nflexibility later if we need to change the protocol.\r\n\r\nThe reason is that promises do not provide a way to call their\r\nconstructor multiple times. For example:\r\n\r\nconst promiseForA = new Promise(resolve => {\r\n  fetchA(a => resolve(a));\r\n});\r\n\r\nGiven a reference to `promiseForA`, there's no way to call `fetchA`\r\nagain. Calling `then` on the promise doesn't run the constructor again;\r\nit only attaches another listener.\r\n\r\nIn the future we will likely introduce an API like `React.eager` that\r\nis similar to `lazy` but eagerly calls the constructor. That gives us\r\nthe ability to call the constructor multiple times. E.g. to increase\r\nthe priority, or to retry if the first operation failed."
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/d9659e499eba3089b098c32cf112b7a067bdddf1",
        "html_url": "https://github.com/facebook/react/commit/d9659e499eba3089b098c32cf112b7a067bdddf1",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/d9659e499eba3089b098c32cf112b7a067bdddf1/comments",
        "author": null,
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "0648ca618d712c6c47425b62412ae2aaab19c438",
                "url": "https://api.github.com/repos/facebook/react/commits/0648ca618d712c6c47425b62412ae2aaab19c438",
                "html_url": "https://github.com/facebook/react/commit/0648ca618d712c6c47425b62412ae2aaab19c438"
            }
        ]
    },
    {
        "sha": "8af6728c6f105d37f9c0006288a6d1ac3903dc71",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6OGFmNjcyOGM2ZjEwNWQzN2Y5YzAwMDYyODhhNmQxYWMzOTAzZGM3MQ==",
        "commit": {
            "author": {
                "name": "Dan Abramov",
                "email": "dan.abramov@gmail.com",
                "date": "2018-10-10T16:02:04Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2018-10-10T16:02:04Z"
            },
            "message": "Enable Suspense + rename Placeholder (#13799)\n\n* Enable Suspense\r\n\r\n* <unstable_Placeholder delayMs> => <unstable_Suspense maxDuration>\r\n\r\n* Update suspense fixture",
            "tree": {
                "sha": "384619aba9e238b28d93c0e8b362373c7102cd0c",
                "url": "https://api.github.com/repos/facebook/react/git/trees/384619aba9e238b28d93c0e8b362373c7102cd0c"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/8af6728c6f105d37f9c0006288a6d1ac3903dc71",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbviJ8CRBK7hj4Ov3rIwAAdHIIAAA9hdNbSTlXUrlMC5egFdck\nhVI4aQE18My0N9A67G1NKnXmMvqWn6B3X3rNIL68jEsWcyaAsGDEEkxC4vMCKurK\nVRg+yqaaWONdlXXwf9yTR/Xrrq2E3JVxL1yAfxPbzP3F2NRjB/F2DAXcE2y/UOdP\nwf44F1F3FghSk2qfg5AZGsDxrd4UW92HFLzLiB2j/KnyVCpgeGvJVJokakx007rb\nwHE3eRKk/1hii/friBpBhYxvorKttaR9py8a75wHgM3f/GirCvcd2F4iJCi2t/11\ne1/QOcKJfgoFUv2UtvoXjnHviiuKrvERHYH5ek+QlGh+hvnUha9zaASmuzaFxCQ=\n=gh94\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 384619aba9e238b28d93c0e8b362373c7102cd0c\nparent f47a958ea8d328190c88bac1ad6f85eaaaefc310\nauthor Dan Abramov <dan.abramov@gmail.com> 1539187324 +0100\ncommitter GitHub <noreply@github.com> 1539187324 +0100\n\nEnable Suspense + rename Placeholder (#13799)\n\n* Enable Suspense\r\n\r\n* <unstable_Placeholder delayMs> => <unstable_Suspense maxDuration>\r\n\r\n* Update suspense fixture\r\n"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/8af6728c6f105d37f9c0006288a6d1ac3903dc71",
        "html_url": "https://github.com/facebook/react/commit/8af6728c6f105d37f9c0006288a6d1ac3903dc71",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/8af6728c6f105d37f9c0006288a6d1ac3903dc71/comments",
        "author": {
            "login": "gaearon",
            "id": 810438,
            "node_id": "MDQ6VXNlcjgxMDQzOA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/810438?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gaearon",
            "html_url": "https://github.com/gaearon",
            "followers_url": "https://api.github.com/users/gaearon/followers",
            "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
            "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
            "organizations_url": "https://api.github.com/users/gaearon/orgs",
            "repos_url": "https://api.github.com/users/gaearon/repos",
            "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gaearon/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "f47a958ea8d328190c88bac1ad6f85eaaaefc310",
                "url": "https://api.github.com/repos/facebook/react/commits/f47a958ea8d328190c88bac1ad6f85eaaaefc310",
                "html_url": "https://github.com/facebook/react/commit/f47a958ea8d328190c88bac1ad6f85eaaaefc310"
            }
        ]
    },
    {
        "sha": "40a521aa7247872d0080d5a581120b64998152da",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6NDBhNTIxYWE3MjQ3ODcyZDAwODBkNWE1ODExMjBiNjQ5OTgxNTJkYQ==",
        "commit": {
            "author": {
                "name": "Dan Abramov",
                "email": "dan.abramov@gmail.com",
                "date": "2018-10-04T21:44:46Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2018-10-04T21:44:46Z"
            },
            "message": "Terminology: Functional -> Function Component (#13775)\n\n* Terminology: Functional -> Function Component\r\n\r\n* Drop the \"stateless\" (functions are already stateless, right?)",
            "tree": {
                "sha": "504ab2cf65f58d0c3bd8dbc069780f8367ad34a0",
                "url": "https://api.github.com/repos/facebook/react/git/trees/504ab2cf65f58d0c3bd8dbc069780f8367ad34a0"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/40a521aa7247872d0080d5a581120b64998152da",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbtonOCRBK7hj4Ov3rIwAAdHIIAKJbUbD35k0i7+UHyVLio146\nMHOwKSL05SScYjsOidw2h6QFAq53tga2Ev5ykkr5bIvrUfrYZbAYWE3LltkYyV/l\nTG76elZk21HoH04bfqF7oyaKsasstNgVvoc7/ODqaNSO+LGhWxpb2/oSiJSqtGf1\n9ZwTdzMdLzNe/jenL0XEUBEr4AsIWd3I3ySWtu6e4ezse7TjIVc9Ibb0IG5hQxjT\nLNlmnKr1NlUsDkAL09EH9bv7IoG1feg9/NHstODtKhewMEdOnM/SuNTEcdmuOA66\nKMI3ABU2E8jiOblPJF1jmK/+CrOxgUj25ctDgbFIXpqzD4GpPquNgLDhjF2Rfoc=\n=IuYH\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 504ab2cf65f58d0c3bd8dbc069780f8367ad34a0\nparent 605ab10a4a40ed8db5f5a1438b08cfa6e36a5c80\nauthor Dan Abramov <dan.abramov@gmail.com> 1538689486 +0100\ncommitter GitHub <noreply@github.com> 1538689486 +0100\n\nTerminology: Functional -> Function Component (#13775)\n\n* Terminology: Functional -> Function Component\r\n\r\n* Drop the \"stateless\" (functions are already stateless, right?)\r\n"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/40a521aa7247872d0080d5a581120b64998152da",
        "html_url": "https://github.com/facebook/react/commit/40a521aa7247872d0080d5a581120b64998152da",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/40a521aa7247872d0080d5a581120b64998152da/comments",
        "author": {
            "login": "gaearon",
            "id": 810438,
            "node_id": "MDQ6VXNlcjgxMDQzOA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/810438?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gaearon",
            "html_url": "https://github.com/gaearon",
            "followers_url": "https://api.github.com/users/gaearon/followers",
            "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
            "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
            "organizations_url": "https://api.github.com/users/gaearon/orgs",
            "repos_url": "https://api.github.com/users/gaearon/repos",
            "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gaearon/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "605ab10a4a40ed8db5f5a1438b08cfa6e36a5c80",
                "url": "https://api.github.com/repos/facebook/react/commits/605ab10a4a40ed8db5f5a1438b08cfa6e36a5c80",
                "html_url": "https://github.com/facebook/react/commit/605ab10a4a40ed8db5f5a1438b08cfa6e36a5c80"
            }
        ]
    },
    {
        "sha": "a0733fe13d598303f45b9d27c84ce0ec40d09021",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6YTA3MzNmZTEzZDU5ODMwM2Y0NWI5ZDI3Yzg0Y2UwZWM0MGQwOTAyMQ==",
        "commit": {
            "author": {
                "name": "Andrew Clark",
                "email": "acdlite@me.com",
                "date": "2018-09-27T22:25:38Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2018-09-27T22:25:38Z"
            },
            "message": "pure (#13748)\n\n* pure\r\n\r\nA higher-order component version of the `React.PureComponent` class.\r\nDuring an update, the previous props are compared to the new props. If\r\nthey are the same, React will skip rendering the component and\r\nits children.\r\n\r\nUnlike userspace implementations, `pure` will not add an additional\r\nfiber to the tree.\r\n\r\nThe first argument must be a functional component; it does not work\r\nwith classes.\r\n\r\n`pure` uses shallow comparison by default, like `React.PureComponent`.\r\nA custom comparison can be passed as the second argument.\r\n\r\nCo-authored-by: Andrew Clark <acdlite@fb.com>\r\nCo-authored-by: Sophie Alpert <sophiebits@fb.com>\r\n\r\n* Warn if first argument is not a functional component",
            "tree": {
                "sha": "10f317d827a7e5ad1a1e40990ca23244ef757a8d",
                "url": "https://api.github.com/repos/facebook/react/git/trees/10f317d827a7e5ad1a1e40990ca23244ef757a8d"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/a0733fe13d598303f45b9d27c84ce0ec40d09021",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbrVjiCRBK7hj4Ov3rIwAAdHIIACbn+Ki6jqq8/BmRL9iNg3hJ\n8IDSRBWzhVdEaKVdcgGlrXwx07UA3xMWmjuNdQ+YaMfZRTgcr5PpeIvWlONiBW6x\nbSW2UQHOpaZ+vQQhkVWYEJwE1ssv7N9rolvPSZhv2YBTKIbj55Dm6607M546awOX\nAnswnhu/lmN1+NJhp9QuqPlhyWl30WhjBlPhmScleXysi3KtAst85vudYhwxLDq2\nJuFHt9ZrTFUyPeKCHb41fvwzwxpoWxhQzm1mtzgxgTaBhoL3AUFc4LeRGpx1GBB3\nioYHblRFYPejxpZGYVzR3DatUO/ayOF+6rG3D80bQfN5cVNaeycvb2qlfM90c3g=\n=VTtq\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 10f317d827a7e5ad1a1e40990ca23244ef757a8d\nparent 4d17c3f0516ddd5a7d23a460abbc3c3ddeab98a9\nauthor Andrew Clark <acdlite@me.com> 1538087138 -0700\ncommitter GitHub <noreply@github.com> 1538087138 -0700\n\npure (#13748)\n\n* pure\r\n\r\nA higher-order component version of the `React.PureComponent` class.\r\nDuring an update, the previous props are compared to the new props. If\r\nthey are the same, React will skip rendering the component and\r\nits children.\r\n\r\nUnlike userspace implementations, `pure` will not add an additional\r\nfiber to the tree.\r\n\r\nThe first argument must be a functional component; it does not work\r\nwith classes.\r\n\r\n`pure` uses shallow comparison by default, like `React.PureComponent`.\r\nA custom comparison can be passed as the second argument.\r\n\r\nCo-authored-by: Andrew Clark <acdlite@fb.com>\r\nCo-authored-by: Sophie Alpert <sophiebits@fb.com>\r\n\r\n* Warn if first argument is not a functional component\r\n"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/a0733fe13d598303f45b9d27c84ce0ec40d09021",
        "html_url": "https://github.com/facebook/react/commit/a0733fe13d598303f45b9d27c84ce0ec40d09021",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/a0733fe13d598303f45b9d27c84ce0ec40d09021/comments",
        "author": {
            "login": "acdlite",
            "id": 3624098,
            "node_id": "MDQ6VXNlcjM2MjQwOTg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3624098?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/acdlite",
            "html_url": "https://github.com/acdlite",
            "followers_url": "https://api.github.com/users/acdlite/followers",
            "following_url": "https://api.github.com/users/acdlite/following{/other_user}",
            "gists_url": "https://api.github.com/users/acdlite/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/acdlite/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/acdlite/subscriptions",
            "organizations_url": "https://api.github.com/users/acdlite/orgs",
            "repos_url": "https://api.github.com/users/acdlite/repos",
            "events_url": "https://api.github.com/users/acdlite/events{/privacy}",
            "received_events_url": "https://api.github.com/users/acdlite/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "4d17c3f0516ddd5a7d23a460abbc3c3ddeab98a9",
                "url": "https://api.github.com/repos/facebook/react/commits/4d17c3f0516ddd5a7d23a460abbc3c3ddeab98a9",
                "html_url": "https://github.com/facebook/react/commit/4d17c3f0516ddd5a7d23a460abbc3c3ddeab98a9"
            }
        ]
    },
    {
        "sha": "0dc0ddc1ef5f90fe48b58f1a1ba753757961fc74",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6MGRjMGRkYzFlZjVmOTBmZTQ4YjU4ZjFhMWJhNzUzNzU3OTYxZmM3NA==",
        "commit": {
            "author": {
                "name": "Dominic Gannaway",
                "email": "trueadm@users.noreply.github.com",
                "date": "2018-09-26T16:13:02Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2018-09-26T16:13:02Z"
            },
            "message": "Rename AsyncMode -> ConcurrentMode (#13732)\n\n* Rename AsyncMode -> ConcurrentMode",
            "tree": {
                "sha": "c9bb71a1dbb597fd840603ec672ebbb3e4a62990",
                "url": "https://api.github.com/repos/facebook/react/git/trees/c9bb71a1dbb597fd840603ec672ebbb3e4a62990"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/0dc0ddc1ef5f90fe48b58f1a1ba753757961fc74",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbq7AOCRBK7hj4Ov3rIwAAdHIIAJgBjHP+klSdDgXsGT1sDJCf\nr5vIbe0rQy0sphPqsWkEf+0ZWecSW03jpJz/DArlSG7sWPyz0ZUKT4HgzxUdxUR8\n0GzsdB/iNB776lEcGFvV4r02HScCbZJxO+jT7PoQzJOzzz+fQuuhg9XYOmwWRBl2\nA+Le/JB6w6pPTeXxrLPmA96SPD4WJw+KYuYyNlTEONSGNp6oCR1kHbEWiE/UV3vY\nO82e0hbunZ+z6T/GZ+fKt2dGM1jFfXlBXLHwFq/UzOqHinSOlzXwmknr70mkrNqN\nR5wxinZQTWsRVly9G3y2T+N1MTZQPonVhNBKrtXHXJxs6W1Lskqff9KZCThd5dI=\n=1Ajo\n-----END PGP SIGNATURE-----\n",
                "payload": "tree c9bb71a1dbb597fd840603ec672ebbb3e4a62990\nparent 7601c3765457a4ec7b2d48c0ca75fccf7fecf917\nauthor Dominic Gannaway <trueadm@users.noreply.github.com> 1537978382 +0100\ncommitter GitHub <noreply@github.com> 1537978382 +0100\n\nRename AsyncMode -> ConcurrentMode (#13732)\n\n* Rename AsyncMode -> ConcurrentMode"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/0dc0ddc1ef5f90fe48b58f1a1ba753757961fc74",
        "html_url": "https://github.com/facebook/react/commit/0dc0ddc1ef5f90fe48b58f1a1ba753757961fc74",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/0dc0ddc1ef5f90fe48b58f1a1ba753757961fc74/comments",
        "author": {
            "login": "trueadm",
            "id": 1519870,
            "node_id": "MDQ6VXNlcjE1MTk4NzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1519870?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/trueadm",
            "html_url": "https://github.com/trueadm",
            "followers_url": "https://api.github.com/users/trueadm/followers",
            "following_url": "https://api.github.com/users/trueadm/following{/other_user}",
            "gists_url": "https://api.github.com/users/trueadm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/trueadm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/trueadm/subscriptions",
            "organizations_url": "https://api.github.com/users/trueadm/orgs",
            "repos_url": "https://api.github.com/users/trueadm/repos",
            "events_url": "https://api.github.com/users/trueadm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/trueadm/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "7601c3765457a4ec7b2d48c0ca75fccf7fecf917",
                "url": "https://api.github.com/repos/facebook/react/commits/7601c3765457a4ec7b2d48c0ca75fccf7fecf917",
                "html_url": "https://github.com/facebook/react/commit/7601c3765457a4ec7b2d48c0ca75fccf7fecf917"
            }
        ]
    },
    {
        "sha": "4a40d7624575d030e2d2aa98b24000e59a9e4f02",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6NGE0MGQ3NjI0NTc1ZDAzMGUyZDJhYTk4YjI0MDAwZTU5YTllNGYwMg==",
        "commit": {
            "author": {
                "name": "Dan Abramov",
                "email": "dan.abramov@gmail.com",
                "date": "2018-09-10T16:54:45Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2018-09-10T16:54:45Z"
            },
            "message": "Fix a regression related to isReactComponent prototype check (#13608)",
            "tree": {
                "sha": "6e1bdf2dfebb908a86b581ca9f3db51bcee7843e",
                "url": "https://api.github.com/repos/facebook/react/git/trees/6e1bdf2dfebb908a86b581ca9f3db51bcee7843e"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/4a40d7624575d030e2d2aa98b24000e59a9e4f02",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJblqHVCRBK7hj4Ov3rIwAAdHIIAEfhNstJvhPswf3ehfSgl/U1\nhzjqW5MOk6OC+eNFbGa0mNrVy7Irwrx0MDKoe0UdCuTtKhhuvHe9LJipF+E1pvcJ\nPaKKgCxxBq9OXtWGSsosi7hGp7mM6eWDECu4e+bmimAirA+dPfCYSSRRYK866t+B\nFAFDLEMxVUM3tsCtexA53ZNPU6IYzYF27r9W/nb+jZgn8l2opBKkFCgnIUQLPjGO\n7fLYnREVePp+QoXwTBTBBsD1pPlVJ+MO0qcbkRwVy2vlkPBr2lz6mPbsT4o77JQV\nR4KqC7L/qPT5Nhabhhns7vJQ5dgv1jwiiClv5ZofFybrTmJd+oB5DVFvhIAyhvg=\n=5xJV\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 6e1bdf2dfebb908a86b581ca9f3db51bcee7843e\nparent 03ab1efeb4dde9e07b93ff038c87cc4fa443abf4\nauthor Dan Abramov <dan.abramov@gmail.com> 1536598485 +0100\ncommitter GitHub <noreply@github.com> 1536598485 +0100\n\nFix a regression related to isReactComponent prototype check (#13608)\n\n"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/4a40d7624575d030e2d2aa98b24000e59a9e4f02",
        "html_url": "https://github.com/facebook/react/commit/4a40d7624575d030e2d2aa98b24000e59a9e4f02",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/4a40d7624575d030e2d2aa98b24000e59a9e4f02/comments",
        "author": {
            "login": "gaearon",
            "id": 810438,
            "node_id": "MDQ6VXNlcjgxMDQzOA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/810438?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gaearon",
            "html_url": "https://github.com/gaearon",
            "followers_url": "https://api.github.com/users/gaearon/followers",
            "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
            "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
            "organizations_url": "https://api.github.com/users/gaearon/orgs",
            "repos_url": "https://api.github.com/users/gaearon/repos",
            "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gaearon/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "03ab1efeb4dde9e07b93ff038c87cc4fa443abf4",
                "url": "https://api.github.com/repos/facebook/react/commits/03ab1efeb4dde9e07b93ff038c87cc4fa443abf4",
                "html_url": "https://github.com/facebook/react/commit/03ab1efeb4dde9e07b93ff038c87cc4fa443abf4"
            }
        ]
    },
    {
        "sha": "b87aabdfe1b7461e7331abb3601d9e6bb27544bc",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6Yjg3YWFiZGZlMWI3NDYxZTczMzFhYmIzNjAxZDllNmJiMjc1NDRiYw==",
        "commit": {
            "author": {
                "name": "H\u00e9ctor Ramos",
                "email": "165856+hramos@users.noreply.github.com",
                "date": "2018-09-07T22:11:23Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2018-09-07T22:11:23Z"
            },
            "message": "Drop the year from Facebook copyright headers and the LICENSE file. (#13593)",
            "tree": {
                "sha": "a8e14ea9c8be5b0e44705bb6b4a8f718735e4818",
                "url": "https://api.github.com/repos/facebook/react/git/trees/a8e14ea9c8be5b0e44705bb6b4a8f718735e4818"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/b87aabdfe1b7461e7331abb3601d9e6bb27544bc",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbkveLCRBK7hj4Ov3rIwAAdHIIACueksu8twCIbtjvVYKamVAf\nMW9edU4m8NufQNOo2W6ukotzeZ59h2K25VRQWu4wxQVl/ZMLFPyWryMuUk6vbpcg\nkg/+QqUQME5NQZUUbwwSLQwZxV/w0fxbSgLdjI+F2jFOcwE6SHs/JkEGjphBDv4I\nQQoRvz+ab54gjDwsvnViJGo1vWyBhlNkNHtrKIPMNpDcWmnU8zOk3m5GMucYCxuZ\nHDNDnAVZKE44l5Gt3AWMmUp8FigwrUAyvqmr3pjF7rKKKkzI2U2MSZsx3e8zbET8\nQFNLttM+QShlm3izwudUQSKuQKtUaMV/G9xYrurBdB0k1qRq9WL5Vb8zESLfhtg=\n=wkda\n-----END PGP SIGNATURE-----\n",
                "payload": "tree a8e14ea9c8be5b0e44705bb6b4a8f718735e4818\nparent 12f3a5475fbd07d4f0806c5adfbb2b66c264a643\nauthor H\u00e9ctor Ramos <165856+hramos@users.noreply.github.com> 1536358283 -0700\ncommitter GitHub <noreply@github.com> 1536358283 -0700\n\nDrop the year from Facebook copyright headers and the LICENSE file. (#13593)\n\n"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/b87aabdfe1b7461e7331abb3601d9e6bb27544bc",
        "html_url": "https://github.com/facebook/react/commit/b87aabdfe1b7461e7331abb3601d9e6bb27544bc",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/b87aabdfe1b7461e7331abb3601d9e6bb27544bc/comments",
        "author": {
            "login": "hramos",
            "id": 165856,
            "node_id": "MDQ6VXNlcjE2NTg1Ng==",
            "avatar_url": "https://avatars.githubusercontent.com/u/165856?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hramos",
            "html_url": "https://github.com/hramos",
            "followers_url": "https://api.github.com/users/hramos/followers",
            "following_url": "https://api.github.com/users/hramos/following{/other_user}",
            "gists_url": "https://api.github.com/users/hramos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hramos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hramos/subscriptions",
            "organizations_url": "https://api.github.com/users/hramos/orgs",
            "repos_url": "https://api.github.com/users/hramos/repos",
            "events_url": "https://api.github.com/users/hramos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hramos/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "12f3a5475fbd07d4f0806c5adfbb2b66c264a643",
                "url": "https://api.github.com/repos/facebook/react/commits/12f3a5475fbd07d4f0806c5adfbb2b66c264a643",
                "html_url": "https://github.com/facebook/react/commit/12f3a5475fbd07d4f0806c5adfbb2b66c264a643"
            }
        ]
    },
    {
        "sha": "6e4f7c788603dac7fccd227a4852c110b072fe16",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6NmU0ZjdjNzg4NjAzZGFjN2ZjY2QyMjdhNDg1MmMxMTBiMDcyZmUxNg==",
        "commit": {
            "author": {
                "name": "Brian Vaughn",
                "email": "brian.david.vaughn@gmail.com",
                "date": "2018-08-29T01:58:11Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2018-08-29T01:58:11Z"
            },
            "message": "Profiler integration with interaction-tracking package (#13253)\n\n* Updated suspense fixture to use new interaction-tracking API\r\n\r\n* Integrated Profiler API with interaction-tracking API (and added tests)\r\n\r\n* Pass interaction Set (rather than Array) to Profiler onRender callback\r\n\r\n* Removed some :any casts for enableInteractionTracking fields in FiberRoot type\r\n\r\n* Refactored threadID calculation into a helper method\r\n\r\n* Errors thrown by interaction tracking hooks use unhandledError to rethrow more safely.\r\nReverted try/finally change to ReactTestRendererScheduling\r\n\r\n* Added a $FlowFixMe above the FiberRoot :any cast\r\n\r\n* Reduce overhead from calling work-started hook\r\n\r\n* Remove interaction-tracking wrap() references from unwind work in favor of managing suspense/interaction continuations in the scheduler\r\n* Moved the logic for calling work-started hook from performWorkOnRoot() to renderRoot()\r\n\r\n* Add interaction-tracking to bundle externals. Set feature flag to __PROFILE__\r\n\r\n* Renamed the freezeInteractionCount flag and replaced one use-case with a method param\r\n\r\n* let -> const\r\n\r\n* Updated suspense fixture to handle recent API changes",
            "tree": {
                "sha": "da2c48a64f0871717c97f1dd0e02608c4450fc45",
                "url": "https://api.github.com/repos/facebook/react/git/trees/da2c48a64f0871717c97f1dd0e02608c4450fc45"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/6e4f7c788603dac7fccd227a4852c110b072fe16",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbhf2zCRBK7hj4Ov3rIwAAdHIIACzZtzsgAiJzgUIZbNcs8JLs\nfxHUHEaQSPQPDY+wRmCX9QutxbLdIQwPrLz73u7vW1vDz1z/fwqWqg7ENNbLjZRE\nfv6+N5ROnj08X1okEnnuBC54PcwpOfx+vmGwHzVZV8IOsC+ouatkOK6tHJjCq3k+\niT/tf23IveOvBBJy0BJV9MMpsnpRi5923DJaxz3eMGLXsFeV/FS851icaBzGNB4c\niDd13/m4zOeBuiz6/Gq8suclLyGMpiZ0naPqO4qXgpS+UWikk5Qmb98jX6qhIdC3\n5TZfIfBYE0lVmGdjELpGLFLSRrPGjX91AWZcZXMD+PtHQcor/lN/jF8OC+iroRU=\n=rAHh\n-----END PGP SIGNATURE-----\n",
                "payload": "tree da2c48a64f0871717c97f1dd0e02608c4450fc45\nparent 2967ebdbeabde4aab37b45946b891170c7670164\nauthor Brian Vaughn <brian.david.vaughn@gmail.com> 1535507891 -0700\ncommitter GitHub <noreply@github.com> 1535507891 -0700\n\nProfiler integration with interaction-tracking package (#13253)\n\n* Updated suspense fixture to use new interaction-tracking API\r\n\r\n* Integrated Profiler API with interaction-tracking API (and added tests)\r\n\r\n* Pass interaction Set (rather than Array) to Profiler onRender callback\r\n\r\n* Removed some :any casts for enableInteractionTracking fields in FiberRoot type\r\n\r\n* Refactored threadID calculation into a helper method\r\n\r\n* Errors thrown by interaction tracking hooks use unhandledError to rethrow more safely.\r\nReverted try/finally change to ReactTestRendererScheduling\r\n\r\n* Added a $FlowFixMe above the FiberRoot :any cast\r\n\r\n* Reduce overhead from calling work-started hook\r\n\r\n* Remove interaction-tracking wrap() references from unwind work in favor of managing suspense/interaction continuations in the scheduler\r\n* Moved the logic for calling work-started hook from performWorkOnRoot() to renderRoot()\r\n\r\n* Add interaction-tracking to bundle externals. Set feature flag to __PROFILE__\r\n\r\n* Renamed the freezeInteractionCount flag and replaced one use-case with a method param\r\n\r\n* let -> const\r\n\r\n* Updated suspense fixture to handle recent API changes\r\n"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/6e4f7c788603dac7fccd227a4852c110b072fe16",
        "html_url": "https://github.com/facebook/react/commit/6e4f7c788603dac7fccd227a4852c110b072fe16",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/6e4f7c788603dac7fccd227a4852c110b072fe16/comments",
        "author": {
            "login": "bvaughn",
            "id": 29597,
            "node_id": "MDQ6VXNlcjI5NTk3",
            "avatar_url": "https://avatars.githubusercontent.com/u/29597?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bvaughn",
            "html_url": "https://github.com/bvaughn",
            "followers_url": "https://api.github.com/users/bvaughn/followers",
            "following_url": "https://api.github.com/users/bvaughn/following{/other_user}",
            "gists_url": "https://api.github.com/users/bvaughn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bvaughn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bvaughn/subscriptions",
            "organizations_url": "https://api.github.com/users/bvaughn/orgs",
            "repos_url": "https://api.github.com/users/bvaughn/repos",
            "events_url": "https://api.github.com/users/bvaughn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bvaughn/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "2967ebdbeabde4aab37b45946b891170c7670164",
                "url": "https://api.github.com/repos/facebook/react/commits/2967ebdbeabde4aab37b45946b891170c7670164",
                "html_url": "https://github.com/facebook/react/commit/2967ebdbeabde4aab37b45946b891170c7670164"
            }
        ]
    },
    {
        "sha": "340bfd9393e8173adca5380e6587e1ea1a23cefa",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6MzQwYmZkOTM5M2U4MTczYWRjYTUzODBlNjU4N2UxZWExYTIzY2VmYQ==",
        "commit": {
            "author": {
                "name": "Sophie Alpert",
                "email": "git@sophiebits.com",
                "date": "2018-08-26T20:40:27Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2018-08-26T20:40:27Z"
            },
            "message": "Rename ReactTypeOfWork to ReactWorkTags, ReactTypeOfSideEffect to ReactSideEffectTags (#13476)\n\n* Rename ReactTypeOfWork to ReactWorkTags\r\n\r\nAnd `type TypeOfWork` to `type WorkTag`.\r\n\r\n* Rename ReactTypeOfSideEffect too",
            "tree": {
                "sha": "2a424b0e72c8d0bb17627cb20045391ffe4892b5",
                "url": "https://api.github.com/repos/facebook/react/git/trees/2a424b0e72c8d0bb17627cb20045391ffe4892b5"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/340bfd9393e8173adca5380e6587e1ea1a23cefa",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbgxA7CRBK7hj4Ov3rIwAAdHIIAAtcF6751Lmaynrl+szgrJlK\nhElLdgKu7QGxjDbIRgCWJwtUoGji1E6j+eRahczaUIm4j2HY0U5rOnmrLpWPtA0t\nAeA6AFww5fnINHEP+3f7g5kbj6JM4tHqTWLGzPIDCuXQgw0YYyNNxwXWKyra8HCf\nIdXJdXB/g/Bl2LSgRRXZZXpZkCvxVa6tyj5fFHvcF9IzBRvMeEgCZYZc9R9cfFEU\nWlYQ/Z5BpAZqCDqdmGoOfI313x59INl/hTr4hsspWU2KhBgSQ2DemdbkHlASqvcm\noGLWbmwooM5N3K4SgvaqzbzJ+an7zLeNggoGBGJeVqT3chJOIeoPHOUQmL2L8gA=\n=VHwi\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 2a424b0e72c8d0bb17627cb20045391ffe4892b5\nparent 53ddcec4f18f38e4f89a14b406d852e7a8945592\nauthor Sophie Alpert <git@sophiebits.com> 1535316027 -0700\ncommitter GitHub <noreply@github.com> 1535316027 -0700\n\nRename ReactTypeOfWork to ReactWorkTags, ReactTypeOfSideEffect to ReactSideEffectTags (#13476)\n\n* Rename ReactTypeOfWork to ReactWorkTags\r\n\r\nAnd `type TypeOfWork` to `type WorkTag`.\r\n\r\n* Rename ReactTypeOfSideEffect too\r\n"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/340bfd9393e8173adca5380e6587e1ea1a23cefa",
        "html_url": "https://github.com/facebook/react/commit/340bfd9393e8173adca5380e6587e1ea1a23cefa",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/340bfd9393e8173adca5380e6587e1ea1a23cefa/comments",
        "author": {
            "login": "sophiebits",
            "id": 6820,
            "node_id": "MDQ6VXNlcjY4MjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6820?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sophiebits",
            "html_url": "https://github.com/sophiebits",
            "followers_url": "https://api.github.com/users/sophiebits/followers",
            "following_url": "https://api.github.com/users/sophiebits/following{/other_user}",
            "gists_url": "https://api.github.com/users/sophiebits/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sophiebits/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sophiebits/subscriptions",
            "organizations_url": "https://api.github.com/users/sophiebits/orgs",
            "repos_url": "https://api.github.com/users/sophiebits/repos",
            "events_url": "https://api.github.com/users/sophiebits/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sophiebits/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "53ddcec4f18f38e4f89a14b406d852e7a8945592",
                "url": "https://api.github.com/repos/facebook/react/commits/53ddcec4f18f38e4f89a14b406d852e7a8945592",
                "html_url": "https://github.com/facebook/react/commit/53ddcec4f18f38e4f89a14b406d852e7a8945592"
            }
        ]
    },
    {
        "sha": "2b30828000a58eaf6adfc3ba2cbedd4bff4d077b",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6MmIzMDgyODAwMGE1OGVhZjZhZGZjM2JhMmNiZWRkNGJmZjRkMDc3Yg==",
        "commit": {
            "author": {
                "name": "Andrew Clark",
                "email": "acdlite@fb.com",
                "date": "2018-08-16T16:29:17Z"
            },
            "committer": {
                "name": "Andrew Clark",
                "email": "acdlite@fb.com",
                "date": "2018-08-16T16:29:17Z"
            },
            "message": "Fix wrong Flow return type",
            "tree": {
                "sha": "b579840fb574cb16564b962a7b752a68afe9697d",
                "url": "https://api.github.com/repos/facebook/react/git/trees/b579840fb574cb16564b962a7b752a68afe9697d"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/2b30828000a58eaf6adfc3ba2cbedd4bff4d077b",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/2b30828000a58eaf6adfc3ba2cbedd4bff4d077b",
        "html_url": "https://github.com/facebook/react/commit/2b30828000a58eaf6adfc3ba2cbedd4bff4d077b",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/2b30828000a58eaf6adfc3ba2cbedd4bff4d077b/comments",
        "author": {
            "login": "acdlite",
            "id": 3624098,
            "node_id": "MDQ6VXNlcjM2MjQwOTg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3624098?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/acdlite",
            "html_url": "https://github.com/acdlite",
            "followers_url": "https://api.github.com/users/acdlite/followers",
            "following_url": "https://api.github.com/users/acdlite/following{/other_user}",
            "gists_url": "https://api.github.com/users/acdlite/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/acdlite/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/acdlite/subscriptions",
            "organizations_url": "https://api.github.com/users/acdlite/orgs",
            "repos_url": "https://api.github.com/users/acdlite/repos",
            "events_url": "https://api.github.com/users/acdlite/events{/privacy}",
            "received_events_url": "https://api.github.com/users/acdlite/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "acdlite",
            "id": 3624098,
            "node_id": "MDQ6VXNlcjM2MjQwOTg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3624098?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/acdlite",
            "html_url": "https://github.com/acdlite",
            "followers_url": "https://api.github.com/users/acdlite/followers",
            "following_url": "https://api.github.com/users/acdlite/following{/other_user}",
            "gists_url": "https://api.github.com/users/acdlite/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/acdlite/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/acdlite/subscriptions",
            "organizations_url": "https://api.github.com/users/acdlite/orgs",
            "repos_url": "https://api.github.com/users/acdlite/repos",
            "events_url": "https://api.github.com/users/acdlite/events{/privacy}",
            "received_events_url": "https://api.github.com/users/acdlite/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "5031ebf6beddf88cac15f4d2c9e91f8dbb91d59d",
                "url": "https://api.github.com/repos/facebook/react/commits/5031ebf6beddf88cac15f4d2c9e91f8dbb91d59d",
                "html_url": "https://github.com/facebook/react/commit/5031ebf6beddf88cac15f4d2c9e91f8dbb91d59d"
            }
        ]
    },
    {
        "sha": "5031ebf6beddf88cac15f4d2c9e91f8dbb91d59d",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6NTAzMWViZjZiZWRkZjg4Y2FjMTVmNGQyYzllOTFmOGRiYjkxZDU5ZA==",
        "commit": {
            "author": {
                "name": "Andrew Clark",
                "email": "acdlite@me.com",
                "date": "2018-08-16T16:21:59Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2018-08-16T16:21:59Z"
            },
            "message": "Accept promise as element type (#13397)\n\n* Accept promise as element type\r\n\r\nOn the initial render, the element will suspend as if a promise were\r\nthrown from inside the body of the unresolved component. Siblings should\r\ncontinue rendering and if the parent is a Placeholder, the promise\r\nshould be captured by that Placeholder.\r\n\r\nWhen the promise resolves, rendering resumes. If the resolved value\r\nhas a `default` property, it is assumed to be the default export of\r\nan ES module, and we use that as the component type. If it does not have\r\na `default` property, we use the resolved value itself.\r\n\r\nThe resolved value is stored as an expando on the promise/thenable.\r\n\r\n* Use special types of work for lazy components\r\n\r\nBecause reconciliation is a hot path, this adds ClassComponentLazy,\r\nFunctionalComponentLazy, and ForwardRefLazy as special types of work.\r\nThe other types are not supported, but wouldn't be placed into a\r\nseparate module regardless.\r\n\r\n* Resolve defaultProps for lazy types\r\n\r\n* Remove some calls to isContextProvider\r\n\r\nisContextProvider checks the fiber tag, but it's typically called after\r\nwe've already refined the type of work. We should get rid of it. I\r\nremoved some of them in the previous commit, and deleted a few more\r\nin this one. I left a few behind because the remaining ones would\r\nrequire additional refactoring that feels outside the scope of this PR.\r\n\r\n* Remove getLazyComponentTypeIfResolved\r\n\r\n* Return baseProps instead of null\r\n\r\nThe caller compares the result to baseProps to see if anything changed.\r\n\r\n* Avoid redundant checks by inlining getFiberTagFromObjectType\r\n\r\n* Move tag resolution to ReactFiber module\r\n\r\n* Pass next props to update* functions\r\n\r\nWe should do this with all types of work in the future.\r\n\r\n* Refine component type before pushing/popping context\r\n\r\nRemoves unnecessary checks.\r\n\r\n* Replace all occurrences of _reactResult with helper\r\n\r\n* Move shared thenable logic to `shared` package\r\n\r\n* Check type of wrapper object before resolving to `default` export\r\n\r\n* Return resolved tag instead of reassigning",
            "tree": {
                "sha": "d5681422d0f084e3a3beccc0a15bcc0d4551a29d",
                "url": "https://api.github.com/repos/facebook/react/git/trees/d5681422d0f084e3a3beccc0a15bcc0d4551a29d"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/5031ebf6beddf88cac15f4d2c9e91f8dbb91d59d",
            "comment_count": 2,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbdaSnCRBK7hj4Ov3rIwAAdHIIAAgxAv7jwCUKuXtd9Ej10zA4\n3f2RYz4FgDO0ZqysezIVeDzaL9qUEI69gCw9844889IXv5EygGdpgLTrt1t9UlYr\nVuQ3RIUHfUuHhu6YMpRdQ0xzwSqUf5cfQFL8blrTIhfixICk+GQkrKPVLBc8Og+Q\nTGlVw05TCs5w3/WtCDnqDUWJ+K7fCIQOzuNmNppJT8orfBVORgLwT0DObGth6bVd\noD8k2EXCZHHkoUitd4l5IkinWCSAvMLB2eeih29zMbVzpT6zJgrI/vLZPwLb4YfD\n9GiKgOV1ycLOU0xrU8yblAEA4wKYeuunZBsbfzEZnnjtKV1zpvCOh45rZGzrRs4=\n=15J0\n-----END PGP SIGNATURE-----\n",
                "payload": "tree d5681422d0f084e3a3beccc0a15bcc0d4551a29d\nparent 77b7a660b93913bf1fafb34ddff692b383bdc052\nauthor Andrew Clark <acdlite@me.com> 1534436519 -0700\ncommitter GitHub <noreply@github.com> 1534436519 -0700\n\nAccept promise as element type (#13397)\n\n* Accept promise as element type\r\n\r\nOn the initial render, the element will suspend as if a promise were\r\nthrown from inside the body of the unresolved component. Siblings should\r\ncontinue rendering and if the parent is a Placeholder, the promise\r\nshould be captured by that Placeholder.\r\n\r\nWhen the promise resolves, rendering resumes. If the resolved value\r\nhas a `default` property, it is assumed to be the default export of\r\nan ES module, and we use that as the component type. If it does not have\r\na `default` property, we use the resolved value itself.\r\n\r\nThe resolved value is stored as an expando on the promise/thenable.\r\n\r\n* Use special types of work for lazy components\r\n\r\nBecause reconciliation is a hot path, this adds ClassComponentLazy,\r\nFunctionalComponentLazy, and ForwardRefLazy as special types of work.\r\nThe other types are not supported, but wouldn't be placed into a\r\nseparate module regardless.\r\n\r\n* Resolve defaultProps for lazy types\r\n\r\n* Remove some calls to isContextProvider\r\n\r\nisContextProvider checks the fiber tag, but it's typically called after\r\nwe've already refined the type of work. We should get rid of it. I\r\nremoved some of them in the previous commit, and deleted a few more\r\nin this one. I left a few behind because the remaining ones would\r\nrequire additional refactoring that feels outside the scope of this PR.\r\n\r\n* Remove getLazyComponentTypeIfResolved\r\n\r\n* Return baseProps instead of null\r\n\r\nThe caller compares the result to baseProps to see if anything changed.\r\n\r\n* Avoid redundant checks by inlining getFiberTagFromObjectType\r\n\r\n* Move tag resolution to ReactFiber module\r\n\r\n* Pass next props to update* functions\r\n\r\nWe should do this with all types of work in the future.\r\n\r\n* Refine component type before pushing/popping context\r\n\r\nRemoves unnecessary checks.\r\n\r\n* Replace all occurrences of _reactResult with helper\r\n\r\n* Move shared thenable logic to `shared` package\r\n\r\n* Check type of wrapper object before resolving to `default` export\r\n\r\n* Return resolved tag instead of reassigning\r\n"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/5031ebf6beddf88cac15f4d2c9e91f8dbb91d59d",
        "html_url": "https://github.com/facebook/react/commit/5031ebf6beddf88cac15f4d2c9e91f8dbb91d59d",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/5031ebf6beddf88cac15f4d2c9e91f8dbb91d59d/comments",
        "author": {
            "login": "acdlite",
            "id": 3624098,
            "node_id": "MDQ6VXNlcjM2MjQwOTg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3624098?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/acdlite",
            "html_url": "https://github.com/acdlite",
            "followers_url": "https://api.github.com/users/acdlite/followers",
            "following_url": "https://api.github.com/users/acdlite/following{/other_user}",
            "gists_url": "https://api.github.com/users/acdlite/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/acdlite/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/acdlite/subscriptions",
            "organizations_url": "https://api.github.com/users/acdlite/orgs",
            "repos_url": "https://api.github.com/users/acdlite/repos",
            "events_url": "https://api.github.com/users/acdlite/events{/privacy}",
            "received_events_url": "https://api.github.com/users/acdlite/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "77b7a660b93913bf1fafb34ddff692b383bdc052",
                "url": "https://api.github.com/repos/facebook/react/commits/77b7a660b93913bf1fafb34ddff692b383bdc052",
                "html_url": "https://github.com/facebook/react/commit/77b7a660b93913bf1fafb34ddff692b383bdc052"
            }
        ]
    },
    {
        "sha": "067cc24f55ef01a233be9e7564b337e35fed72ea",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6MDY3Y2MyNGY1NWVmMDFhMjMzYmU5ZTc1NjRiMzM3ZTM1ZmVkNzJlYQ==",
        "commit": {
            "author": {
                "name": "Brian Vaughn",
                "email": "brian.david.vaughn@gmail.com",
                "date": "2018-08-08T16:42:53Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2018-08-08T16:42:53Z"
            },
            "message": "Profiler actualDuration bugfix (#13313)\n\n* Simplified profiler actualDuration timing\r\n\r\nWhile testing the new DevTools profiler, I noticed that sometimes\u2013 in larger, more complicated applications\u2013 the actualDuration value was incorrect (either too large, or sometimes negative). I was not able to reproduce this in a smaller application or test (which sucks) but I assume it has something to do with the way I was tracking render times across priorities/roots. So this PR replaces the previous approach with a simpler one.\r\n\r\n* Changed bubbling logic after chatting out of band with Andrew\r\n\r\n* Replaced __PROFILE__ with feature-flag conditionals in test\r\n\r\n* Updated test comment",
            "tree": {
                "sha": "16ff4081fc141beb753c3b9e546a85e00021419d",
                "url": "https://api.github.com/repos/facebook/react/git/trees/16ff4081fc141beb753c3b9e546a85e00021419d"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/067cc24f55ef01a233be9e7564b337e35fed72ea",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbax2NCRBK7hj4Ov3rIwAAdHIIADUnI5f3k9691Ba3YAsTuCdY\nBD236GSIKUzCRvmDtMHAwsyhJwCxetfgrYl5OOoIbyKSi8imy0jFN7amehdJxWuw\nT0cOsjIOSF48uFpUDn2HsMsq9JKz9FqNquZgH3bQrKiqT2Q7hNumMv0U8E3VWqb7\ne9BSYYn6UfjH9U39n6vqc/pFXevW9JmhgoDnLH4tn1w904qftWzsCIoePme8P3T+\n29Ciq64bHhTOCauz8d4fkX1CnIqIbEoAEqpjip8hCe2yagfYPkbvRjKvMUkCz1i/\nNNM6Yv872YXvAgqFHr9Z0tc/GPl7FmdKETgs8ujVFVnDctEj6PTf8kACBAeZbTg=\n=WDxY\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 16ff4081fc141beb753c3b9e546a85e00021419d\nparent 1209ae50f3490b76d2de777837359f8c1ad910fa\nauthor Brian Vaughn <brian.david.vaughn@gmail.com> 1533746573 -0700\ncommitter GitHub <noreply@github.com> 1533746573 -0700\n\nProfiler actualDuration bugfix (#13313)\n\n* Simplified profiler actualDuration timing\r\n\r\nWhile testing the new DevTools profiler, I noticed that sometimes\u2013 in larger, more complicated applications\u2013 the actualDuration value was incorrect (either too large, or sometimes negative). I was not able to reproduce this in a smaller application or test (which sucks) but I assume it has something to do with the way I was tracking render times across priorities/roots. So this PR replaces the previous approach with a simpler one.\r\n\r\n* Changed bubbling logic after chatting out of band with Andrew\r\n\r\n* Replaced __PROFILE__ with feature-flag conditionals in test\r\n\r\n* Updated test comment\r\n"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/067cc24f55ef01a233be9e7564b337e35fed72ea",
        "html_url": "https://github.com/facebook/react/commit/067cc24f55ef01a233be9e7564b337e35fed72ea",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/067cc24f55ef01a233be9e7564b337e35fed72ea/comments",
        "author": {
            "login": "bvaughn",
            "id": 29597,
            "node_id": "MDQ6VXNlcjI5NTk3",
            "avatar_url": "https://avatars.githubusercontent.com/u/29597?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bvaughn",
            "html_url": "https://github.com/bvaughn",
            "followers_url": "https://api.github.com/users/bvaughn/followers",
            "following_url": "https://api.github.com/users/bvaughn/following{/other_user}",
            "gists_url": "https://api.github.com/users/bvaughn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bvaughn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bvaughn/subscriptions",
            "organizations_url": "https://api.github.com/users/bvaughn/orgs",
            "repos_url": "https://api.github.com/users/bvaughn/repos",
            "events_url": "https://api.github.com/users/bvaughn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bvaughn/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "1209ae50f3490b76d2de777837359f8c1ad910fa",
                "url": "https://api.github.com/repos/facebook/react/commits/1209ae50f3490b76d2de777837359f8c1ad910fa",
                "html_url": "https://github.com/facebook/react/commit/1209ae50f3490b76d2de777837359f8c1ad910fa"
            }
        ]
    },
    {
        "sha": "2b509e2c8c8c1fbc33ae59ce7c7dca0107732ff4",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6MmI1MDllMmM4YzhjMWZiYzMzYWU1OWNlN2M3ZGNhMDEwNzczMmZmNA==",
        "commit": {
            "author": {
                "name": "Andrew Clark",
                "email": "acdlite@me.com",
                "date": "2018-07-20T23:49:06Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2018-07-20T23:49:06Z"
            },
            "message": "[Experimental] API for reading context from within any render phase function (#13139)\n\n* Store list of contexts on the fiber\r\n\r\nCurrently, context can only be read by a special type of component,\r\nContextConsumer. We want to add support to all fibers, including\r\nclasses and functional components.\r\n\r\nEach fiber may read from one or more contexts. To enable quick, mono-\r\nmorphic access of this list, we'll store them on a fiber property.\r\n\r\n* Context.unstable_read\r\n\r\nunstable_read can be called anywhere within the render phase. That\r\nincludes the render method, getDerivedStateFromProps, constructors,\r\nfunctional components, and context consumer render props.\r\n\r\nIf it's called outside the render phase, an error is thrown.\r\n\r\n* Remove vestigial context cursor\r\n\r\nWasn't being used.\r\n\r\n* Split fiber.expirationTime into two separate fields\r\n\r\nCurrently, the `expirationTime` field represents the pending work of\r\nboth the fiber itself \u2014 including new props, state, and context \u2014 and of\r\nany updates in that fiber's subtree.\r\n\r\nThis commit adds a second field called `childExpirationTime`. Now\r\n`expirationTime` only represents the pending work of the fiber itself.\r\nThe subtree's pending work is represented by `childExpirationTime`.\r\n\r\nThe biggest advantage is it requires fewer checks to bailout on already\r\nfinished work. For most types of work, if the `expirationTime` does not\r\nmatch the render expiration time, we can bailout immediately without\r\nany further checks. This won't work for fibers that have\r\n`shouldComponentUpdate` semantics (class components), for which we still\r\nneed to check for props and state changes explicitly.\r\n\r\n* Performance nits\r\n\r\nOptimize `readContext` for most common case",
            "tree": {
                "sha": "7455b1010f8bcea212fa16825e52371025d86557",
                "url": "https://api.github.com/repos/facebook/react/git/trees/7455b1010f8bcea212fa16825e52371025d86557"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/2b509e2c8c8c1fbc33ae59ce7c7dca0107732ff4",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbUnTyCRBK7hj4Ov3rIwAAdHIIAF6KkTq/mcew9aJUfHgaPVOv\nhce1o/dCl128IE7GKxytP+0rnKNz+Xq47dyi2Q019Vu1mBYfJjZ2D81OD0cuKA/6\nw7r2nOawyLeI0DsOXY0A45H9ywsuNY3p0AR9Mbpdb8GlQ+I1dQkVWSCmRFvOEpC5\nRNq5nZpShqG7U/iUMO8VRpUv5pnzvJwDYjAwgPIfJsMKbevbrwCiiEG4+x0k+7cL\n0FlzUyPShTmEDePORKOC5IhcC40pqY9btlu0eM1MoqgmMaArX+FvzWSwtTh6vwm/\nHym9QRa/wbTqvKbQphKHqe2/6c4ViOZOGPDEW7tey6PizSn/Tvmb72luuUlvJHY=\n=Xb41\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 7455b1010f8bcea212fa16825e52371025d86557\nparent 5776fa3fcff2c93491e95c261d98af3cebf2cac9\nauthor Andrew Clark <acdlite@me.com> 1532130546 -0700\ncommitter GitHub <noreply@github.com> 1532130546 -0700\n\n[Experimental] API for reading context from within any render phase function (#13139)\n\n* Store list of contexts on the fiber\r\n\r\nCurrently, context can only be read by a special type of component,\r\nContextConsumer. We want to add support to all fibers, including\r\nclasses and functional components.\r\n\r\nEach fiber may read from one or more contexts. To enable quick, mono-\r\nmorphic access of this list, we'll store them on a fiber property.\r\n\r\n* Context.unstable_read\r\n\r\nunstable_read can be called anywhere within the render phase. That\r\nincludes the render method, getDerivedStateFromProps, constructors,\r\nfunctional components, and context consumer render props.\r\n\r\nIf it's called outside the render phase, an error is thrown.\r\n\r\n* Remove vestigial context cursor\r\n\r\nWasn't being used.\r\n\r\n* Split fiber.expirationTime into two separate fields\r\n\r\nCurrently, the `expirationTime` field represents the pending work of\r\nboth the fiber itself \u2014 including new props, state, and context \u2014 and of\r\nany updates in that fiber's subtree.\r\n\r\nThis commit adds a second field called `childExpirationTime`. Now\r\n`expirationTime` only represents the pending work of the fiber itself.\r\nThe subtree's pending work is represented by `childExpirationTime`.\r\n\r\nThe biggest advantage is it requires fewer checks to bailout on already\r\nfinished work. For most types of work, if the `expirationTime` does not\r\nmatch the render expiration time, we can bailout immediately without\r\nany further checks. This won't work for fibers that have\r\n`shouldComponentUpdate` semantics (class components), for which we still\r\nneed to check for props and state changes explicitly.\r\n\r\n* Performance nits\r\n\r\nOptimize `readContext` for most common case\r\n"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/2b509e2c8c8c1fbc33ae59ce7c7dca0107732ff4",
        "html_url": "https://github.com/facebook/react/commit/2b509e2c8c8c1fbc33ae59ce7c7dca0107732ff4",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/2b509e2c8c8c1fbc33ae59ce7c7dca0107732ff4/comments",
        "author": {
            "login": "acdlite",
            "id": 3624098,
            "node_id": "MDQ6VXNlcjM2MjQwOTg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3624098?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/acdlite",
            "html_url": "https://github.com/acdlite",
            "followers_url": "https://api.github.com/users/acdlite/followers",
            "following_url": "https://api.github.com/users/acdlite/following{/other_user}",
            "gists_url": "https://api.github.com/users/acdlite/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/acdlite/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/acdlite/subscriptions",
            "organizations_url": "https://api.github.com/users/acdlite/orgs",
            "repos_url": "https://api.github.com/users/acdlite/repos",
            "events_url": "https://api.github.com/users/acdlite/events{/privacy}",
            "received_events_url": "https://api.github.com/users/acdlite/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "5776fa3fcff2c93491e95c261d98af3cebf2cac9",
                "url": "https://api.github.com/repos/facebook/react/commits/5776fa3fcff2c93491e95c261d98af3cebf2cac9",
                "html_url": "https://github.com/facebook/react/commit/5776fa3fcff2c93491e95c261d98af3cebf2cac9"
            }
        ]
    },
    {
        "sha": "e6076ecf48f5e492e894a5bc3f609b0478388b80",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6ZTYwNzZlY2Y0OGY1ZTQ5MmU4OTRhNWJjM2Y2MDliMDQ3ODM4OGI4MA==",
        "commit": {
            "author": {
                "name": "Dan Abramov",
                "email": "dan.abramov@gmail.com",
                "date": "2018-07-12T14:32:06Z"
            },
            "committer": {
                "name": "Brian Vaughn",
                "email": "brian.david.vaughn@gmail.com",
                "date": "2018-07-12T14:32:06Z"
            },
            "message": "Remove ad-hoc forks of getComponentName() and fix it (#13197)\n\n* Fix getComponentName() for types with nested $$typeof\r\n\r\n* Temporarily remove Profiler ID from messages\r\n\r\n* Change getComponentName() signature to take just type\r\n\r\nIt doesn't actually need the whole Fiber.\r\n\r\n* Remove getComponentName() forks in isomorphic and SSR\r\n\r\n* Remove unnecessary .type access where we already have a type\r\n\r\n* Remove unused type",
            "tree": {
                "sha": "fa952bdecfabcfadd59dd90057a935f39a007b8d",
                "url": "https://api.github.com/repos/facebook/react/git/trees/fa952bdecfabcfadd59dd90057a935f39a007b8d"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/e6076ecf48f5e492e894a5bc3f609b0478388b80",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/e6076ecf48f5e492e894a5bc3f609b0478388b80",
        "html_url": "https://github.com/facebook/react/commit/e6076ecf48f5e492e894a5bc3f609b0478388b80",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/e6076ecf48f5e492e894a5bc3f609b0478388b80/comments",
        "author": {
            "login": "gaearon",
            "id": 810438,
            "node_id": "MDQ6VXNlcjgxMDQzOA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/810438?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gaearon",
            "html_url": "https://github.com/gaearon",
            "followers_url": "https://api.github.com/users/gaearon/followers",
            "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
            "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
            "organizations_url": "https://api.github.com/users/gaearon/orgs",
            "repos_url": "https://api.github.com/users/gaearon/repos",
            "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gaearon/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "bvaughn",
            "id": 29597,
            "node_id": "MDQ6VXNlcjI5NTk3",
            "avatar_url": "https://avatars.githubusercontent.com/u/29597?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bvaughn",
            "html_url": "https://github.com/bvaughn",
            "followers_url": "https://api.github.com/users/bvaughn/followers",
            "following_url": "https://api.github.com/users/bvaughn/following{/other_user}",
            "gists_url": "https://api.github.com/users/bvaughn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bvaughn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bvaughn/subscriptions",
            "organizations_url": "https://api.github.com/users/bvaughn/orgs",
            "repos_url": "https://api.github.com/users/bvaughn/repos",
            "events_url": "https://api.github.com/users/bvaughn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bvaughn/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "32f6f258bad524ec3886901a5b132887f8dd7553",
                "url": "https://api.github.com/repos/facebook/react/commits/32f6f258bad524ec3886901a5b132887f8dd7553",
                "html_url": "https://github.com/facebook/react/commit/32f6f258bad524ec3886901a5b132887f8dd7553"
            }
        ]
    },
    {
        "sha": "6f6b560a645adb595ba1e40630a3915d8abdf038",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6NmY2YjU2MGE2NDVhZGI1OTViYTFlNDA2MzBhMzkxNWQ4YWJkZjAzOA==",
        "commit": {
            "author": {
                "name": "Brian Vaughn",
                "email": "brian.david.vaughn@gmail.com",
                "date": "2018-07-06T15:25:29Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2018-07-06T15:25:29Z"
            },
            "message": "Renamed selfBaseTime/treeBaseTime Fiber attributes to selfBaseDuration/treeBaseDuration (#13156)\n\nThis is an unobservable change to all but the (under development) DevTools Profiler plugin. It is being done so that the plugin can safely feature detect a version of React that supports it. The profiler API has existed since the 16.4.0 release, but it did not support the DevTools plugin prior to PR #13058.\r\n\r\nSide note: I am not a big fan of the term \"base duration\". Both it and \"actual duration\" are kind of awkward and vague. If anyone has suggestions for better names\u2013 this is the best time to bikeshed about them.",
            "tree": {
                "sha": "8581c93fbf40455e9b619c3c6545ee82ef880a0a",
                "url": "https://api.github.com/repos/facebook/react/git/trees/8581c93fbf40455e9b619c3c6545ee82ef880a0a"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/6f6b560a645adb595ba1e40630a3915d8abdf038",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbP4npCRBK7hj4Ov3rIwAAdHIIAIYEEA//n+0VlWgfxYBB7/5R\no2s69CcVQzc5bJf8TzDGgXqHyLX6cByCpXoB/3qljGZ9jmETyYQgY4gwoQ2CUIdG\nG3d8T6233kgna7idPLFznYebPv6bhpag5Lg9Fqr/hhFuZB6HnPz7lVYg3IenJZro\nOWh+wd6yJjH8vHCVN2VGupATixJlzz6WI2W+wxevz1ZiDWGBTk0zsg6+Gv6SPn5y\nTzDT7sXRlBgZWnwLSEFJ1TvrRR5bKrXd10D+kChrSHgjGKJDik6qPzXdvhhghjTN\ncAM1LEMrcMoteLb/m21UyX+RWAjWO4m2fCX1Gp5oVkC+zLEfbXuXGT1+Ed7O1sE=\n=yUpY\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 8581c93fbf40455e9b619c3c6545ee82ef880a0a\nparent 1386ccddd8cecc5979d79c0e9bbbd59373c6a2fc\nauthor Brian Vaughn <brian.david.vaughn@gmail.com> 1530890729 -0700\ncommitter GitHub <noreply@github.com> 1530890729 -0700\n\nRenamed selfBaseTime/treeBaseTime Fiber attributes to selfBaseDuration/treeBaseDuration (#13156)\n\nThis is an unobservable change to all but the (under development) DevTools Profiler plugin. It is being done so that the plugin can safely feature detect a version of React that supports it. The profiler API has existed since the 16.4.0 release, but it did not support the DevTools plugin prior to PR #13058.\r\n\r\nSide note: I am not a big fan of the term \"base duration\". Both it and \"actual duration\" are kind of awkward and vague. If anyone has suggestions for better names\u2013 this is the best time to bikeshed about them."
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/6f6b560a645adb595ba1e40630a3915d8abdf038",
        "html_url": "https://github.com/facebook/react/commit/6f6b560a645adb595ba1e40630a3915d8abdf038",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/6f6b560a645adb595ba1e40630a3915d8abdf038/comments",
        "author": {
            "login": "bvaughn",
            "id": 29597,
            "node_id": "MDQ6VXNlcjI5NTk3",
            "avatar_url": "https://avatars.githubusercontent.com/u/29597?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bvaughn",
            "html_url": "https://github.com/bvaughn",
            "followers_url": "https://api.github.com/users/bvaughn/followers",
            "following_url": "https://api.github.com/users/bvaughn/following{/other_user}",
            "gists_url": "https://api.github.com/users/bvaughn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bvaughn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bvaughn/subscriptions",
            "organizations_url": "https://api.github.com/users/bvaughn/orgs",
            "repos_url": "https://api.github.com/users/bvaughn/repos",
            "events_url": "https://api.github.com/users/bvaughn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bvaughn/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "1386ccddd8cecc5979d79c0e9bbbd59373c6a2fc",
                "url": "https://api.github.com/repos/facebook/react/commits/1386ccddd8cecc5979d79c0e9bbbd59373c6a2fc",
                "html_url": "https://github.com/facebook/react/commit/1386ccddd8cecc5979d79c0e9bbbd59373c6a2fc"
            }
        ]
    },
    {
        "sha": "88d7ed8bfbccd860c3e309da39d356d0a3127aa7",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6ODhkN2VkOGJmYmNjZDg2MGMzZTMwOWRhMzlkMzU2ZDBhMzEyN2FhNw==",
        "commit": {
            "author": {
                "name": "Andrew Clark",
                "email": "acdlite@me.com",
                "date": "2018-07-04T02:47:00Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2018-07-04T02:47:00Z"
            },
            "message": "React.Timeout -> React.Placeholder (#13105)\n\nChanged the API to match what we've been using in our latest discussions.\r\n\r\nOur tentative plans are for <Placeholder> to automatically hide the timed-out\r\nchildren, instead of removing them, so their state is not lost. This part is\r\nnot yet implemented. We'll likely have a lower level API that does not include\r\nthe hiding behavior. This is also not yet implemented.",
            "tree": {
                "sha": "ac462839f0fcb8c443243c999307ec6af4605eec",
                "url": "https://api.github.com/repos/facebook/react/git/trees/ac462839f0fcb8c443243c999307ec6af4605eec"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/88d7ed8bfbccd860c3e309da39d356d0a3127aa7",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbPDUkCRBK7hj4Ov3rIwAAdHIIAIp2QDSzaIGuYIvvuj3Oksj2\nYjGxLzqUZDlVXzl+RPhGOyaEtmaj9N09p/s84JqSltG9H03Ss87q4mR60yVd8hNK\nnEMQj8dUc1FeNdSo+nbzjtwn4gHookfuhyluXRtw684vazG8i2Id78qgtlws35vV\n7YZg5bYmz5YAQnBdJWm+ZJY+Le+nGlv399+Ydw3LVVo3Q+jy7+BStdbBeMOuy1s2\nz0d+Y5z2TA1+KseWmTbGWE5mC5joybPOnELCMdu+/MzT5AfAdOXuA+0d3Tk+CMpS\n6M/5lkNQcce052zCI2SJRG4NJ6N/rwwl0C+fHtnM3wpcapriB96dsbczc0Riumo=\n=zLN8\n-----END PGP SIGNATURE-----\n",
                "payload": "tree ac462839f0fcb8c443243c999307ec6af4605eec\nparent f128fdea4840f494991054f608b99757a5ce5764\nauthor Andrew Clark <acdlite@me.com> 1530672420 -0700\ncommitter GitHub <noreply@github.com> 1530672420 -0700\n\nReact.Timeout -> React.Placeholder (#13105)\n\nChanged the API to match what we've been using in our latest discussions.\r\n\r\nOur tentative plans are for <Placeholder> to automatically hide the timed-out\r\nchildren, instead of removing them, so their state is not lost. This part is\r\nnot yet implemented. We'll likely have a lower level API that does not include\r\nthe hiding behavior. This is also not yet implemented."
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/88d7ed8bfbccd860c3e309da39d356d0a3127aa7",
        "html_url": "https://github.com/facebook/react/commit/88d7ed8bfbccd860c3e309da39d356d0a3127aa7",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/88d7ed8bfbccd860c3e309da39d356d0a3127aa7/comments",
        "author": {
            "login": "acdlite",
            "id": 3624098,
            "node_id": "MDQ6VXNlcjM2MjQwOTg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3624098?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/acdlite",
            "html_url": "https://github.com/acdlite",
            "followers_url": "https://api.github.com/users/acdlite/followers",
            "following_url": "https://api.github.com/users/acdlite/following{/other_user}",
            "gists_url": "https://api.github.com/users/acdlite/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/acdlite/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/acdlite/subscriptions",
            "organizations_url": "https://api.github.com/users/acdlite/orgs",
            "repos_url": "https://api.github.com/users/acdlite/repos",
            "events_url": "https://api.github.com/users/acdlite/events{/privacy}",
            "received_events_url": "https://api.github.com/users/acdlite/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "f128fdea4840f494991054f608b99757a5ce5764",
                "url": "https://api.github.com/repos/facebook/react/commits/f128fdea4840f494991054f608b99757a5ce5764",
                "html_url": "https://github.com/facebook/react/commit/f128fdea4840f494991054f608b99757a5ce5764"
            }
        ]
    },
    {
        "sha": "f128fdea4840f494991054f608b99757a5ce5764",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6ZjEyOGZkZWE0ODQwZjQ5NDk5MTA1NGY2MDhiOTk3NTdhNWNlNTc2NA==",
        "commit": {
            "author": {
                "name": "Andrew Clark",
                "email": "acdlite@me.com",
                "date": "2018-07-04T02:44:19Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2018-07-04T02:44:19Z"
            },
            "message": "Suspending outside of strict trees and async trees (#13098)\n\nWe can support components that suspend outside of an async mode tree\r\nby immediately committing their placeholders.\r\n\r\nIn strict mode, the Timeout acts effectively like an error boundary.\r\nWithin a single render pass, we unwind to the nearest Timeout and\r\nre-render the placeholder view.\r\n\r\nOutside of strict mode, it's not safe to unwind and re-render the\r\nsiblings without committing. (Technically, this is true of error\r\nboundaries, too, though probably not a huge deal, since we don't support\r\nusing error boundaries for control flow (yet, at least)). We need to be\r\nclever. What we do is pretend the suspended component rendered null.*\r\nThere's no unwinding. The siblings commit like normal.\r\n\r\nThen, in the commit phase, schedule an update on the Timeout to\r\nsynchronously re-render the placeholder. Although this requires an extra\r\ncommit, it will not be observable. And because the siblings were not\r\nblocked from committing, they don't have to be strict mode compatible.\r\n\r\nAnother caveat is that if a component suspends during an async render,\r\nbut it's captured by a non-async Timeout, we need to revert to sync\r\nmode. In other words, if any non-async component renders, the entire\r\ntree must complete and commit without yielding.\r\n\r\n* The downside of rendering null is that the existing children will be\r\ndeleted. We should hide them instead. I'll work on this in a follow-up.",
            "tree": {
                "sha": "2fb7920655d9a52ba642094537b28048bd205d17",
                "url": "https://api.github.com/repos/facebook/react/git/trees/2fb7920655d9a52ba642094537b28048bd205d17"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/f128fdea4840f494991054f608b99757a5ce5764",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbPDSDCRBK7hj4Ov3rIwAAdHIIAC3sagIEFFmgzDBDs1BO08lQ\ntKu+wNlY8sAYjTZIWaaNv76KWaCzB75f0JImbnDjFCdlWqGpQ4+3uGBZboxVUkJg\nV3JKxDVlXPVRvJwZX4rxCShFREJEw3TJqXH8pNk9b+9+hqaRjYAtrqwJSF0OJJCU\nDfVWM+3QEekb1O4J4iCDqHKSt5Myzzw9HYzjzTd4R0QWHt/nCjGE28y5/R8TsZyg\nVyKxb7n1UAJWozeMR65S+K+Q/S5evCWLCsQLKiyOudxGGcwZyRQ2L+WCg76hx3KL\nZ65LbNsm9JKNEBGoORQhwFOoPNrvFX5+Ma8936D4N8R+yp8cx300VHqq3ovMhCQ=\n=SWRR\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 2fb7920655d9a52ba642094537b28048bd205d17\nparent aa8266c4f7da62788156bf0bdd95fd729c04388a\nauthor Andrew Clark <acdlite@me.com> 1530672259 -0700\ncommitter GitHub <noreply@github.com> 1530672259 -0700\n\nSuspending outside of strict trees and async trees (#13098)\n\nWe can support components that suspend outside of an async mode tree\r\nby immediately committing their placeholders.\r\n\r\nIn strict mode, the Timeout acts effectively like an error boundary.\r\nWithin a single render pass, we unwind to the nearest Timeout and\r\nre-render the placeholder view.\r\n\r\nOutside of strict mode, it's not safe to unwind and re-render the\r\nsiblings without committing. (Technically, this is true of error\r\nboundaries, too, though probably not a huge deal, since we don't support\r\nusing error boundaries for control flow (yet, at least)). We need to be\r\nclever. What we do is pretend the suspended component rendered null.*\r\nThere's no unwinding. The siblings commit like normal.\r\n\r\nThen, in the commit phase, schedule an update on the Timeout to\r\nsynchronously re-render the placeholder. Although this requires an extra\r\ncommit, it will not be observable. And because the siblings were not\r\nblocked from committing, they don't have to be strict mode compatible.\r\n\r\nAnother caveat is that if a component suspends during an async render,\r\nbut it's captured by a non-async Timeout, we need to revert to sync\r\nmode. In other words, if any non-async component renders, the entire\r\ntree must complete and commit without yielding.\r\n\r\n* The downside of rendering null is that the existing children will be\r\ndeleted. We should hide them instead. I'll work on this in a follow-up."
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/f128fdea4840f494991054f608b99757a5ce5764",
        "html_url": "https://github.com/facebook/react/commit/f128fdea4840f494991054f608b99757a5ce5764",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/f128fdea4840f494991054f608b99757a5ce5764/comments",
        "author": {
            "login": "acdlite",
            "id": 3624098,
            "node_id": "MDQ6VXNlcjM2MjQwOTg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3624098?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/acdlite",
            "html_url": "https://github.com/acdlite",
            "followers_url": "https://api.github.com/users/acdlite/followers",
            "following_url": "https://api.github.com/users/acdlite/following{/other_user}",
            "gists_url": "https://api.github.com/users/acdlite/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/acdlite/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/acdlite/subscriptions",
            "organizations_url": "https://api.github.com/users/acdlite/orgs",
            "repos_url": "https://api.github.com/users/acdlite/repos",
            "events_url": "https://api.github.com/users/acdlite/events{/privacy}",
            "received_events_url": "https://api.github.com/users/acdlite/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "aa8266c4f7da62788156bf0bdd95fd729c04388a",
                "url": "https://api.github.com/repos/facebook/react/commits/aa8266c4f7da62788156bf0bdd95fd729c04388a",
                "html_url": "https://github.com/facebook/react/commit/aa8266c4f7da62788156bf0bdd95fd729c04388a"
            }
        ]
    },
    {
        "sha": "b0f60895f759253d4180dfa7e1901fe36d4abd3a",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6YjBmNjA4OTVmNzU5MjUzZDQxODBkZmE3ZTE5MDFmZTM2ZDRhYmQzYQ==",
        "commit": {
            "author": {
                "name": "Brian Vaughn",
                "email": "brian.david.vaughn@gmail.com",
                "date": "2018-06-20T16:24:52Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2018-06-20T16:24:52Z"
            },
            "message": "Automatically Profile roots when DevTools is present (#13058)\n\n* react-test-renderer injects itself into DevTools if present\r\n* Fibers are always opted into ProfileMode if DevTools is present\r\n* Added simple test for DevTools + always profiling behavior",
            "tree": {
                "sha": "b6e70456519f2ef671af98f04fb63f4cd5c9c2e0",
                "url": "https://api.github.com/repos/facebook/react/git/trees/b6e70456519f2ef671af98f04fb63f4cd5c9c2e0"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/b0f60895f759253d4180dfa7e1901fe36d4abd3a",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbKn/UCRBK7hj4Ov3rIwAAdHIIACUn/OkH5ZP7od90dHf85Lms\nfLMzgccQVgSiJCwF5Cv5Fhc30FCZ0mUCiAQh+0rNZ9GMId+UJ17uxfYdbe1sV7wT\n6zHgBiRm+X58Wiq9zkVLJGcOnwSk9MANjgfHswIywnyRjunm5KmkMd/rcvty4tGf\nEdUbeUsPwT8+dKFRzBh/UBHJyFp50P4ekOfAWRKSJ8E5kbG6Sokt4Xo4lfh/69OZ\ndggRRoUtlLf+QYFYIqslMw7l0nJMDrY8RdUYCDAn9MVcBM9WYTvuCGwL+L/fTd6x\nhO7pN5m4O5N7bJcqHrc4lOvJeTktWWfJQ/STx4YXHI3UOAGOm98cwrznUltrLDg=\n=CLoI\n-----END PGP SIGNATURE-----\n",
                "payload": "tree b6e70456519f2ef671af98f04fb63f4cd5c9c2e0\nparent ae8c6dd5347797f2279639a5bc644e9b6632bbbb\nauthor Brian Vaughn <brian.david.vaughn@gmail.com> 1529511892 -0700\ncommitter GitHub <noreply@github.com> 1529511892 -0700\n\nAutomatically Profile roots when DevTools is present (#13058)\n\n* react-test-renderer injects itself into DevTools if present\r\n* Fibers are always opted into ProfileMode if DevTools is present\r\n* Added simple test for DevTools + always profiling behavior"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/b0f60895f759253d4180dfa7e1901fe36d4abd3a",
        "html_url": "https://github.com/facebook/react/commit/b0f60895f759253d4180dfa7e1901fe36d4abd3a",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/b0f60895f759253d4180dfa7e1901fe36d4abd3a/comments",
        "author": {
            "login": "bvaughn",
            "id": 29597,
            "node_id": "MDQ6VXNlcjI5NTk3",
            "avatar_url": "https://avatars.githubusercontent.com/u/29597?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bvaughn",
            "html_url": "https://github.com/bvaughn",
            "followers_url": "https://api.github.com/users/bvaughn/followers",
            "following_url": "https://api.github.com/users/bvaughn/following{/other_user}",
            "gists_url": "https://api.github.com/users/bvaughn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bvaughn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bvaughn/subscriptions",
            "organizations_url": "https://api.github.com/users/bvaughn/orgs",
            "repos_url": "https://api.github.com/users/bvaughn/repos",
            "events_url": "https://api.github.com/users/bvaughn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bvaughn/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "ae8c6dd5347797f2279639a5bc644e9b6632bbbb",
                "url": "https://api.github.com/repos/facebook/react/commits/ae8c6dd5347797f2279639a5bc644e9b6632bbbb",
                "html_url": "https://github.com/facebook/react/commit/ae8c6dd5347797f2279639a5bc644e9b6632bbbb"
            }
        ]
    },
    {
        "sha": "aeda7b745d9c080150704feb20ea576238a1b9a1",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6YWVkYTdiNzQ1ZDljMDgwMTUwNzA0ZmViMjBlYTU3NjIzOGExYjlhMQ==",
        "commit": {
            "author": {
                "name": "Dan Abramov",
                "email": "dan.abramov@gmail.com",
                "date": "2018-06-19T15:03:45Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2018-06-19T15:03:45Z"
            },
            "message": "Remove fbjs dependency (#13069)\n\n* Inline fbjs/lib/invariant\r\n\r\n* Inline fbjs/lib/warning\r\n\r\n* Remove remaining usage of fbjs in packages/*.js\r\n\r\n* Fix lint\r\n\r\n* Remove fbjs from dependencies\r\n\r\n* Protect against accidental fbjs imports\r\n\r\n* Fix broken test mocks\r\n\r\n* Allow transitive deps on fbjs/ for UMD bundles\r\n\r\n* Remove fbjs from release script",
            "tree": {
                "sha": "46d9dd7651403c675cef3f4f7e5107d079d889fd",
                "url": "https://api.github.com/repos/facebook/react/git/trees/46d9dd7651403c675cef3f4f7e5107d079d889fd"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/aeda7b745d9c080150704feb20ea576238a1b9a1",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbKRtRCRBK7hj4Ov3rIwAAdHIIABvK9Wu/JmIO19bzACizfR3/\nd8h0gBE/jWNwKnkkfTEbrGNkmetaQA+j2egyft/WDA//5J90/QO6z1STnrZu5NUB\nDj/kbO+Xm67pYOKuXIoYWnSyL6v+QHNRkG7SvEom/ySOzwAqJtBbhPjCzpRdyWx7\nJc/tpA+NzQILqEGSXsn939ndeAJbGW7psPRetYxd3BamvbNp2GUG2UWpKUvTIEo1\n2XDCYP7lR8G1p+b+ZFZeiiwWnfiF17BH5q5qpWguM+Bc2Gj4L1Zwd5i3Hds+AxLR\nZIEnMIgKgqRgSusKzM4tNQ/HtRyHtHNV5o3WizypYmx0iut21RHImnqxd2vv1V4=\n=KU+z\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 46d9dd7651403c675cef3f4f7e5107d079d889fd\nparent b1b3acbd6b5fad40558db790f59855116ec3ee93\nauthor Dan Abramov <dan.abramov@gmail.com> 1529420625 +0100\ncommitter GitHub <noreply@github.com> 1529420625 +0100\n\nRemove fbjs dependency (#13069)\n\n* Inline fbjs/lib/invariant\r\n\r\n* Inline fbjs/lib/warning\r\n\r\n* Remove remaining usage of fbjs in packages/*.js\r\n\r\n* Fix lint\r\n\r\n* Remove fbjs from dependencies\r\n\r\n* Protect against accidental fbjs imports\r\n\r\n* Fix broken test mocks\r\n\r\n* Allow transitive deps on fbjs/ for UMD bundles\r\n\r\n* Remove fbjs from release script\r\n"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/aeda7b745d9c080150704feb20ea576238a1b9a1",
        "html_url": "https://github.com/facebook/react/commit/aeda7b745d9c080150704feb20ea576238a1b9a1",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/aeda7b745d9c080150704feb20ea576238a1b9a1/comments",
        "author": {
            "login": "gaearon",
            "id": 810438,
            "node_id": "MDQ6VXNlcjgxMDQzOA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/810438?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gaearon",
            "html_url": "https://github.com/gaearon",
            "followers_url": "https://api.github.com/users/gaearon/followers",
            "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
            "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
            "organizations_url": "https://api.github.com/users/gaearon/orgs",
            "repos_url": "https://api.github.com/users/gaearon/repos",
            "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gaearon/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "b1b3acbd6b5fad40558db790f59855116ec3ee93",
                "url": "https://api.github.com/repos/facebook/react/commits/b1b3acbd6b5fad40558db790f59855116ec3ee93",
                "html_url": "https://github.com/facebook/react/commit/b1b3acbd6b5fad40558db790f59855116ec3ee93"
            }
        ]
    },
    {
        "sha": "55787006710bd8ef89a01d60c4a9cfa58c71035d",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6NTU3ODcwMDY3MTBiZDhlZjg5YTAxZDYwYzRhOWNmYTU4YzcxMDM1ZA==",
        "commit": {
            "author": {
                "name": "Brian Vaughn",
                "email": "brian.david.vaughn@gmail.com",
                "date": "2018-05-25T21:51:13Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2018-05-25T21:51:13Z"
            },
            "message": "Record \"actual\" times for all Fibers within a Profiler tree (alt) (#12910)\n\n* Moved actual time fields from Profiler stateNode to Fiber\r\n\r\n* Record actual time for all Fibers within a ProfileMode tree\r\n\r\n* Changed how profiler accumulates time\r\n\r\nThis change gives up on accumulating time across renders of different priority, but in exchange- simplifies how the commit phase (reset) code works, and perhaps also makes the profiling code more compatible with future resuming behavior",
            "tree": {
                "sha": "ba27145ecea917d2cb1247fd3803be1685472b3c",
                "url": "https://api.github.com/repos/facebook/react/git/trees/ba27145ecea917d2cb1247fd3803be1685472b3c"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/55787006710bd8ef89a01d60c4a9cfa58c71035d",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbCIVRCRBK7hj4Ov3rIwAAdHIIABI/+pcqPfQXZGSUtFfNut1O\nxjPFjH8syfguYY6cuBqpiImCP1ypbX8Eqf9RXZDPiLnw5lSAahQ6bOSKykpRP9Fd\nLkZDrYW9lbvzMQUWC6SSOMGIOpDYWxNELxV3AgmaHnX12+5bfBggg+CTqlenQ4ul\nNB/1tWCwF9qlYsdwjY+gf1nKt55eiDDPEDcUYwH1SkT5LZJI3+pneU+G6+NnpYZ3\njveeJFrxvPGFvLsGxYcIyZWnMJt4WE2yeUweGcLAyoopENFbpqasCL/WSUHqRPoB\nx9RXASuBENGKdcNsnGzvBFN/kvhOlMfikwjyh0h86ZQsqII1xIKKl3VLuoXi1FU=\n=yrG+\n-----END PGP SIGNATURE-----\n",
                "payload": "tree ba27145ecea917d2cb1247fd3803be1685472b3c\nparent 76e07071a11cd6e4796ad846bc835a18c8f49647\nauthor Brian Vaughn <brian.david.vaughn@gmail.com> 1527285073 -0700\ncommitter GitHub <noreply@github.com> 1527285073 -0700\n\nRecord \"actual\" times for all Fibers within a Profiler tree (alt) (#12910)\n\n* Moved actual time fields from Profiler stateNode to Fiber\r\n\r\n* Record actual time for all Fibers within a ProfileMode tree\r\n\r\n* Changed how profiler accumulates time\r\n\r\nThis change gives up on accumulating time across renders of different priority, but in exchange- simplifies how the commit phase (reset) code works, and perhaps also makes the profiling code more compatible with future resuming behavior"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/55787006710bd8ef89a01d60c4a9cfa58c71035d",
        "html_url": "https://github.com/facebook/react/commit/55787006710bd8ef89a01d60c4a9cfa58c71035d",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/55787006710bd8ef89a01d60c4a9cfa58c71035d/comments",
        "author": {
            "login": "bvaughn",
            "id": 29597,
            "node_id": "MDQ6VXNlcjI5NTk3",
            "avatar_url": "https://avatars.githubusercontent.com/u/29597?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bvaughn",
            "html_url": "https://github.com/bvaughn",
            "followers_url": "https://api.github.com/users/bvaughn/followers",
            "following_url": "https://api.github.com/users/bvaughn/following{/other_user}",
            "gists_url": "https://api.github.com/users/bvaughn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bvaughn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bvaughn/subscriptions",
            "organizations_url": "https://api.github.com/users/bvaughn/orgs",
            "repos_url": "https://api.github.com/users/bvaughn/repos",
            "events_url": "https://api.github.com/users/bvaughn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bvaughn/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "76e07071a11cd6e4796ad846bc835a18c8f49647",
                "url": "https://api.github.com/repos/facebook/react/commits/76e07071a11cd6e4796ad846bc835a18c8f49647",
                "html_url": "https://github.com/facebook/react/commit/76e07071a11cd6e4796ad846bc835a18c8f49647"
            }
        ]
    },
    {
        "sha": "13003654e79f9fa65ee833afeec86d668f35d31d",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6MTMwMDM2NTRlNzlmOWZhNjVlZTgzM2FmZWVjODZkNjY4ZjM1ZDMxZA==",
        "commit": {
            "author": {
                "name": "Brian Vaughn",
                "email": "brian.david.vaughn@gmail.com",
                "date": "2018-05-21T16:49:22Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2018-05-21T16:49:22Z"
            },
            "message": "Pass \"start time\" and \"commit time\" to Profiler callback (#12852)\n\n* Added start time parameter to Profiler onRender callback\r\n* Profiler also captures commit time\r\n* Only init Profiler stateNode if enableProfilerTimer feature flag enabled",
            "tree": {
                "sha": "2f3c542369b76fbe6882e42b0ac8d28e9b524536",
                "url": "https://api.github.com/repos/facebook/react/git/trees/2f3c542369b76fbe6882e42b0ac8d28e9b524536"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/13003654e79f9fa65ee833afeec86d668f35d31d",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbAviSCRBK7hj4Ov3rIwAAdHIIABgeNXcpKRRSxeNkTKPV6+ah\no4JXWsgUqtvt3xjCqvCn7XUgAkmYScN4vTCpWifCTuK+jq6vM4n5RWjs6HlKMMN+\nexfXhLsvMZtN9USsZw2i4auPcP0Umr0Zp20yEx73LU7/phpen5oM+JiHNOCR4IbZ\noOZYHcb9ejiUtF2P328WT8kpBDXNasoZ44En1fj4pY5YDj8M57TZ2TucTZuMpjXB\nKokBhRAANhlJCgppgY5QLxzCgb524kf7mXw55Y2sAGRLQRPZPMiPxlqlFomRKsTQ\nfcHGh7ybd0TTk97RAS5ujKMsgfOhGtWmh8BRriIay5dyHx3eXkp4UsmOcO8cD74=\n=4b93\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 2f3c542369b76fbe6882e42b0ac8d28e9b524536\nparent 12c8a88cd9a6cc7309e5fc566ba5672aab0b78a9\nauthor Brian Vaughn <brian.david.vaughn@gmail.com> 1526921362 -0700\ncommitter GitHub <noreply@github.com> 1526921362 -0700\n\nPass \"start time\" and \"commit time\" to Profiler callback (#12852)\n\n* Added start time parameter to Profiler onRender callback\r\n* Profiler also captures commit time\r\n* Only init Profiler stateNode if enableProfilerTimer feature flag enabled"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/13003654e79f9fa65ee833afeec86d668f35d31d",
        "html_url": "https://github.com/facebook/react/commit/13003654e79f9fa65ee833afeec86d668f35d31d",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/13003654e79f9fa65ee833afeec86d668f35d31d/comments",
        "author": {
            "login": "bvaughn",
            "id": 29597,
            "node_id": "MDQ6VXNlcjI5NTk3",
            "avatar_url": "https://avatars.githubusercontent.com/u/29597?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bvaughn",
            "html_url": "https://github.com/bvaughn",
            "followers_url": "https://api.github.com/users/bvaughn/followers",
            "following_url": "https://api.github.com/users/bvaughn/following{/other_user}",
            "gists_url": "https://api.github.com/users/bvaughn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bvaughn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bvaughn/subscriptions",
            "organizations_url": "https://api.github.com/users/bvaughn/orgs",
            "repos_url": "https://api.github.com/users/bvaughn/repos",
            "events_url": "https://api.github.com/users/bvaughn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bvaughn/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "12c8a88cd9a6cc7309e5fc566ba5672aab0b78a9",
                "url": "https://api.github.com/repos/facebook/react/commits/12c8a88cd9a6cc7309e5fc566ba5672aab0b78a9",
                "html_url": "https://github.com/facebook/react/commit/12c8a88cd9a6cc7309e5fc566ba5672aab0b78a9"
            }
        ]
    },
    {
        "sha": "b245795de373ca8f4a6c4962b59773e2f1bb2f1d",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6YjI0NTc5NWRlMzczY2E4ZjRhNmM0OTYyYjU5NzczZTJmMWJiMmYxZA==",
        "commit": {
            "author": {
                "name": "Dan Abramov",
                "email": "dan.abramov@gmail.com",
                "date": "2018-05-17T16:14:12Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2018-05-17T16:14:12Z"
            },
            "message": "Re-enable Flow for ReactFiber and fix Flow issues (#12842)\n\n* Lint for untyped imports and enable Flow typing in ReactFiber\r\n\r\n* Re-enable Flow for ReactFiber and fix Flow issues\r\n\r\n* Avoid an invariant in DEV-only code\r\n\r\nI just introduced it, but on a second thought, it's better to keep it as a warning.\r\n\r\n* Address review",
            "tree": {
                "sha": "8835fe9769cb7c74394cb73e508e3ac4eb5c8b3f",
                "url": "https://api.github.com/repos/facebook/react/git/trees/8835fe9769cb7c74394cb73e508e3ac4eb5c8b3f"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/b245795de373ca8f4a6c4962b59773e2f1bb2f1d",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJa/apUCRBK7hj4Ov3rIwAAdHIIALJfht5cmSqFN45bUUBjLqIF\nIAPujSdrrigxuIYMhBpy2W18Axjupvd/DbQIHUYB7pssDy+GWz/CMG+7lY/qNggj\nWZFy3HfdVZzEiDY/ySHDREUDJlvyZR/M0lKpmMGEqITLo2eRnOg6Uelf7jLiTM0o\nl+9ScGXkGLT8S2/yphPhM39O+754/W1O8FtrY3Q3kbGDpZnNvNRwnBBFWjIIVLDG\nylgpR6tUS5KCIk2rg1A/sWIBK2GaP0FPDx4LIzYOKA6YLyVQDc3aIjU8hULGcFYi\n3d0Uem7MStlcV2bD1gCBz601Ih5GH8+6Z6qNiZyMjUy+4rJH9DaHL6zjn3BEkFo=\n=lH28\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 8835fe9769cb7c74394cb73e508e3ac4eb5c8b3f\nparent 7ccb37161ffcbea33d6ede1397098faa567751f3\nauthor Dan Abramov <dan.abramov@gmail.com> 1526573652 +0100\ncommitter GitHub <noreply@github.com> 1526573652 +0100\n\nRe-enable Flow for ReactFiber and fix Flow issues (#12842)\n\n* Lint for untyped imports and enable Flow typing in ReactFiber\r\n\r\n* Re-enable Flow for ReactFiber and fix Flow issues\r\n\r\n* Avoid an invariant in DEV-only code\r\n\r\nI just introduced it, but on a second thought, it's better to keep it as a warning.\r\n\r\n* Address review\r\n"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/b245795de373ca8f4a6c4962b59773e2f1bb2f1d",
        "html_url": "https://github.com/facebook/react/commit/b245795de373ca8f4a6c4962b59773e2f1bb2f1d",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/b245795de373ca8f4a6c4962b59773e2f1bb2f1d/comments",
        "author": {
            "login": "gaearon",
            "id": 810438,
            "node_id": "MDQ6VXNlcjgxMDQzOA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/810438?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gaearon",
            "html_url": "https://github.com/gaearon",
            "followers_url": "https://api.github.com/users/gaearon/followers",
            "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
            "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
            "organizations_url": "https://api.github.com/users/gaearon/orgs",
            "repos_url": "https://api.github.com/users/gaearon/repos",
            "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gaearon/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "7ccb37161ffcbea33d6ede1397098faa567751f3",
                "url": "https://api.github.com/repos/facebook/react/commits/7ccb37161ffcbea33d6ede1397098faa567751f3",
                "html_url": "https://github.com/facebook/react/commit/7ccb37161ffcbea33d6ede1397098faa567751f3"
            }
        ]
    },
    {
        "sha": "9097f3cdf089a34d873f3d349e3bfbed90852fad",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6OTA5N2YzY2RmMDg5YTM0ZDg3M2YzZDM0OWUzYmZiZWQ5MDg1MmZhZA==",
        "commit": {
            "author": {
                "name": "Dan Abramov",
                "email": "dan.abramov@gmail.com",
                "date": "2018-05-15T18:16:29Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2018-05-15T18:16:29Z"
            },
            "message": "Delete React Call/Return experiment (#12820)",
            "tree": {
                "sha": "2e374304f2a6faa8b82ae6d515e0e159b4cb2169",
                "url": "https://api.github.com/repos/facebook/react/git/trees/2e374304f2a6faa8b82ae6d515e0e159b4cb2169"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/9097f3cdf089a34d873f3d349e3bfbed90852fad",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJa+yP9CRBK7hj4Ov3rIwAAdHIIAAkH5NOjNCtUNWvN9/Br7/Lk\nRJ9ptoDCkqU8Ai8RpqiZJGIbI8tRuwAhtpWRW3jhOfnIyE1K7LX0J1boMeNs5UAR\n3Xt0EP3vQlShbDpiUagpP0FkHZj24E1h/GH65PlAWwa7khXzphejCQIrvnhuDBWo\nH1MI8DDSgZWY584BtV5INhd90p2BSxi0NwA4/8nd9bG2L2XmDZ6VQy6tNHnRRL4e\nPYsfKFCBMTUBOShYhB129w48bsJ5uzHKbVyGkHULvwvjRlC7vNCYU/G+BaEgQm5c\ne8jxc7yWE3tFVShFKmgikPhUy8rNh0+IrhOVOl5/0pbz/519DIAakUENPmwo+kI=\n=m8I0\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 2e374304f2a6faa8b82ae6d515e0e159b4cb2169\nparent d758960116b3ea3a3bd3dfe2f297d5e680fe9ff5\nauthor Dan Abramov <dan.abramov@gmail.com> 1526408189 +0100\ncommitter GitHub <noreply@github.com> 1526408189 +0100\n\nDelete React Call/Return experiment (#12820)\n\n"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/9097f3cdf089a34d873f3d349e3bfbed90852fad",
        "html_url": "https://github.com/facebook/react/commit/9097f3cdf089a34d873f3d349e3bfbed90852fad",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/9097f3cdf089a34d873f3d349e3bfbed90852fad/comments",
        "author": {
            "login": "gaearon",
            "id": 810438,
            "node_id": "MDQ6VXNlcjgxMDQzOA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/810438?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gaearon",
            "html_url": "https://github.com/gaearon",
            "followers_url": "https://api.github.com/users/gaearon/followers",
            "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
            "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
            "organizations_url": "https://api.github.com/users/gaearon/orgs",
            "repos_url": "https://api.github.com/users/gaearon/repos",
            "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gaearon/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "d758960116b3ea3a3bd3dfe2f297d5e680fe9ff5",
                "url": "https://api.github.com/repos/facebook/react/commits/d758960116b3ea3a3bd3dfe2f297d5e680fe9ff5",
                "html_url": "https://github.com/facebook/react/commit/d758960116b3ea3a3bd3dfe2f297d5e680fe9ff5"
            }
        ]
    },
    {
        "sha": "6565795377d1d2c79a7708766f1af9e1a87517de",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6NjU2NTc5NTM3N2QxZDJjNzlhNzcwODc2NmYxYWY5ZTFhODc1MTdkZQ==",
        "commit": {
            "author": {
                "name": "Andrew Clark",
                "email": "acdlite@me.com",
                "date": "2018-05-11T01:09:10Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2018-05-11T01:09:10Z"
            },
            "message": "Suspense (#12279)\n\n* Timeout component\r\n\r\nAdds Timeout component. If a promise is thrown from inside a Timeout component,\r\nReact will suspend the in-progress render from committing. When the promise\r\nresolves, React will retry. If the render is suspended for longer than the\r\nmaximum threshold, the Timeout switches to a placeholder state.\r\n\r\nThe timeout threshold is defined as the minimum of:\r\n- The expiration time of the current render\r\n- The `ms` prop given to each Timeout component in the ancestor path of the\r\nthrown promise.\r\n\r\n* Add a test for nested fallbacks\r\n\r\nCo-authored-by: Andrew Clark <acdlite@fb.com>\r\n\r\n* Resume on promise rejection\r\n\r\nReact should resume rendering regardless of whether it resolves\r\nor rejects.\r\n\r\n* Wrap Suspense code in feature flag\r\n\r\n* Children of a Timeout must be strict mode compatible\r\n\r\nAsync is not required for Suspense, but strict mode is.\r\n\r\n* Simplify list of pending work\r\n\r\nSome of this was added with \"soft expiration\" in mind, but now with our revised\r\nmodel for how soft expiration will work, this isn't necessary.\r\n\r\nIt would be nice to remove more of this, but I think the list itself is inherent\r\nbecause we need a way to track the start times, for <Timeout ms={ms} />.\r\n\r\n* Only use the Timeout update queue to store promises, not for state\r\n\r\nIt already worked this way in practice.\r\n\r\n* Wrap more Suspense-only paths in the feature flag\r\n\r\n* Attach promise listener immediately on suspend\r\n\r\nInstead of waiting for commit phase.\r\n\r\n* Infer approximate start time using expiration time\r\n\r\n* Remove list of pending priority levels\r\n\r\nWe can replicate almost all the functionality by tracking just five\r\nseparate levels: the highest/lowest priority pending levels, the\r\nhighest/lowest priority suspended levels, and the lowest pinged level.\r\n\r\nWe lose a bit of granularity, in that if there are multiple levels of\r\npending updates, only the first and last ones are known. But in practice\r\nthis likely isn't a big deal.\r\n\r\nThese heuristics are almost entirely isolated to a single module and\r\ncan be adjusted later, without API changes, if necessary.\r\n\r\nNon-IO-bound work is not affected at all.\r\n\r\n* ReactFiberPendingWork -> ReactFiberPendingPriority\r\n\r\n* Renaming method names from \"pending work\" to \"pending priority\"\r\n\r\n* Get rid of SuspenseThenable module\r\n\r\nIdk why I thought this was neccessary\r\n\r\n* Nits based on Sebastian's feedback\r\n\r\n* More naming nits + comments\r\n\r\n* Add test for hiding a suspended tree to unblock\r\n\r\n* Revert change to expiration time rounding\r\n\r\nThis means you have to account for the start time approximation\r\nheuristic when writing Suspense tests, but that's going to be\r\ntrue regardless.\r\n\r\nWhen updating the tests, I also made a fix related to offscreen\r\npriority. We should never timeout inside a hidden tree.\r\n\r\n* palceholder -> placeholder",
            "tree": {
                "sha": "1b18d52eb890cf8d0f11a2faff867ab5dae833d6",
                "url": "https://api.github.com/repos/facebook/react/git/trees/1b18d52eb890cf8d0f11a2faff867ab5dae833d6"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/6565795377d1d2c79a7708766f1af9e1a87517de",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJa9O02CRBK7hj4Ov3rIwAAdHIIAE3QFMw5czPDjmKQawuPiZzO\nyqya8HvhwXJRmcfQLPcmW7BNQ8Etrj4BBZ8W+WhkdmAIL/8DFrpJ+ar0ihlqcD6n\nN13h6dug067yyEIwI8AmC0k07O/AhB55jzQ6m1gjcPw6/OwEURlQXl/DhWI/ZpuW\nF5LL+IQnQ8PWUd+wSc/RTGll2rKSwAOKiummUw9Sx/MUEnfS1z3wsv8XysGJ2xU1\nRbkNvdzHZjFB9YZty0U+FCa5oaxqri6aQUDp/NCj/LN+wA1s36DwFx4STLHPZezv\nVhOMjItqLGogwWFVCXMZfzXI04zMChjDWij4lY5Nf3npIvuYHTkAAB4wlTu71vU=\n=Qo6A\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 1b18d52eb890cf8d0f11a2faff867ab5dae833d6\nparent 42a126237507a2038e9dbd7222a94b0debb9a69a\nauthor Andrew Clark <acdlite@me.com> 1526000950 -0700\ncommitter GitHub <noreply@github.com> 1526000950 -0700\n\nSuspense (#12279)\n\n* Timeout component\r\n\r\nAdds Timeout component. If a promise is thrown from inside a Timeout component,\r\nReact will suspend the in-progress render from committing. When the promise\r\nresolves, React will retry. If the render is suspended for longer than the\r\nmaximum threshold, the Timeout switches to a placeholder state.\r\n\r\nThe timeout threshold is defined as the minimum of:\r\n- The expiration time of the current render\r\n- The `ms` prop given to each Timeout component in the ancestor path of the\r\nthrown promise.\r\n\r\n* Add a test for nested fallbacks\r\n\r\nCo-authored-by: Andrew Clark <acdlite@fb.com>\r\n\r\n* Resume on promise rejection\r\n\r\nReact should resume rendering regardless of whether it resolves\r\nor rejects.\r\n\r\n* Wrap Suspense code in feature flag\r\n\r\n* Children of a Timeout must be strict mode compatible\r\n\r\nAsync is not required for Suspense, but strict mode is.\r\n\r\n* Simplify list of pending work\r\n\r\nSome of this was added with \"soft expiration\" in mind, but now with our revised\r\nmodel for how soft expiration will work, this isn't necessary.\r\n\r\nIt would be nice to remove more of this, but I think the list itself is inherent\r\nbecause we need a way to track the start times, for <Timeout ms={ms} />.\r\n\r\n* Only use the Timeout update queue to store promises, not for state\r\n\r\nIt already worked this way in practice.\r\n\r\n* Wrap more Suspense-only paths in the feature flag\r\n\r\n* Attach promise listener immediately on suspend\r\n\r\nInstead of waiting for commit phase.\r\n\r\n* Infer approximate start time using expiration time\r\n\r\n* Remove list of pending priority levels\r\n\r\nWe can replicate almost all the functionality by tracking just five\r\nseparate levels: the highest/lowest priority pending levels, the\r\nhighest/lowest priority suspended levels, and the lowest pinged level.\r\n\r\nWe lose a bit of granularity, in that if there are multiple levels of\r\npending updates, only the first and last ones are known. But in practice\r\nthis likely isn't a big deal.\r\n\r\nThese heuristics are almost entirely isolated to a single module and\r\ncan be adjusted later, without API changes, if necessary.\r\n\r\nNon-IO-bound work is not affected at all.\r\n\r\n* ReactFiberPendingWork -> ReactFiberPendingPriority\r\n\r\n* Renaming method names from \"pending work\" to \"pending priority\"\r\n\r\n* Get rid of SuspenseThenable module\r\n\r\nIdk why I thought this was neccessary\r\n\r\n* Nits based on Sebastian's feedback\r\n\r\n* More naming nits + comments\r\n\r\n* Add test for hiding a suspended tree to unblock\r\n\r\n* Revert change to expiration time rounding\r\n\r\nThis means you have to account for the start time approximation\r\nheuristic when writing Suspense tests, but that's going to be\r\ntrue regardless.\r\n\r\nWhen updating the tests, I also made a fix related to offscreen\r\npriority. We should never timeout inside a hidden tree.\r\n\r\n* palceholder -> placeholder\r\n"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/6565795377d1d2c79a7708766f1af9e1a87517de",
        "html_url": "https://github.com/facebook/react/commit/6565795377d1d2c79a7708766f1af9e1a87517de",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/6565795377d1d2c79a7708766f1af9e1a87517de/comments",
        "author": {
            "login": "acdlite",
            "id": 3624098,
            "node_id": "MDQ6VXNlcjM2MjQwOTg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3624098?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/acdlite",
            "html_url": "https://github.com/acdlite",
            "followers_url": "https://api.github.com/users/acdlite/followers",
            "following_url": "https://api.github.com/users/acdlite/following{/other_user}",
            "gists_url": "https://api.github.com/users/acdlite/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/acdlite/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/acdlite/subscriptions",
            "organizations_url": "https://api.github.com/users/acdlite/orgs",
            "repos_url": "https://api.github.com/users/acdlite/repos",
            "events_url": "https://api.github.com/users/acdlite/events{/privacy}",
            "received_events_url": "https://api.github.com/users/acdlite/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "42a126237507a2038e9dbd7222a94b0debb9a69a",
                "url": "https://api.github.com/repos/facebook/react/commits/42a126237507a2038e9dbd7222a94b0debb9a69a",
                "html_url": "https://github.com/facebook/react/commit/42a126237507a2038e9dbd7222a94b0debb9a69a"
            }
        ]
    },
    {
        "sha": "fc3777b1fe295fd2661f1974f5587d214791f04b",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6ZmMzNzc3YjFmZTI5NWZkMjY2MWYxOTc0ZjU1ODdkMjE0NzkxZjA0Yg==",
        "commit": {
            "author": {
                "name": "Brian Vaughn",
                "email": "brian.david.vaughn@gmail.com",
                "date": "2018-05-10T22:25:32Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2018-05-10T22:25:32Z"
            },
            "message": "Add Profiler component for collecting new render timing info (#12745)\n\nAdd a new component type, Profiler, that can be used to collect new render time metrics. Since this is a new, experimental API, it will be exported as React.unstable_Profiler initially.\r\n\r\nMost of the functionality for this component has been added behind a feature flag, enableProfileModeMetrics. When the feature flag is disabled, the component will just render its children with no additional behavior. When the flag is enabled, React will also collect timing information and pass it to the onRender function (as described below).",
            "tree": {
                "sha": "5383b231d832cb781d5da850170e95f14c57ed03",
                "url": "https://api.github.com/repos/facebook/react/git/trees/5383b231d832cb781d5da850170e95f14c57ed03"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/fc3777b1fe295fd2661f1974f5587d214791f04b",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJa9MbcCRBK7hj4Ov3rIwAAdHIIAIo/ZQBunwThPMafc47b1WnV\n2cBOQBMqc4J2i8KNjgEHgKzI5J/4BU/rxGCrpcOhChx5/ALEdoscrasPwgZQXuBS\nGVCQLdEixRUP6BFkoFIqpS4W3oLs76rbTOLzqY8uYgmj0LMLaN0gS8H4FbgCALPp\nKCdXKmvyVG25fYU0maSqQCFvJ+gHbsBncAN9LK8/weJZhYqpQuxnKn7ImqFiHQYD\no9kZwjtC64pFwuHmQegsdY+FtubVyjgwRAJg+Qmuez21SgCHEOM8Xk9M/xZTxWMf\n0o7qOvQqQBUMCgdn9SlrgKfFXzyVpi6tpAhBtlC72CL1hqOrzIWmJS9U44/8r5w=\n=VgBQ\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 5383b231d832cb781d5da850170e95f14c57ed03\nparent a9abd27e4f5aa1e68bd6035be901299327279ee2\nauthor Brian Vaughn <brian.david.vaughn@gmail.com> 1525991132 -0700\ncommitter GitHub <noreply@github.com> 1525991132 -0700\n\nAdd Profiler component for collecting new render timing info (#12745)\n\nAdd a new component type, Profiler, that can be used to collect new render time metrics. Since this is a new, experimental API, it will be exported as React.unstable_Profiler initially.\r\n\r\nMost of the functionality for this component has been added behind a feature flag, enableProfileModeMetrics. When the feature flag is disabled, the component will just render its children with no additional behavior. When the flag is enabled, React will also collect timing information and pass it to the onRender function (as described below)."
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/fc3777b1fe295fd2661f1974f5587d214791f04b",
        "html_url": "https://github.com/facebook/react/commit/fc3777b1fe295fd2661f1974f5587d214791f04b",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/fc3777b1fe295fd2661f1974f5587d214791f04b/comments",
        "author": {
            "login": "bvaughn",
            "id": 29597,
            "node_id": "MDQ6VXNlcjI5NTk3",
            "avatar_url": "https://avatars.githubusercontent.com/u/29597?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bvaughn",
            "html_url": "https://github.com/bvaughn",
            "followers_url": "https://api.github.com/users/bvaughn/followers",
            "following_url": "https://api.github.com/users/bvaughn/following{/other_user}",
            "gists_url": "https://api.github.com/users/bvaughn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bvaughn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bvaughn/subscriptions",
            "organizations_url": "https://api.github.com/users/bvaughn/orgs",
            "repos_url": "https://api.github.com/users/bvaughn/repos",
            "events_url": "https://api.github.com/users/bvaughn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bvaughn/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "a9abd27e4f5aa1e68bd6035be901299327279ee2",
                "url": "https://api.github.com/repos/facebook/react/commits/a9abd27e4f5aa1e68bd6035be901299327279ee2",
                "html_url": "https://github.com/facebook/react/commit/a9abd27e4f5aa1e68bd6035be901299327279ee2"
            }
        ]
    },
    {
        "sha": "b548b3cd640dbd515f5d67dafc0216bb7ee0d796",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6YjU0OGIzY2Q2NDBkYmQ1MTVmNWQ2N2RhZmMwMjE2YmI3ZWUwZDc5Ng==",
        "commit": {
            "author": {
                "name": "Andrew Clark",
                "email": "acdlite@me.com",
                "date": "2018-04-23T06:05:28Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2018-04-23T06:05:28Z"
            },
            "message": "Decouple update queue from Fiber type (#12600)\n\n* Decouple update queue from Fiber type\r\n\r\nThe update queue is in need of a refactor. Recent bugfixes (#12528) have\r\nexposed some flaws in how it's modeled. Upcoming features like Suspense\r\nand [redacted] also rely on the update queue in ways that weren't\r\nanticipated in the original design.\r\n\r\nMajor changes:\r\n\r\n- Instead of boolean flags for `isReplace` and `isForceUpdate`, updates\r\nhave a `tag` field (like Fiber). This lowers the cost for adding new\r\ntypes of updates.\r\n- Render phase updates are special cased. Updates scheduled during\r\nthe render phase are dropped if the work-in-progress does not commit.\r\nThis is used for `getDerivedStateFrom{Props,Catch}`.\r\n- `callbackList` has been replaced with a generic effect list. Aside\r\nfrom callbacks, this is also used for `componentDidCatch`.\r\n\r\n* Remove first class UpdateQueue types and use closures instead\r\n\r\nI tried to avoid this at first, since we avoid it everywhere else in the Fiber\r\ncodebase, but since updates are not in a hot path, the trade off with file size\r\nseems worth it.\r\n\r\n* Store captured errors on a separate part of the update queue\r\n\r\nThis way they can be reused independently of updates like\r\ngetDerivedStateFromProps. This will be important for resuming.\r\n\r\n* Revert back to storing hasForceUpdate on the update queue\r\n\r\nInstead of using the effect tag. Ideally, this would be part of the\r\nreturn type of processUpdateQueue.\r\n\r\n* Rename UpdateQueue effect type back to Callback\r\n\r\nI don't love this name either, but it's less confusing than UpdateQueue\r\nI suppose. Conceptually, this is usually a callback: setState callbacks,\r\ncomponentDidCatch. The only case that feels a bit weird is Timeouts,\r\nwhich use this effect to attach a promise listener. I guess that kinda\r\nfits, too.\r\n\r\n* Call getDerivedStateFromProps every render, even if props did not change\r\n\r\nRather than enqueue a new setState updater for every props change, we\r\ncan skip the update queue entirely and merge the result into state at\r\nthe end. This makes more sense, since \"receiving props\" is not an event\r\nthat should be observed. It's still a bit weird, since eventually we do\r\npersist the derived state (in other words, it accumulates).\r\n\r\n* Store captured effects on separate list from \"own\" effects (callbacks)\r\n\r\nFor resuming, we need the ability to discard the \"own\" effects while\r\nreusing the captured effects.\r\n\r\n* Optimize for class components\r\n\r\nChange `process` and `callback` to match the expected payload types\r\nfor class components. I had intended for the update queue to be reusable\r\nfor both class components and a future React API, but we'll likely have\r\nto fork anyway.\r\n\r\n* Only double-invoke render phase lifecycles functions in DEV\r\n\r\n* Use global state to track currently processing queue in DEV",
            "tree": {
                "sha": "c52ac8b95df303972a01397d42974166f3b4a14f",
                "url": "https://api.github.com/repos/facebook/react/git/trees/c52ac8b95df303972a01397d42974166f3b4a14f"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/b548b3cd640dbd515f5d67dafc0216bb7ee0d796",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJa3XeoCRBK7hj4Ov3rIwAAdHIIADztN/BJ+ErhjfB38SHH/d63\ngYj0G8MCoMiCHVlhejlu56EK3Awvv/8MLwajpc1OI74XVaNQETJ70+hec1IXXyAR\nIOYGE2V03blLK97aJNj2fXS4FAPs0vcWfVYRe0c/PxxoyX+cRKeBAH4cXIOpYMpS\nGMFzxRLm5ZwkFnOZtXq8lEAGE68tjs3JzrJLJSB/bWHGR0fy3eUcNLQlWpEoiMY3\nC3zpyQvvwhf8U2KPwCuLTqZG8uxr4F1+/CLmo5cG7RcbPRjGpblVp4NfbNpFuDQr\nTdP6dJ2xGWLvixRbrHyIp5ctyLGg6PBwttTyXlDJgtBJrjxecVyV5P0+yHyH924=\n=Rcpx\n-----END PGP SIGNATURE-----\n",
                "payload": "tree c52ac8b95df303972a01397d42974166f3b4a14f\nparent 5dcf93d146ccde90af2c442d6cb32b29efddb46b\nauthor Andrew Clark <acdlite@me.com> 1524463528 -0700\ncommitter GitHub <noreply@github.com> 1524463528 -0700\n\nDecouple update queue from Fiber type (#12600)\n\n* Decouple update queue from Fiber type\r\n\r\nThe update queue is in need of a refactor. Recent bugfixes (#12528) have\r\nexposed some flaws in how it's modeled. Upcoming features like Suspense\r\nand [redacted] also rely on the update queue in ways that weren't\r\nanticipated in the original design.\r\n\r\nMajor changes:\r\n\r\n- Instead of boolean flags for `isReplace` and `isForceUpdate`, updates\r\nhave a `tag` field (like Fiber). This lowers the cost for adding new\r\ntypes of updates.\r\n- Render phase updates are special cased. Updates scheduled during\r\nthe render phase are dropped if the work-in-progress does not commit.\r\nThis is used for `getDerivedStateFrom{Props,Catch}`.\r\n- `callbackList` has been replaced with a generic effect list. Aside\r\nfrom callbacks, this is also used for `componentDidCatch`.\r\n\r\n* Remove first class UpdateQueue types and use closures instead\r\n\r\nI tried to avoid this at first, since we avoid it everywhere else in the Fiber\r\ncodebase, but since updates are not in a hot path, the trade off with file size\r\nseems worth it.\r\n\r\n* Store captured errors on a separate part of the update queue\r\n\r\nThis way they can be reused independently of updates like\r\ngetDerivedStateFromProps. This will be important for resuming.\r\n\r\n* Revert back to storing hasForceUpdate on the update queue\r\n\r\nInstead of using the effect tag. Ideally, this would be part of the\r\nreturn type of processUpdateQueue.\r\n\r\n* Rename UpdateQueue effect type back to Callback\r\n\r\nI don't love this name either, but it's less confusing than UpdateQueue\r\nI suppose. Conceptually, this is usually a callback: setState callbacks,\r\ncomponentDidCatch. The only case that feels a bit weird is Timeouts,\r\nwhich use this effect to attach a promise listener. I guess that kinda\r\nfits, too.\r\n\r\n* Call getDerivedStateFromProps every render, even if props did not change\r\n\r\nRather than enqueue a new setState updater for every props change, we\r\ncan skip the update queue entirely and merge the result into state at\r\nthe end. This makes more sense, since \"receiving props\" is not an event\r\nthat should be observed. It's still a bit weird, since eventually we do\r\npersist the derived state (in other words, it accumulates).\r\n\r\n* Store captured effects on separate list from \"own\" effects (callbacks)\r\n\r\nFor resuming, we need the ability to discard the \"own\" effects while\r\nreusing the captured effects.\r\n\r\n* Optimize for class components\r\n\r\nChange `process` and `callback` to match the expected payload types\r\nfor class components. I had intended for the update queue to be reusable\r\nfor both class components and a future React API, but we'll likely have\r\nto fork anyway.\r\n\r\n* Only double-invoke render phase lifecycles functions in DEV\r\n\r\n* Use global state to track currently processing queue in DEV\r\n"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/b548b3cd640dbd515f5d67dafc0216bb7ee0d796",
        "html_url": "https://github.com/facebook/react/commit/b548b3cd640dbd515f5d67dafc0216bb7ee0d796",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/b548b3cd640dbd515f5d67dafc0216bb7ee0d796/comments",
        "author": {
            "login": "acdlite",
            "id": 3624098,
            "node_id": "MDQ6VXNlcjM2MjQwOTg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3624098?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/acdlite",
            "html_url": "https://github.com/acdlite",
            "followers_url": "https://api.github.com/users/acdlite/followers",
            "following_url": "https://api.github.com/users/acdlite/following{/other_user}",
            "gists_url": "https://api.github.com/users/acdlite/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/acdlite/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/acdlite/subscriptions",
            "organizations_url": "https://api.github.com/users/acdlite/orgs",
            "repos_url": "https://api.github.com/users/acdlite/repos",
            "events_url": "https://api.github.com/users/acdlite/events{/privacy}",
            "received_events_url": "https://api.github.com/users/acdlite/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "5dcf93d146ccde90af2c442d6cb32b29efddb46b",
                "url": "https://api.github.com/repos/facebook/react/commits/5dcf93d146ccde90af2c442d6cb32b29efddb46b",
                "html_url": "https://github.com/facebook/react/commit/5dcf93d146ccde90af2c442d6cb32b29efddb46b"
            }
        ]
    },
    {
        "sha": "59dac9d7a6a2f0b66003cf717d71b5587265423f",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6NTlkYWM5ZDdhNmEyZjBiNjYwMDNjZjcxN2Q3MWI1NTg3MjY1NDIzZg==",
        "commit": {
            "author": {
                "name": "Dan Abramov",
                "email": "dan.abramov@gmail.com",
                "date": "2018-04-01T18:10:37Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2018-04-01T18:10:37Z"
            },
            "message": "Fix DEV performance regression by avoiding Object.assign on Fibers (#12510)\n\n* Fix DEV performance regression by avoiding Object.assign on Fibers\r\n\r\n* Reduce allocations in hot path by reusing the stash\r\n\r\nSince performUnitOfWork() is not reentrant, it should be safe to reuse the same stash every time instead of creating a new object.",
            "tree": {
                "sha": "43772e333638c44e7f6fa40902d9a176e5f12a86",
                "url": "https://api.github.com/repos/facebook/react/git/trees/43772e333638c44e7f6fa40902d9a176e5f12a86"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/59dac9d7a6a2f0b66003cf717d71b5587265423f",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJawSCdCRBK7hj4Ov3rIwAAdHIIAKd/TCjbLpfxqDBteLMxQWOx\n/7Stz3TNcjDzcPxOz8kPHSRcb5UObWt3LjVc18+MRmHjjZVYkF5+648PrgjtQaW4\nHqeINQxVMlz2K59vpzNdPfeE7Pvo2glwCnU+X0eEqi/WiwKaEFEveUQ8Th5WOjyT\nVGfrvoCu2nIsYSkTO7YcGnnjcXt2SqVlpdga+yPDVWM1rcx4Fwi9iDZT6GD+tEIt\nh5zDi+7fjmMVT/J5VBSkm8KyTdlpsAvrKPWkri3wmPdeFPAL2ZxdC4LjgmbFF2QP\nsVpnPgRWOIpnh6M+xVsbLEoDR5YJYg99RfYaAqWEdkQnMbbxkvQg5OcuerXtlQ4=\n=Vqjq\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 43772e333638c44e7f6fa40902d9a176e5f12a86\nparent 0c80977061ba576cee9ae0891245be233929d2ed\nauthor Dan Abramov <dan.abramov@gmail.com> 1522606237 +0100\ncommitter GitHub <noreply@github.com> 1522606237 +0100\n\nFix DEV performance regression by avoiding Object.assign on Fibers (#12510)\n\n* Fix DEV performance regression by avoiding Object.assign on Fibers\r\n\r\n* Reduce allocations in hot path by reusing the stash\r\n\r\nSince performUnitOfWork() is not reentrant, it should be safe to reuse the same stash every time instead of creating a new object.\r\n"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/59dac9d7a6a2f0b66003cf717d71b5587265423f",
        "html_url": "https://github.com/facebook/react/commit/59dac9d7a6a2f0b66003cf717d71b5587265423f",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/59dac9d7a6a2f0b66003cf717d71b5587265423f/comments",
        "author": {
            "login": "gaearon",
            "id": 810438,
            "node_id": "MDQ6VXNlcjgxMDQzOA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/810438?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gaearon",
            "html_url": "https://github.com/gaearon",
            "followers_url": "https://api.github.com/users/gaearon/followers",
            "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
            "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
            "organizations_url": "https://api.github.com/users/gaearon/orgs",
            "repos_url": "https://api.github.com/users/gaearon/repos",
            "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gaearon/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "0c80977061ba576cee9ae0891245be233929d2ed",
                "url": "https://api.github.com/repos/facebook/react/commits/0c80977061ba576cee9ae0891245be233929d2ed",
                "html_url": "https://github.com/facebook/react/commit/0c80977061ba576cee9ae0891245be233929d2ed"
            }
        ]
    },
    {
        "sha": "bc70441c8b3fa85338283af3eeb47b5d15e9dbfe",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6YmM3MDQ0MWM4YjNmYTg1MzM4MjgzYWYzZWViNDdiNWQxNWU5ZGJmZQ==",
        "commit": {
            "author": {
                "name": "Brian Vaughn",
                "email": "brian.david.vaughn@gmail.com",
                "date": "2018-03-14T20:07:58Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2018-03-14T20:07:58Z"
            },
            "message": "RFC #30: React.forwardRef implementation (#12346)\n\nAdded React.forwardRef support to react-reconciler based renders and the SSR partial renderer.",
            "tree": {
                "sha": "6e3b5f6bc4d7d2a4797774915703afe9035cbd1f",
                "url": "https://api.github.com/repos/facebook/react/git/trees/6e3b5f6bc4d7d2a4797774915703afe9035cbd1f"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/bc70441c8b3fa85338283af3eeb47b5d15e9dbfe",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJaqYEeCRBK7hj4Ov3rIwAAdHIIAIIyoF4TObT4G0xJvxd/YWWs\njErtCYRPgA3LyleTnozFz6IN60+OBCbV0K6Al7yf1nD3AGHHwobOPr1q6V8Bwb1X\n29l/Adp77DKYfDXjLSoHoIthVL+dTys+r+5JrixKMbkERLtTSk1lHV2oxYzD7e6c\ntFY0mA7Oe9l+FtIchady40AV9oYDbbv6nquyuiRbecIcfWfHtulKaaYr+yKLWx93\nOixlm0pstJosoT50l1n5XQcudfDRVtgA1e1kc5NJc4VK2TB2BPcoRFajMtunSdKE\n9MhA9MMuGq0tR+SJhuw3X6yhmc1QsuXZK8QTxNESxh67tT6k10xlrYqE9KuP7H4=\n=2OoE\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 6e3b5f6bc4d7d2a4797774915703afe9035cbd1f\nparent 77196100b833cca83a928caa2bd02482665546c2\nauthor Brian Vaughn <brian.david.vaughn@gmail.com> 1521058078 -0700\ncommitter GitHub <noreply@github.com> 1521058078 -0700\n\nRFC #30: React.forwardRef implementation (#12346)\n\nAdded React.forwardRef support to react-reconciler based renders and the SSR partial renderer."
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/bc70441c8b3fa85338283af3eeb47b5d15e9dbfe",
        "html_url": "https://github.com/facebook/react/commit/bc70441c8b3fa85338283af3eeb47b5d15e9dbfe",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/bc70441c8b3fa85338283af3eeb47b5d15e9dbfe/comments",
        "author": {
            "login": "bvaughn",
            "id": 29597,
            "node_id": "MDQ6VXNlcjI5NTk3",
            "avatar_url": "https://avatars.githubusercontent.com/u/29597?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bvaughn",
            "html_url": "https://github.com/bvaughn",
            "followers_url": "https://api.github.com/users/bvaughn/followers",
            "following_url": "https://api.github.com/users/bvaughn/following{/other_user}",
            "gists_url": "https://api.github.com/users/bvaughn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bvaughn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bvaughn/subscriptions",
            "organizations_url": "https://api.github.com/users/bvaughn/orgs",
            "repos_url": "https://api.github.com/users/bvaughn/repos",
            "events_url": "https://api.github.com/users/bvaughn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bvaughn/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "77196100b833cca83a928caa2bd02482665546c2",
                "url": "https://api.github.com/repos/facebook/react/commits/77196100b833cca83a928caa2bd02482665546c2",
                "html_url": "https://github.com/facebook/react/commit/77196100b833cca83a928caa2bd02482665546c2"
            }
        ]
    },
    {
        "sha": "049fe7d6fd7984c4a7205103d3aafc46bceca1f6",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6MDQ5ZmU3ZDZmZDc5ODRjNGE3MjA1MTAzZDNhYWZjNDZiY2VjYTFmNg==",
        "commit": {
            "author": {
                "name": "Kiho \u00b7 Cham",
                "email": "monkindey@163.com",
                "date": "2018-03-04T03:24:33Z"
            },
            "committer": {
                "name": "Nathan Hunzaker",
                "email": "nate.hunzaker@gmail.com",
                "date": "2018-03-04T03:24:33Z"
            },
            "message": "annotation typo (#12272)\n\n* comment typo\r\n\r\n* change after then to after that",
            "tree": {
                "sha": "dcd1a5304da335a46c5fe62a5b3c97fbea363456",
                "url": "https://api.github.com/repos/facebook/react/git/trees/dcd1a5304da335a46c5fe62a5b3c97fbea363456"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/049fe7d6fd7984c4a7205103d3aafc46bceca1f6",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/049fe7d6fd7984c4a7205103d3aafc46bceca1f6",
        "html_url": "https://github.com/facebook/react/commit/049fe7d6fd7984c4a7205103d3aafc46bceca1f6",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/049fe7d6fd7984c4a7205103d3aafc46bceca1f6/comments",
        "author": {
            "login": "monkindey",
            "id": 6913898,
            "node_id": "MDQ6VXNlcjY5MTM4OTg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6913898?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/monkindey",
            "html_url": "https://github.com/monkindey",
            "followers_url": "https://api.github.com/users/monkindey/followers",
            "following_url": "https://api.github.com/users/monkindey/following{/other_user}",
            "gists_url": "https://api.github.com/users/monkindey/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/monkindey/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/monkindey/subscriptions",
            "organizations_url": "https://api.github.com/users/monkindey/orgs",
            "repos_url": "https://api.github.com/users/monkindey/repos",
            "events_url": "https://api.github.com/users/monkindey/events{/privacy}",
            "received_events_url": "https://api.github.com/users/monkindey/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "nhunzaker",
            "id": 590904,
            "node_id": "MDQ6VXNlcjU5MDkwNA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/590904?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nhunzaker",
            "html_url": "https://github.com/nhunzaker",
            "followers_url": "https://api.github.com/users/nhunzaker/followers",
            "following_url": "https://api.github.com/users/nhunzaker/following{/other_user}",
            "gists_url": "https://api.github.com/users/nhunzaker/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nhunzaker/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nhunzaker/subscriptions",
            "organizations_url": "https://api.github.com/users/nhunzaker/orgs",
            "repos_url": "https://api.github.com/users/nhunzaker/repos",
            "events_url": "https://api.github.com/users/nhunzaker/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nhunzaker/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "1d220ce0b7bc7f4843cf90f1fe8933b9fcba9deb",
                "url": "https://api.github.com/repos/facebook/react/commits/1d220ce0b7bc7f4843cf90f1fe8933b9fcba9deb",
                "html_url": "https://github.com/facebook/react/commit/1d220ce0b7bc7f4843cf90f1fe8933b9fcba9deb"
            }
        ]
    },
    {
        "sha": "8dc8f88d5ae9fb96934ba43e3842b5dcf4074afd",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6OGRjOGY4OGQ1YWU5ZmI5NjkzNGJhNDNlMzg0MmI1ZGNmNDA3NGFmZA==",
        "commit": {
            "author": {
                "name": "Dominic Gannaway",
                "email": "trueadm@users.noreply.github.com",
                "date": "2018-02-06T20:19:49Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2018-02-06T20:19:49Z"
            },
            "message": "Adds createRef() as per RFC (#12162)\n\n* Adds createRef() as per RFC",
            "tree": {
                "sha": "b97a0535a32b7f541b1ac092f7d7dacbd8e8771f",
                "url": "https://api.github.com/repos/facebook/react/git/trees/b97a0535a32b7f541b1ac092f7d7dacbd8e8771f"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/8dc8f88d5ae9fb96934ba43e3842b5dcf4074afd",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJaeg3lCRBK7hj4Ov3rIwAAdHIIADIu78pK785nng5SEfZtDEPj\nuVgLH2hZCYeeLim8Xr3rNkNuI8ib18ihW/KlVttSEqoEWDsdVtNRZYtTcgyFEb2p\n8QjblZenQEdXx+LqCbTRzGJT+4HEMvbVuHVumT7YS/pq/8KSPXqmGBSNIUBAGfLE\nVwP7gwoK5LXrqW54ibXhzNKy81QvVk03TBV+RiRy4XNNNslUIAGx1hZ/siEMMMjM\nihHDGy0s6MSAsMOkKc47qVHPFkn09iy7xjs00eHipJKt1ppbHFlHiuXA4avhfjoK\nwPwEhbbpvvFnEw/ZJoNbTAzW0OUEbH39ArxHUBB9Imb7uWpxqwXDsHjHoVhGgY4=\n=ZimI\n-----END PGP SIGNATURE-----\n",
                "payload": "tree b97a0535a32b7f541b1ac092f7d7dacbd8e8771f\nparent 3d8f465d99ece19238ccb561cdb157d2d676dda4\nauthor Dominic Gannaway <trueadm@users.noreply.github.com> 1517948389 +0000\ncommitter GitHub <noreply@github.com> 1517948389 +0000\n\nAdds createRef() as per RFC (#12162)\n\n* Adds createRef() as per RFC\r\n"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/8dc8f88d5ae9fb96934ba43e3842b5dcf4074afd",
        "html_url": "https://github.com/facebook/react/commit/8dc8f88d5ae9fb96934ba43e3842b5dcf4074afd",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/8dc8f88d5ae9fb96934ba43e3842b5dcf4074afd/comments",
        "author": {
            "login": "trueadm",
            "id": 1519870,
            "node_id": "MDQ6VXNlcjE1MTk4NzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1519870?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/trueadm",
            "html_url": "https://github.com/trueadm",
            "followers_url": "https://api.github.com/users/trueadm/followers",
            "following_url": "https://api.github.com/users/trueadm/following{/other_user}",
            "gists_url": "https://api.github.com/users/trueadm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/trueadm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/trueadm/subscriptions",
            "organizations_url": "https://api.github.com/users/trueadm/orgs",
            "repos_url": "https://api.github.com/users/trueadm/repos",
            "events_url": "https://api.github.com/users/trueadm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/trueadm/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "3d8f465d99ece19238ccb561cdb157d2d676dda4",
                "url": "https://api.github.com/repos/facebook/react/commits/3d8f465d99ece19238ccb561cdb157d2d676dda4",
                "html_url": "https://github.com/facebook/react/commit/3d8f465d99ece19238ccb561cdb157d2d676dda4"
            }
        ]
    },
    {
        "sha": "9ea55516e674c2de63b9f7829e3c459f3cb3cf78",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6OWVhNTU1MTZlNjc0YzJkZTYzYjlmNzgyOWUzYzQ1OWYzY2IzY2Y3OA==",
        "commit": {
            "author": {
                "name": "Andrew Clark",
                "email": "acdlite@me.com",
                "date": "2018-01-30T03:11:59Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2018-01-30T03:11:59Z"
            },
            "message": "Replace unstable_AsyncComponent with unstable_AsyncMode (#12117)\n\n* Replace unstable_AsyncComponent with Unstable_AsyncMode\r\n\r\nMirrors the StrictMode API and uses the new Mode type of work.\r\n\r\n* internalContextTag -> mode\r\n\r\nChange this now that we have a better name\r\n\r\n* Unstable_ -> unstable_",
            "tree": {
                "sha": "8746881f95bc148b06a36c512de74a5c1c731efc",
                "url": "https://api.github.com/repos/facebook/react/git/trees/8746881f95bc148b06a36c512de74a5c1c731efc"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/9ea55516e674c2de63b9f7829e3c459f3cb3cf78",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJab+J/CRBK7hj4Ov3rIwAAdHIIABg7Du55A+O27R4gIzifsnVh\nq+pnxnYXLONNsiS+p5KJ05ZljnVbxOwEizYfHrIvZpH/2DWJEsQTjuTIbGzt1sVv\nctYiaX3Nk5WXnruiY37UCCNHwcaMok8GgP+Od/IrXlVAUeCLJ4Hl1e2uLYAgu6nm\nbLPg/D+GHJ+Lcey39y8W/TQuaZHpsoRfB+KV32ubv8ZRrsgA5cITEWz2rm6BKXuz\nVHT7MHGhfeAevwycah2iBcLte3+lGoZjvT7YXS8SIyEKjGncishxn9vLcOGwlVqy\n7GiG90IllvO816Nwm7hWnnqcY74Z+4oSpKCp5B4XbAQ+rICn4ZLdtnMK7716Irc=\n=jmzn\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 8746881f95bc148b06a36c512de74a5c1c731efc\nparent d27b45131dc3952feeba8549dc747b8dc77a0280\nauthor Andrew Clark <acdlite@me.com> 1517281919 -0800\ncommitter GitHub <noreply@github.com> 1517281919 -0800\n\nReplace unstable_AsyncComponent with unstable_AsyncMode (#12117)\n\n* Replace unstable_AsyncComponent with Unstable_AsyncMode\r\n\r\nMirrors the StrictMode API and uses the new Mode type of work.\r\n\r\n* internalContextTag -> mode\r\n\r\nChange this now that we have a better name\r\n\r\n* Unstable_ -> unstable_\r\n"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/9ea55516e674c2de63b9f7829e3c459f3cb3cf78",
        "html_url": "https://github.com/facebook/react/commit/9ea55516e674c2de63b9f7829e3c459f3cb3cf78",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/9ea55516e674c2de63b9f7829e3c459f3cb3cf78/comments",
        "author": {
            "login": "acdlite",
            "id": 3624098,
            "node_id": "MDQ6VXNlcjM2MjQwOTg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3624098?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/acdlite",
            "html_url": "https://github.com/acdlite",
            "followers_url": "https://api.github.com/users/acdlite/followers",
            "following_url": "https://api.github.com/users/acdlite/following{/other_user}",
            "gists_url": "https://api.github.com/users/acdlite/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/acdlite/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/acdlite/subscriptions",
            "organizations_url": "https://api.github.com/users/acdlite/orgs",
            "repos_url": "https://api.github.com/users/acdlite/repos",
            "events_url": "https://api.github.com/users/acdlite/events{/privacy}",
            "received_events_url": "https://api.github.com/users/acdlite/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "d27b45131dc3952feeba8549dc747b8dc77a0280",
                "url": "https://api.github.com/repos/facebook/react/commits/d27b45131dc3952feeba8549dc747b8dc77a0280",
                "html_url": "https://github.com/facebook/react/commit/d27b45131dc3952feeba8549dc747b8dc77a0280"
            }
        ]
    },
    {
        "sha": "87ae211ccd8d61796cfdef138d1e12fb7a74f85d",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6ODdhZTIxMWNjZDhkNjE3OTZjZmRlZjEzOGQxZTEyZmI3YTc0Zjg1ZA==",
        "commit": {
            "author": {
                "name": "Andrew Clark",
                "email": "acdlite@me.com",
                "date": "2018-01-25T03:36:22Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2018-01-25T03:36:22Z"
            },
            "message": "New context API (#11818)\n\n* New context API\r\n\r\nIntroduces a declarative context API that propagates updates even when\r\nshouldComponentUpdate returns false.\r\n\r\n* Fuzz tester for context\r\n\r\n* Use ReactElement for provider and consumer children\r\n\r\n* Unify more branches in createFiberFromElement\r\n\r\n* Compare context values using Object.is\r\n\r\nSame semantics as PureComponent/shallowEqual.\r\n\r\n* Add support for Provider and Consumer to server-side renderer\r\n\r\n* Store providers on global stack\r\n\r\nRather than using a linked list stored on the context type. The global\r\nstack can be reset in case of an interruption or error, whereas with the\r\nlinked list implementation, you'd need to keep track of every\r\ncontext type.\r\n\r\n* Put new context API behind a feature flag\r\n\r\nWe'll enable this in www only for now.\r\n\r\n* Store nearest provider on context object\r\n\r\n* Handle reentrancy in server renderer\r\n\r\nContext stack should be per server renderer instance.\r\n\r\n* Bailout of consumer updates using bitmask\r\n\r\nThe context type defines an optional function that compares two context\r\nvalues, returning a bitfield. A consumer may specify the bits it needs\r\nfor rendering. If a provider's context changes, and the consumer's bits\r\ndo not intersect with the changed bits, we can skip the consumer.\r\n\r\nThis is similar to how selectors are used in Redux but fast enough to do\r\nwhile scanning the tree. The only user code involved is the function\r\nthat computes the changed bits. But that's only called once per provider\r\nupdate, not for every consumer.\r\n\r\n* Store current value and changed bits on context object\r\n\r\nThere are fewer providers than consumers, so better to do this work\r\nat the provider.\r\n\r\n* Use maximum of 31 bits for bitmask\r\n\r\nThis is the largest integer size in V8 on 32-bit systems. Warn in\r\ndevelopment if too large a number is used.\r\n\r\n* ProviderComponent -> ContextProvider, ConsumerComponent -> ContextConsumer\r\n\r\n* Inline Object.is\r\n\r\n* Warn if multiple renderers concurrently render the same context provider\r\n\r\nLet's see if we can get away with not supporting this for now. If it\r\nturns out that it's needed, we can fall back to backtracking the\r\nfiber return path.\r\n\r\n* Nits that came up during review",
            "tree": {
                "sha": "c3841476e2e17c5b3407c2ba78a03cd02728a680",
                "url": "https://api.github.com/repos/facebook/react/git/trees/c3841476e2e17c5b3407c2ba78a03cd02728a680"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/87ae211ccd8d61796cfdef138d1e12fb7a74f85d",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJaaVC2CRBK7hj4Ov3rIwAAdHIIAGHwGa6ofOPOeNItt3pcKSD2\nChc4urzQNvYtoEIKv5g0qL1hXw9/YQo54bYPaooRcTcR87sIqSf0lasleJtlUms1\nA9DxCXXE5QDvsRElS+uRc5Z/BYu6iZ7mGnuRvcCIHVSPnCjmu3SzRt4Telrxzd21\nNRJajgg4wfzDKwrMvkVj+iH73I9SZBIzC3gVGdTFdQ6j08/E3UE+jC2632JxZat8\nSh9+YfnMiC5GURKuKjFE+YhkjppEucNYzBihqpr8/n88GIFXucVFX60xxYVn+gti\nl02qpiMjcMyzUIADZj27/zR4jXgUdKZDZyRn/1LQCw1/uuKq1ZkiN1BloTaxj/E=\n=GXLf\n-----END PGP SIGNATURE-----\n",
                "payload": "tree c3841476e2e17c5b3407c2ba78a03cd02728a680\nparent be51e6a41c096f33acf92a693026b80c98e7ddeb\nauthor Andrew Clark <acdlite@me.com> 1516851382 -0800\ncommitter GitHub <noreply@github.com> 1516851382 -0800\n\nNew context API (#11818)\n\n* New context API\r\n\r\nIntroduces a declarative context API that propagates updates even when\r\nshouldComponentUpdate returns false.\r\n\r\n* Fuzz tester for context\r\n\r\n* Use ReactElement for provider and consumer children\r\n\r\n* Unify more branches in createFiberFromElement\r\n\r\n* Compare context values using Object.is\r\n\r\nSame semantics as PureComponent/shallowEqual.\r\n\r\n* Add support for Provider and Consumer to server-side renderer\r\n\r\n* Store providers on global stack\r\n\r\nRather than using a linked list stored on the context type. The global\r\nstack can be reset in case of an interruption or error, whereas with the\r\nlinked list implementation, you'd need to keep track of every\r\ncontext type.\r\n\r\n* Put new context API behind a feature flag\r\n\r\nWe'll enable this in www only for now.\r\n\r\n* Store nearest provider on context object\r\n\r\n* Handle reentrancy in server renderer\r\n\r\nContext stack should be per server renderer instance.\r\n\r\n* Bailout of consumer updates using bitmask\r\n\r\nThe context type defines an optional function that compares two context\r\nvalues, returning a bitfield. A consumer may specify the bits it needs\r\nfor rendering. If a provider's context changes, and the consumer's bits\r\ndo not intersect with the changed bits, we can skip the consumer.\r\n\r\nThis is similar to how selectors are used in Redux but fast enough to do\r\nwhile scanning the tree. The only user code involved is the function\r\nthat computes the changed bits. But that's only called once per provider\r\nupdate, not for every consumer.\r\n\r\n* Store current value and changed bits on context object\r\n\r\nThere are fewer providers than consumers, so better to do this work\r\nat the provider.\r\n\r\n* Use maximum of 31 bits for bitmask\r\n\r\nThis is the largest integer size in V8 on 32-bit systems. Warn in\r\ndevelopment if too large a number is used.\r\n\r\n* ProviderComponent -> ContextProvider, ConsumerComponent -> ContextConsumer\r\n\r\n* Inline Object.is\r\n\r\n* Warn if multiple renderers concurrently render the same context provider\r\n\r\nLet's see if we can get away with not supporting this for now. If it\r\nturns out that it's needed, we can fall back to backtracking the\r\nfiber return path.\r\n\r\n* Nits that came up during review\r\n"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/87ae211ccd8d61796cfdef138d1e12fb7a74f85d",
        "html_url": "https://github.com/facebook/react/commit/87ae211ccd8d61796cfdef138d1e12fb7a74f85d",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/87ae211ccd8d61796cfdef138d1e12fb7a74f85d/comments",
        "author": {
            "login": "acdlite",
            "id": 3624098,
            "node_id": "MDQ6VXNlcjM2MjQwOTg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3624098?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/acdlite",
            "html_url": "https://github.com/acdlite",
            "followers_url": "https://api.github.com/users/acdlite/followers",
            "following_url": "https://api.github.com/users/acdlite/following{/other_user}",
            "gists_url": "https://api.github.com/users/acdlite/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/acdlite/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/acdlite/subscriptions",
            "organizations_url": "https://api.github.com/users/acdlite/orgs",
            "repos_url": "https://api.github.com/users/acdlite/repos",
            "events_url": "https://api.github.com/users/acdlite/events{/privacy}",
            "received_events_url": "https://api.github.com/users/acdlite/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "be51e6a41c096f33acf92a693026b80c98e7ddeb",
                "url": "https://api.github.com/repos/facebook/react/commits/be51e6a41c096f33acf92a693026b80c98e7ddeb",
                "html_url": "https://github.com/facebook/react/commit/be51e6a41c096f33acf92a693026b80c98e7ddeb"
            }
        ]
    },
    {
        "sha": "be51e6a41c096f33acf92a693026b80c98e7ddeb",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6YmU1MWU2YTQxYzA5NmYzM2FjZjkyYTY5MzAyNmI4MGM5OGU3ZGRlYg==",
        "commit": {
            "author": {
                "name": "Brian Vaughn",
                "email": "brian.david.vaughn@gmail.com",
                "date": "2018-01-25T01:49:43Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2018-01-25T01:49:43Z"
            },
            "message": "Opt into unsafe lifecycle warnings without async tree (#12083)\n\nAdded new StrictMode component for enabling async warnings (without enabling async rendering). This component can be used in the future to help with other warnings (eg compilation, Fabric).",
            "tree": {
                "sha": "32d8c0339c9bbc7c11c0beaa2429f9c55ab8b660",
                "url": "https://api.github.com/repos/facebook/react/git/trees/32d8c0339c9bbc7c11c0beaa2429f9c55ab8b660"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/be51e6a41c096f33acf92a693026b80c98e7ddeb",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJaaTe3CRBK7hj4Ov3rIwAAdHIIAI4g0wOsz/Ya5y8m7ZeMGCAN\n7veOD4wB76MBaAzWgvXIoCv4+8VcI9hknYAGKXoanSPNNM1yt0FYuq9x61LHAcE6\n/RCPny+KgzaKkQ2g/fynqoPQVvGs3G7Vn3JnP4UoD1V3APBup3wTKGucCp45xZ94\nxM2ZrXdp0hafZw1B+L2Y59HT82mSw+1T5Uw+XvfVZ7f0X4ZuUMxzFjYZUIalYia8\nYxVW2GBp2hmrjhZux8S5ft1IyhWNPL5py2Xv+SrOexMHHDUibCRpbjDgei6SXprS\nkC5V2fShJUhgdi2UMjyIhHEmts0j9zaN2ROfHIkR7Esu9Ua4Um4y2mHQuZNxTuY=\n=3dTe\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 32d8c0339c9bbc7c11c0beaa2429f9c55ab8b660\nparent 431dca925a9f76b683d2ea5ec4520149ad15ff81\nauthor Brian Vaughn <brian.david.vaughn@gmail.com> 1516844983 -0800\ncommitter GitHub <noreply@github.com> 1516844983 -0800\n\nOpt into unsafe lifecycle warnings without async tree (#12083)\n\nAdded new StrictMode component for enabling async warnings (without enabling async rendering). This component can be used in the future to help with other warnings (eg compilation, Fabric)."
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/be51e6a41c096f33acf92a693026b80c98e7ddeb",
        "html_url": "https://github.com/facebook/react/commit/be51e6a41c096f33acf92a693026b80c98e7ddeb",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/be51e6a41c096f33acf92a693026b80c98e7ddeb/comments",
        "author": {
            "login": "bvaughn",
            "id": 29597,
            "node_id": "MDQ6VXNlcjI5NTk3",
            "avatar_url": "https://avatars.githubusercontent.com/u/29597?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bvaughn",
            "html_url": "https://github.com/bvaughn",
            "followers_url": "https://api.github.com/users/bvaughn/followers",
            "following_url": "https://api.github.com/users/bvaughn/following{/other_user}",
            "gists_url": "https://api.github.com/users/bvaughn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bvaughn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bvaughn/subscriptions",
            "organizations_url": "https://api.github.com/users/bvaughn/orgs",
            "repos_url": "https://api.github.com/users/bvaughn/repos",
            "events_url": "https://api.github.com/users/bvaughn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bvaughn/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "431dca925a9f76b683d2ea5ec4520149ad15ff81",
                "url": "https://api.github.com/repos/facebook/react/commits/431dca925a9f76b683d2ea5ec4520149ad15ff81",
                "html_url": "https://github.com/facebook/react/commit/431dca925a9f76b683d2ea5ec4520149ad15ff81"
            }
        ]
    },
    {
        "sha": "b77b12311f0c66aad9b50f805c53dcc05d2ea75c",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6Yjc3YjEyMzExZjBjNjZhYWQ5YjUwZjgwNWM1M2RjYzA1ZDJlYTc1Yw==",
        "commit": {
            "author": {
                "name": "Andrew Clark",
                "email": "acdlite@me.com",
                "date": "2017-12-12T23:04:40Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2017-12-12T23:04:40Z"
            },
            "message": "Call and Return components should use ReactElement (#11834)\n\n* Call and Return components should use ReactElement\r\n\r\nReactChildFiber contains lots of branches that do the same thing for\r\ndifferent child types. We can unify them by having more child types be\r\nReactElements. This requires that the `type` and `key` fields are\r\nsufficient to determine the identity of the child.\r\n\r\nThe main benefit is decreased file size, especially as we add more\r\ncomponent types, like context providers and consumers.\r\n\r\nThis updates Call and Return components to use ReactElement. Portals are\r\nleft alone for now because their identity includes the host instance.\r\n\r\n* Move server render invariant for call and return types\r\n\r\n* Sort ReactElement type checks by most likely\r\n\r\n* Performance timeline should skip over call components\r\n\r\nDon't think these were intentionally omitted from the blacklist of\r\ncomponent types.\r\n\r\nI went ahead and updated getComponentName to include special types, even\r\nthough I don't think they're used anywhere right now.\r\n\r\n* Remove surrounding brackets from internal display names",
            "tree": {
                "sha": "6796654973bd2b5028a84f71f1d3babc7790fe9e",
                "url": "https://api.github.com/repos/facebook/react/git/trees/6796654973bd2b5028a84f71f1d3babc7790fe9e"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/b77b12311f0c66aad9b50f805c53dcc05d2ea75c",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJaMGCICRBK7hj4Ov3rIwAAdHIIAF+N0Nqco5c8MPgtWZbp8sJg\nRdwhGm/vP7G92Mgq9KtH4y7x4WR7Wx0fCTblnWS2z7k7akCTy27ZA0PjXyCB2qyU\n69d8kkjFtI+/neFUOQMMtmJ9TT3SvgOuM5G4amEVo84VC5oMhoaGbTa+8KWcgC/p\nblYHV86i7NX740PFYzu7QnFxec3MeA/rP/3zEmK8+LJmFtrqUMvwbWYEOjpHXEyB\nG22d1mStH2qCzyILtEaO2GA3ANcrL3LtJqn/5IzvyOJnBl+I5YTTCLkPzA4zMTdk\nhnYPkErE/12/vM2HAyZgma1HLVa+60Gq7WWKonC0mZonosF24DJyJYpOeW2Owhc=\n=Lrfo\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 6796654973bd2b5028a84f71f1d3babc7790fe9e\nparent 73265fc478695cd80fefd035517b9ceef43d5f1d\nauthor Andrew Clark <acdlite@me.com> 1513119880 -0800\ncommitter GitHub <noreply@github.com> 1513119880 -0800\n\nCall and Return components should use ReactElement (#11834)\n\n* Call and Return components should use ReactElement\r\n\r\nReactChildFiber contains lots of branches that do the same thing for\r\ndifferent child types. We can unify them by having more child types be\r\nReactElements. This requires that the `type` and `key` fields are\r\nsufficient to determine the identity of the child.\r\n\r\nThe main benefit is decreased file size, especially as we add more\r\ncomponent types, like context providers and consumers.\r\n\r\nThis updates Call and Return components to use ReactElement. Portals are\r\nleft alone for now because their identity includes the host instance.\r\n\r\n* Move server render invariant for call and return types\r\n\r\n* Sort ReactElement type checks by most likely\r\n\r\n* Performance timeline should skip over call components\r\n\r\nDon't think these were intentionally omitted from the blacklist of\r\ncomponent types.\r\n\r\nI went ahead and updated getComponentName to include special types, even\r\nthough I don't think they're used anywhere right now.\r\n\r\n* Remove surrounding brackets from internal display names\r\n"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/b77b12311f0c66aad9b50f805c53dcc05d2ea75c",
        "html_url": "https://github.com/facebook/react/commit/b77b12311f0c66aad9b50f805c53dcc05d2ea75c",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/b77b12311f0c66aad9b50f805c53dcc05d2ea75c/comments",
        "author": {
            "login": "acdlite",
            "id": 3624098,
            "node_id": "MDQ6VXNlcjM2MjQwOTg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3624098?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/acdlite",
            "html_url": "https://github.com/acdlite",
            "followers_url": "https://api.github.com/users/acdlite/followers",
            "following_url": "https://api.github.com/users/acdlite/following{/other_user}",
            "gists_url": "https://api.github.com/users/acdlite/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/acdlite/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/acdlite/subscriptions",
            "organizations_url": "https://api.github.com/users/acdlite/orgs",
            "repos_url": "https://api.github.com/users/acdlite/repos",
            "events_url": "https://api.github.com/users/acdlite/events{/privacy}",
            "received_events_url": "https://api.github.com/users/acdlite/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "73265fc478695cd80fefd035517b9ceef43d5f1d",
                "url": "https://api.github.com/repos/facebook/react/commits/73265fc478695cd80fefd035517b9ceef43d5f1d",
                "html_url": "https://github.com/facebook/react/commit/73265fc478695cd80fefd035517b9ceef43d5f1d"
            }
        ]
    },
    {
        "sha": "37e4329bc81def4695211d6e3795a654ef4d84f5",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6MzdlNDMyOWJjODFkZWY0Njk1MjExZDZlMzc5NWE2NTRlZjRkODRmNQ==",
        "commit": {
            "author": {
                "name": "Raphael Amorim",
                "email": "rapha850@gmail.com",
                "date": "2017-12-05T13:47:57Z"
            },
            "committer": {
                "name": "Dan Abramov",
                "email": "dan.abramov@gmail.com",
                "date": "2017-12-05T13:47:57Z"
            },
            "message": "Remove vars (#11766)\n\n* react: convert packages/react\r\n\r\n* react-reconciler: convert packages/react-reconciler\r\n\r\n* react-noop-renderer: convert packages/react-noop-renderer\r\n\r\n* react-dom: convert packages/react-dom/src/shared\r\n\r\n* react-dom: convert packages/react-dom/src/server",
            "tree": {
                "sha": "86c9e11c2094e184e2df01fa14810a9ec761257f",
                "url": "https://api.github.com/repos/facebook/react/git/trees/86c9e11c2094e184e2df01fa14810a9ec761257f"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/37e4329bc81def4695211d6e3795a654ef4d84f5",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/37e4329bc81def4695211d6e3795a654ef4d84f5",
        "html_url": "https://github.com/facebook/react/commit/37e4329bc81def4695211d6e3795a654ef4d84f5",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/37e4329bc81def4695211d6e3795a654ef4d84f5/comments",
        "author": {
            "login": "raphamorim",
            "id": 3630346,
            "node_id": "MDQ6VXNlcjM2MzAzNDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3630346?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/raphamorim",
            "html_url": "https://github.com/raphamorim",
            "followers_url": "https://api.github.com/users/raphamorim/followers",
            "following_url": "https://api.github.com/users/raphamorim/following{/other_user}",
            "gists_url": "https://api.github.com/users/raphamorim/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/raphamorim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/raphamorim/subscriptions",
            "organizations_url": "https://api.github.com/users/raphamorim/orgs",
            "repos_url": "https://api.github.com/users/raphamorim/repos",
            "events_url": "https://api.github.com/users/raphamorim/events{/privacy}",
            "received_events_url": "https://api.github.com/users/raphamorim/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "gaearon",
            "id": 810438,
            "node_id": "MDQ6VXNlcjgxMDQzOA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/810438?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gaearon",
            "html_url": "https://github.com/gaearon",
            "followers_url": "https://api.github.com/users/gaearon/followers",
            "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
            "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
            "organizations_url": "https://api.github.com/users/gaearon/orgs",
            "repos_url": "https://api.github.com/users/gaearon/repos",
            "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gaearon/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "4d0e8fc4878569e7b7a70e9261a7c945cb0ff1d8",
                "url": "https://api.github.com/repos/facebook/react/commits/4d0e8fc4878569e7b7a70e9261a7c945cb0ff1d8",
                "html_url": "https://github.com/facebook/react/commit/4d0e8fc4878569e7b7a70e9261a7c945cb0ff1d8"
            }
        ]
    },
    {
        "sha": "4d0e8fc4878569e7b7a70e9261a7c945cb0ff1d8",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6NGQwZThmYzQ4Nzg1NjllN2I3YTcwZTkyNjFhN2M5NDVjYjBmZjFkOA==",
        "commit": {
            "author": {
                "name": "Andrew Clark",
                "email": "acdlite@me.com",
                "date": "2017-12-04T22:34:02Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2017-12-04T22:34:02Z"
            },
            "message": "ReactDOM.createRoot creates an async root (#11769)\n\nMakes createRoot the opt-in API for async updates. Now we don't have\r\nto check the top-level element to see if it's an async container.",
            "tree": {
                "sha": "57fd7f2e33a9e39ae6238ed84d33d5a3b481a706",
                "url": "https://api.github.com/repos/facebook/react/git/trees/57fd7f2e33a9e39ae6238ed84d33d5a3b481a706"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/4d0e8fc4878569e7b7a70e9261a7c945cb0ff1d8",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJaJc1aCRBK7hj4Ov3rIwAAdHIIADwMYk11za6uCD98ohFmR3iA\nJOAOb4hyAMj/uB1gieuwjvi44beaE4+EuqxjpoaCM8+jpOQtaFPz2zDZs3Yx9zkA\noYxCUuOV14Do3RXD4qfaPtU4vg3vhLTzPAnc8P1OC67b+PhUUEfQfzAs1Ws/kSGI\nDDGCWlLylTOl1Bs+BwgJ+j0c39cjm6gzEzkzSRWGeFLMEtAXPdZbd8LeFcfnpPro\nwJRqPaOwPys7Jm9nBm3XZ926EBTBvHyW4Fd/hxwdbtDEdnqJZLpycevun8S52wRL\n2itbtq10UntPGG5uWCJGRkV7uE9IVAQRgOSoZCTNOMNflOw5vdZMi2H2RNH7xy0=\n=n4yG\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 57fd7f2e33a9e39ae6238ed84d33d5a3b481a706\nparent d7f6ece27cb7cde67ef0e9c9aea4669f873ddab3\nauthor Andrew Clark <acdlite@me.com> 1512426842 -0800\ncommitter GitHub <noreply@github.com> 1512426842 -0800\n\nReactDOM.createRoot creates an async root (#11769)\n\nMakes createRoot the opt-in API for async updates. Now we don't have\r\nto check the top-level element to see if it's an async container."
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/4d0e8fc4878569e7b7a70e9261a7c945cb0ff1d8",
        "html_url": "https://github.com/facebook/react/commit/4d0e8fc4878569e7b7a70e9261a7c945cb0ff1d8",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/4d0e8fc4878569e7b7a70e9261a7c945cb0ff1d8/comments",
        "author": {
            "login": "acdlite",
            "id": 3624098,
            "node_id": "MDQ6VXNlcjM2MjQwOTg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3624098?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/acdlite",
            "html_url": "https://github.com/acdlite",
            "followers_url": "https://api.github.com/users/acdlite/followers",
            "following_url": "https://api.github.com/users/acdlite/following{/other_user}",
            "gists_url": "https://api.github.com/users/acdlite/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/acdlite/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/acdlite/subscriptions",
            "organizations_url": "https://api.github.com/users/acdlite/orgs",
            "repos_url": "https://api.github.com/users/acdlite/repos",
            "events_url": "https://api.github.com/users/acdlite/events{/privacy}",
            "received_events_url": "https://api.github.com/users/acdlite/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "d7f6ece27cb7cde67ef0e9c9aea4669f873ddab3",
                "url": "https://api.github.com/repos/facebook/react/commits/d7f6ece27cb7cde67ef0e9c9aea4669f873ddab3",
                "html_url": "https://github.com/facebook/react/commit/d7f6ece27cb7cde67ef0e9c9aea4669f873ddab3"
            }
        ]
    },
    {
        "sha": "31ea0aa6d701df811fb586fa7545a376e5135440",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6MzFlYTBhYTZkNzAxZGY4MTFmYjU4NmZhNzU0NWEzNzZlNTEzNTQ0MA==",
        "commit": {
            "author": {
                "name": "Dan Abramov",
                "email": "dan.abramov@gmail.com",
                "date": "2017-12-02T00:00:40Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2017-12-02T00:00:40Z"
            },
            "message": "Add a test for bad Map polyfill, and work around Rollup bug (#11745)\n\n* Add a test for bad Map polyfill\r\n\r\n* Add a workaround for the Rollup bug\r\n\r\n* Add a link to the bug URL",
            "tree": {
                "sha": "b8cf286d5612ca9ae8b04ea1a91471ddd5532a33",
                "url": "https://api.github.com/repos/facebook/react/git/trees/b8cf286d5612ca9ae8b04ea1a91471ddd5532a33"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/31ea0aa6d701df811fb586fa7545a376e5135440",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJaIe0oCRBK7hj4Ov3rIwAAdHIIAKIag69rqnIwtvpRNdi+LPFk\n0L12owpuqiiAI2WqLBLj/yE7OSM3kBP+ivIDoEfOO0bWseh/GTJpCalMs+Wwey9M\n5glkH2T0IVOg1/POvxfJnNYXqk07TbaeYDtXyMxFlkD9+BJRkQCa5oDNBJBRNRxA\nYi2RBBuncP7qv805sa7Pd+M/hPdDAaaXtzvda8HDfYkT0hx1dotB3pEFhsLkLkyw\nZdA8HnQFPSgOri51raSkdr7zyd5LZOBHC+Fcdf23cf+gTkQ7h4vUMM+lwqXLjERU\n1D4iTFuxCbBRtgFmd+ibbb49RP6Z+1PFhkzDw3tQr5IsDNWLr6M8HjcCe60vgME=\n=7RIV\n-----END PGP SIGNATURE-----\n",
                "payload": "tree b8cf286d5612ca9ae8b04ea1a91471ddd5532a33\nparent 8540768616861e513010ea2874a3188098105cca\nauthor Dan Abramov <dan.abramov@gmail.com> 1512172840 +0000\ncommitter GitHub <noreply@github.com> 1512172840 +0000\n\nAdd a test for bad Map polyfill, and work around Rollup bug (#11745)\n\n* Add a test for bad Map polyfill\r\n\r\n* Add a workaround for the Rollup bug\r\n\r\n* Add a link to the bug URL\r\n"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/31ea0aa6d701df811fb586fa7545a376e5135440",
        "html_url": "https://github.com/facebook/react/commit/31ea0aa6d701df811fb586fa7545a376e5135440",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/31ea0aa6d701df811fb586fa7545a376e5135440/comments",
        "author": {
            "login": "gaearon",
            "id": 810438,
            "node_id": "MDQ6VXNlcjgxMDQzOA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/810438?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gaearon",
            "html_url": "https://github.com/gaearon",
            "followers_url": "https://api.github.com/users/gaearon/followers",
            "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
            "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
            "organizations_url": "https://api.github.com/users/gaearon/orgs",
            "repos_url": "https://api.github.com/users/gaearon/repos",
            "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gaearon/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "8540768616861e513010ea2874a3188098105cca",
                "url": "https://api.github.com/repos/facebook/react/commits/8540768616861e513010ea2874a3188098105cca",
                "html_url": "https://github.com/facebook/react/commit/8540768616861e513010ea2874a3188098105cca"
            }
        ]
    },
    {
        "sha": "6074664f73c6b1ea1f774f2bc698224e3677cef0",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6NjA3NDY2NGY3M2M2YjFlYTFmNzc0ZjJiYzY5ODIyNGUzNjc3Y2VmMA==",
        "commit": {
            "author": {
                "name": "Raphael Amorim",
                "email": "rapha850@gmail.com",
                "date": "2017-11-30T23:59:05Z"
            },
            "committer": {
                "name": "Dan Abramov",
                "email": "dan.abramov@gmail.com",
                "date": "2017-11-30T23:59:05Z"
            },
            "message": "react-reconciler: convert vars into let/const (#11729)",
            "tree": {
                "sha": "26d6fc93aa08c85dbdad8f6f8e975fb9cc7c7806",
                "url": "https://api.github.com/repos/facebook/react/git/trees/26d6fc93aa08c85dbdad8f6f8e975fb9cc7c7806"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/6074664f73c6b1ea1f774f2bc698224e3677cef0",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/6074664f73c6b1ea1f774f2bc698224e3677cef0",
        "html_url": "https://github.com/facebook/react/commit/6074664f73c6b1ea1f774f2bc698224e3677cef0",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/6074664f73c6b1ea1f774f2bc698224e3677cef0/comments",
        "author": {
            "login": "raphamorim",
            "id": 3630346,
            "node_id": "MDQ6VXNlcjM2MzAzNDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3630346?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/raphamorim",
            "html_url": "https://github.com/raphamorim",
            "followers_url": "https://api.github.com/users/raphamorim/followers",
            "following_url": "https://api.github.com/users/raphamorim/following{/other_user}",
            "gists_url": "https://api.github.com/users/raphamorim/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/raphamorim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/raphamorim/subscriptions",
            "organizations_url": "https://api.github.com/users/raphamorim/orgs",
            "repos_url": "https://api.github.com/users/raphamorim/repos",
            "events_url": "https://api.github.com/users/raphamorim/events{/privacy}",
            "received_events_url": "https://api.github.com/users/raphamorim/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "gaearon",
            "id": 810438,
            "node_id": "MDQ6VXNlcjgxMDQzOA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/810438?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gaearon",
            "html_url": "https://github.com/gaearon",
            "followers_url": "https://api.github.com/users/gaearon/followers",
            "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
            "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
            "organizations_url": "https://api.github.com/users/gaearon/orgs",
            "repos_url": "https://api.github.com/users/gaearon/repos",
            "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gaearon/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "8ec2ed4089053e6eaf00de6e9bddc793d27b74e8",
                "url": "https://api.github.com/repos/facebook/react/commits/8ec2ed4089053e6eaf00de6e9bddc793d27b74e8",
                "html_url": "https://github.com/facebook/react/commit/8ec2ed4089053e6eaf00de6e9bddc793d27b74e8"
            }
        ]
    },
    {
        "sha": "2ae4c6215891c67aed17c22261db74c1f078f663",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6MmFlNGM2MjE1ODkxYzY3YWVkMTdjMjIyNjFkYjc0YzFmMDc4ZjY2Mw==",
        "commit": {
            "author": {
                "name": "Andrew Clark",
                "email": "acdlite@me.com",
                "date": "2017-11-29T00:50:23Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2017-11-29T00:50:23Z"
            },
            "message": "Always set pendingProps to the next props (#11580)\n\nIn the current implementation, pendingProps is null if there are no new\r\nprops since the last commit. When that happens, we bail out and reuse\r\nthe current props.\r\n\r\nBut it makes more sense to always set pendingProps to whatever the next\r\nprops will be. In other words, pendingProps is never null: it points to\r\neither new props, or to the current props. Modeling it this way lets us\r\ndelete lots of code branches and is easier to reason about bail outs:\r\njust compare the pending props to the current props.",
            "tree": {
                "sha": "c56440bcbfe28534d0631500c42d0543cd47c086",
                "url": "https://api.github.com/repos/facebook/react/git/trees/c56440bcbfe28534d0631500c42d0543cd47c086"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/2ae4c6215891c67aed17c22261db74c1f078f663",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJaHgRPCRBK7hj4Ov3rIwAAdHIIAECiqfxij2U5bpW+VztXTkFk\nAKidGM0m5keYJX1wMnB4BsOwdwzN2LHKMvD0K+e+WxXo2Pdh7Ju7xq1a1NfAsYTI\n/Pk+YMfVZ3JGLY+nq6QH5Zld5sNsq0h4bx1k5Q+SUwJonrSI5rev+JxFaCk8/oTh\n45iTlmKFSLGcNX6bdsDKok+O1MpzbKJSVZOCXlCnAgJaJc5nhGvuNducBbZuP5uW\nZ+4M4T55B5kOG9248DYayYIT7iDP/dhzmmXYU/06H6EPnLhyzkI/BmEAF/5OOCBD\n2kLh6YK8J/78gxRn/BBzbo5idbbtoITmQ+YdiNqCRPit7dYIQlGhOjZNvhZYG+4=\n=us7K\n-----END PGP SIGNATURE-----\n",
                "payload": "tree c56440bcbfe28534d0631500c42d0543cd47c086\nparent 1b55ad2a4b24b06ce34f77a943396228641d74a1\nauthor Andrew Clark <acdlite@me.com> 1511916623 -0800\ncommitter GitHub <noreply@github.com> 1511916623 -0800\n\nAlways set pendingProps to the next props (#11580)\n\nIn the current implementation, pendingProps is null if there are no new\r\nprops since the last commit. When that happens, we bail out and reuse\r\nthe current props.\r\n\r\nBut it makes more sense to always set pendingProps to whatever the next\r\nprops will be. In other words, pendingProps is never null: it points to\r\neither new props, or to the current props. Modeling it this way lets us\r\ndelete lots of code branches and is easier to reason about bail outs:\r\njust compare the pending props to the current props."
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/2ae4c6215891c67aed17c22261db74c1f078f663",
        "html_url": "https://github.com/facebook/react/commit/2ae4c6215891c67aed17c22261db74c1f078f663",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/2ae4c6215891c67aed17c22261db74c1f078f663/comments",
        "author": {
            "login": "acdlite",
            "id": 3624098,
            "node_id": "MDQ6VXNlcjM2MjQwOTg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3624098?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/acdlite",
            "html_url": "https://github.com/acdlite",
            "followers_url": "https://api.github.com/users/acdlite/followers",
            "following_url": "https://api.github.com/users/acdlite/following{/other_user}",
            "gists_url": "https://api.github.com/users/acdlite/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/acdlite/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/acdlite/subscriptions",
            "organizations_url": "https://api.github.com/users/acdlite/orgs",
            "repos_url": "https://api.github.com/users/acdlite/repos",
            "events_url": "https://api.github.com/users/acdlite/events{/privacy}",
            "received_events_url": "https://api.github.com/users/acdlite/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "1b55ad2a4b24b06ce34f77a943396228641d74a1",
                "url": "https://api.github.com/repos/facebook/react/commits/1b55ad2a4b24b06ce34f77a943396228641d74a1",
                "html_url": "https://github.com/facebook/react/commit/1b55ad2a4b24b06ce34f77a943396228641d74a1"
            }
        ]
    },
    {
        "sha": "5bfb87874391e635cb2458a29a7c878cb4dec89c",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6NWJmYjg3ODc0MzkxZTYzNWNiMjQ1OGEyOWE3Yzg3OGNiNGRlYzg5Yw==",
        "commit": {
            "author": {
                "name": "Kristofer Selbekk",
                "email": "selbekk@users.noreply.github.com",
                "date": "2017-11-09T18:28:35Z"
            },
            "committer": {
                "name": "Dan Abramov",
                "email": "dan.abramov@gmail.com",
                "date": "2017-11-09T18:28:35Z"
            },
            "message": "Add note about mistaken named / default export (#11505)\n\nThis commit adds a note about the possibility of erroneously\r\nmistaking named and default exports to an existing error message.",
            "tree": {
                "sha": "3ef92b0f56a95bb761a835df9000806ca996396f",
                "url": "https://api.github.com/repos/facebook/react/git/trees/3ef92b0f56a95bb761a835df9000806ca996396f"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/5bfb87874391e635cb2458a29a7c878cb4dec89c",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/5bfb87874391e635cb2458a29a7c878cb4dec89c",
        "html_url": "https://github.com/facebook/react/commit/5bfb87874391e635cb2458a29a7c878cb4dec89c",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/5bfb87874391e635cb2458a29a7c878cb4dec89c/comments",
        "author": {
            "login": "selbekk",
            "id": 1307267,
            "node_id": "MDQ6VXNlcjEzMDcyNjc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1307267?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/selbekk",
            "html_url": "https://github.com/selbekk",
            "followers_url": "https://api.github.com/users/selbekk/followers",
            "following_url": "https://api.github.com/users/selbekk/following{/other_user}",
            "gists_url": "https://api.github.com/users/selbekk/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/selbekk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/selbekk/subscriptions",
            "organizations_url": "https://api.github.com/users/selbekk/orgs",
            "repos_url": "https://api.github.com/users/selbekk/repos",
            "events_url": "https://api.github.com/users/selbekk/events{/privacy}",
            "received_events_url": "https://api.github.com/users/selbekk/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "gaearon",
            "id": 810438,
            "node_id": "MDQ6VXNlcjgxMDQzOA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/810438?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gaearon",
            "html_url": "https://github.com/gaearon",
            "followers_url": "https://api.github.com/users/gaearon/followers",
            "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
            "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
            "organizations_url": "https://api.github.com/users/gaearon/orgs",
            "repos_url": "https://api.github.com/users/gaearon/repos",
            "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gaearon/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "ac0e670545bb85770c71154e93ef17dc6c08e8a4",
                "url": "https://api.github.com/repos/facebook/react/commits/ac0e670545bb85770c71154e93ef17dc6c08e8a4",
                "html_url": "https://github.com/facebook/react/commit/ac0e670545bb85770c71154e93ef17dc6c08e8a4"
            }
        ]
    },
    {
        "sha": "45c1ff348e1c7d03567f5bba6cb32cffa9222972",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6NDVjMWZmMzQ4ZTFjN2QwMzU2N2Y1YmJhNmNiMzJjZmZhOTIyMjk3Mg==",
        "commit": {
            "author": {
                "name": "Dan Abramov",
                "email": "dan.abramov@gmail.com",
                "date": "2017-11-02T20:32:48Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2017-11-02T20:32:48Z"
            },
            "message": "Remove unnecessary 'use strict' in the source (#11433)\n\n* Remove use strict from ES modules\r\n\r\n* Delete unused file\r\n\r\nThis was unused since Stack.",
            "tree": {
                "sha": "6650f1d443c4d347552dbb2ef1db928e0afa1a59",
                "url": "https://api.github.com/repos/facebook/react/git/trees/6650f1d443c4d347552dbb2ef1db928e0afa1a59"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/45c1ff348e1c7d03567f5bba6cb32cffa9222972",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJZ+4DwCRBK7hj4Ov3rIwAAdHIIAAto++UNtlPN14DG4qA3G2yf\n0JaWoVEkC830yu+8+qJ0BE6NQQ+SIADRMSDmlRdvIv7iJajXa0NvGa83y9cZpMiO\nM1jEvzbHRQayBDFdlnl0tq0L331ev/zVz7HjggmHGJpnRfgFqyrZAlQe+LLdgQuy\naOpeChjf2aFdKu4+pl2cziw04JhUhKPUVbdbaEICNqcyNF7jJbWpovx5ZjHMybZL\n64AGS4sMSz7us2P6murDaREG2ypmThpFoRQ1Nxo9lGr9VKiTis3l2ZujCVu5e7Fi\ng47GelPJdtuQYaqEWNeig+Zb+LK8D5fkx7tsz2LGfMfA2KkRJCkC17P+C3vs7i8=\n=teBa\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 6650f1d443c4d347552dbb2ef1db928e0afa1a59\nparent c0ee8df26c7e5ab0da47ba5c2db802c7123447bb\nauthor Dan Abramov <dan.abramov@gmail.com> 1509654768 +0000\ncommitter GitHub <noreply@github.com> 1509654768 +0000\n\nRemove unnecessary 'use strict' in the source (#11433)\n\n* Remove use strict from ES modules\r\n\r\n* Delete unused file\r\n\r\nThis was unused since Stack.\r\n"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/45c1ff348e1c7d03567f5bba6cb32cffa9222972",
        "html_url": "https://github.com/facebook/react/commit/45c1ff348e1c7d03567f5bba6cb32cffa9222972",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/45c1ff348e1c7d03567f5bba6cb32cffa9222972/comments",
        "author": {
            "login": "gaearon",
            "id": 810438,
            "node_id": "MDQ6VXNlcjgxMDQzOA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/810438?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gaearon",
            "html_url": "https://github.com/gaearon",
            "followers_url": "https://api.github.com/users/gaearon/followers",
            "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
            "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
            "organizations_url": "https://api.github.com/users/gaearon/orgs",
            "repos_url": "https://api.github.com/users/gaearon/repos",
            "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gaearon/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "c0ee8df26c7e5ab0da47ba5c2db802c7123447bb",
                "url": "https://api.github.com/repos/facebook/react/commits/c0ee8df26c7e5ab0da47ba5c2db802c7123447bb",
                "html_url": "https://github.com/facebook/react/commit/c0ee8df26c7e5ab0da47ba5c2db802c7123447bb"
            }
        ]
    },
    {
        "sha": "21d0c115238b4f38837020cf83e0c657d8c01c9f",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6MjFkMGMxMTUyMzhiNGYzODgzNzAyMGNmODNlMGM2NTdkOGMwMWM5Zg==",
        "commit": {
            "author": {
                "name": "Dan Abramov",
                "email": "dan.abramov@gmail.com",
                "date": "2017-11-02T19:50:03Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2017-11-02T19:50:03Z"
            },
            "message": "Convert the Source to ES Modules (#11389)\n\n* Update transforms to handle ES modules\r\n\r\n* Update Jest to handle ES modules\r\n\r\n* Convert react package to ES modules\r\n\r\n* Convert react-art package to ES Modules\r\n\r\n* Convert react-call-return package to ES Modules\r\n\r\n* Convert react-test-renderer package to ES Modules\r\n\r\n* Convert react-cs-renderer package to ES Modules\r\n\r\n* Convert react-rt-renderer package to ES Modules\r\n\r\n* Convert react-noop-renderer package to ES Modules\r\n\r\n* Convert react-dom/server to ES modules\r\n\r\n* Convert react-dom/{client,events,test-utils} to ES modules\r\n\r\n* Convert react-dom/shared to ES modules\r\n\r\n* Convert react-native-renderer to ES modules\r\n\r\n* Convert react-reconciler to ES modules\r\n\r\n* Convert events to ES modules\r\n\r\n* Convert shared to ES modules\r\n\r\n* Remove CommonJS support from transforms\r\n\r\n* Move ReactDOMFB entry point code into react-dom/src\r\n\r\nThis is clearer because we can use ES imports in it.\r\n\r\n* Fix Rollup shim configuration to work with ESM\r\n\r\n* Fix incorrect comment\r\n\r\n* Exclude external imports without side effects\r\n\r\n* Fix ReactDOM FB build\r\n\r\n* Remove TODOs I don\u2019t intend to fix yet",
            "tree": {
                "sha": "d2600431c55d67ca9bc0395e2a6813c95f28e163",
                "url": "https://api.github.com/repos/facebook/react/git/trees/d2600431c55d67ca9bc0395e2a6813c95f28e163"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/21d0c115238b4f38837020cf83e0c657d8c01c9f",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJZ+3brCRBK7hj4Ov3rIwAAdHIIAHvB1DrV8FGCErh4gfimnujy\nyOuzia7EVpQWVjVqAzUdMhA+uGCBljwBD0w9F3PPL3ZA5diwzBpP744yEWxiZWIa\n+gcSAwlyF+6J3axwjkGpAh9/j49zvHoakXPeqeD1WrL4wgKy+Oin6EiSYLdJ4Q3r\navZHrJV5n5puirIa8S59v1nNUHWNgcr15OrnSUVSFcrzmnD+2ig/lKIraApeUyxx\neGxVYgCieg51y0QHoBmEFV731Xu46i7KKgaJmn6BUXKVnTkxet7LMH5N09ptux99\nvVtvFgE9pKlGSlP98AjVFITCXHo4JcMkSUXEH6TZ6bUzdzcegaf8XEZlTE9bwBw=\n=TBah\n-----END PGP SIGNATURE-----\n",
                "payload": "tree d2600431c55d67ca9bc0395e2a6813c95f28e163\nparent fbf617a2639ba0dd38bce902e3565fa608f89b8b\nauthor Dan Abramov <dan.abramov@gmail.com> 1509652203 +0000\ncommitter GitHub <noreply@github.com> 1509652203 +0000\n\nConvert the Source to ES Modules (#11389)\n\n* Update transforms to handle ES modules\r\n\r\n* Update Jest to handle ES modules\r\n\r\n* Convert react package to ES modules\r\n\r\n* Convert react-art package to ES Modules\r\n\r\n* Convert react-call-return package to ES Modules\r\n\r\n* Convert react-test-renderer package to ES Modules\r\n\r\n* Convert react-cs-renderer package to ES Modules\r\n\r\n* Convert react-rt-renderer package to ES Modules\r\n\r\n* Convert react-noop-renderer package to ES Modules\r\n\r\n* Convert react-dom/server to ES modules\r\n\r\n* Convert react-dom/{client,events,test-utils} to ES modules\r\n\r\n* Convert react-dom/shared to ES modules\r\n\r\n* Convert react-native-renderer to ES modules\r\n\r\n* Convert react-reconciler to ES modules\r\n\r\n* Convert events to ES modules\r\n\r\n* Convert shared to ES modules\r\n\r\n* Remove CommonJS support from transforms\r\n\r\n* Move ReactDOMFB entry point code into react-dom/src\r\n\r\nThis is clearer because we can use ES imports in it.\r\n\r\n* Fix Rollup shim configuration to work with ESM\r\n\r\n* Fix incorrect comment\r\n\r\n* Exclude external imports without side effects\r\n\r\n* Fix ReactDOM FB build\r\n\r\n* Remove TODOs I don\u2019t intend to fix yet\r\n"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/21d0c115238b4f38837020cf83e0c657d8c01c9f",
        "html_url": "https://github.com/facebook/react/commit/21d0c115238b4f38837020cf83e0c657d8c01c9f",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/21d0c115238b4f38837020cf83e0c657d8c01c9f/comments",
        "author": {
            "login": "gaearon",
            "id": 810438,
            "node_id": "MDQ6VXNlcjgxMDQzOA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/810438?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gaearon",
            "html_url": "https://github.com/gaearon",
            "followers_url": "https://api.github.com/users/gaearon/followers",
            "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
            "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
            "organizations_url": "https://api.github.com/users/gaearon/orgs",
            "repos_url": "https://api.github.com/users/gaearon/repos",
            "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gaearon/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "fbf617a2639ba0dd38bce902e3565fa608f89b8b",
                "url": "https://api.github.com/repos/facebook/react/commits/fbf617a2639ba0dd38bce902e3565fa608f89b8b",
                "html_url": "https://github.com/facebook/react/commit/fbf617a2639ba0dd38bce902e3565fa608f89b8b"
            }
        ]
    },
    {
        "sha": "2b3592331efd4b41f19de521528f664b870393e5",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6MmIzNTkyMzMxZWZkNGI0MWYxOWRlNTIxNTI4ZjY2NGI4NzAzOTNlNQ==",
        "commit": {
            "author": {
                "name": "zombieJ",
                "email": "smith3816@gmail.com",
                "date": "2017-10-31T13:46:17Z"
            },
            "committer": {
                "name": "Dan Abramov",
                "email": "dan.abramov@gmail.com",
                "date": "2017-10-31T13:46:17Z"
            },
            "message": "Pass `pendingProps` as argument in `createWorkInProgress` (#11296)\n\n* move to pendingProps to args\r\n\r\n* update userFiber in ReactChildFiber\r\n\r\n* prettier it\r\n\r\n* prettier it\r\n\r\n* move expirationTime to the last\r\n\r\n* move expirationTime to the last on userFiber\r\n\r\n* Move assignment",
            "tree": {
                "sha": "8d9271a8c4dae51a75fa19ef55f910757ece370d",
                "url": "https://api.github.com/repos/facebook/react/git/trees/8d9271a8c4dae51a75fa19ef55f910757ece370d"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/2b3592331efd4b41f19de521528f664b870393e5",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/2b3592331efd4b41f19de521528f664b870393e5",
        "html_url": "https://github.com/facebook/react/commit/2b3592331efd4b41f19de521528f664b870393e5",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/2b3592331efd4b41f19de521528f664b870393e5/comments",
        "author": {
            "login": "zombieJ",
            "id": 5378891,
            "node_id": "MDQ6VXNlcjUzNzg4OTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5378891?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zombieJ",
            "html_url": "https://github.com/zombieJ",
            "followers_url": "https://api.github.com/users/zombieJ/followers",
            "following_url": "https://api.github.com/users/zombieJ/following{/other_user}",
            "gists_url": "https://api.github.com/users/zombieJ/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zombieJ/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zombieJ/subscriptions",
            "organizations_url": "https://api.github.com/users/zombieJ/orgs",
            "repos_url": "https://api.github.com/users/zombieJ/repos",
            "events_url": "https://api.github.com/users/zombieJ/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zombieJ/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "gaearon",
            "id": 810438,
            "node_id": "MDQ6VXNlcjgxMDQzOA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/810438?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gaearon",
            "html_url": "https://github.com/gaearon",
            "followers_url": "https://api.github.com/users/gaearon/followers",
            "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
            "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
            "organizations_url": "https://api.github.com/users/gaearon/orgs",
            "repos_url": "https://api.github.com/users/gaearon/repos",
            "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gaearon/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "544d5c720812c95131f7f572e401fadd3c65d27e",
                "url": "https://api.github.com/repos/facebook/react/commits/544d5c720812c95131f7f572e401fadd3c65d27e",
                "html_url": "https://github.com/facebook/react/commit/544d5c720812c95131f7f572e401fadd3c65d27e"
            }
        ]
    },
    {
        "sha": "4ce5da7aee90a373f2f36d1beb559097af30952e",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6NGNlNWRhN2FlZTkwYTM3M2YyZjM2ZDFiZWI1NTkwOTdhZjMwOTUyZQ==",
        "commit": {
            "author": {
                "name": "Clement Hoang",
                "email": "clement.hoang24@gmail.com",
                "date": "2017-10-31T00:52:40Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2017-10-31T00:52:40Z"
            },
            "message": "Add Fragment as a named export to React (#10783)\n\n* Add Fragment as a named export to React\r\n\r\n* Remove extra tests for Fragment\r\n\r\n* Change React.Fragment export to be a string '#fragment'\r\n\r\n* Fix fragment special case to work with 1 child\r\n\r\n* Add single child test for fragment export\r\n\r\n* Move fragment definition to ReactEntry.js and render components for key warning tests\r\n\r\n* Inline createFiberFromElementType into createFiberFromElement\r\n\r\n* Update reconciliation to special case fragments\r\n\r\n* Use same semantics as implicit childsets for ReactFragment\r\n\r\n* Add more fragment state preservation tests\r\n\r\n* Export symbol instead of string for fragments\r\n\r\n* Fix rebase breakages\r\n\r\n* Re-apply prettier at 1.2.2\r\n\r\n* Merge branches in updateElement\r\n\r\n* Remove unnecessary check\r\n\r\n* Re-use createFiberFromFragment for fragment case\r\n\r\n* Simplyify branches by adding type field to fragment fiber\r\n\r\n* Move branching logic for fragments to broader methods when possible.\r\n\r\n* Add more tests for fragments\r\n\r\n* Address Dan's feedback\r\n\r\n* Move REACT_FRAGMENT_TYPE into __DEV__ block for DCE\r\n\r\n* Change hex representation of REACT_FRAGMENT_TYPE to follow convention\r\n\r\n* Remove unnecessary branching and isArray checks\r\n\r\n* Update test for preserving children state when keys are same\r\n\r\n* Fix updateSlot bug and add more tests\r\n\r\n* Make fragment tests more robust by using ops pattern\r\n\r\n* Update jsx element validator to allow numbers and symbols\r\n\r\n* Remove type field from fragment fiber\r\n\r\n* Fork reconcileChildFibers instead of recursing\r\n\r\n* Use ternary if condition\r\n\r\n* Revamp fragment test suite:\r\n\r\n- Add more coverage to fragment tests\r\n- Use better names\r\n- Remove useless Fragment component inside tests\r\n- Remove useless tests so that tests are more concise\r\n\r\n* Check output of renderer in fragment tests to ensure no silly business despite states being preserved\r\n\r\n* Finish implementation of fragment reconciliation with desired behavior\r\n\r\n* Add reverse render direction for fragment tests\r\n\r\n* Remove unneeded fragment branch in updateElement\r\n\r\n* Add more test cases for ReactFragment\r\n\r\n* Handle childless fragment in reconciler\r\n\r\n* Support fragment flattening in SSR\r\n\r\n* Clean up ReactPartialRenderer\r\n\r\n* Warn when non-key and children props are passed to fragments\r\n\r\n* Add non-null key check back to updateSlot's array's case\r\n\r\n* Add test for positional reconciliation in fragments\r\n\r\n* Add warning for refs in fragments with stack trace",
            "tree": {
                "sha": "49a082b08feb2f09f6b7c190303bf444d309efd7",
                "url": "https://api.github.com/repos/facebook/react/git/trees/49a082b08feb2f09f6b7c190303bf444d309efd7"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/4ce5da7aee90a373f2f36d1beb559097af30952e",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJZ98lYCRBK7hj4Ov3rIwAAdHIIAC5uGUBZtxXCEsmA0k0ugYQY\nB+ZDpHkeh+7D/nLZjFzJmIUkKrcNtH8d8nVfq6WKmCeVsZo6rIWzYQy9FIZCXal3\nzOkm5h6lLmT81oyCpQzLYNFBLDmFzqhIoFz6ppmIxCwAybuL0R1Dk4XoYgFmEGrN\nSRWZEyxfdagO/qKAC1astImyKWSsA0zN15feBeZJAkorRjG/+dL5oB2OC8qkJgy/\nZGLB290gvSxSrM43/5BzssvpVdryXbNL3H7lNVTK8+OvU0+Eim7PTIzcEZb2GSGW\n0cBol9PslKj8XCn3iRcHqbp4M7LNI0NoKhE/ofxsWXIZ2EKhlT12ekRoYcN7Oeg=\n=cy5X\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 49a082b08feb2f09f6b7c190303bf444d309efd7\nparent d61af82390dd4db8d231470c0a2741fa9ae69f7e\nauthor Clement Hoang <clement.hoang24@gmail.com> 1509411160 -0700\ncommitter GitHub <noreply@github.com> 1509411160 -0700\n\nAdd Fragment as a named export to React (#10783)\n\n* Add Fragment as a named export to React\r\n\r\n* Remove extra tests for Fragment\r\n\r\n* Change React.Fragment export to be a string '#fragment'\r\n\r\n* Fix fragment special case to work with 1 child\r\n\r\n* Add single child test for fragment export\r\n\r\n* Move fragment definition to ReactEntry.js and render components for key warning tests\r\n\r\n* Inline createFiberFromElementType into createFiberFromElement\r\n\r\n* Update reconciliation to special case fragments\r\n\r\n* Use same semantics as implicit childsets for ReactFragment\r\n\r\n* Add more fragment state preservation tests\r\n\r\n* Export symbol instead of string for fragments\r\n\r\n* Fix rebase breakages\r\n\r\n* Re-apply prettier at 1.2.2\r\n\r\n* Merge branches in updateElement\r\n\r\n* Remove unnecessary check\r\n\r\n* Re-use createFiberFromFragment for fragment case\r\n\r\n* Simplyify branches by adding type field to fragment fiber\r\n\r\n* Move branching logic for fragments to broader methods when possible.\r\n\r\n* Add more tests for fragments\r\n\r\n* Address Dan's feedback\r\n\r\n* Move REACT_FRAGMENT_TYPE into __DEV__ block for DCE\r\n\r\n* Change hex representation of REACT_FRAGMENT_TYPE to follow convention\r\n\r\n* Remove unnecessary branching and isArray checks\r\n\r\n* Update test for preserving children state when keys are same\r\n\r\n* Fix updateSlot bug and add more tests\r\n\r\n* Make fragment tests more robust by using ops pattern\r\n\r\n* Update jsx element validator to allow numbers and symbols\r\n\r\n* Remove type field from fragment fiber\r\n\r\n* Fork reconcileChildFibers instead of recursing\r\n\r\n* Use ternary if condition\r\n\r\n* Revamp fragment test suite:\r\n\r\n- Add more coverage to fragment tests\r\n- Use better names\r\n- Remove useless Fragment component inside tests\r\n- Remove useless tests so that tests are more concise\r\n\r\n* Check output of renderer in fragment tests to ensure no silly business despite states being preserved\r\n\r\n* Finish implementation of fragment reconciliation with desired behavior\r\n\r\n* Add reverse render direction for fragment tests\r\n\r\n* Remove unneeded fragment branch in updateElement\r\n\r\n* Add more test cases for ReactFragment\r\n\r\n* Handle childless fragment in reconciler\r\n\r\n* Support fragment flattening in SSR\r\n\r\n* Clean up ReactPartialRenderer\r\n\r\n* Warn when non-key and children props are passed to fragments\r\n\r\n* Add non-null key check back to updateSlot's array's case\r\n\r\n* Add test for positional reconciliation in fragments\r\n\r\n* Add warning for refs in fragments with stack trace\r\n"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/4ce5da7aee90a373f2f36d1beb559097af30952e",
        "html_url": "https://github.com/facebook/react/commit/4ce5da7aee90a373f2f36d1beb559097af30952e",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/4ce5da7aee90a373f2f36d1beb559097af30952e/comments",
        "author": {
            "login": "clemmy",
            "id": 3696934,
            "node_id": "MDQ6VXNlcjM2OTY5MzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3696934?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/clemmy",
            "html_url": "https://github.com/clemmy",
            "followers_url": "https://api.github.com/users/clemmy/followers",
            "following_url": "https://api.github.com/users/clemmy/following{/other_user}",
            "gists_url": "https://api.github.com/users/clemmy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/clemmy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/clemmy/subscriptions",
            "organizations_url": "https://api.github.com/users/clemmy/orgs",
            "repos_url": "https://api.github.com/users/clemmy/repos",
            "events_url": "https://api.github.com/users/clemmy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/clemmy/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "d61af82390dd4db8d231470c0a2741fa9ae69f7e",
                "url": "https://api.github.com/repos/facebook/react/commits/d61af82390dd4db8d231470c0a2741fa9ae69f7e",
                "html_url": "https://github.com/facebook/react/commit/d61af82390dd4db8d231470c0a2741fa9ae69f7e"
            }
        ]
    },
    {
        "sha": "2c0a8fb99e945315c9dce7a15c85775d51f5755d",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6MmMwYThmYjk5ZTk0NTMxNWM5ZGNlN2ExNWM4NTc3NWQ1MWY1NzU1ZA==",
        "commit": {
            "author": {
                "name": "Dan Abramov",
                "email": "dan.abramov@gmail.com",
                "date": "2017-10-25T19:23:55Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2017-10-25T19:23:55Z"
            },
            "message": "Add react-call-return package (#11364)",
            "tree": {
                "sha": "458aca984e2176cdf86f869ce3fe8940024808f1",
                "url": "https://api.github.com/repos/facebook/react/git/trees/458aca984e2176cdf86f869ce3fe8940024808f1"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/2c0a8fb99e945315c9dce7a15c85775d51f5755d",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/2c0a8fb99e945315c9dce7a15c85775d51f5755d",
        "html_url": "https://github.com/facebook/react/commit/2c0a8fb99e945315c9dce7a15c85775d51f5755d",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/2c0a8fb99e945315c9dce7a15c85775d51f5755d/comments",
        "author": {
            "login": "gaearon",
            "id": 810438,
            "node_id": "MDQ6VXNlcjgxMDQzOA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/810438?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gaearon",
            "html_url": "https://github.com/gaearon",
            "followers_url": "https://api.github.com/users/gaearon/followers",
            "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
            "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
            "organizations_url": "https://api.github.com/users/gaearon/orgs",
            "repos_url": "https://api.github.com/users/gaearon/repos",
            "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gaearon/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "8e1f7f76fb7dd616792c1c3e523b47507530ccc1",
                "url": "https://api.github.com/repos/facebook/react/commits/8e1f7f76fb7dd616792c1c3e523b47507530ccc1",
                "html_url": "https://github.com/facebook/react/commit/8e1f7f76fb7dd616792c1c3e523b47507530ccc1"
            }
        ]
    },
    {
        "sha": "087c48bb36b88ef0b5bbca2b9b70a52d8d413102",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6MDg3YzQ4YmIzNmI4OGVmMGI1YmJjYTJiOWI3MGE1MmQ4ZDQxMzEwMg==",
        "commit": {
            "author": {
                "name": "Dan Abramov",
                "email": "dan.abramov@gmail.com",
                "date": "2017-10-25T18:07:54Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2017-10-25T18:07:54Z"
            },
            "message": "Reorder imports (#11359)\n\n* Reorder imports\r\n\r\n* Record sizes",
            "tree": {
                "sha": "668b45f45af658ffae5b6ea6b937566e988ec219",
                "url": "https://api.github.com/repos/facebook/react/git/trees/668b45f45af658ffae5b6ea6b937566e988ec219"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/087c48bb36b88ef0b5bbca2b9b70a52d8d413102",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/087c48bb36b88ef0b5bbca2b9b70a52d8d413102",
        "html_url": "https://github.com/facebook/react/commit/087c48bb36b88ef0b5bbca2b9b70a52d8d413102",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/087c48bb36b88ef0b5bbca2b9b70a52d8d413102/comments",
        "author": {
            "login": "gaearon",
            "id": 810438,
            "node_id": "MDQ6VXNlcjgxMDQzOA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/810438?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gaearon",
            "html_url": "https://github.com/gaearon",
            "followers_url": "https://api.github.com/users/gaearon/followers",
            "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
            "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
            "organizations_url": "https://api.github.com/users/gaearon/orgs",
            "repos_url": "https://api.github.com/users/gaearon/repos",
            "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gaearon/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "f1c6488f1b2e5fad68c5b0c4e03d555a247bddf5",
                "url": "https://api.github.com/repos/facebook/react/commits/f1c6488f1b2e5fad68c5b0c4e03d555a247bddf5",
                "html_url": "https://github.com/facebook/react/commit/f1c6488f1b2e5fad68c5b0c4e03d555a247bddf5"
            }
        ]
    },
    {
        "sha": "1eed302d346bfb8f5db8d88b0e7096d8999d3548",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6MWVlZDMwMmQzNDZiZmI4ZjVkYjhkODhiMGU3MDk2ZDg5OTlkMzU0OA==",
        "commit": {
            "author": {
                "name": "Dan Abramov",
                "email": "dan.abramov@gmail.com",
                "date": "2017-10-24T23:55:00Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2017-10-24T23:55:00Z"
            },
            "message": "Drop Haste (#11303)\n\n* Use relative paths in packages/react\r\n\r\n* Use relative paths in packages/react-art\r\n\r\n* Use relative paths in packages/react-cs\r\n\r\n* Use relative paths in other packages\r\n\r\n* Fix as many issues as I can\r\n\r\nThis uncovered an interesting problem where ./b from package/src/a would resolve to a different instantiation of package/src/b in Jest.\r\n\r\nEither this is a showstopper or we can solve it by completely fobbidding remaining /src/.\r\n\r\n* Fix all tests\r\n\r\nIt seems we can't use relative requires in tests anymore. Otherwise Jest becomes confused between real file and symlink.\r\nhttps://github.com/facebook/jest/issues/3830\r\n\r\nThis seems bad... Except that we already *don't* want people to create tests that import individual source files.\r\nAll existing cases of us doing so are actually TODOs waiting to be fixed.\r\n\r\nSo perhaps this requirement isn't too bad because it makes bad code looks bad.\r\n\r\nOf course, if we go with this, we'll have to lint against relative requires in tests.\r\nIt also makes moving things more painful.\r\n\r\n* Prettier\r\n\r\n* Remove @providesModule\r\n\r\n* Fix remaining Haste imports I missed earlier\r\n\r\n* Fix up paths to reflect new flat structure\r\n\r\n* Fix Flow\r\n\r\n* Fix CJS and UMD builds\r\n\r\n* Fix FB bundles\r\n\r\n* Fix RN bundles\r\n\r\n* Prettier\r\n\r\n* Fix lint\r\n\r\n* Fix warning printing and error codes\r\n\r\n* Fix buggy return\r\n\r\n* Fix lint and Flow\r\n\r\n* Use Yarn on CI\r\n\r\n* Unbreak Jest\r\n\r\n* Fix lint\r\n\r\n* Fix aliased originals getting included in DEV\r\n\r\nShouldn't affect correctness (they were ignored) but fixes DEV size regression.\r\n\r\n* Record sizes\r\n\r\n* Fix weird version in package.json\r\n\r\n* Tweak bundle labels\r\n\r\n* Get rid of output option by introducing react-dom/server.node\r\n\r\n* Reconciler should depend on prop-types\r\n\r\n* Update sizes last time",
            "tree": {
                "sha": "136dfe253a69d77d6d33aaea01967cc9c6dcb259",
                "url": "https://api.github.com/repos/facebook/react/git/trees/136dfe253a69d77d6d33aaea01967cc9c6dcb259"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/1eed302d346bfb8f5db8d88b0e7096d8999d3548",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/1eed302d346bfb8f5db8d88b0e7096d8999d3548",
        "html_url": "https://github.com/facebook/react/commit/1eed302d346bfb8f5db8d88b0e7096d8999d3548",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/1eed302d346bfb8f5db8d88b0e7096d8999d3548/comments",
        "author": {
            "login": "gaearon",
            "id": 810438,
            "node_id": "MDQ6VXNlcjgxMDQzOA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/810438?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gaearon",
            "html_url": "https://github.com/gaearon",
            "followers_url": "https://api.github.com/users/gaearon/followers",
            "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
            "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
            "organizations_url": "https://api.github.com/users/gaearon/orgs",
            "repos_url": "https://api.github.com/users/gaearon/repos",
            "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gaearon/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "37baacb096defcfad0d2ec32a28ca40337a65493",
                "url": "https://api.github.com/repos/facebook/react/commits/37baacb096defcfad0d2ec32a28ca40337a65493",
                "html_url": "https://github.com/facebook/react/commit/37baacb096defcfad0d2ec32a28ca40337a65493"
            }
        ]
    },
    {
        "sha": "b52a5624e95f77166ffa520476d68231640692f9",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6YjUyYTU2MjRlOTVmNzcxNjZmZmE1MjA0NzZkNjgyMzE2NDA2OTJmOQ==",
        "commit": {
            "author": {
                "name": "Sebastian Markb\u00e5ge",
                "email": "sebastian@calyptus.eu",
                "date": "2017-10-19T01:28:23Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2017-10-19T01:28:23Z"
            },
            "message": "[CS] Persistent Updates (#11260)\n\n* Update build size\r\n\r\n* [CS] Clone container instead of new root concept\r\n\r\nThe extra \"root\" concept is kind of unnecessary. Instead of having a\r\nmutable container even in the persistent mode, I'll instead make the\r\ncontainer be immutable too and be cloned. Then the \"commit\" just becomes\r\nswapping the previous container for the new one.\r\n\r\n* Change the signature or persistence again\r\n\r\nWe may need to clone without any updates, e.g. when the children are changed.\r\n\r\nPassing in the previous node is not enough to recycle since it won't have the\r\nup-to-date props and children. It's really only useful to for allocation pooling.\r\n\r\n* Implement persistent updates\r\n\r\nThis forks the update path for host fibers. For mutation mode we mark\r\nthem as having an effect. For persistence mode, we clone the stateNode with\r\nnew props/children.\r\n\r\nNext I'll do HostRoot and HostPortal.\r\n\r\n* Refine protocol into a complete and commit phase\r\n\r\nfinalizeContainerChildren will get called at the complete phase.\r\nreplaceContainer will get called at commit.\r\n\r\nAlso, drop the keepChildren flag. We'll never keep children as we'll never\r\nupdate a container if none of the children has changed.\r\n\r\n* Implement persistent updates of roots and portals\r\n\r\nThese are both \"containers\". Normally we rely on placement/deletion effects\r\nto deal with insertions into the containers. In the persistent mode we need\r\nto clone the container and append all the changed children to it.\r\n\r\nI needed somewhere to store these new containers before they're committed\r\nso I added another field.\r\n\r\n* Commit persistent work at the end by swapping out the container\r\n\r\n* Unify cloneOrRecycle\r\n\r\nOriginally I tried to make the recyclable instance nullable but Flow didn't\r\nlike that and it's kind of sketchy since the instance type might not be\r\nnullable.\r\n\r\nHowever, the real difference which one we call is depending on whether they\r\nare equal. We can just offload that to the renderer. Most of them won't\r\nneed to know about this at all since they'll always clone or just create\r\nnew.\r\n\r\nThe ones that do know now have to be careful to compare them so they don't\r\nreuse an existing instance but that's probably fine to simplify the\r\nimplementation and API.\r\n\r\n* Add persistent noop renderer for testing\r\n\r\n* Add basic persistent tree test\r\n\r\n* Test bail out\r\n\r\nThis adds a test for bailouts. This revealed a subtle bug. We don't set the\r\nreturn pointer when stepping into newly created fibers because there\r\ncan only be one. However, since I'm reusing this mechanism for persistent\r\nupdates, I'll need to set the return pointer because a bailed out tree\r\nwon't have the right return pointer.\r\n\r\n* Test persistent text nodes\r\n\r\nFound another bug.\r\n\r\n* Add persistent portal test\r\n\r\nThis creates a bit of an unfortunate feature testing in the unmount\r\nbranch.\r\n\r\nThat's because we want to trigger nested host deletions in portals in the\r\nmutation mode.\r\n\r\n* Don't consider container when determining portal identity\r\n\r\nBasically, we can't use the container to determine if we should keep\r\nidentity and update an existing portal instead of recreate it. Because\r\nfor persistent containers, there is no permanent identity.\r\n\r\nThis makes it kind of strange to even use portals in this mode. It's\r\nprobably more ideal to have another concept that has permanent identity\r\nrather than trying to swap out containers.\r\n\r\n* Clear portals when the portal is deleted\r\n\r\nWhen a portal gets deleted we need to create a new empty container and\r\nreplace the current one with the empty one.\r\n\r\n* Add renderer mode flags for dead code elimination\r\n\r\n* Simplify ReactNoop fix\r\n\r\n* Add new type to the host config for persistent configs\r\n\r\nWe need container to stay as the persistent identity of the root atom.\r\nSo that we can refer to portals over time.\r\n\r\nInstead, I'll introduce a new type just to temporarily hold the children\r\nof a container until they're ready to be committed into the permanent\r\ncontainer. Essentially, this is just a fancy array that is not an array\r\nso that the host can choose data structure/allocation for it.\r\n\r\n* Implement new hooks\r\n\r\nNow containers are singletons and instead their children swap. That way\r\nportals can use the container as part of their identity again.\r\n\r\n* Update build size and error codes\r\n\r\n* Address comment\r\n\r\n* Move new files to new location",
            "tree": {
                "sha": "25b775306223d5108026fe17f47dcabf3078a214",
                "url": "https://api.github.com/repos/facebook/react/git/trees/25b775306223d5108026fe17f47dcabf3078a214"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/b52a5624e95f77166ffa520476d68231640692f9",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/b52a5624e95f77166ffa520476d68231640692f9",
        "html_url": "https://github.com/facebook/react/commit/b52a5624e95f77166ffa520476d68231640692f9",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/b52a5624e95f77166ffa520476d68231640692f9/comments",
        "author": {
            "login": "sebmarkbage",
            "id": 63648,
            "node_id": "MDQ6VXNlcjYzNjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sebmarkbage",
            "html_url": "https://github.com/sebmarkbage",
            "followers_url": "https://api.github.com/users/sebmarkbage/followers",
            "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
            "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
            "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
            "repos_url": "https://api.github.com/users/sebmarkbage/repos",
            "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "4af2a24f0054ac321ebb426c24bd9e1e8bdf5266",
                "url": "https://api.github.com/repos/facebook/react/commits/4af2a24f0054ac321ebb426c24bd9e1e8bdf5266",
                "html_url": "https://github.com/facebook/react/commit/4af2a24f0054ac321ebb426c24bd9e1e8bdf5266"
            }
        ]
    },
    {
        "sha": "d9c1dbd61772f8f8ab0cdf389e70463d704c480b",
        "node_id": "MDY6Q29tbWl0MTAyNzAyNTA6ZDljMWRiZDYxNzcyZjhmOGFiMGNkZjM4OWU3MDQ2M2Q3MDRjNDgwYg==",
        "commit": {
            "author": {
                "name": "Dan Abramov",
                "email": "dan.abramov@gmail.com",
                "date": "2017-10-18T23:22:21Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2017-10-18T23:22:21Z"
            },
            "message": "Use Yarn Workspaces (#11252)\n\n* Enable Yarn workspaces for packages/*\r\n\r\n* Move src/isomorphic/* into packages/react/src/*\r\n\r\n* Create index.js stubs for all packages in packages/*\r\n\r\nThis makes the test pass again, but breaks the build because npm/ folders aren't used yet.\r\nI'm not sure if we'll keep this structure--I'll just keep working and fix the build after it settles down.\r\n\r\n* Put FB entry point for react-dom into packages/*\r\n\r\n* Move src/renderers/testing/* into packages/react-test-renderer/src/*\r\n\r\nNote that this is currently broken because Jest ignores node_modules,\r\nand so Yarn linking makes Jest skip React source when transforming.\r\n\r\n* Remove src/node_modules\r\n\r\nIt is now unnecessary. Some tests fail though.\r\n\r\n* Add a hacky workaround for Jest/Workspaces issue\r\n\r\nJest sees node_modules and thinks it's third party code.\r\n\r\nThis is a hacky way to teach Jest to still transform anything in node_modules/react*\r\nif it resolves outside of node_modules (such as to our packages/*) folder.\r\n\r\nI'm not very happy with this and we should revisit.\r\n\r\n* Add a fake react-native package\r\n\r\n* Move src/renderers/art/* into packages/react-art/src/*\r\n\r\n* Move src/renderers/noop/* into packages/react-noop-renderer/src/*\r\n\r\n* Move src/renderers/dom/* into packages/react-dom/src/*\r\n\r\n* Move src/renderers/shared/fiber/* into packages/react-reconciler/src/*\r\n\r\n* Move DOM/reconciler tests I previously forgot to move\r\n\r\n* Move src/renderers/native-*/* into packages/react-native-*/src/*\r\n\r\n* Move shared code into packages/shared\r\n\r\nIt's not super clear how to organize this properly yet.\r\n\r\n* Add back files that somehow got lost\r\n\r\n* Fix the build\r\n\r\n* Prettier\r\n\r\n* Add missing license headers\r\n\r\n* Fix an issue that caused mocks to get included into build\r\n\r\n* Update other references to src/\r\n\r\n* Re-run Prettier\r\n\r\n* Fix lint\r\n\r\n* Fix weird Flow violation\r\n\r\nI didn't change this file but Flow started complaining.\r\nCaleb said this annotation was unnecessarily using $Abstract though so I removed it.\r\n\r\n* Update sizes\r\n\r\n* Fix stats script\r\n\r\n* Fix packaging fixtures\r\n\r\nUse file: instead of NODE_PATH since NODE_PATH.\r\nNODE_PATH trick only worked because we had no react/react-dom in root node_modules, but now we do.\r\n\r\nfile: dependency only works as I expect in Yarn, so I moved the packaging fixtures to use Yarn and committed lockfiles.\r\nVerified that the page shows up.\r\n\r\n* Fix art fixture\r\n\r\n* Fix reconciler fixture\r\n\r\n* Fix SSR fixture\r\n\r\n* Rename native packages",
            "tree": {
                "sha": "7529b5a8677d24702557c324b471592f387546a4",
                "url": "https://api.github.com/repos/facebook/react/git/trees/7529b5a8677d24702557c324b471592f387546a4"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/d9c1dbd61772f8f8ab0cdf389e70463d704c480b",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/d9c1dbd61772f8f8ab0cdf389e70463d704c480b",
        "html_url": "https://github.com/facebook/react/commit/d9c1dbd61772f8f8ab0cdf389e70463d704c480b",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/d9c1dbd61772f8f8ab0cdf389e70463d704c480b/comments",
        "author": {
            "login": "gaearon",
            "id": 810438,
            "node_id": "MDQ6VXNlcjgxMDQzOA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/810438?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gaearon",
            "html_url": "https://github.com/gaearon",
            "followers_url": "https://api.github.com/users/gaearon/followers",
            "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
            "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
            "organizations_url": "https://api.github.com/users/gaearon/orgs",
            "repos_url": "https://api.github.com/users/gaearon/repos",
            "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gaearon/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "76659c418f730c19fa4ca08320efd71d8de15b43",
                "url": "https://api.github.com/repos/facebook/react/commits/76659c418f730c19fa4ca08320efd71d8de15b43",
                "html_url": "https://github.com/facebook/react/commit/76659c418f730c19fa4ca08320efd71d8de15b43"
            }
        ]
    }
]